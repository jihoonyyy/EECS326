
wifi_firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000077e4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004077e4  004077e4  000177e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  004077ec  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00018bb8  200009c0  004081ac  000209c0  2**2
                  ALLOC
  4 .stack        00003000  20019578  00420d64  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   000183ce  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000035d0  00000000  00000000  00038e11  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000052f2  00000000  00000000  0003c3e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ac8  00000000  00000000  000416d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000009f0  00000000  00000000  0004219b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00015069  00000000  00000000  00042b8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000efa5  00000000  00000000  00057bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004fb91  00000000  00000000  00066b99  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002430  00000000  00000000  000b672c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	78 c5 01 20 49 15 40 00 45 15 40 00 45 15 40 00     x.. I.@.E.@.E.@.
  400010:	45 15 40 00 45 15 40 00 45 15 40 00 00 00 00 00     E.@.E.@.E.@.....
	...
  40002c:	45 15 40 00 45 15 40 00 00 00 00 00 45 15 40 00     E.@.E.@.....E.@.
  40003c:	45 15 40 00 45 15 40 00 45 15 40 00 45 15 40 00     E.@.E.@.E.@.E.@.
  40004c:	45 15 40 00 45 15 40 00 45 15 40 00 45 15 40 00     E.@.E.@.E.@.E.@.
  40005c:	00 00 00 00 45 15 40 00 45 15 40 00 00 00 00 00     ....E.@.E.@.....
  40006c:	39 05 40 00 4d 05 40 00 00 00 00 00 31 11 40 00     9.@.M.@.....1.@.
  40007c:	45 15 40 00 00 00 00 00 00 00 00 00 45 15 40 00     E.@.........E.@.
  40008c:	45 15 40 00 45 15 40 00 45 15 40 00 45 15 40 00     E.@.E.@.E.@.E.@.
  40009c:	69 10 40 00 45 15 40 00 45 15 40 00 00 00 00 00     i.@.E.@.E.@.....
	...
  4000b4:	45 15 40 00 45 15 40 00 45 15 40 00 45 15 40 00     E.@.E.@.E.@.E.@.
  4000c4:	45 15 40 00 45 15 40 00                             E.@.E.@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	004077ec 	.word	0x004077ec

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	004077ec 	.word	0x004077ec
  40012c:	200009c4 	.word	0x200009c4
  400130:	004077ec 	.word	0x004077ec
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	00401705 	.word	0x00401705
  40017c:	004005c5 	.word	0x004005c5
  400180:	00400619 	.word	0x00400619
  400184:	00400629 	.word	0x00400629
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	00400639 	.word	0x00400639
  400194:	00400561 	.word	0x00400561
  400198:	004015f5 	.word	0x004015f5

0040019c <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  40019c:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  4001a0:	0053      	lsls	r3, r2, #1
  4001a2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4001a6:	fbb2 f2f3 	udiv	r2, r2, r3
  4001aa:	3a01      	subs	r2, #1
  4001ac:	f3c2 020d 	ubfx	r2, r2, #0, #14
  4001b0:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  4001b4:	4770      	bx	lr

004001b6 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4001b6:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4001b8:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4001bc:	d039      	beq.n	400232 <pio_set_peripheral+0x7c>
  4001be:	d813      	bhi.n	4001e8 <pio_set_peripheral+0x32>
  4001c0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4001c4:	d025      	beq.n	400212 <pio_set_peripheral+0x5c>
  4001c6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4001ca:	d10a      	bne.n	4001e2 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001cc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4001d2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4001d4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4001d6:	400b      	ands	r3, r1
  4001d8:	ea23 0302 	bic.w	r3, r3, r2
  4001dc:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4001de:	6042      	str	r2, [r0, #4]
  4001e0:	4770      	bx	lr
	switch (ul_type) {
  4001e2:	2900      	cmp	r1, #0
  4001e4:	d1fb      	bne.n	4001de <pio_set_peripheral+0x28>
  4001e6:	4770      	bx	lr
  4001e8:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4001ec:	d020      	beq.n	400230 <pio_set_peripheral+0x7a>
  4001ee:	d809      	bhi.n	400204 <pio_set_peripheral+0x4e>
  4001f0:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4001f4:	d1f3      	bne.n	4001de <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001f6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001f8:	4313      	orrs	r3, r2
  4001fa:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4001fc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4001fe:	4313      	orrs	r3, r2
  400200:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400202:	e7ec      	b.n	4001de <pio_set_peripheral+0x28>
	switch (ul_type) {
  400204:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400208:	d012      	beq.n	400230 <pio_set_peripheral+0x7a>
  40020a:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40020e:	d00f      	beq.n	400230 <pio_set_peripheral+0x7a>
  400210:	e7e5      	b.n	4001de <pio_set_peripheral+0x28>
{
  400212:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400214:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400216:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400218:	43d3      	mvns	r3, r2
  40021a:	4021      	ands	r1, r4
  40021c:	461c      	mov	r4, r3
  40021e:	4019      	ands	r1, r3
  400220:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400222:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400224:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400226:	400b      	ands	r3, r1
  400228:	4023      	ands	r3, r4
  40022a:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40022c:	6042      	str	r2, [r0, #4]
}
  40022e:	bc10      	pop	{r4}
  400230:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400232:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400234:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400236:	400b      	ands	r3, r1
  400238:	ea23 0302 	bic.w	r3, r3, r2
  40023c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40023e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400240:	4313      	orrs	r3, r2
  400242:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400244:	e7cb      	b.n	4001de <pio_set_peripheral+0x28>

00400246 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400246:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400248:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40024c:	bf14      	ite	ne
  40024e:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400250:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400252:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400256:	bf14      	ite	ne
  400258:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  40025a:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  40025c:	f012 0f02 	tst.w	r2, #2
  400260:	d107      	bne.n	400272 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400262:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400266:	bf18      	it	ne
  400268:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  40026c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  40026e:	6001      	str	r1, [r0, #0]
  400270:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400272:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400276:	e7f9      	b.n	40026c <pio_set_input+0x26>

00400278 <pio_set_output>:
{
  400278:	b410      	push	{r4}
  40027a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  40027c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40027e:	b944      	cbnz	r4, 400292 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400280:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400282:	b143      	cbz	r3, 400296 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  400284:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400286:	b942      	cbnz	r2, 40029a <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  400288:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40028a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40028c:	6001      	str	r1, [r0, #0]
}
  40028e:	bc10      	pop	{r4}
  400290:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400292:	6641      	str	r1, [r0, #100]	; 0x64
  400294:	e7f5      	b.n	400282 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400296:	6541      	str	r1, [r0, #84]	; 0x54
  400298:	e7f5      	b.n	400286 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  40029a:	6301      	str	r1, [r0, #48]	; 0x30
  40029c:	e7f5      	b.n	40028a <pio_set_output+0x12>

0040029e <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  40029e:	f012 0f10 	tst.w	r2, #16
  4002a2:	d010      	beq.n	4002c6 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  4002a4:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4002a8:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  4002ac:	bf14      	ite	ne
  4002ae:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  4002b2:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  4002b6:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4002ba:	bf14      	ite	ne
  4002bc:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4002c0:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4002c4:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4002c6:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4002ca:	4770      	bx	lr

004002cc <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4002cc:	6401      	str	r1, [r0, #64]	; 0x40
  4002ce:	4770      	bx	lr

004002d0 <pio_disable_interrupt>:
	p_pio->PIO_IDR = ul_mask;
  4002d0:	6441      	str	r1, [r0, #68]	; 0x44
  4002d2:	4770      	bx	lr

004002d4 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4002d4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4002d6:	4770      	bx	lr

004002d8 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4002d8:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4002da:	4770      	bx	lr

004002dc <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002dc:	0943      	lsrs	r3, r0, #5
  4002de:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002e2:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4002e6:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  4002e8:	f000 001f 	and.w	r0, r0, #31
  4002ec:	2201      	movs	r2, #1
  4002ee:	fa02 f000 	lsl.w	r0, r2, r0
  4002f2:	6318      	str	r0, [r3, #48]	; 0x30
  4002f4:	4770      	bx	lr

004002f6 <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002f6:	0943      	lsrs	r3, r0, #5
  4002f8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002fc:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400300:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400302:	f000 001f 	and.w	r0, r0, #31
  400306:	2201      	movs	r2, #1
  400308:	fa02 f000 	lsl.w	r0, r2, r0
  40030c:	6358      	str	r0, [r3, #52]	; 0x34
  40030e:	4770      	bx	lr

00400310 <pio_configure_pin>:
{
  400310:	b570      	push	{r4, r5, r6, lr}
  400312:	b082      	sub	sp, #8
  400314:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400316:	0943      	lsrs	r3, r0, #5
  400318:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  40031c:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400320:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  400322:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  400326:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  40032a:	d053      	beq.n	4003d4 <pio_configure_pin+0xc4>
  40032c:	d80a      	bhi.n	400344 <pio_configure_pin+0x34>
  40032e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  400332:	d02d      	beq.n	400390 <pio_configure_pin+0x80>
  400334:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400338:	d03b      	beq.n	4003b2 <pio_configure_pin+0xa2>
  40033a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40033e:	d015      	beq.n	40036c <pio_configure_pin+0x5c>
		return 0;
  400340:	2000      	movs	r0, #0
  400342:	e023      	b.n	40038c <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400344:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400348:	d055      	beq.n	4003f6 <pio_configure_pin+0xe6>
  40034a:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40034e:	d052      	beq.n	4003f6 <pio_configure_pin+0xe6>
  400350:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400354:	d1f4      	bne.n	400340 <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400356:	f000 011f 	and.w	r1, r0, #31
  40035a:	2601      	movs	r6, #1
  40035c:	462a      	mov	r2, r5
  40035e:	fa06 f101 	lsl.w	r1, r6, r1
  400362:	4620      	mov	r0, r4
  400364:	4b2f      	ldr	r3, [pc, #188]	; (400424 <pio_configure_pin+0x114>)
  400366:	4798      	blx	r3
	return 1;
  400368:	4630      	mov	r0, r6
		break;
  40036a:	e00f      	b.n	40038c <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  40036c:	f000 001f 	and.w	r0, r0, #31
  400370:	2601      	movs	r6, #1
  400372:	4086      	lsls	r6, r0
  400374:	4632      	mov	r2, r6
  400376:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40037a:	4620      	mov	r0, r4
  40037c:	4b2a      	ldr	r3, [pc, #168]	; (400428 <pio_configure_pin+0x118>)
  40037e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400380:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400384:	bf14      	ite	ne
  400386:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400388:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40038a:	2001      	movs	r0, #1
}
  40038c:	b002      	add	sp, #8
  40038e:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400390:	f000 001f 	and.w	r0, r0, #31
  400394:	2601      	movs	r6, #1
  400396:	4086      	lsls	r6, r0
  400398:	4632      	mov	r2, r6
  40039a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40039e:	4620      	mov	r0, r4
  4003a0:	4b21      	ldr	r3, [pc, #132]	; (400428 <pio_configure_pin+0x118>)
  4003a2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4003a4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003a8:	bf14      	ite	ne
  4003aa:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003ac:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003ae:	2001      	movs	r0, #1
  4003b0:	e7ec      	b.n	40038c <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  4003b2:	f000 001f 	and.w	r0, r0, #31
  4003b6:	2601      	movs	r6, #1
  4003b8:	4086      	lsls	r6, r0
  4003ba:	4632      	mov	r2, r6
  4003bc:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  4003c0:	4620      	mov	r0, r4
  4003c2:	4b19      	ldr	r3, [pc, #100]	; (400428 <pio_configure_pin+0x118>)
  4003c4:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4003c6:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003ca:	bf14      	ite	ne
  4003cc:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003ce:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003d0:	2001      	movs	r0, #1
  4003d2:	e7db      	b.n	40038c <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4003d4:	f000 001f 	and.w	r0, r0, #31
  4003d8:	2601      	movs	r6, #1
  4003da:	4086      	lsls	r6, r0
  4003dc:	4632      	mov	r2, r6
  4003de:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4003e2:	4620      	mov	r0, r4
  4003e4:	4b10      	ldr	r3, [pc, #64]	; (400428 <pio_configure_pin+0x118>)
  4003e6:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4003e8:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003ec:	bf14      	ite	ne
  4003ee:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003f0:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003f2:	2001      	movs	r0, #1
  4003f4:	e7ca      	b.n	40038c <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4003f6:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4003fa:	f000 011f 	and.w	r1, r0, #31
  4003fe:	2601      	movs	r6, #1
  400400:	ea05 0306 	and.w	r3, r5, r6
  400404:	9300      	str	r3, [sp, #0]
  400406:	f3c5 0380 	ubfx	r3, r5, #2, #1
  40040a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  40040e:	bf14      	ite	ne
  400410:	2200      	movne	r2, #0
  400412:	2201      	moveq	r2, #1
  400414:	fa06 f101 	lsl.w	r1, r6, r1
  400418:	4620      	mov	r0, r4
  40041a:	4c04      	ldr	r4, [pc, #16]	; (40042c <pio_configure_pin+0x11c>)
  40041c:	47a0      	blx	r4
	return 1;
  40041e:	4630      	mov	r0, r6
		break;
  400420:	e7b4      	b.n	40038c <pio_configure_pin+0x7c>
  400422:	bf00      	nop
  400424:	00400247 	.word	0x00400247
  400428:	004001b7 	.word	0x004001b7
  40042c:	00400279 	.word	0x00400279

00400430 <pio_capture_enable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  400430:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400434:	f043 0301 	orr.w	r3, r3, #1
  400438:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  40043c:	2201      	movs	r2, #1
  40043e:	4b01      	ldr	r3, [pc, #4]	; (400444 <pio_capture_enable+0x14>)
  400440:	601a      	str	r2, [r3, #0]
  400442:	4770      	bx	lr
  400444:	20000ab0 	.word	0x20000ab0

00400448 <pio_capture_disable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  400448:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  40044c:	f023 0301 	bic.w	r3, r3, #1
  400450:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  400454:	2200      	movs	r2, #0
  400456:	4b01      	ldr	r3, [pc, #4]	; (40045c <pio_capture_disable+0x14>)
  400458:	601a      	str	r2, [r3, #0]
  40045a:	4770      	bx	lr
  40045c:	20000ab0 	.word	0x20000ab0

00400460 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400460:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400464:	4681      	mov	r9, r0
  400466:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400468:	4b12      	ldr	r3, [pc, #72]	; (4004b4 <pio_handler_process+0x54>)
  40046a:	4798      	blx	r3
  40046c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40046e:	4648      	mov	r0, r9
  400470:	4b11      	ldr	r3, [pc, #68]	; (4004b8 <pio_handler_process+0x58>)
  400472:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400474:	4005      	ands	r5, r0
  400476:	d013      	beq.n	4004a0 <pio_handler_process+0x40>
  400478:	4c10      	ldr	r4, [pc, #64]	; (4004bc <pio_handler_process+0x5c>)
  40047a:	f104 0660 	add.w	r6, r4, #96	; 0x60
  40047e:	e003      	b.n	400488 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400480:	42b4      	cmp	r4, r6
  400482:	d00d      	beq.n	4004a0 <pio_handler_process+0x40>
  400484:	3410      	adds	r4, #16
		while (status != 0) {
  400486:	b15d      	cbz	r5, 4004a0 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400488:	6820      	ldr	r0, [r4, #0]
  40048a:	42b8      	cmp	r0, r7
  40048c:	d1f8      	bne.n	400480 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40048e:	6861      	ldr	r1, [r4, #4]
  400490:	4229      	tst	r1, r5
  400492:	d0f5      	beq.n	400480 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400494:	68e3      	ldr	r3, [r4, #12]
  400496:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400498:	6863      	ldr	r3, [r4, #4]
  40049a:	ea25 0503 	bic.w	r5, r5, r3
  40049e:	e7ef      	b.n	400480 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4004a0:	4b07      	ldr	r3, [pc, #28]	; (4004c0 <pio_handler_process+0x60>)
  4004a2:	681b      	ldr	r3, [r3, #0]
  4004a4:	b123      	cbz	r3, 4004b0 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  4004a6:	4b07      	ldr	r3, [pc, #28]	; (4004c4 <pio_handler_process+0x64>)
  4004a8:	681b      	ldr	r3, [r3, #0]
  4004aa:	b10b      	cbz	r3, 4004b0 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  4004ac:	4648      	mov	r0, r9
  4004ae:	4798      	blx	r3
  4004b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4004b4:	004002d5 	.word	0x004002d5
  4004b8:	004002d9 	.word	0x004002d9
  4004bc:	200009dc 	.word	0x200009dc
  4004c0:	20000ab0 	.word	0x20000ab0
  4004c4:	20000a50 	.word	0x20000a50

004004c8 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  4004c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  4004ca:	4c18      	ldr	r4, [pc, #96]	; (40052c <pio_handler_set+0x64>)
  4004cc:	6826      	ldr	r6, [r4, #0]
  4004ce:	2e06      	cmp	r6, #6
  4004d0:	d829      	bhi.n	400526 <pio_handler_set+0x5e>
  4004d2:	f04f 0c00 	mov.w	ip, #0
  4004d6:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004d8:	4f15      	ldr	r7, [pc, #84]	; (400530 <pio_handler_set+0x68>)
  4004da:	e004      	b.n	4004e6 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4004dc:	3401      	adds	r4, #1
  4004de:	b2e4      	uxtb	r4, r4
  4004e0:	46a4      	mov	ip, r4
  4004e2:	42a6      	cmp	r6, r4
  4004e4:	d309      	bcc.n	4004fa <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  4004e6:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004e8:	0125      	lsls	r5, r4, #4
  4004ea:	597d      	ldr	r5, [r7, r5]
  4004ec:	428d      	cmp	r5, r1
  4004ee:	d1f5      	bne.n	4004dc <pio_handler_set+0x14>
  4004f0:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4004f4:	686d      	ldr	r5, [r5, #4]
  4004f6:	4295      	cmp	r5, r2
  4004f8:	d1f0      	bne.n	4004dc <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4004fa:	4d0d      	ldr	r5, [pc, #52]	; (400530 <pio_handler_set+0x68>)
  4004fc:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400500:	eb05 040e 	add.w	r4, r5, lr
  400504:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400508:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  40050a:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  40050c:	9906      	ldr	r1, [sp, #24]
  40050e:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400510:	3601      	adds	r6, #1
  400512:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  400514:	bf04      	itt	eq
  400516:	4905      	ldreq	r1, [pc, #20]	; (40052c <pio_handler_set+0x64>)
  400518:	600e      	streq	r6, [r1, #0]
  40051a:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  40051c:	461a      	mov	r2, r3
  40051e:	4b05      	ldr	r3, [pc, #20]	; (400534 <pio_handler_set+0x6c>)
  400520:	4798      	blx	r3

	return 0;
  400522:	2000      	movs	r0, #0
  400524:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  400526:	2001      	movs	r0, #1
}
  400528:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40052a:	bf00      	nop
  40052c:	20000a4c 	.word	0x20000a4c
  400530:	200009dc 	.word	0x200009dc
  400534:	0040029f 	.word	0x0040029f

00400538 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400538:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  40053a:	210b      	movs	r1, #11
  40053c:	4801      	ldr	r0, [pc, #4]	; (400544 <PIOA_Handler+0xc>)
  40053e:	4b02      	ldr	r3, [pc, #8]	; (400548 <PIOA_Handler+0x10>)
  400540:	4798      	blx	r3
  400542:	bd08      	pop	{r3, pc}
  400544:	400e0e00 	.word	0x400e0e00
  400548:	00400461 	.word	0x00400461

0040054c <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  40054c:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  40054e:	210c      	movs	r1, #12
  400550:	4801      	ldr	r0, [pc, #4]	; (400558 <PIOB_Handler+0xc>)
  400552:	4b02      	ldr	r3, [pc, #8]	; (40055c <PIOB_Handler+0x10>)
  400554:	4798      	blx	r3
  400556:	bd08      	pop	{r3, pc}
  400558:	400e1000 	.word	0x400e1000
  40055c:	00400461 	.word	0x00400461

00400560 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400560:	4a17      	ldr	r2, [pc, #92]	; (4005c0 <pmc_switch_mck_to_pllack+0x60>)
  400562:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400564:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400568:	4318      	orrs	r0, r3
  40056a:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40056c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40056e:	f013 0f08 	tst.w	r3, #8
  400572:	d10a      	bne.n	40058a <pmc_switch_mck_to_pllack+0x2a>
  400574:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400578:	4911      	ldr	r1, [pc, #68]	; (4005c0 <pmc_switch_mck_to_pllack+0x60>)
  40057a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40057c:	f012 0f08 	tst.w	r2, #8
  400580:	d103      	bne.n	40058a <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400582:	3b01      	subs	r3, #1
  400584:	d1f9      	bne.n	40057a <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400586:	2001      	movs	r0, #1
  400588:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  40058a:	4a0d      	ldr	r2, [pc, #52]	; (4005c0 <pmc_switch_mck_to_pllack+0x60>)
  40058c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40058e:	f023 0303 	bic.w	r3, r3, #3
  400592:	f043 0302 	orr.w	r3, r3, #2
  400596:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400598:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40059a:	f013 0f08 	tst.w	r3, #8
  40059e:	d10a      	bne.n	4005b6 <pmc_switch_mck_to_pllack+0x56>
  4005a0:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4005a4:	4906      	ldr	r1, [pc, #24]	; (4005c0 <pmc_switch_mck_to_pllack+0x60>)
  4005a6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4005a8:	f012 0f08 	tst.w	r2, #8
  4005ac:	d105      	bne.n	4005ba <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4005ae:	3b01      	subs	r3, #1
  4005b0:	d1f9      	bne.n	4005a6 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4005b2:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4005b4:	4770      	bx	lr
	return 0;
  4005b6:	2000      	movs	r0, #0
  4005b8:	4770      	bx	lr
  4005ba:	2000      	movs	r0, #0
  4005bc:	4770      	bx	lr
  4005be:	bf00      	nop
  4005c0:	400e0400 	.word	0x400e0400

004005c4 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4005c4:	b9c8      	cbnz	r0, 4005fa <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005c6:	4a11      	ldr	r2, [pc, #68]	; (40060c <pmc_switch_mainck_to_xtal+0x48>)
  4005c8:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4005ca:	0209      	lsls	r1, r1, #8
  4005cc:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4005ce:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4005d2:	f023 0303 	bic.w	r3, r3, #3
  4005d6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4005da:	f043 0301 	orr.w	r3, r3, #1
  4005de:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005e0:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4005e2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4005e4:	f013 0f01 	tst.w	r3, #1
  4005e8:	d0fb      	beq.n	4005e2 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4005ea:	4a08      	ldr	r2, [pc, #32]	; (40060c <pmc_switch_mainck_to_xtal+0x48>)
  4005ec:	6a13      	ldr	r3, [r2, #32]
  4005ee:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4005f2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4005f6:	6213      	str	r3, [r2, #32]
  4005f8:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005fa:	4904      	ldr	r1, [pc, #16]	; (40060c <pmc_switch_mainck_to_xtal+0x48>)
  4005fc:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005fe:	4a04      	ldr	r2, [pc, #16]	; (400610 <pmc_switch_mainck_to_xtal+0x4c>)
  400600:	401a      	ands	r2, r3
  400602:	4b04      	ldr	r3, [pc, #16]	; (400614 <pmc_switch_mainck_to_xtal+0x50>)
  400604:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400606:	620b      	str	r3, [r1, #32]
  400608:	4770      	bx	lr
  40060a:	bf00      	nop
  40060c:	400e0400 	.word	0x400e0400
  400610:	fec8fffc 	.word	0xfec8fffc
  400614:	01370002 	.word	0x01370002

00400618 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400618:	4b02      	ldr	r3, [pc, #8]	; (400624 <pmc_osc_is_ready_mainck+0xc>)
  40061a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40061c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400620:	4770      	bx	lr
  400622:	bf00      	nop
  400624:	400e0400 	.word	0x400e0400

00400628 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400628:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40062c:	4b01      	ldr	r3, [pc, #4]	; (400634 <pmc_disable_pllack+0xc>)
  40062e:	629a      	str	r2, [r3, #40]	; 0x28
  400630:	4770      	bx	lr
  400632:	bf00      	nop
  400634:	400e0400 	.word	0x400e0400

00400638 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400638:	4b02      	ldr	r3, [pc, #8]	; (400644 <pmc_is_locked_pllack+0xc>)
  40063a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40063c:	f000 0002 	and.w	r0, r0, #2
  400640:	4770      	bx	lr
  400642:	bf00      	nop
  400644:	400e0400 	.word	0x400e0400

00400648 <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  400648:	b410      	push	{r4}
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  40064a:	4c0a      	ldr	r4, [pc, #40]	; (400674 <pmc_enable_pllbck+0x2c>)
  40064c:	2300      	movs	r3, #0
  40064e:	62e3      	str	r3, [r4, #44]	; 0x2c
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  400650:	0209      	lsls	r1, r1, #8
  400652:	f401 517c 	and.w	r1, r1, #16128	; 0x3f00
  400656:	b2d2      	uxtb	r2, r2
  400658:	4311      	orrs	r1, r2
			| CKGR_PLLBR_MULB(mulb);
  40065a:	4b07      	ldr	r3, [pc, #28]	; (400678 <pmc_enable_pllbck+0x30>)
  40065c:	ea03 4000 	and.w	r0, r3, r0, lsl #16
  400660:	4301      	orrs	r1, r0
	PMC->CKGR_PLLBR =
  400662:	62e1      	str	r1, [r4, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  400664:	4622      	mov	r2, r4
  400666:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400668:	f013 0f04 	tst.w	r3, #4
  40066c:	d0fb      	beq.n	400666 <pmc_enable_pllbck+0x1e>
}
  40066e:	bc10      	pop	{r4}
  400670:	4770      	bx	lr
  400672:	bf00      	nop
  400674:	400e0400 	.word	0x400e0400
  400678:	07ff0000 	.word	0x07ff0000

0040067c <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  40067c:	2822      	cmp	r0, #34	; 0x22
  40067e:	d81e      	bhi.n	4006be <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400680:	281f      	cmp	r0, #31
  400682:	d80c      	bhi.n	40069e <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400684:	4b11      	ldr	r3, [pc, #68]	; (4006cc <pmc_enable_periph_clk+0x50>)
  400686:	699a      	ldr	r2, [r3, #24]
  400688:	2301      	movs	r3, #1
  40068a:	4083      	lsls	r3, r0
  40068c:	4393      	bics	r3, r2
  40068e:	d018      	beq.n	4006c2 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400690:	2301      	movs	r3, #1
  400692:	fa03 f000 	lsl.w	r0, r3, r0
  400696:	4b0d      	ldr	r3, [pc, #52]	; (4006cc <pmc_enable_periph_clk+0x50>)
  400698:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40069a:	2000      	movs	r0, #0
  40069c:	4770      	bx	lr
		ul_id -= 32;
  40069e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4006a0:	4b0a      	ldr	r3, [pc, #40]	; (4006cc <pmc_enable_periph_clk+0x50>)
  4006a2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4006a6:	2301      	movs	r3, #1
  4006a8:	4083      	lsls	r3, r0
  4006aa:	4393      	bics	r3, r2
  4006ac:	d00b      	beq.n	4006c6 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4006ae:	2301      	movs	r3, #1
  4006b0:	fa03 f000 	lsl.w	r0, r3, r0
  4006b4:	4b05      	ldr	r3, [pc, #20]	; (4006cc <pmc_enable_periph_clk+0x50>)
  4006b6:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  4006ba:	2000      	movs	r0, #0
  4006bc:	4770      	bx	lr
		return 1;
  4006be:	2001      	movs	r0, #1
  4006c0:	4770      	bx	lr
	return 0;
  4006c2:	2000      	movs	r0, #0
  4006c4:	4770      	bx	lr
  4006c6:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  4006c8:	4770      	bx	lr
  4006ca:	bf00      	nop
  4006cc:	400e0400 	.word	0x400e0400

004006d0 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4006d0:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006d2:	0189      	lsls	r1, r1, #6
  4006d4:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4006d6:	2402      	movs	r4, #2
  4006d8:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4006da:	f04f 31ff 	mov.w	r1, #4294967295
  4006de:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  4006e0:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  4006e2:	605a      	str	r2, [r3, #4]
}
  4006e4:	bc10      	pop	{r4}
  4006e6:	4770      	bx	lr

004006e8 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  4006e8:	0189      	lsls	r1, r1, #6
  4006ea:	2305      	movs	r3, #5
  4006ec:	5043      	str	r3, [r0, r1]
  4006ee:	4770      	bx	lr

004006f0 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4006f0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4006f4:	61ca      	str	r2, [r1, #28]
  4006f6:	4770      	bx	lr

004006f8 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006f8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  4006fc:	624a      	str	r2, [r1, #36]	; 0x24
  4006fe:	4770      	bx	lr

00400700 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400700:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400704:	6a08      	ldr	r0, [r1, #32]
}
  400706:	4770      	bx	lr

00400708 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  400708:	b4f0      	push	{r4, r5, r6, r7}
  40070a:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  40070c:	2402      	movs	r4, #2
  40070e:	9401      	str	r4, [sp, #4]
  400710:	2408      	movs	r4, #8
  400712:	9402      	str	r4, [sp, #8]
  400714:	2420      	movs	r4, #32
  400716:	9403      	str	r4, [sp, #12]
  400718:	2480      	movs	r4, #128	; 0x80
  40071a:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  40071c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  40071e:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400720:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  400722:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  400726:	d814      	bhi.n	400752 <tc_find_mck_divisor+0x4a>
  400728:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  40072a:	42a0      	cmp	r0, r4
  40072c:	d217      	bcs.n	40075e <tc_find_mck_divisor+0x56>
  40072e:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400730:	af01      	add	r7, sp, #4
  400732:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  400736:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  40073a:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  40073c:	4284      	cmp	r4, r0
  40073e:	d30a      	bcc.n	400756 <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400740:	4286      	cmp	r6, r0
  400742:	d90d      	bls.n	400760 <tc_find_mck_divisor+0x58>
			ul_index++) {
  400744:	3501      	adds	r5, #1
	for (ul_index = 0;
  400746:	2d05      	cmp	r5, #5
  400748:	d1f3      	bne.n	400732 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  40074a:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  40074c:	b006      	add	sp, #24
  40074e:	bcf0      	pop	{r4, r5, r6, r7}
  400750:	4770      	bx	lr
			return 0;
  400752:	2000      	movs	r0, #0
  400754:	e7fa      	b.n	40074c <tc_find_mck_divisor+0x44>
  400756:	2000      	movs	r0, #0
  400758:	e7f8      	b.n	40074c <tc_find_mck_divisor+0x44>
	return 1;
  40075a:	2001      	movs	r0, #1
  40075c:	e7f6      	b.n	40074c <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  40075e:	2500      	movs	r5, #0
	if (p_uldiv) {
  400760:	b12a      	cbz	r2, 40076e <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400762:	a906      	add	r1, sp, #24
  400764:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400768:	f851 1c14 	ldr.w	r1, [r1, #-20]
  40076c:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  40076e:	2b00      	cmp	r3, #0
  400770:	d0f3      	beq.n	40075a <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  400772:	601d      	str	r5, [r3, #0]
	return 1;
  400774:	2001      	movs	r0, #1
  400776:	e7e9      	b.n	40074c <tc_find_mck_divisor+0x44>

00400778 <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  400778:	4b2a      	ldr	r3, [pc, #168]	; (400824 <twi_set_speed+0xac>)
  40077a:	4299      	cmp	r1, r3
  40077c:	d849      	bhi.n	400812 <twi_set_speed+0x9a>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  40077e:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  400782:	4299      	cmp	r1, r3
  400784:	d92b      	bls.n	4007de <twi_set_speed+0x66>
{
  400786:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400788:	4c27      	ldr	r4, [pc, #156]	; (400828 <twi_set_speed+0xb0>)
  40078a:	fba4 3402 	umull	r3, r4, r4, r2
  40078e:	0ba4      	lsrs	r4, r4, #14
  400790:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400792:	4b26      	ldr	r3, [pc, #152]	; (40082c <twi_set_speed+0xb4>)
  400794:	440b      	add	r3, r1
  400796:	009b      	lsls	r3, r3, #2
  400798:	fbb2 f2f3 	udiv	r2, r2, r3
  40079c:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40079e:	2cff      	cmp	r4, #255	; 0xff
  4007a0:	d939      	bls.n	400816 <twi_set_speed+0x9e>
  4007a2:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  4007a4:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  4007a6:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007a8:	2cff      	cmp	r4, #255	; 0xff
  4007aa:	d90d      	bls.n	4007c8 <twi_set_speed+0x50>
  4007ac:	2907      	cmp	r1, #7
  4007ae:	d1f9      	bne.n	4007a4 <twi_set_speed+0x2c>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  4007b0:	0213      	lsls	r3, r2, #8
  4007b2:	b29b      	uxth	r3, r3
				TWI_CWGR_CKDIV(ckdiv);		
  4007b4:	0409      	lsls	r1, r1, #16
  4007b6:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  4007ba:	430b      	orrs	r3, r1
  4007bc:	b2e4      	uxtb	r4, r4
  4007be:	4323      	orrs	r3, r4
		p_twi->TWI_CWGR =
  4007c0:	6103      	str	r3, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  4007c2:	2000      	movs	r0, #0
}
  4007c4:	bc10      	pop	{r4}
  4007c6:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007c8:	2aff      	cmp	r2, #255	; 0xff
  4007ca:	d9f1      	bls.n	4007b0 <twi_set_speed+0x38>
  4007cc:	2906      	cmp	r1, #6
  4007ce:	d8ef      	bhi.n	4007b0 <twi_set_speed+0x38>
			ckdiv++;
  4007d0:	3101      	adds	r1, #1
			chdiv /= TWI_CLK_DIVIDER;
  4007d2:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007d4:	2aff      	cmp	r2, #255	; 0xff
  4007d6:	d9eb      	bls.n	4007b0 <twi_set_speed+0x38>
  4007d8:	2906      	cmp	r1, #6
  4007da:	d9f9      	bls.n	4007d0 <twi_set_speed+0x58>
  4007dc:	e7e8      	b.n	4007b0 <twi_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4007de:	0049      	lsls	r1, r1, #1
  4007e0:	fbb2 f2f1 	udiv	r2, r2, r1
  4007e4:	3a04      	subs	r2, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007e6:	2aff      	cmp	r2, #255	; 0xff
  4007e8:	d911      	bls.n	40080e <twi_set_speed+0x96>
  4007ea:	2300      	movs	r3, #0
			ckdiv++;
  4007ec:	3301      	adds	r3, #1
			c_lh_div /= TWI_CLK_DIVIDER;
  4007ee:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007f0:	2aff      	cmp	r2, #255	; 0xff
  4007f2:	d901      	bls.n	4007f8 <twi_set_speed+0x80>
  4007f4:	2b07      	cmp	r3, #7
  4007f6:	d1f9      	bne.n	4007ec <twi_set_speed+0x74>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4007f8:	0211      	lsls	r1, r2, #8
  4007fa:	b289      	uxth	r1, r1
				TWI_CWGR_CKDIV(ckdiv);
  4007fc:	041b      	lsls	r3, r3, #16
  4007fe:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  400802:	430b      	orrs	r3, r1
  400804:	b2d2      	uxtb	r2, r2
  400806:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  400808:	6102      	str	r2, [r0, #16]
	return PASS;
  40080a:	2000      	movs	r0, #0
  40080c:	4770      	bx	lr
	uint32_t ckdiv = 0;
  40080e:	2300      	movs	r3, #0
  400810:	e7f2      	b.n	4007f8 <twi_set_speed+0x80>
		return FAIL;
  400812:	2001      	movs	r0, #1
  400814:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400816:	2aff      	cmp	r2, #255	; 0xff
	uint32_t ckdiv = 0;
  400818:	bf88      	it	hi
  40081a:	2100      	movhi	r1, #0
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40081c:	d8d8      	bhi.n	4007d0 <twi_set_speed+0x58>
	uint32_t ckdiv = 0;
  40081e:	2100      	movs	r1, #0
  400820:	e7c6      	b.n	4007b0 <twi_set_speed+0x38>
  400822:	bf00      	nop
  400824:	00061a80 	.word	0x00061a80
  400828:	057619f1 	.word	0x057619f1
  40082c:	3ffd1200 	.word	0x3ffd1200

00400830 <twi_master_init>:
{
  400830:	b538      	push	{r3, r4, r5, lr}
  400832:	4604      	mov	r4, r0
  400834:	460d      	mov	r5, r1
	p_twi->TWI_IDR = ~0UL;
  400836:	f04f 33ff 	mov.w	r3, #4294967295
  40083a:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  40083c:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  40083e:	2380      	movs	r3, #128	; 0x80
  400840:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  400842:	6b03      	ldr	r3, [r0, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  400844:	2308      	movs	r3, #8
  400846:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  400848:	2320      	movs	r3, #32
  40084a:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  40084c:	2304      	movs	r3, #4
  40084e:	6003      	str	r3, [r0, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  400850:	680a      	ldr	r2, [r1, #0]
  400852:	6849      	ldr	r1, [r1, #4]
  400854:	4b05      	ldr	r3, [pc, #20]	; (40086c <twi_master_init+0x3c>)
  400856:	4798      	blx	r3
  400858:	2801      	cmp	r0, #1
  40085a:	bf14      	ite	ne
  40085c:	2000      	movne	r0, #0
  40085e:	2001      	moveq	r0, #1
	if (p_opt->smbus == 1) {
  400860:	7a6b      	ldrb	r3, [r5, #9]
  400862:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  400864:	bf04      	itt	eq
  400866:	2340      	moveq	r3, #64	; 0x40
  400868:	6023      	streq	r3, [r4, #0]
}
  40086a:	bd38      	pop	{r3, r4, r5, pc}
  40086c:	00400779 	.word	0x00400779

00400870 <twi_mk_addr>:
	if (len == 0)
  400870:	460a      	mov	r2, r1
  400872:	b159      	cbz	r1, 40088c <twi_mk_addr+0x1c>
	val = addr[0];
  400874:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  400876:	2901      	cmp	r1, #1
		val |= addr[1];
  400878:	bfc4      	itt	gt
  40087a:	7841      	ldrbgt	r1, [r0, #1]
  40087c:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	if (len > 2) {
  400880:	2a02      	cmp	r2, #2
  400882:	dd04      	ble.n	40088e <twi_mk_addr+0x1e>
		val |= addr[2];
  400884:	7882      	ldrb	r2, [r0, #2]
  400886:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  40088a:	e000      	b.n	40088e <twi_mk_addr+0x1e>
		return 0;
  40088c:	2300      	movs	r3, #0
}
  40088e:	4618      	mov	r0, r3
  400890:	4770      	bx	lr
	...

00400894 <twi_master_read>:
{
  400894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t cnt = p_packet->length;
  400896:	68cc      	ldr	r4, [r1, #12]
	if (cnt == 0) {
  400898:	2c00      	cmp	r4, #0
  40089a:	d04f      	beq.n	40093c <twi_master_read+0xa8>
  40089c:	460b      	mov	r3, r1
  40089e:	4605      	mov	r5, r0
	uint8_t *buffer = p_packet->buffer;
  4008a0:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  4008a2:	2000      	movs	r0, #0
  4008a4:	6068      	str	r0, [r5, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  4008a6:	684a      	ldr	r2, [r1, #4]
  4008a8:	0212      	lsls	r2, r2, #8
  4008aa:	f402 7240 	and.w	r2, r2, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  4008ae:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  4008b2:	7c09      	ldrb	r1, [r1, #16]
  4008b4:	0409      	lsls	r1, r1, #16
  4008b6:	f401 01fe 	and.w	r1, r1, #8323072	; 0x7f0000
  4008ba:	430a      	orrs	r2, r1
  4008bc:	606a      	str	r2, [r5, #4]
	p_twi->TWI_IADR = 0;
  4008be:	60e8      	str	r0, [r5, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  4008c0:	6859      	ldr	r1, [r3, #4]
  4008c2:	4618      	mov	r0, r3
  4008c4:	4b22      	ldr	r3, [pc, #136]	; (400950 <twi_master_read+0xbc>)
  4008c6:	4798      	blx	r3
  4008c8:	60e8      	str	r0, [r5, #12]
	if (cnt == 1) {
  4008ca:	2c01      	cmp	r4, #1
  4008cc:	d00f      	beq.n	4008ee <twi_master_read+0x5a>
		p_twi->TWI_CR = TWI_CR_START;
  4008ce:	2301      	movs	r3, #1
  4008d0:	602b      	str	r3, [r5, #0]
		stop_sent = 0;
  4008d2:	2000      	movs	r0, #0
		status = p_twi->TWI_SR;
  4008d4:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  4008d6:	f413 7f80 	tst.w	r3, #256	; 0x100
  4008da:	d136      	bne.n	40094a <twi_master_read+0xb6>
  4008dc:	f247 512f 	movw	r1, #29999	; 0x752f
		timeout = TWI_TIMEOUT;
  4008e0:	f247 5730 	movw	r7, #30000	; 0x7530
		if (!(status & TWI_SR_RXRDY)) {
  4008e4:	f04f 0e01 	mov.w	lr, #1
			p_twi->TWI_CR = TWI_CR_STOP;
  4008e8:	f04f 0c02 	mov.w	ip, #2
  4008ec:	e019      	b.n	400922 <twi_master_read+0x8e>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  4008ee:	2303      	movs	r3, #3
  4008f0:	602b      	str	r3, [r5, #0]
		stop_sent = 1;
  4008f2:	2001      	movs	r0, #1
  4008f4:	e7ee      	b.n	4008d4 <twi_master_read+0x40>
		if (!(status & TWI_SR_RXRDY)) {
  4008f6:	460a      	mov	r2, r1
  4008f8:	4670      	mov	r0, lr
  4008fa:	e00c      	b.n	400916 <twi_master_read+0x82>
		if (cnt == 1  && !stop_sent) {
  4008fc:	b908      	cbnz	r0, 400902 <twi_master_read+0x6e>
			p_twi->TWI_CR = TWI_CR_STOP;
  4008fe:	f8c5 c000 	str.w	ip, [r5]
		if (!(status & TWI_SR_RXRDY)) {
  400902:	f013 0f02 	tst.w	r3, #2
  400906:	d0f6      	beq.n	4008f6 <twi_master_read+0x62>
  400908:	4670      	mov	r0, lr
		*buffer++ = p_twi->TWI_RHR;
  40090a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  40090c:	7033      	strb	r3, [r6, #0]
		cnt--;
  40090e:	3c01      	subs	r4, #1
		*buffer++ = p_twi->TWI_RHR;
  400910:	3601      	adds	r6, #1
		timeout = TWI_TIMEOUT;
  400912:	463a      	mov	r2, r7
	while (cnt > 0) {
  400914:	b164      	cbz	r4, 400930 <twi_master_read+0x9c>
		status = p_twi->TWI_SR;
  400916:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  400918:	f413 7f80 	tst.w	r3, #256	; 0x100
  40091c:	d111      	bne.n	400942 <twi_master_read+0xae>
		if (!timeout--) {
  40091e:	1e51      	subs	r1, r2, #1
  400920:	b18a      	cbz	r2, 400946 <twi_master_read+0xb2>
		if (cnt == 1  && !stop_sent) {
  400922:	2c01      	cmp	r4, #1
  400924:	d0ea      	beq.n	4008fc <twi_master_read+0x68>
		if (!(status & TWI_SR_RXRDY)) {
  400926:	f013 0f02 	tst.w	r3, #2
  40092a:	d1ee      	bne.n	40090a <twi_master_read+0x76>
  40092c:	460a      	mov	r2, r1
  40092e:	e7f1      	b.n	400914 <twi_master_read+0x80>
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400930:	6a2b      	ldr	r3, [r5, #32]
  400932:	f013 0f01 	tst.w	r3, #1
  400936:	d0fb      	beq.n	400930 <twi_master_read+0x9c>
	p_twi->TWI_SR;
  400938:	6a2b      	ldr	r3, [r5, #32]
	return TWI_SUCCESS;
  40093a:	e000      	b.n	40093e <twi_master_read+0xaa>
		return TWI_INVALID_ARGUMENT;
  40093c:	2401      	movs	r4, #1
}
  40093e:	4620      	mov	r0, r4
  400940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return TWI_RECEIVE_NACK;
  400942:	2405      	movs	r4, #5
  400944:	e7fb      	b.n	40093e <twi_master_read+0xaa>
			return TWI_ERROR_TIMEOUT;
  400946:	2409      	movs	r4, #9
  400948:	e7f9      	b.n	40093e <twi_master_read+0xaa>
			return TWI_RECEIVE_NACK;
  40094a:	2405      	movs	r4, #5
  40094c:	e7f7      	b.n	40093e <twi_master_read+0xaa>
  40094e:	bf00      	nop
  400950:	00400871 	.word	0x00400871

00400954 <twi_master_write>:
{
  400954:	b570      	push	{r4, r5, r6, lr}
	uint32_t cnt = p_packet->length;
  400956:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  400958:	2d00      	cmp	r5, #0
  40095a:	d035      	beq.n	4009c8 <twi_master_write+0x74>
  40095c:	460b      	mov	r3, r1
  40095e:	4604      	mov	r4, r0
	uint8_t *buffer = p_packet->buffer;
  400960:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  400962:	2000      	movs	r0, #0
  400964:	6060      	str	r0, [r4, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400966:	7c0a      	ldrb	r2, [r1, #16]
  400968:	0412      	lsls	r2, r2, #16
  40096a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  40096e:	6849      	ldr	r1, [r1, #4]
  400970:	0209      	lsls	r1, r1, #8
  400972:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400976:	430a      	orrs	r2, r1
  400978:	6062      	str	r2, [r4, #4]
	p_twi->TWI_IADR = 0;
  40097a:	60e0      	str	r0, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  40097c:	6859      	ldr	r1, [r3, #4]
  40097e:	4618      	mov	r0, r3
  400980:	4b15      	ldr	r3, [pc, #84]	; (4009d8 <twi_master_write+0x84>)
  400982:	4798      	blx	r3
  400984:	60e0      	str	r0, [r4, #12]
		status = p_twi->TWI_SR;
  400986:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  400988:	f413 7f80 	tst.w	r3, #256	; 0x100
  40098c:	d006      	beq.n	40099c <twi_master_write+0x48>
			return TWI_RECEIVE_NACK;
  40098e:	2505      	movs	r5, #5
  400990:	e01b      	b.n	4009ca <twi_master_write+0x76>
	while (cnt > 0) {
  400992:	b15d      	cbz	r5, 4009ac <twi_master_write+0x58>
		status = p_twi->TWI_SR;
  400994:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  400996:	f413 7f80 	tst.w	r3, #256	; 0x100
  40099a:	d118      	bne.n	4009ce <twi_master_write+0x7a>
		if (!(status & TWI_SR_TXRDY)) {
  40099c:	f013 0f04 	tst.w	r3, #4
  4009a0:	d0f7      	beq.n	400992 <twi_master_write+0x3e>
		p_twi->TWI_THR = *buffer++;
  4009a2:	7833      	ldrb	r3, [r6, #0]
  4009a4:	6363      	str	r3, [r4, #52]	; 0x34
		cnt--;
  4009a6:	3d01      	subs	r5, #1
		p_twi->TWI_THR = *buffer++;
  4009a8:	3601      	adds	r6, #1
  4009aa:	e7f2      	b.n	400992 <twi_master_write+0x3e>
		status = p_twi->TWI_SR;
  4009ac:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  4009ae:	f413 7f80 	tst.w	r3, #256	; 0x100
  4009b2:	d10e      	bne.n	4009d2 <twi_master_write+0x7e>
		if (status & TWI_SR_TXRDY) {
  4009b4:	f013 0f04 	tst.w	r3, #4
  4009b8:	d0f8      	beq.n	4009ac <twi_master_write+0x58>
	p_twi->TWI_CR = TWI_CR_STOP;
  4009ba:	2302      	movs	r3, #2
  4009bc:	6023      	str	r3, [r4, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  4009be:	6a23      	ldr	r3, [r4, #32]
  4009c0:	f013 0f01 	tst.w	r3, #1
  4009c4:	d0fb      	beq.n	4009be <twi_master_write+0x6a>
  4009c6:	e000      	b.n	4009ca <twi_master_write+0x76>
		return TWI_INVALID_ARGUMENT;
  4009c8:	2501      	movs	r5, #1
}
  4009ca:	4628      	mov	r0, r5
  4009cc:	bd70      	pop	{r4, r5, r6, pc}
			return TWI_RECEIVE_NACK;
  4009ce:	2505      	movs	r5, #5
  4009d0:	e7fb      	b.n	4009ca <twi_master_write+0x76>
			return TWI_RECEIVE_NACK;
  4009d2:	2505      	movs	r5, #5
  4009d4:	e7f9      	b.n	4009ca <twi_master_write+0x76>
  4009d6:	bf00      	nop
  4009d8:	00400871 	.word	0x00400871

004009dc <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4009dc:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4009de:	010b      	lsls	r3, r1, #4
  4009e0:	4293      	cmp	r3, r2
  4009e2:	d914      	bls.n	400a0e <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4009e4:	00c9      	lsls	r1, r1, #3
  4009e6:	084b      	lsrs	r3, r1, #1
  4009e8:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  4009ec:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  4009f0:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4009f2:	1e5c      	subs	r4, r3, #1
  4009f4:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4009f8:	428c      	cmp	r4, r1
  4009fa:	d901      	bls.n	400a00 <usart_set_async_baudrate+0x24>
		return 1;
  4009fc:	2001      	movs	r0, #1
  4009fe:	e017      	b.n	400a30 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  400a00:	6841      	ldr	r1, [r0, #4]
  400a02:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  400a06:	6041      	str	r1, [r0, #4]
  400a08:	e00c      	b.n	400a24 <usart_set_async_baudrate+0x48>
		return 1;
  400a0a:	2001      	movs	r0, #1
  400a0c:	e010      	b.n	400a30 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400a0e:	0859      	lsrs	r1, r3, #1
  400a10:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400a14:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  400a18:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400a1a:	1e5c      	subs	r4, r3, #1
  400a1c:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400a20:	428c      	cmp	r4, r1
  400a22:	d8f2      	bhi.n	400a0a <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400a24:	0412      	lsls	r2, r2, #16
  400a26:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400a2a:	431a      	orrs	r2, r3
  400a2c:	6202      	str	r2, [r0, #32]

	return 0;
  400a2e:	2000      	movs	r0, #0
}
  400a30:	bc10      	pop	{r4}
  400a32:	4770      	bx	lr

00400a34 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400a34:	4b0a      	ldr	r3, [pc, #40]	; (400a60 <usart_reset+0x2c>)
  400a36:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400a3a:	2300      	movs	r3, #0
  400a3c:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400a3e:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400a40:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400a42:	2388      	movs	r3, #136	; 0x88
  400a44:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400a46:	2324      	movs	r3, #36	; 0x24
  400a48:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400a4a:	f44f 7380 	mov.w	r3, #256	; 0x100
  400a4e:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400a50:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400a54:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
  400a56:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  400a5a:	6003      	str	r3, [r0, #0]
  400a5c:	4770      	bx	lr
  400a5e:	bf00      	nop
  400a60:	55534100 	.word	0x55534100

00400a64 <usart_init_rs232>:
{
  400a64:	b570      	push	{r4, r5, r6, lr}
  400a66:	4605      	mov	r5, r0
  400a68:	460c      	mov	r4, r1
  400a6a:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400a6c:	4b0f      	ldr	r3, [pc, #60]	; (400aac <usart_init_rs232+0x48>)
  400a6e:	4798      	blx	r3
	ul_reg_val = 0;
  400a70:	2200      	movs	r2, #0
  400a72:	4b0f      	ldr	r3, [pc, #60]	; (400ab0 <usart_init_rs232+0x4c>)
  400a74:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400a76:	b1a4      	cbz	r4, 400aa2 <usart_init_rs232+0x3e>
  400a78:	4632      	mov	r2, r6
  400a7a:	6821      	ldr	r1, [r4, #0]
  400a7c:	4628      	mov	r0, r5
  400a7e:	4b0d      	ldr	r3, [pc, #52]	; (400ab4 <usart_init_rs232+0x50>)
  400a80:	4798      	blx	r3
  400a82:	4602      	mov	r2, r0
  400a84:	b978      	cbnz	r0, 400aa6 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400a86:	6863      	ldr	r3, [r4, #4]
  400a88:	68a1      	ldr	r1, [r4, #8]
  400a8a:	430b      	orrs	r3, r1
  400a8c:	6921      	ldr	r1, [r4, #16]
  400a8e:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400a90:	68e1      	ldr	r1, [r4, #12]
  400a92:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400a94:	4906      	ldr	r1, [pc, #24]	; (400ab0 <usart_init_rs232+0x4c>)
  400a96:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400a98:	6869      	ldr	r1, [r5, #4]
  400a9a:	430b      	orrs	r3, r1
  400a9c:	606b      	str	r3, [r5, #4]
}
  400a9e:	4610      	mov	r0, r2
  400aa0:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400aa2:	2201      	movs	r2, #1
  400aa4:	e7fb      	b.n	400a9e <usart_init_rs232+0x3a>
  400aa6:	2201      	movs	r2, #1
  400aa8:	e7f9      	b.n	400a9e <usart_init_rs232+0x3a>
  400aaa:	bf00      	nop
  400aac:	00400a35 	.word	0x00400a35
  400ab0:	20000a54 	.word	0x20000a54
  400ab4:	004009dd 	.word	0x004009dd

00400ab8 <usart_init_hw_handshaking>:
{
  400ab8:	b510      	push	{r4, lr}
  400aba:	4604      	mov	r4, r0
	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
  400abc:	4b06      	ldr	r3, [pc, #24]	; (400ad8 <usart_init_hw_handshaking+0x20>)
  400abe:	4798      	blx	r3
  400ac0:	b940      	cbnz	r0, 400ad4 <usart_init_hw_handshaking+0x1c>
  400ac2:	4602      	mov	r2, r0
	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
  400ac4:	6863      	ldr	r3, [r4, #4]
  400ac6:	f023 030f 	bic.w	r3, r3, #15
  400aca:	f043 0302 	orr.w	r3, r3, #2
  400ace:	6063      	str	r3, [r4, #4]
}
  400ad0:	4610      	mov	r0, r2
  400ad2:	bd10      	pop	{r4, pc}
		return 1;
  400ad4:	2201      	movs	r2, #1
  400ad6:	e7fb      	b.n	400ad0 <usart_init_hw_handshaking+0x18>
  400ad8:	00400a65 	.word	0x00400a65

00400adc <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400adc:	2340      	movs	r3, #64	; 0x40
  400ade:	6003      	str	r3, [r0, #0]
  400ae0:	4770      	bx	lr

00400ae2 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400ae2:	2310      	movs	r3, #16
  400ae4:	6003      	str	r3, [r0, #0]
  400ae6:	4770      	bx	lr

00400ae8 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  400ae8:	6081      	str	r1, [r0, #8]
  400aea:	4770      	bx	lr

00400aec <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
  400aec:	60c1      	str	r1, [r0, #12]
  400aee:	4770      	bx	lr

00400af0 <usart_get_status>:
	return p_usart->US_CSR;
  400af0:	6940      	ldr	r0, [r0, #20]
}
  400af2:	4770      	bx	lr

00400af4 <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400af4:	6943      	ldr	r3, [r0, #20]
  400af6:	f013 0f02 	tst.w	r3, #2
  400afa:	d0fb      	beq.n	400af4 <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
  400afc:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400b00:	61c1      	str	r1, [r0, #28]
}
  400b02:	2000      	movs	r0, #0
  400b04:	4770      	bx	lr
	...

00400b08 <usart_write_line>:
{
  400b08:	b570      	push	{r4, r5, r6, lr}
  400b0a:	460c      	mov	r4, r1
	while (*string != '\0') {
  400b0c:	7809      	ldrb	r1, [r1, #0]
  400b0e:	b139      	cbz	r1, 400b20 <usart_write_line+0x18>
  400b10:	4605      	mov	r5, r0
		usart_putchar(p_usart, *string++);
  400b12:	4e04      	ldr	r6, [pc, #16]	; (400b24 <usart_write_line+0x1c>)
  400b14:	4628      	mov	r0, r5
  400b16:	47b0      	blx	r6
	while (*string != '\0') {
  400b18:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  400b1c:	2900      	cmp	r1, #0
  400b1e:	d1f9      	bne.n	400b14 <usart_write_line+0xc>
  400b20:	bd70      	pop	{r4, r5, r6, pc}
  400b22:	bf00      	nop
  400b24:	00400af5 	.word	0x00400af5

00400b28 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400b28:	6943      	ldr	r3, [r0, #20]
  400b2a:	f013 0f01 	tst.w	r3, #1
  400b2e:	d005      	beq.n	400b3c <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400b30:	6983      	ldr	r3, [r0, #24]
  400b32:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400b36:	600b      	str	r3, [r1, #0]
	return 0;
  400b38:	2000      	movs	r0, #0
  400b3a:	4770      	bx	lr
		return 1;
  400b3c:	2001      	movs	r0, #1
}
  400b3e:	4770      	bx	lr

00400b40 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  400b40:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400b44:	6043      	str	r3, [r0, #4]
  400b46:	4770      	bx	lr

00400b48 <vsync_handler>:
void vsync_handler(uint32_t ul_id, uint32_t ul_mask)
{
	unused(ul_id);
	unused(ul_mask);

	g_ul_vsync_flag = 1;
  400b48:	2201      	movs	r2, #1
  400b4a:	4b01      	ldr	r3, [pc, #4]	; (400b50 <vsync_handler+0x8>)
  400b4c:	601a      	str	r2, [r3, #0]
  400b4e:	4770      	bx	lr
  400b50:	20000a58 	.word	0x20000a58

00400b54 <init_vsync_interrupts>:



// brief Initialize Vsync_Handler. 
void init_vsync_interrupts(void)
{
  400b54:	b510      	push	{r4, lr}
  400b56:	b082      	sub	sp, #8
	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(OV2640_VSYNC_PIO, OV2640_VSYNC_ID, OV2640_VSYNC_MASK,
  400b58:	4b07      	ldr	r3, [pc, #28]	; (400b78 <init_vsync_interrupts+0x24>)
  400b5a:	9300      	str	r3, [sp, #0]
  400b5c:	2301      	movs	r3, #1
  400b5e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b62:	210b      	movs	r1, #11
  400b64:	4805      	ldr	r0, [pc, #20]	; (400b7c <init_vsync_interrupts+0x28>)
  400b66:	4c06      	ldr	r4, [pc, #24]	; (400b80 <init_vsync_interrupts+0x2c>)
  400b68:	47a0      	blx	r4
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400b6a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400b6e:	4b05      	ldr	r3, [pc, #20]	; (400b84 <init_vsync_interrupts+0x30>)
  400b70:	601a      	str	r2, [r3, #0]
	/* Enable PIO controller IRQs */
	NVIC_EnableIRQ((IRQn_Type)OV2640_VSYNC_ID);
	
	// necessary?
	// pio_enable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
}
  400b72:	b002      	add	sp, #8
  400b74:	bd10      	pop	{r4, pc}
  400b76:	bf00      	nop
  400b78:	00400b49 	.word	0x00400b49
  400b7c:	400e0e00 	.word	0x400e0e00
  400b80:	004004c9 	.word	0x004004c9
  400b84:	e000e100 	.word	0xe000e100

00400b88 <configure_twi>:


void configure_twi(void)
{
  400b88:	b500      	push	{lr}
  400b8a:	b085      	sub	sp, #20
	
	twi_options_t opt;

	
	/* Enable TWI peripheral */
	pmc_enable_periph_clk(ID_BOARD_TWI);
  400b8c:	2013      	movs	r0, #19
  400b8e:	4b0c      	ldr	r3, [pc, #48]	; (400bc0 <configure_twi+0x38>)
  400b90:	4798      	blx	r3

	/* Init TWI peripheral */
	opt.master_clk = sysclk_get_cpu_hz();
  400b92:	4b0c      	ldr	r3, [pc, #48]	; (400bc4 <configure_twi+0x3c>)
  400b94:	9301      	str	r3, [sp, #4]
	opt.speed      = TWI_CLK;
  400b96:	4b0c      	ldr	r3, [pc, #48]	; (400bc8 <configure_twi+0x40>)
  400b98:	9302      	str	r3, [sp, #8]
	twi_master_init(BOARD_TWI, &opt);
  400b9a:	a901      	add	r1, sp, #4
  400b9c:	480b      	ldr	r0, [pc, #44]	; (400bcc <configure_twi+0x44>)
  400b9e:	4b0c      	ldr	r3, [pc, #48]	; (400bd0 <configure_twi+0x48>)
  400ba0:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400ba2:	4b0c      	ldr	r3, [pc, #48]	; (400bd4 <configure_twi+0x4c>)
  400ba4:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400ba8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400bac:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400bb0:	2100      	movs	r1, #0
  400bb2:	f883 1313 	strb.w	r1, [r3, #787]	; 0x313
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400bb6:	601a      	str	r2, [r3, #0]
	NVIC_DisableIRQ(BOARD_TWI_IRQn);
	NVIC_ClearPendingIRQ(BOARD_TWI_IRQn);
	NVIC_SetPriority(BOARD_TWI_IRQn, 0);
	NVIC_EnableIRQ(BOARD_TWI_IRQn);
	
}
  400bb8:	b005      	add	sp, #20
  400bba:	f85d fb04 	ldr.w	pc, [sp], #4
  400bbe:	bf00      	nop
  400bc0:	0040067d 	.word	0x0040067d
  400bc4:	07270e00 	.word	0x07270e00
  400bc8:	00061a80 	.word	0x00061a80
  400bcc:	40018000 	.word	0x40018000
  400bd0:	00400831 	.word	0x00400831
  400bd4:	e000e100 	.word	0xe000e100

00400bd8 <pio_capture_init>:
 *
 * \param p_pio PIO instance to be configured in PIO capture mode.
 * \param ul_id Corresponding PIO ID.
 */
void pio_capture_init(Pio *p_pio, uint32_t ul_id)
{
  400bd8:	b510      	push	{r4, lr}
  400bda:	4604      	mov	r4, r0
	/* Enable peripheral clock */
	pmc_enable_periph_clk(ul_id);
  400bdc:	4608      	mov	r0, r1
  400bde:	4b13      	ldr	r3, [pc, #76]	; (400c2c <pio_capture_init+0x54>)
  400be0:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400be2:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400be6:	f023 0301 	bic.w	r3, r3, #1
  400bea:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400bee:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
  400bf2:	f043 0308 	orr.w	r3, r3, #8
  400bf6:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400bfa:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400bfe:	f023 0330 	bic.w	r3, r3, #48	; 0x30
  400c02:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  400c06:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c0a:	f043 0320 	orr.w	r3, r3, #32
  400c0e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  400c12:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c16:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400c1a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400c1e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c22:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  400c26:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
  400c2a:	bd10      	pop	{r4, pc}
  400c2c:	0040067d 	.word	0x0040067d

00400c30 <pio_capture_to_buffer>:
 * \param ul_size Data frame size.
 */
uint8_t pio_capture_to_buffer(Pio *p_pio, uint8_t *uc_buf, uint32_t ul_size)     
{
	/* Check if the first PDC bank is free */
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400c30:	f8d0 316c 	ldr.w	r3, [r0, #364]	; 0x16c
  400c34:	b913      	cbnz	r3, 400c3c <pio_capture_to_buffer+0xc>
  400c36:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400c3a:	b143      	cbz	r3, 400c4e <pio_capture_to_buffer+0x1e>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
		p_pio->PIO_RCR = ul_size;
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
		return 1;
		} else if (p_pio->PIO_RNCR == 0) {
  400c3c:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400c40:	b973      	cbnz	r3, 400c60 <pio_capture_to_buffer+0x30>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400c42:	f8c0 1178 	str.w	r1, [r0, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  400c46:	f8c0 217c 	str.w	r2, [r0, #380]	; 0x17c
		return 1;
  400c4a:	2001      	movs	r0, #1
  400c4c:	4770      	bx	lr
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400c4e:	f8c0 1168 	str.w	r1, [r0, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  400c52:	f8c0 216c 	str.w	r2, [r0, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400c56:	2301      	movs	r3, #1
  400c58:	f8c0 3188 	str.w	r3, [r0, #392]	; 0x188
		return 1;
  400c5c:	4618      	mov	r0, r3
  400c5e:	4770      	bx	lr
		} else {
		return 0;
  400c60:	2000      	movs	r0, #0
	}
}
  400c62:	4770      	bx	lr

00400c64 <init_camera>:



void init_camera(void)
{
  400c64:	b508      	push	{r3, lr}
	//gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
	//gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
	
	
	
	pmc_enable_pllbck(7, 0x1, 1); /* PLLA work at 96 Mhz */
  400c66:	2201      	movs	r2, #1
  400c68:	4611      	mov	r1, r2
  400c6a:	2007      	movs	r0, #7
  400c6c:	4b0d      	ldr	r3, [pc, #52]	; (400ca4 <init_camera+0x40>)
  400c6e:	4798      	blx	r3
	// configure clock pins
	
	
	/* Init Vsync handler*/
	init_vsync_interrupts();
  400c70:	4b0d      	ldr	r3, [pc, #52]	; (400ca8 <init_camera+0x44>)
  400c72:	4798      	blx	r3
	//	pio_disable_interrupt(VSYNC_PIO, VSYNC_MASK);    // try???
	g_ul_vsync_flag = 0;	// reset the flag
  400c74:	2200      	movs	r2, #0
  400c76:	4b0d      	ldr	r3, [pc, #52]	; (400cac <init_camera+0x48>)
  400c78:	601a      	str	r2, [r3, #0]
	
	/* Init PIO capture*/
	pio_capture_init(OV_DATA_BUS_PIO, OV_DATA_BUS_ID);
  400c7a:	210b      	movs	r1, #11
  400c7c:	480c      	ldr	r0, [pc, #48]	; (400cb0 <init_camera+0x4c>)
  400c7e:	4b0d      	ldr	r3, [pc, #52]	; (400cb4 <init_camera+0x50>)
  400c80:	4798      	blx	r3
	///* Turn on ov7740 image sensor using power pin */
	//ov_power(true, OV_POWER_PIO, OV_POWER_MASK);

	/* Init PCK0 to work at 24 Mhz */
	/* 96/4=24 Mhz */
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLB_CLK);				// changed from 0 to 1 since we are using PCK1, for address info, refer to page 529 of MCU data sheet
  400c82:	4b0d      	ldr	r3, [pc, #52]	; (400cb8 <init_camera+0x54>)
  400c84:	2223      	movs	r2, #35	; 0x23
  400c86:	645a      	str	r2, [r3, #68]	; 0x44
	PMC->PMC_SCER = PMC_SCER_PCK1;												// changed from 0 to 1 since we are using PCK1
  400c88:	f44f 7200 	mov.w	r2, #512	; 0x200
  400c8c:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {									// changed from 0 to 1 since we are using PCK1
  400c8e:	461a      	mov	r2, r3
  400c90:	6893      	ldr	r3, [r2, #8]
  400c92:	f413 7f00 	tst.w	r3, #512	; 0x200
  400c96:	d0fb      	beq.n	400c90 <init_camera+0x2c>
	}
	
	
	configure_twi();              // initialize twi 
  400c98:	4b08      	ldr	r3, [pc, #32]	; (400cbc <init_camera+0x58>)
  400c9a:	4798      	blx	r3
	

	/* Wait 3 seconds to let the image sensor to adapt to environment */
	delay_ms(3000);	
  400c9c:	4808      	ldr	r0, [pc, #32]	; (400cc0 <init_camera+0x5c>)
  400c9e:	4b09      	ldr	r3, [pc, #36]	; (400cc4 <init_camera+0x60>)
  400ca0:	4798      	blx	r3
  400ca2:	bd08      	pop	{r3, pc}
  400ca4:	00400649 	.word	0x00400649
  400ca8:	00400b55 	.word	0x00400b55
  400cac:	20000a58 	.word	0x20000a58
  400cb0:	400e0e00 	.word	0x400e0e00
  400cb4:	00400bd9 	.word	0x00400bd9
  400cb8:	400e0400 	.word	0x400e0400
  400cbc:	00400b89 	.word	0x00400b89
  400cc0:	01885e6e 	.word	0x01885e6e
  400cc4:	20000001 	.word	0x20000001

00400cc8 <configure_camera>:

}

void configure_camera(void)
{
  400cc8:	b538      	push	{r3, r4, r5, lr}
		/* ov7740 Initialization */
	while (ov_init(BOARD_TWI) == 1) {
  400cca:	4d0a      	ldr	r5, [pc, #40]	; (400cf4 <configure_camera+0x2c>)
  400ccc:	4c0a      	ldr	r4, [pc, #40]	; (400cf8 <configure_camera+0x30>)
  400cce:	4628      	mov	r0, r5
  400cd0:	47a0      	blx	r4
  400cd2:	2801      	cmp	r0, #1
  400cd4:	d0fb      	beq.n	400cce <configure_camera+0x6>
	}

	/* ov7740 configuration */
	ov_configure(BOARD_TWI, JPEG_INIT);
  400cd6:	4d07      	ldr	r5, [pc, #28]	; (400cf4 <configure_camera+0x2c>)
  400cd8:	2100      	movs	r1, #0
  400cda:	4628      	mov	r0, r5
  400cdc:	4c07      	ldr	r4, [pc, #28]	; (400cfc <configure_camera+0x34>)
  400cde:	47a0      	blx	r4
	ov_configure(BOARD_TWI, YUV422);
  400ce0:	2101      	movs	r1, #1
  400ce2:	4628      	mov	r0, r5
  400ce4:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG);
  400ce6:	2102      	movs	r1, #2
  400ce8:	4628      	mov	r0, r5
  400cea:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG_640x480);
  400cec:	2104      	movs	r1, #4
  400cee:	4628      	mov	r0, r5
  400cf0:	47a0      	blx	r4
  400cf2:	bd38      	pop	{r3, r4, r5, pc}
  400cf4:	40018000 	.word	0x40018000
  400cf8:	00400e71 	.word	0x00400e71
  400cfc:	00400fad 	.word	0x00400fad

00400d00 <find_image_len>:




uint8_t find_image_len (void)
{
  400d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	start_point = 0;
  400d04:	2600      	movs	r6, #0
  400d06:	4b1c      	ldr	r3, [pc, #112]	; (400d78 <find_image_len+0x78>)
  400d08:	601e      	str	r6, [r3, #0]
	end_point = 0;
  400d0a:	4b1c      	ldr	r3, [pc, #112]	; (400d7c <find_image_len+0x7c>)
  400d0c:	601e      	str	r6, [r3, #0]
  400d0e:	4633      	mov	r3, r6
  400d10:	46b6      	mov	lr, r6
  400d12:	46b4      	mov	ip, r6
	bool no_error_flag = false;																					// This flag is used for checking error
	
	for (uint32_t i = 0; i+1 < sizeof(image_buffer); i++)
	{
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400d14:	481a      	ldr	r0, [pc, #104]	; (400d80 <find_image_len+0x80>)
  400d16:	2701      	movs	r7, #1
		{
			start_point = i;
			no_error_flag = true;																				// we've detected initial value for JPEG
  400d18:	46b8      	mov	r8, r7
	for (uint32_t i = 0; i+1 < sizeof(image_buffer); i++)
  400d1a:	4d1a      	ldr	r5, [pc, #104]	; (400d84 <find_image_len+0x84>)
  400d1c:	e00e      	b.n	400d3c <find_image_len+0x3c>
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400d1e:	5c42      	ldrb	r2, [r0, r1]
  400d20:	b2d2      	uxtb	r2, r2
  400d22:	2ad8      	cmp	r2, #216	; 0xd8
  400d24:	d110      	bne.n	400d48 <find_image_len+0x48>
			start_point = i;
  400d26:	469c      	mov	ip, r3
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400d28:	46be      	mov	lr, r7
			no_error_flag = true;																				// we've detected initial value for JPEG
  400d2a:	4646      	mov	r6, r8
  400d2c:	e00c      	b.n	400d48 <find_image_len+0x48>
  400d2e:	4a12      	ldr	r2, [pc, #72]	; (400d78 <find_image_len+0x78>)
  400d30:	f8c2 c000 	str.w	ip, [r2]
  400d34:	e015      	b.n	400d62 <find_image_len+0x62>
  400d36:	460b      	mov	r3, r1
	for (uint32_t i = 0; i+1 < sizeof(image_buffer); i++)
  400d38:	42a9      	cmp	r1, r5
  400d3a:	d018      	beq.n	400d6e <find_image_len+0x6e>
  400d3c:	1c59      	adds	r1, r3, #1
  400d3e:	461c      	mov	r4, r3
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400d40:	5cc2      	ldrb	r2, [r0, r3]
  400d42:	b2d2      	uxtb	r2, r2
  400d44:	2aff      	cmp	r2, #255	; 0xff
  400d46:	d0ea      	beq.n	400d1e <find_image_len+0x1e>
		}
		
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd9 && no_error_flag == true) {
  400d48:	5d02      	ldrb	r2, [r0, r4]
  400d4a:	b2d2      	uxtb	r2, r2
  400d4c:	2aff      	cmp	r2, #255	; 0xff
  400d4e:	d1f2      	bne.n	400d36 <find_image_len+0x36>
  400d50:	5c42      	ldrb	r2, [r0, r1]
  400d52:	b2d2      	uxtb	r2, r2
  400d54:	2ad9      	cmp	r2, #217	; 0xd9
  400d56:	d1ee      	bne.n	400d36 <find_image_len+0x36>
  400d58:	2e00      	cmp	r6, #0
  400d5a:	d0ec      	beq.n	400d36 <find_image_len+0x36>
  400d5c:	f1be 0f00 	cmp.w	lr, #0
  400d60:	d1e5      	bne.n	400d2e <find_image_len+0x2e>
			end_point = i+2;
  400d62:	3302      	adds	r3, #2
  400d64:	4a05      	ldr	r2, [pc, #20]	; (400d7c <find_image_len+0x7c>)
  400d66:	6013      	str	r3, [r2, #0]
			return 1;
  400d68:	2001      	movs	r0, #1
  400d6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		
	}
	
	
	// reset everything if not proper
	start_point = 0;																						
  400d6e:	2000      	movs	r0, #0
  400d70:	4b01      	ldr	r3, [pc, #4]	; (400d78 <find_image_len+0x78>)
  400d72:	6018      	str	r0, [r3, #0]
	end_point = 0;
	return 0;
}
  400d74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400d78:	20000ab4 	.word	0x20000ab4
  400d7c:	20000ab8 	.word	0x20000ab8
  400d80:	20000abc 	.word	0x20000abc
  400d84:	0001869f 	.word	0x0001869f

00400d88 <start_capture>:
{
  400d88:	b510      	push	{r4, lr}
	pio_enable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400d8a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400d8e:	4812      	ldr	r0, [pc, #72]	; (400dd8 <start_capture+0x50>)
  400d90:	4b12      	ldr	r3, [pc, #72]	; (400ddc <start_capture+0x54>)
  400d92:	4798      	blx	r3
	while (!g_ul_vsync_flag) {
  400d94:	4a12      	ldr	r2, [pc, #72]	; (400de0 <start_capture+0x58>)
  400d96:	6813      	ldr	r3, [r2, #0]
  400d98:	2b00      	cmp	r3, #0
  400d9a:	d0fc      	beq.n	400d96 <start_capture+0xe>
	pio_disable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400d9c:	4c0e      	ldr	r4, [pc, #56]	; (400dd8 <start_capture+0x50>)
  400d9e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400da2:	4620      	mov	r0, r4
  400da4:	4b0f      	ldr	r3, [pc, #60]	; (400de4 <start_capture+0x5c>)
  400da6:	4798      	blx	r3
	pio_capture_enable(OV2640_DATA_BUS_PIO);
  400da8:	4620      	mov	r0, r4
  400daa:	4b0f      	ldr	r3, [pc, #60]	; (400de8 <start_capture+0x60>)
  400dac:	4798      	blx	r3
	pio_capture_to_buffer(OV2640_DATA_BUS_PIO, image_buffer, 25000);
  400dae:	f246 12a8 	movw	r2, #25000	; 0x61a8
  400db2:	490e      	ldr	r1, [pc, #56]	; (400dec <start_capture+0x64>)
  400db4:	4620      	mov	r0, r4
  400db6:	4b0e      	ldr	r3, [pc, #56]	; (400df0 <start_capture+0x68>)
  400db8:	4798      	blx	r3
	while (!((OV2640_DATA_BUS_PIO->PIO_PCISR & PIO_PCIMR_RXBUFF) ==
  400dba:	4622      	mov	r2, r4
  400dbc:	f8d2 3160 	ldr.w	r3, [r2, #352]	; 0x160
  400dc0:	f013 0f08 	tst.w	r3, #8
  400dc4:	d0fa      	beq.n	400dbc <start_capture+0x34>
	pio_capture_disable(OV2640_DATA_BUS_PIO);					
  400dc6:	4804      	ldr	r0, [pc, #16]	; (400dd8 <start_capture+0x50>)
  400dc8:	4b0a      	ldr	r3, [pc, #40]	; (400df4 <start_capture+0x6c>)
  400dca:	4798      	blx	r3
	g_ul_vsync_flag = 0;
  400dcc:	2200      	movs	r2, #0
  400dce:	4b04      	ldr	r3, [pc, #16]	; (400de0 <start_capture+0x58>)
  400dd0:	601a      	str	r2, [r3, #0]
	uint8_t img_len = find_image_len();
  400dd2:	4b09      	ldr	r3, [pc, #36]	; (400df8 <start_capture+0x70>)
  400dd4:	4798      	blx	r3
}
  400dd6:	bd10      	pop	{r4, pc}
  400dd8:	400e0e00 	.word	0x400e0e00
  400ddc:	004002cd 	.word	0x004002cd
  400de0:	20000a58 	.word	0x20000a58
  400de4:	004002d1 	.word	0x004002d1
  400de8:	00400431 	.word	0x00400431
  400dec:	20000abc 	.word	0x20000abc
  400df0:	00400c31 	.word	0x00400c31
  400df4:	00400449 	.word	0x00400449
  400df8:	00400d01 	.word	0x00400d01

00400dfc <ov_read_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_read_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400dfc:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_read(p_twi, p_packet);
  400dfe:	4b01      	ldr	r3, [pc, #4]	; (400e04 <ov_read_reg+0x8>)
  400e00:	4798      	blx	r3

	return ul_status;
}
  400e02:	bd08      	pop	{r3, pc}
  400e04:	00400895 	.word	0x00400895

00400e08 <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400e08:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  400e0a:	4b01      	ldr	r3, [pc, #4]	; (400e10 <ov_write_reg+0x8>)
  400e0c:	4798      	blx	r3

	return ul_status;
}
  400e0e:	bd08      	pop	{r3, pc}
  400e10:	00400955 	.word	0x00400955

00400e14 <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  400e14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e18:	b086      	sub	sp, #24
  400e1a:	4607      	mov	r7, r0
  400e1c:	1c4c      	adds	r4, r1, #1
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
			delay_ms(5);
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
			twi_packet_regs.addr_length = 1;
  400e1e:	2501      	movs	r5, #1
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
			twi_packet_regs.length = 1;
			twi_packet_regs.buffer = &(p_next->val);

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400e20:	4e11      	ldr	r6, [pc, #68]	; (400e68 <ov_write_regs+0x54>)
			delay_ms(5);
  400e22:	f8df 8048 	ldr.w	r8, [pc, #72]	; 400e6c <ov_write_regs+0x58>
	while (!((p_next->reg == OV_REG_TERM) &&
  400e26:	e010      	b.n	400e4a <ov_write_regs+0x36>
  400e28:	7821      	ldrb	r1, [r4, #0]
  400e2a:	29ff      	cmp	r1, #255	; 0xff
  400e2c:	d018      	beq.n	400e60 <ov_write_regs+0x4c>
			twi_packet_regs.addr[0] = p_next->reg;
  400e2e:	f88d 3004 	strb.w	r3, [sp, #4]
			twi_packet_regs.addr_length = 1;
  400e32:	9502      	str	r5, [sp, #8]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  400e34:	2330      	movs	r3, #48	; 0x30
  400e36:	f88d 3014 	strb.w	r3, [sp, #20]
			twi_packet_regs.length = 1;
  400e3a:	9504      	str	r5, [sp, #16]
			twi_packet_regs.buffer = &(p_next->val);
  400e3c:	9203      	str	r2, [sp, #12]
			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400e3e:	a901      	add	r1, sp, #4
  400e40:	4638      	mov	r0, r7
  400e42:	47b0      	blx	r6
			ul_size++;

			if (ul_err == TWI_BUSY) {
  400e44:	2808      	cmp	r0, #8
  400e46:	d00c      	beq.n	400e62 <ov_write_regs+0x4e>
  400e48:	3402      	adds	r4, #2
  400e4a:	4622      	mov	r2, r4
	while (!((p_next->reg == OV_REG_TERM) &&
  400e4c:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  400e50:	2bff      	cmp	r3, #255	; 0xff
  400e52:	d0e9      	beq.n	400e28 <ov_write_regs+0x14>
		if (p_next->reg == 0xFE) {
  400e54:	2bfe      	cmp	r3, #254	; 0xfe
  400e56:	d1ea      	bne.n	400e2e <ov_write_regs+0x1a>
			delay_ms(5);
  400e58:	f24a 706a 	movw	r0, #42858	; 0xa76a
  400e5c:	47c0      	blx	r8
  400e5e:	e7f3      	b.n	400e48 <ov_write_regs+0x34>
			}
		}

		p_next++;
	}
	return 0;
  400e60:	2000      	movs	r0, #0
}
  400e62:	b006      	add	sp, #24
  400e64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e68:	00400e09 	.word	0x00400e09
  400e6c:	20000001 	.word	0x20000001

00400e70 <ov_init>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_init(Twi* const p_twi)
{
  400e70:	b5f0      	push	{r4, r5, r6, r7, lr}
  400e72:	b093      	sub	sp, #76	; 0x4c
  400e74:	4607      	mov	r7, r0
	const uint8_t cont_reg_val = 1;
  400e76:	2401      	movs	r4, #1
  400e78:	f88d 4047 	strb.w	r4, [sp, #71]	; 0x47
	twi_packet_t init_packet = {
  400e7c:	2500      	movs	r5, #0
  400e7e:	950c      	str	r5, [sp, #48]	; 0x30
  400e80:	9510      	str	r5, [sp, #64]	; 0x40
  400e82:	23ff      	movs	r3, #255	; 0xff
  400e84:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  400e88:	940d      	str	r4, [sp, #52]	; 0x34
  400e8a:	f10d 0347 	add.w	r3, sp, #71	; 0x47
  400e8e:	930e      	str	r3, [sp, #56]	; 0x38
  400e90:	940f      	str	r4, [sp, #60]	; 0x3c
  400e92:	2630      	movs	r6, #48	; 0x30
  400e94:	f88d 6040 	strb.w	r6, [sp, #64]	; 0x40
		.addr_length  = 1, //sizeof (uint16_t),    // TWI slave memory address data size
		.chip         = OV_I2C_SENSOR_ADDRESS,      // TWI slave bus address
		.buffer       = &cont_reg_val,        // transfer data destination buffer
		.length       = 1                    // transfer data size (bytes)
	};
	ov_write_reg(p_twi, &init_packet);
  400e98:	eb0d 0106 	add.w	r1, sp, r6
  400e9c:	4b41      	ldr	r3, [pc, #260]	; (400fa4 <ov_init+0x134>)
  400e9e:	4798      	blx	r3
	uint32_t ul_id = 0;
  400ea0:	9500      	str	r5, [sp, #0]
	uint32_t ul_ver = 0;
  400ea2:	9501      	str	r5, [sp, #4]
	packet_pid.chip = OV_I2C_SENSOR_ADDRESS;
  400ea4:	f88d 6018 	strb.w	r6, [sp, #24]
	packet_pid.addr[0] = OV2640_PIDH;
  400ea8:	230a      	movs	r3, #10
  400eaa:	f88d 3008 	strb.w	r3, [sp, #8]
	packet_pid.addr_length = 1;
  400eae:	9403      	str	r4, [sp, #12]
	packet_pid.buffer = &ul_id;
  400eb0:	f8cd d010 	str.w	sp, [sp, #16]
	packet_pid.length = 1;
  400eb4:	9405      	str	r4, [sp, #20]
	ov_read_reg(p_twi, &packet_pid);
  400eb6:	a902      	add	r1, sp, #8
  400eb8:	4638      	mov	r0, r7
  400eba:	4d3b      	ldr	r5, [pc, #236]	; (400fa8 <ov_init+0x138>)
  400ebc:	47a8      	blx	r5
	packet_ver.chip = OV_I2C_SENSOR_ADDRESS;
  400ebe:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	packet_ver.addr[0] = OV2640_PIDL;
  400ec2:	230b      	movs	r3, #11
  400ec4:	f88d 301c 	strb.w	r3, [sp, #28]
	packet_ver.addr_length = 1;
  400ec8:	9408      	str	r4, [sp, #32]
	packet_ver.buffer = &ul_ver;
  400eca:	ab01      	add	r3, sp, #4
  400ecc:	9309      	str	r3, [sp, #36]	; 0x24
	packet_ver.length = 1;
  400ece:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &packet_ver);
  400ed0:	a907      	add	r1, sp, #28
  400ed2:	4638      	mov	r0, r7
  400ed4:	47a8      	blx	r5
	return ((uint32_t)(ul_id << 8) | ul_ver);
  400ed6:	9b01      	ldr	r3, [sp, #4]
  400ed8:	9a00      	ldr	r2, [sp, #0]
  400eda:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	
	uint32_t ul_id = 0;

	ul_id = ov_id( p_twi );

	if (((ul_id >> 8)&0xff)  == OV2640_PIDH_DEFAULT) {
  400ede:	f3c3 2307 	ubfx	r3, r3, #8, #8
  400ee2:	2b26      	cmp	r3, #38	; 0x26
  400ee4:	d002      	beq.n	400eec <ov_init+0x7c>
				return 0;
			}
		}
	}

	return 1;
  400ee6:	2001      	movs	r0, #1
}
  400ee8:	b013      	add	sp, #76	; 0x4c
  400eea:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint32_t ul_midh = 0;
  400eec:	2300      	movs	r3, #0
  400eee:	9301      	str	r3, [sp, #4]
	uint32_t ul_midl = 0;
  400ef0:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = OV2640_MIDH;
  400ef2:	231c      	movs	r3, #28
  400ef4:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400ef8:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400efa:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midh;
  400efe:	ab01      	add	r3, sp, #4
  400f00:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400f02:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400f04:	a907      	add	r1, sp, #28
  400f06:	4638      	mov	r0, r7
  400f08:	47a8      	blx	r5
	twi_packet.addr[0] = OV2640_MIDL;
  400f0a:	231d      	movs	r3, #29
  400f0c:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400f10:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400f12:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midl;
  400f16:	ab02      	add	r3, sp, #8
  400f18:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400f1a:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400f1c:	a907      	add	r1, sp, #28
  400f1e:	4638      	mov	r0, r7
  400f20:	47a8      	blx	r5
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400f22:	9b01      	ldr	r3, [sp, #4]
  400f24:	2b7f      	cmp	r3, #127	; 0x7f
  400f26:	d001      	beq.n	400f2c <ov_init+0xbc>
	return 1;
  400f28:	2001      	movs	r0, #1
  400f2a:	e7dd      	b.n	400ee8 <ov_init+0x78>
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400f2c:	9b02      	ldr	r3, [sp, #8]
  400f2e:	2ba2      	cmp	r3, #162	; 0xa2
  400f30:	d1fa      	bne.n	400f28 <ov_init+0xb8>
	uint32_t ul_value = 0;
  400f32:	2300      	movs	r3, #0
  400f34:	9300      	str	r3, [sp, #0]
	uint32_t ul_oldvalue = 0;
  400f36:	9301      	str	r3, [sp, #4]
	uint32_t ul_entervalue = 0;
  400f38:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = 0x01;
  400f3a:	2301      	movs	r3, #1
  400f3c:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400f40:	9308      	str	r3, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400f42:	2230      	movs	r2, #48	; 0x30
  400f44:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
	twi_packet.length = 1;
  400f48:	930a      	str	r3, [sp, #40]	; 0x28
	twi_packet.buffer = &ul_oldvalue;
  400f4a:	ab01      	add	r3, sp, #4
  400f4c:	9309      	str	r3, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f4e:	a907      	add	r1, sp, #28
  400f50:	4638      	mov	r0, r7
  400f52:	4c15      	ldr	r4, [pc, #84]	; (400fa8 <ov_init+0x138>)
  400f54:	47a0      	blx	r4
	ul_entervalue = 0xAD;
  400f56:	ab12      	add	r3, sp, #72	; 0x48
  400f58:	22ad      	movs	r2, #173	; 0xad
  400f5a:	f843 2d40 	str.w	r2, [r3, #-64]!
	twi_packet.buffer = &ul_entervalue;
  400f5e:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  400f60:	a907      	add	r1, sp, #28
  400f62:	4638      	mov	r0, r7
  400f64:	4b0f      	ldr	r3, [pc, #60]	; (400fa4 <ov_init+0x134>)
  400f66:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  400f68:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f6c:	a907      	add	r1, sp, #28
  400f6e:	4638      	mov	r0, r7
  400f70:	47a0      	blx	r4
	if (ul_value != ul_entervalue) {
  400f72:	9b02      	ldr	r3, [sp, #8]
  400f74:	9a00      	ldr	r2, [sp, #0]
  400f76:	429a      	cmp	r2, r3
  400f78:	d001      	beq.n	400f7e <ov_init+0x10e>
		return 1;
  400f7a:	2001      	movs	r0, #1
  400f7c:	e7b4      	b.n	400ee8 <ov_init+0x78>
	twi_packet.buffer = &ul_oldvalue;
  400f7e:	ab01      	add	r3, sp, #4
  400f80:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  400f82:	a907      	add	r1, sp, #28
  400f84:	4638      	mov	r0, r7
  400f86:	4b07      	ldr	r3, [pc, #28]	; (400fa4 <ov_init+0x134>)
  400f88:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  400f8a:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f8e:	a907      	add	r1, sp, #28
  400f90:	4638      	mov	r0, r7
  400f92:	4b05      	ldr	r3, [pc, #20]	; (400fa8 <ov_init+0x138>)
  400f94:	4798      	blx	r3
	if (ul_value != ul_oldvalue) {
  400f96:	9b01      	ldr	r3, [sp, #4]
  400f98:	9800      	ldr	r0, [sp, #0]
  400f9a:	1ac0      	subs	r0, r0, r3
  400f9c:	bf18      	it	ne
  400f9e:	2001      	movne	r0, #1
  400fa0:	e7a2      	b.n	400ee8 <ov_init+0x78>
  400fa2:	bf00      	nop
  400fa4:	00400e09 	.word	0x00400e09
  400fa8:	00400dfd 	.word	0x00400dfd

00400fac <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  400fac:	b508      	push	{r3, lr}
	const ov_reg *p_regs_conf = NULL;

	/* Common register initialization */
	switch (format) {
  400fae:	2911      	cmp	r1, #17
  400fb0:	d82a      	bhi.n	401008 <ov_configure+0x5c>
  400fb2:	e8df f001 	tbb	[pc, r1]
  400fb6:	092b      	.short	0x092b
  400fb8:	0f0d0b2d 	.word	0x0f0d0b2d
  400fbc:	17151311 	.word	0x17151311
  400fc0:	1f1d1b19 	.word	0x1f1d1b19
  400fc4:	27252321 	.word	0x27252321
	case JPEG_INIT:
		p_regs_conf = OV2640_JPEG_INIT;
		break;
		
	case YUV422:
		p_regs_conf = OV2640_YUV422;
  400fc8:	4914      	ldr	r1, [pc, #80]	; (40101c <ov_configure+0x70>)
  400fca:	e022      	b.n	401012 <ov_configure+0x66>
	case JPEG:
		p_regs_conf = OV2640_JPEG;
		break;
		
	case JPEG_320x240:
		p_regs_conf = OV2640_JPEG_320x240;
  400fcc:	4914      	ldr	r1, [pc, #80]	; (401020 <ov_configure+0x74>)
		break;
  400fce:	e020      	b.n	401012 <ov_configure+0x66>
		
	case JPEG_640x480:
		p_regs_conf = OV2640_JPEG_640x480;
  400fd0:	4914      	ldr	r1, [pc, #80]	; (401024 <ov_configure+0x78>)
		break;
  400fd2:	e01e      	b.n	401012 <ov_configure+0x66>
		
	case JPEG_800x600:
		p_regs_conf = OV2640_JPEG_800x600;
  400fd4:	4914      	ldr	r1, [pc, #80]	; (401028 <ov_configure+0x7c>)
		break;
  400fd6:	e01c      	b.n	401012 <ov_configure+0x66>
		
	case JPEG_1024x768:
		p_regs_conf = OV2640_JPEG_1024x768;
  400fd8:	4914      	ldr	r1, [pc, #80]	; (40102c <ov_configure+0x80>)
		break;
  400fda:	e01a      	b.n	401012 <ov_configure+0x66>
		
	case JPEG_1280x1024:
		p_regs_conf = OV2640_JPEG_1280x1024;
  400fdc:	4914      	ldr	r1, [pc, #80]	; (401030 <ov_configure+0x84>)
		break;
  400fde:	e018      	b.n	401012 <ov_configure+0x66>
		
	case JPEG_1600x1200:
		p_regs_conf = OV2640_JPEG_1600x1200;
  400fe0:	4914      	ldr	r1, [pc, #80]	; (401034 <ov_configure+0x88>)
		break;
  400fe2:	e016      	b.n	401012 <ov_configure+0x66>
		
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV2640_QVGA_YUV422_10FPS;
  400fe4:	4914      	ldr	r1, [pc, #80]	; (401038 <ov_configure+0x8c>)
		break;
  400fe6:	e014      	b.n	401012 <ov_configure+0x66>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV2640_QVGA_YUV422_15FPS;
  400fe8:	4914      	ldr	r1, [pc, #80]	; (40103c <ov_configure+0x90>)
		break;
  400fea:	e012      	b.n	401012 <ov_configure+0x66>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV2640_QVGA_YUV422_20FPS;
  400fec:	4914      	ldr	r1, [pc, #80]	; (401040 <ov_configure+0x94>)
		break;
  400fee:	e010      	b.n	401012 <ov_configure+0x66>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV2640_QVGA_YUV422_30FPS;
  400ff0:	4914      	ldr	r1, [pc, #80]	; (401044 <ov_configure+0x98>)
		break;
  400ff2:	e00e      	b.n	401012 <ov_configure+0x66>

	case QVGA_RGB888:
		p_regs_conf = OV2640_QVGA_RGB888;
  400ff4:	4914      	ldr	r1, [pc, #80]	; (401048 <ov_configure+0x9c>)
		break;
  400ff6:	e00c      	b.n	401012 <ov_configure+0x66>

	case QQVGA_YUV422:
		p_regs_conf = OV2640_QQVGA_YUV422;
  400ff8:	4914      	ldr	r1, [pc, #80]	; (40104c <ov_configure+0xa0>)
		break;
  400ffa:	e00a      	b.n	401012 <ov_configure+0x66>

	case QQVGA_RGB888:
		p_regs_conf = OV2640_QQVGA_RGB888;
  400ffc:	4914      	ldr	r1, [pc, #80]	; (401050 <ov_configure+0xa4>)
		break;
  400ffe:	e008      	b.n	401012 <ov_configure+0x66>

	case TEST_PATTERN:
		p_regs_conf = OV2640_TEST_PATTERN;
  401000:	4914      	ldr	r1, [pc, #80]	; (401054 <ov_configure+0xa8>)
		break;
  401002:	e006      	b.n	401012 <ov_configure+0x66>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV2640_VGA_YUV422_20FPS;
  401004:	4914      	ldr	r1, [pc, #80]	; (401058 <ov_configure+0xac>)
		break;
  401006:	e004      	b.n	401012 <ov_configure+0x66>
	if (p_regs_conf != NULL) {
		ov_write_regs( p_twi, p_regs_conf );
		return 0;
	}

	return 1;
  401008:	2001      	movs	r0, #1
  40100a:	bd08      	pop	{r3, pc}
		p_regs_conf = OV2640_JPEG_INIT;
  40100c:	4913      	ldr	r1, [pc, #76]	; (40105c <ov_configure+0xb0>)
  40100e:	e000      	b.n	401012 <ov_configure+0x66>
		p_regs_conf = OV2640_JPEG;
  401010:	4913      	ldr	r1, [pc, #76]	; (401060 <ov_configure+0xb4>)
		ov_write_regs( p_twi, p_regs_conf );
  401012:	4b14      	ldr	r3, [pc, #80]	; (401064 <ov_configure+0xb8>)
  401014:	4798      	blx	r3
		return 0;
  401016:	2000      	movs	r0, #0
}
  401018:	bd08      	pop	{r3, pc}
  40101a:	bf00      	nop
  40101c:	00407438 	.word	0x00407438
  401020:	00406940 	.word	0x00406940
  401024:	00406990 	.word	0x00406990
  401028:	004069e4 	.word	0x004069e4
  40102c:	00406848 	.word	0x00406848
  401030:	00406898 	.word	0x00406898
  401034:	004068ec 	.word	0x004068ec
  401038:	00406e94 	.word	0x00406e94
  40103c:	00406f84 	.word	0x00406f84
  401040:	00407074 	.word	0x00407074
  401044:	00407164 	.word	0x00407164
  401048:	00406da0 	.word	0x00406da0
  40104c:	00406cac 	.word	0x00406cac
  401050:	00406bb8 	.word	0x00406bb8
  401054:	00407254 	.word	0x00407254
  401058:	00407348 	.word	0x00407348
  40105c:	00406a38 	.word	0x00406a38
  401060:	00406834 	.word	0x00406834
  401064:	00400e15 	.word	0x00400e15

00401068 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  401068:	b508      	push	{r3, lr}
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  40106a:	2100      	movs	r1, #0
  40106c:	4805      	ldr	r0, [pc, #20]	; (401084 <TC0_Handler+0x1c>)
  40106e:	4b06      	ldr	r3, [pc, #24]	; (401088 <TC0_Handler+0x20>)
  401070:	4798      	blx	r3

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  401072:	f010 0f10 	tst.w	r0, #16
  401076:	d004      	beq.n	401082 <TC0_Handler+0x1a>
		counts++;
  401078:	4a04      	ldr	r2, [pc, #16]	; (40108c <TC0_Handler+0x24>)
  40107a:	7813      	ldrb	r3, [r2, #0]
  40107c:	3301      	adds	r3, #1
  40107e:	b2db      	uxtb	r3, r3
  401080:	7013      	strb	r3, [r2, #0]
  401082:	bd08      	pop	{r3, pc}
  401084:	40010000 	.word	0x40010000
  401088:	00400701 	.word	0x00400701
  40108c:	2001915c 	.word	0x2001915c

00401090 <configure_tc>:
	}
}

void configure_tc(void)
{
  401090:	b530      	push	{r4, r5, lr}
  401092:	b085      	sub	sp, #20

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  401094:	2017      	movs	r0, #23
  401096:	4b14      	ldr	r3, [pc, #80]	; (4010e8 <configure_tc+0x58>)
  401098:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  40109a:	4d14      	ldr	r5, [pc, #80]	; (4010ec <configure_tc+0x5c>)
  40109c:	9500      	str	r5, [sp, #0]
  40109e:	ab02      	add	r3, sp, #8
  4010a0:	aa03      	add	r2, sp, #12
  4010a2:	4629      	mov	r1, r5
  4010a4:	2001      	movs	r0, #1
  4010a6:	4c12      	ldr	r4, [pc, #72]	; (4010f0 <configure_tc+0x60>)
  4010a8:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  4010aa:	4c12      	ldr	r4, [pc, #72]	; (4010f4 <configure_tc+0x64>)
  4010ac:	9a02      	ldr	r2, [sp, #8]
  4010ae:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  4010b2:	2100      	movs	r1, #0
  4010b4:	4620      	mov	r0, r4
  4010b6:	4b10      	ldr	r3, [pc, #64]	; (4010f8 <configure_tc+0x68>)
  4010b8:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  4010ba:	9a03      	ldr	r2, [sp, #12]
  4010bc:	fbb5 f2f2 	udiv	r2, r5, r2
  4010c0:	2100      	movs	r1, #0
  4010c2:	4620      	mov	r0, r4
  4010c4:	4b0d      	ldr	r3, [pc, #52]	; (4010fc <configure_tc+0x6c>)
  4010c6:	4798      	blx	r3
  4010c8:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  4010cc:	4b0c      	ldr	r3, [pc, #48]	; (401100 <configure_tc+0x70>)
  4010ce:	601a      	str	r2, [r3, #0]

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  4010d0:	2210      	movs	r2, #16
  4010d2:	2100      	movs	r1, #0
  4010d4:	4620      	mov	r0, r4
  4010d6:	4b0b      	ldr	r3, [pc, #44]	; (401104 <configure_tc+0x74>)
  4010d8:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  4010da:	2100      	movs	r1, #0
  4010dc:	4620      	mov	r0, r4
  4010de:	4b0a      	ldr	r3, [pc, #40]	; (401108 <configure_tc+0x78>)
  4010e0:	4798      	blx	r3
  4010e2:	b005      	add	sp, #20
  4010e4:	bd30      	pop	{r4, r5, pc}
  4010e6:	bf00      	nop
  4010e8:	0040067d 	.word	0x0040067d
  4010ec:	07270e00 	.word	0x07270e00
  4010f0:	00400709 	.word	0x00400709
  4010f4:	40010000 	.word	0x40010000
  4010f8:	004006d1 	.word	0x004006d1
  4010fc:	004006f1 	.word	0x004006f1
  401100:	e000e100 	.word	0xe000e100
  401104:	004006f9 	.word	0x004006f9
  401108:	004006e9 	.word	0x004006e9

0040110c <wifi_web_setup_handler>:
void wifi_web_setup_handler(uint32_t ul_id, uint32_t ul_mask)
{
	unused(ul_id);
	unused(ul_mask);
	
	web_setup_flag = true;
  40110c:	2201      	movs	r2, #1
  40110e:	4b01      	ldr	r3, [pc, #4]	; (401114 <wifi_web_setup_handler+0x8>)
  401110:	601a      	str	r2, [r3, #0]
  401112:	4770      	bx	lr
  401114:	20000a70 	.word	0x20000a70

00401118 <process_incoming_byte_wifi>:
	input_line_wifi[input_pos_wifi++] = in_byte;            // Saves the incoming byte into a next position, and increment
  401118:	4a03      	ldr	r2, [pc, #12]	; (401128 <process_incoming_byte_wifi+0x10>)
  40111a:	6813      	ldr	r3, [r2, #0]
  40111c:	1c59      	adds	r1, r3, #1
  40111e:	6011      	str	r1, [r2, #0]
  401120:	4a02      	ldr	r2, [pc, #8]	; (40112c <process_incoming_byte_wifi+0x14>)
  401122:	54d0      	strb	r0, [r2, r3]
  401124:	4770      	bx	lr
  401126:	bf00      	nop
  401128:	20000a60 	.word	0x20000a60
  40112c:	20019160 	.word	0x20019160

00401130 <USART0_Handler>:
{
  401130:	b510      	push	{r4, lr}
	ul_status = usart_get_status(WIFI_USART);           // Gets Channel Status Register data 
  401132:	480a      	ldr	r0, [pc, #40]	; (40115c <USART0_Handler+0x2c>)
  401134:	4b0a      	ldr	r3, [pc, #40]	; (401160 <USART0_Handler+0x30>)
  401136:	4798      	blx	r3
	if (ul_status & US_CSR_RXBUFF) {                    // Checking if we received a byte
  401138:	f410 5f80 	tst.w	r0, #4096	; 0x1000
  40113c:	d100      	bne.n	401140 <USART0_Handler+0x10>
  40113e:	bd10      	pop	{r4, pc}
		usart_read(WIFI_USART, &received_byte_wifi);
  401140:	4c08      	ldr	r4, [pc, #32]	; (401164 <USART0_Handler+0x34>)
  401142:	4621      	mov	r1, r4
  401144:	4805      	ldr	r0, [pc, #20]	; (40115c <USART0_Handler+0x2c>)
  401146:	4b08      	ldr	r3, [pc, #32]	; (401168 <USART0_Handler+0x38>)
  401148:	4798      	blx	r3
		new_rx_wifi = true;
  40114a:	2201      	movs	r2, #1
  40114c:	4b07      	ldr	r3, [pc, #28]	; (40116c <USART0_Handler+0x3c>)
  40114e:	701a      	strb	r2, [r3, #0]
		process_incoming_byte_wifi((uint8_t)received_byte_wifi);
  401150:	6820      	ldr	r0, [r4, #0]
  401152:	b2c0      	uxtb	r0, r0
  401154:	4b06      	ldr	r3, [pc, #24]	; (401170 <USART0_Handler+0x40>)
  401156:	4798      	blx	r3
}
  401158:	e7f1      	b.n	40113e <USART0_Handler+0xe>
  40115a:	bf00      	nop
  40115c:	40024000 	.word	0x40024000
  401160:	00400af1 	.word	0x00400af1
  401164:	20000a68 	.word	0x20000a68
  401168:	00400b29 	.word	0x00400b29
  40116c:	20000a64 	.word	0x20000a64
  401170:	00401119 	.word	0x00401119

00401174 <process_data_wifi>:
{
  401174:	b508      	push	{r3, lr}
		if (strstr(input_line_wifi, "Start transfer")){                 // string provided from the firmware design pdf
  401176:	491d      	ldr	r1, [pc, #116]	; (4011ec <process_data_wifi+0x78>)
  401178:	481d      	ldr	r0, [pc, #116]	; (4011f0 <process_data_wifi+0x7c>)
  40117a:	4b1e      	ldr	r3, [pc, #120]	; (4011f4 <process_data_wifi+0x80>)
  40117c:	4798      	blx	r3
  40117e:	b120      	cbz	r0, 40118a <process_data_wifi+0x16>
			image_transfer_flag = true;
  401180:	2301      	movs	r3, #1
  401182:	4a1d      	ldr	r2, [pc, #116]	; (4011f8 <process_data_wifi+0x84>)
  401184:	7013      	strb	r3, [r2, #0]
			wifi_status = true;
  401186:	4a1d      	ldr	r2, [pc, #116]	; (4011fc <process_data_wifi+0x88>)
  401188:	7013      	strb	r3, [r2, #0]
		if (strstr(input_line_wifi, "None"))
  40118a:	491d      	ldr	r1, [pc, #116]	; (401200 <process_data_wifi+0x8c>)
  40118c:	4818      	ldr	r0, [pc, #96]	; (4011f0 <process_data_wifi+0x7c>)
  40118e:	4b19      	ldr	r3, [pc, #100]	; (4011f4 <process_data_wifi+0x80>)
  401190:	4798      	blx	r3
  401192:	b110      	cbz	r0, 40119a <process_data_wifi+0x26>
			wifi_websocket_flag = false;		
  401194:	2200      	movs	r2, #0
  401196:	4b1b      	ldr	r3, [pc, #108]	; (401204 <process_data_wifi+0x90>)
  401198:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "Client not connected")) 
  40119a:	491b      	ldr	r1, [pc, #108]	; (401208 <process_data_wifi+0x94>)
  40119c:	4814      	ldr	r0, [pc, #80]	; (4011f0 <process_data_wifi+0x7c>)
  40119e:	4b15      	ldr	r3, [pc, #84]	; (4011f4 <process_data_wifi+0x80>)
  4011a0:	4798      	blx	r3
  4011a2:	b110      	cbz	r0, 4011aa <process_data_wifi+0x36>
			wifi_websocket_flag = false;
  4011a4:	2200      	movs	r2, #0
  4011a6:	4b17      	ldr	r3, [pc, #92]	; (401204 <process_data_wifi+0x90>)
  4011a8:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "Websocket connected"))            
  4011aa:	4918      	ldr	r1, [pc, #96]	; (40120c <process_data_wifi+0x98>)
  4011ac:	4810      	ldr	r0, [pc, #64]	; (4011f0 <process_data_wifi+0x7c>)
  4011ae:	4b11      	ldr	r3, [pc, #68]	; (4011f4 <process_data_wifi+0x80>)
  4011b0:	4798      	blx	r3
  4011b2:	b110      	cbz	r0, 4011ba <process_data_wifi+0x46>
			wifi_websocket_flag = true;
  4011b4:	2201      	movs	r2, #1
  4011b6:	4b13      	ldr	r3, [pc, #76]	; (401204 <process_data_wifi+0x90>)
  4011b8:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "Websocket disconnected"))  
  4011ba:	4915      	ldr	r1, [pc, #84]	; (401210 <process_data_wifi+0x9c>)
  4011bc:	480c      	ldr	r0, [pc, #48]	; (4011f0 <process_data_wifi+0x7c>)
  4011be:	4b0d      	ldr	r3, [pc, #52]	; (4011f4 <process_data_wifi+0x80>)
  4011c0:	4798      	blx	r3
  4011c2:	b110      	cbz	r0, 4011ca <process_data_wifi+0x56>
			wifi_websocket_flag = false;
  4011c4:	2200      	movs	r2, #0
  4011c6:	4b0f      	ldr	r3, [pc, #60]	; (401204 <process_data_wifi+0x90>)
  4011c8:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, ","))             
  4011ca:	212c      	movs	r1, #44	; 0x2c
  4011cc:	4808      	ldr	r0, [pc, #32]	; (4011f0 <process_data_wifi+0x7c>)
  4011ce:	4b11      	ldr	r3, [pc, #68]	; (401214 <process_data_wifi+0xa0>)
  4011d0:	4798      	blx	r3
  4011d2:	b110      	cbz	r0, 4011da <process_data_wifi+0x66>
			wifi_websocket_flag = true;
  4011d4:	2201      	movs	r2, #1
  4011d6:	4b0b      	ldr	r3, [pc, #44]	; (401204 <process_data_wifi+0x90>)
  4011d8:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "2"))
  4011da:	2132      	movs	r1, #50	; 0x32
  4011dc:	4804      	ldr	r0, [pc, #16]	; (4011f0 <process_data_wifi+0x7c>)
  4011de:	4b0d      	ldr	r3, [pc, #52]	; (401214 <process_data_wifi+0xa0>)
  4011e0:	4798      	blx	r3
  4011e2:	b110      	cbz	r0, 4011ea <process_data_wifi+0x76>
			wifi_status = true;
  4011e4:	2201      	movs	r2, #1
  4011e6:	4b05      	ldr	r3, [pc, #20]	; (4011fc <process_data_wifi+0x88>)
  4011e8:	701a      	strb	r2, [r3, #0]
  4011ea:	bd08      	pop	{r3, pc}
  4011ec:	00407480 	.word	0x00407480
  4011f0:	20019160 	.word	0x20019160
  4011f4:	00401df5 	.word	0x00401df5
  4011f8:	20000a5c 	.word	0x20000a5c
  4011fc:	20000a75 	.word	0x20000a75
  401200:	00407490 	.word	0x00407490
  401204:	20000a76 	.word	0x20000a76
  401208:	00407498 	.word	0x00407498
  40120c:	004074b0 	.word	0x004074b0
  401210:	004074c4 	.word	0x004074c4
  401214:	00401a5d 	.word	0x00401a5d

00401218 <wifi_command_response_handler>:
{
  401218:	b508      	push	{r3, lr}
	wifi_comm_success = true;
  40121a:	2201      	movs	r2, #1
  40121c:	4b07      	ldr	r3, [pc, #28]	; (40123c <wifi_command_response_handler+0x24>)
  40121e:	701a      	strb	r2, [r3, #0]
	process_data_wifi();
  401220:	4b07      	ldr	r3, [pc, #28]	; (401240 <wifi_command_response_handler+0x28>)
  401222:	4798      	blx	r3
	for (int jj=0; jj<MAX_INPUT_WIFI; jj++) {input_line_wifi[jj] = 0; }                         // Once the data was processed, clear the buffer, but consider not using this loop
  401224:	2300      	movs	r3, #0
  401226:	4907      	ldr	r1, [pc, #28]	; (401244 <wifi_command_response_handler+0x2c>)
  401228:	461a      	mov	r2, r3
  40122a:	54ca      	strb	r2, [r1, r3]
  40122c:	3301      	adds	r3, #1
  40122e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  401232:	d1fa      	bne.n	40122a <wifi_command_response_handler+0x12>
	input_pos_wifi = 0;
  401234:	2200      	movs	r2, #0
  401236:	4b04      	ldr	r3, [pc, #16]	; (401248 <wifi_command_response_handler+0x30>)
  401238:	601a      	str	r2, [r3, #0]
  40123a:	bd08      	pop	{r3, pc}
  40123c:	20000a74 	.word	0x20000a74
  401240:	00401175 	.word	0x00401175
  401244:	20019160 	.word	0x20019160
  401248:	20000a60 	.word	0x20000a60

0040124c <configure_usart_wifi>:
}


// Configuration of USART port used to communicate with the AMW136.
void configure_usart_wifi(void)
{
  40124c:	b530      	push	{r4, r5, lr}
  40124e:	b087      	sub	sp, #28
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  401250:	4d19      	ldr	r5, [pc, #100]	; (4012b8 <configure_usart_wifi+0x6c>)
  401252:	4629      	mov	r1, r5
  401254:	2005      	movs	r0, #5
  401256:	4c19      	ldr	r4, [pc, #100]	; (4012bc <configure_usart_wifi+0x70>)
  401258:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  40125a:	4629      	mov	r1, r5
  40125c:	2006      	movs	r0, #6
  40125e:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_CTS_IDX, PIN_USART0_CTS_FLAGS);
  401260:	4629      	mov	r1, r5
  401262:	2008      	movs	r0, #8
  401264:	47a0      	blx	r4
	
	static uint32_t ul_sysclk;
	const sam_usart_opt_t usart_console_settings = {
  401266:	466c      	mov	r4, sp
  401268:	4d15      	ldr	r5, [pc, #84]	; (4012c0 <configure_usart_wifi+0x74>)
  40126a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  40126c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  40126e:	e895 0003 	ldmia.w	r5, {r0, r1}
  401272:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};

	/* Get peripheral clock. */
	ul_sysclk = sysclk_get_peripheral_hz();
  401276:	4d13      	ldr	r5, [pc, #76]	; (4012c4 <configure_usart_wifi+0x78>)
  401278:	4b13      	ldr	r3, [pc, #76]	; (4012c8 <configure_usart_wifi+0x7c>)
  40127a:	602b      	str	r3, [r5, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40127c:	200e      	movs	r0, #14
  40127e:	4b13      	ldr	r3, [pc, #76]	; (4012cc <configure_usart_wifi+0x80>)
  401280:	4798      	blx	r3

	/* Enable peripheral clock. */
	sysclk_enable_peripheral_clock(WIFI_USART_ID);

	/* Configure USART. */
	usart_init_hw_handshaking(WIFI_USART, &usart_console_settings, ul_sysclk);
  401282:	4c13      	ldr	r4, [pc, #76]	; (4012d0 <configure_usart_wifi+0x84>)
  401284:	682a      	ldr	r2, [r5, #0]
  401286:	4669      	mov	r1, sp
  401288:	4620      	mov	r0, r4
  40128a:	4b12      	ldr	r3, [pc, #72]	; (4012d4 <configure_usart_wifi+0x88>)
  40128c:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  40128e:	f04f 31ff 	mov.w	r1, #4294967295
  401292:	4620      	mov	r0, r4
  401294:	4b10      	ldr	r3, [pc, #64]	; (4012d8 <configure_usart_wifi+0x8c>)
  401296:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  401298:	4620      	mov	r0, r4
  40129a:	4b10      	ldr	r3, [pc, #64]	; (4012dc <configure_usart_wifi+0x90>)
  40129c:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  40129e:	4620      	mov	r0, r4
  4012a0:	4b0f      	ldr	r3, [pc, #60]	; (4012e0 <configure_usart_wifi+0x94>)
  4012a2:	4798      	blx	r3
	
	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  4012a4:	2101      	movs	r1, #1
  4012a6:	4620      	mov	r0, r4
  4012a8:	4b0e      	ldr	r3, [pc, #56]	; (4012e4 <configure_usart_wifi+0x98>)
  4012aa:	4798      	blx	r3
  4012ac:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  4012b0:	4b0d      	ldr	r3, [pc, #52]	; (4012e8 <configure_usart_wifi+0x9c>)
  4012b2:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(WIFI_USART_IRQn);
}
  4012b4:	b007      	add	sp, #28
  4012b6:	bd30      	pop	{r4, r5, pc}
  4012b8:	08000001 	.word	0x08000001
  4012bc:	00400311 	.word	0x00400311
  4012c0:	0040744c 	.word	0x0040744c
  4012c4:	20000a6c 	.word	0x20000a6c
  4012c8:	07270e00 	.word	0x07270e00
  4012cc:	0040067d 	.word	0x0040067d
  4012d0:	40024000 	.word	0x40024000
  4012d4:	00400ab9 	.word	0x00400ab9
  4012d8:	00400aed 	.word	0x00400aed
  4012dc:	00400add 	.word	0x00400add
  4012e0:	00400ae3 	.word	0x00400ae3
  4012e4:	00400ae9 	.word	0x00400ae9
  4012e8:	e000e100 	.word	0xe000e100

004012ec <configure_wifi_comm_pin>:



// Configuration of "command complete" rising-edge interrupt.
void configure_wifi_comm_pin(void)
{
  4012ec:	b530      	push	{r4, r5, lr}
  4012ee:	b083      	sub	sp, #12
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  4012f0:	200c      	movs	r0, #12
  4012f2:	4b0b      	ldr	r3, [pc, #44]	; (401320 <configure_wifi_comm_pin+0x34>)
  4012f4:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_NUM, WIFI_COMM_ATTR, wifi_command_response_handler);
  4012f6:	4c0b      	ldr	r4, [pc, #44]	; (401324 <configure_wifi_comm_pin+0x38>)
  4012f8:	4b0b      	ldr	r3, [pc, #44]	; (401328 <configure_wifi_comm_pin+0x3c>)
  4012fa:	9300      	str	r3, [sp, #0]
  4012fc:	2371      	movs	r3, #113	; 0x71
  4012fe:	f44f 6280 	mov.w	r2, #1024	; 0x400
  401302:	210c      	movs	r1, #12
  401304:	4620      	mov	r0, r4
  401306:	4d09      	ldr	r5, [pc, #36]	; (40132c <configure_wifi_comm_pin+0x40>)
  401308:	47a8      	blx	r5
  40130a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  40130e:	4b08      	ldr	r3, [pc, #32]	; (401330 <configure_wifi_comm_pin+0x44>)
  401310:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_NUM);
  401312:	f44f 6180 	mov.w	r1, #1024	; 0x400
  401316:	4620      	mov	r0, r4
  401318:	4b06      	ldr	r3, [pc, #24]	; (401334 <configure_wifi_comm_pin+0x48>)
  40131a:	4798      	blx	r3
}
  40131c:	b003      	add	sp, #12
  40131e:	bd30      	pop	{r4, r5, pc}
  401320:	0040067d 	.word	0x0040067d
  401324:	400e1000 	.word	0x400e1000
  401328:	00401219 	.word	0x00401219
  40132c:	004004c9 	.word	0x004004c9
  401330:	e000e100 	.word	0xe000e100
  401334:	004002cd 	.word	0x004002cd

00401338 <write_wifi_command>:


/* Writes a command (comm) to the AMW136, and waits either for an acknowledgment or a timeout. The timeout can be created by setting the global variable "counts" to zero, 
which will automatically increment every second, and waiting while counts < cnt */
void write_wifi_command(char* comm, uint8_t cnt)
{
  401338:	b510      	push	{r4, lr}
  40133a:	460c      	mov	r4, r1
	usart_write_line(WIFI_USART, comm);
  40133c:	4601      	mov	r1, r0
  40133e:	480a      	ldr	r0, [pc, #40]	; (401368 <write_wifi_command+0x30>)
  401340:	4b0a      	ldr	r3, [pc, #40]	; (40136c <write_wifi_command+0x34>)
  401342:	4798      	blx	r3
	counts = 0;
  401344:	2200      	movs	r2, #0
  401346:	4b0a      	ldr	r3, [pc, #40]	; (401370 <write_wifi_command+0x38>)
  401348:	701a      	strb	r2, [r3, #0]
	while (counts < cnt)
  40134a:	461a      	mov	r2, r3
	{
		if(wifi_comm_success)						// if wifi_comm_success is true
  40134c:	4909      	ldr	r1, [pc, #36]	; (401374 <write_wifi_command+0x3c>)
	while (counts < cnt)
  40134e:	7813      	ldrb	r3, [r2, #0]
  401350:	b2db      	uxtb	r3, r3
  401352:	42a3      	cmp	r3, r4
  401354:	d206      	bcs.n	401364 <write_wifi_command+0x2c>
		if(wifi_comm_success)						// if wifi_comm_success is true
  401356:	780b      	ldrb	r3, [r1, #0]
  401358:	2b00      	cmp	r3, #0
  40135a:	d0f8      	beq.n	40134e <write_wifi_command+0x16>
		{
			wifi_comm_success = false;				// reset the flag
  40135c:	2200      	movs	r2, #0
  40135e:	4b05      	ldr	r3, [pc, #20]	; (401374 <write_wifi_command+0x3c>)
  401360:	701a      	strb	r2, [r3, #0]
			break;									// get out of the loop
  401362:	bd10      	pop	{r4, pc}
  401364:	bd10      	pop	{r4, pc}
  401366:	bf00      	nop
  401368:	40024000 	.word	0x40024000
  40136c:	00400b09 	.word	0x00400b09
  401370:	2001915c 	.word	0x2001915c
  401374:	20000a74 	.word	0x20000a74

00401378 <configure_wifi_web_setup_pin>:
{
  401378:	b530      	push	{r4, r5, lr}
  40137a:	b083      	sub	sp, #12
	pmc_enable_periph_clk(WIFI_SETUP_ID);
  40137c:	200c      	movs	r0, #12
  40137e:	4b0f      	ldr	r3, [pc, #60]	; (4013bc <configure_wifi_web_setup_pin+0x44>)
  401380:	4798      	blx	r3
	pio_set_debounce_filter(WIFI_SETUP_PIO, WIFI_SETUP_PIN, 10);     // give a shot
  401382:	4c0f      	ldr	r4, [pc, #60]	; (4013c0 <configure_wifi_web_setup_pin+0x48>)
  401384:	220a      	movs	r2, #10
  401386:	2121      	movs	r1, #33	; 0x21
  401388:	4620      	mov	r0, r4
  40138a:	4b0e      	ldr	r3, [pc, #56]	; (4013c4 <configure_wifi_web_setup_pin+0x4c>)
  40138c:	4798      	blx	r3
	pio_handler_set(WIFI_SETUP_PIO, WIFI_SETUP_ID, WIFI_SETUP_PIN_NUM, WIFI_SETUP_ATTR, wifi_web_setup_handler);
  40138e:	4b0e      	ldr	r3, [pc, #56]	; (4013c8 <configure_wifi_web_setup_pin+0x50>)
  401390:	9300      	str	r3, [sp, #0]
  401392:	2359      	movs	r3, #89	; 0x59
  401394:	2202      	movs	r2, #2
  401396:	210c      	movs	r1, #12
  401398:	4620      	mov	r0, r4
  40139a:	4d0c      	ldr	r5, [pc, #48]	; (4013cc <configure_wifi_web_setup_pin+0x54>)
  40139c:	47a8      	blx	r5
  40139e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  4013a2:	4b0b      	ldr	r3, [pc, #44]	; (4013d0 <configure_wifi_web_setup_pin+0x58>)
  4013a4:	601a      	str	r2, [r3, #0]
	pio_enable_interrupt(WIFI_SETUP_PIO, WIFI_SETUP_PIN_NUM);
  4013a6:	2102      	movs	r1, #2
  4013a8:	4620      	mov	r0, r4
  4013aa:	4b0a      	ldr	r3, [pc, #40]	; (4013d4 <configure_wifi_web_setup_pin+0x5c>)
  4013ac:	4798      	blx	r3
	write_wifi_command("web setup mode initiated\r\n", 3);
  4013ae:	2103      	movs	r1, #3
  4013b0:	4809      	ldr	r0, [pc, #36]	; (4013d8 <configure_wifi_web_setup_pin+0x60>)
  4013b2:	4b0a      	ldr	r3, [pc, #40]	; (4013dc <configure_wifi_web_setup_pin+0x64>)
  4013b4:	4798      	blx	r3
}
  4013b6:	b003      	add	sp, #12
  4013b8:	bd30      	pop	{r4, r5, pc}
  4013ba:	bf00      	nop
  4013bc:	0040067d 	.word	0x0040067d
  4013c0:	400e1000 	.word	0x400e1000
  4013c4:	0040019d 	.word	0x0040019d
  4013c8:	0040110d 	.word	0x0040110d
  4013cc:	004004c9 	.word	0x004004c9
  4013d0:	e000e100 	.word	0xe000e100
  4013d4:	004002cd 	.word	0x004002cd
  4013d8:	00407464 	.word	0x00407464
  4013dc:	00401339 	.word	0x00401339

004013e0 <write_image_to_file>:
		


// Writes an image from SAM4s8B to the AMW136. If the length of the image is zero (i.e.. the image is not valid), return. Otherwise, follow the protocol
void write_image_to_file(void)
{
  4013e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  4013e2:	f5ad 7d7b 	sub.w	sp, sp, #1004	; 0x3ec
	image_available = find_image_len();
  4013e6:	4b1a      	ldr	r3, [pc, #104]	; (401450 <write_image_to_file+0x70>)
  4013e8:	4798      	blx	r3
  4013ea:	4b1a      	ldr	r3, [pc, #104]	; (401454 <write_image_to_file+0x74>)
  4013ec:	7018      	strb	r0, [r3, #0]
	img_length = end_point - start_point;
  4013ee:	4b1a      	ldr	r3, [pc, #104]	; (401458 <write_image_to_file+0x78>)
  4013f0:	681a      	ldr	r2, [r3, #0]
  4013f2:	4b1a      	ldr	r3, [pc, #104]	; (40145c <write_image_to_file+0x7c>)
  4013f4:	681b      	ldr	r3, [r3, #0]
  4013f6:	1ad2      	subs	r2, r2, r3
  4013f8:	4b19      	ldr	r3, [pc, #100]	; (401460 <write_image_to_file+0x80>)
  4013fa:	601a      	str	r2, [r3, #0]
	
	if (image_available == 0) {
  4013fc:	b910      	cbnz	r0, 401404 <write_image_to_file+0x24>
		}
		image_transfer_flag = false;						// reset the flag after data transfer
		delay_ms(50);										// slight delay according to the step
	}		
	
}
  4013fe:	f50d 7d7b 	add.w	sp, sp, #1004	; 0x3ec
  401402:	bdf0      	pop	{r4, r5, r6, r7, pc}
		sprintf(img_array, "image_transfer %d\r\n", img_length);
  401404:	4917      	ldr	r1, [pc, #92]	; (401464 <write_image_to_file+0x84>)
  401406:	4668      	mov	r0, sp
  401408:	4b17      	ldr	r3, [pc, #92]	; (401468 <write_image_to_file+0x88>)
  40140a:	4798      	blx	r3
		write_wifi_command(img_array, 3);				// write command to the AMW136
  40140c:	2103      	movs	r1, #3
  40140e:	4668      	mov	r0, sp
  401410:	4b16      	ldr	r3, [pc, #88]	; (40146c <write_image_to_file+0x8c>)
  401412:	4798      	blx	r3
		if(!image_transfer_flag) {						// if image is not passed, don't finish it
  401414:	4b16      	ldr	r3, [pc, #88]	; (401470 <write_image_to_file+0x90>)
  401416:	781b      	ldrb	r3, [r3, #0]
  401418:	2b00      	cmp	r3, #0
  40141a:	d0f0      	beq.n	4013fe <write_image_to_file+0x1e>
		for (uint32_t i = start_point; i <= end_point + 1; i++) {
  40141c:	4b0f      	ldr	r3, [pc, #60]	; (40145c <write_image_to_file+0x7c>)
  40141e:	681c      	ldr	r4, [r3, #0]
  401420:	4b0d      	ldr	r3, [pc, #52]	; (401458 <write_image_to_file+0x78>)
  401422:	681b      	ldr	r3, [r3, #0]
  401424:	3301      	adds	r3, #1
  401426:	429c      	cmp	r4, r3
  401428:	d80b      	bhi.n	401442 <write_image_to_file+0x62>
				usart_putchar(WIFI_USART, image_buffer[i]);
  40142a:	4f12      	ldr	r7, [pc, #72]	; (401474 <write_image_to_file+0x94>)
  40142c:	4e12      	ldr	r6, [pc, #72]	; (401478 <write_image_to_file+0x98>)
  40142e:	4d13      	ldr	r5, [pc, #76]	; (40147c <write_image_to_file+0x9c>)
  401430:	5d39      	ldrb	r1, [r7, r4]
  401432:	4630      	mov	r0, r6
  401434:	47a8      	blx	r5
		for (uint32_t i = start_point; i <= end_point + 1; i++) {
  401436:	3401      	adds	r4, #1
  401438:	4b07      	ldr	r3, [pc, #28]	; (401458 <write_image_to_file+0x78>)
  40143a:	681b      	ldr	r3, [r3, #0]
  40143c:	3301      	adds	r3, #1
  40143e:	42a3      	cmp	r3, r4
  401440:	d2f6      	bcs.n	401430 <write_image_to_file+0x50>
		image_transfer_flag = false;						// reset the flag after data transfer
  401442:	2200      	movs	r2, #0
  401444:	4b0a      	ldr	r3, [pc, #40]	; (401470 <write_image_to_file+0x90>)
  401446:	701a      	strb	r2, [r3, #0]
		delay_ms(50);										// slight delay according to the step
  401448:	480d      	ldr	r0, [pc, #52]	; (401480 <write_image_to_file+0xa0>)
  40144a:	4b0e      	ldr	r3, [pc, #56]	; (401484 <write_image_to_file+0xa4>)
  40144c:	4798      	blx	r3
  40144e:	e7d6      	b.n	4013fe <write_image_to_file+0x1e>
  401450:	00400d01 	.word	0x00400d01
  401454:	2001954c 	.word	0x2001954c
  401458:	20000ab8 	.word	0x20000ab8
  40145c:	20000ab4 	.word	0x20000ab4
  401460:	20019548 	.word	0x20019548
  401464:	004074dc 	.word	0x004074dc
  401468:	00401a11 	.word	0x00401a11
  40146c:	00401339 	.word	0x00401339
  401470:	20000a5c 	.word	0x20000a5c
  401474:	20000abc 	.word	0x20000abc
  401478:	40024000 	.word	0x40024000
  40147c:	00400af5 	.word	0x00400af5
  401480:	00068a1c 	.word	0x00068a1c
  401484:	20000001 	.word	0x20000001

00401488 <board_init>:
#include <board.h>
#include <conf_board.h>
#include "camera.h"

void board_init(void)
{
  401488:	b538      	push	{r3, r4, r5, lr}
  40148a:	200b      	movs	r0, #11
  40148c:	4c28      	ldr	r4, [pc, #160]	; (401530 <board_init+0xa8>)
  40148e:	47a0      	blx	r4
  401490:	200c      	movs	r0, #12
  401492:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401494:	4a27      	ldr	r2, [pc, #156]	; (401534 <board_init+0xac>)
  401496:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  40149a:	6113      	str	r3, [r2, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40149c:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4014a0:	6313      	str	r3, [r2, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4014a2:	4b25      	ldr	r3, [pc, #148]	; (401538 <board_init+0xb0>)
  4014a4:	2108      	movs	r1, #8
  4014a6:	6119      	str	r1, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4014a8:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4014ac:	6359      	str	r1, [r3, #52]	; 0x34
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4014ae:	f44f 6180 	mov.w	r1, #1024	; 0x400
  4014b2:	6159      	str	r1, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4014b4:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4014b8:	6319      	str	r1, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4014ba:	2102      	movs	r1, #2
  4014bc:	6159      	str	r1, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4014be:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4014c2:	6319      	str	r1, [r3, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4014c4:	2380      	movs	r3, #128	; 0x80
  4014c6:	6113      	str	r3, [r2, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4014c8:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4014cc:	6353      	str	r3, [r2, #52]	; 0x34
	ioport_set_pin_level(WIFI_CTS_PIN, false);
	
	
	
	
	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);				// configure TWI clock
  4014ce:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4014d2:	2004      	movs	r0, #4
  4014d4:	4c19      	ldr	r4, [pc, #100]	; (40153c <board_init+0xb4>)
  4014d6:	47a0      	blx	r4
	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);			// configure TWI data pin
  4014d8:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4014dc:	2003      	movs	r0, #3
  4014de:	47a0      	blx	r4
	
	
	gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
  4014e0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4014e4:	2011      	movs	r0, #17
  4014e6:	47a0      	blx	r4
	
	
	// configure reset
	gpio_configure_pin(OV_RST_GPIO, OV_RST_FLAGS);
  4014e8:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4014ec:	2014      	movs	r0, #20
  4014ee:	47a0      	blx	r4
	
		
	// configure HSYNC and VSYNC
	gpio_configure_pin(HSYNC_GPIO, HSYNC_FLAGS);
  4014f0:	2171      	movs	r1, #113	; 0x71
  4014f2:	2010      	movs	r0, #16
  4014f4:	47a0      	blx	r4
	gpio_configure_pin(VSYNC_GPIO, VSYNC_FLAGS);
  4014f6:	2171      	movs	r1, #113	; 0x71
  4014f8:	200f      	movs	r0, #15
  4014fa:	47a0      	blx	r4
	
	// configure DATA pins
	gpio_configure_pin(OV_DATA_BUS_D0, OV_DATA_BUS_FLAGS);
  4014fc:	4d10      	ldr	r5, [pc, #64]	; (401540 <board_init+0xb8>)
  4014fe:	4629      	mov	r1, r5
  401500:	2018      	movs	r0, #24
  401502:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D1, OV_DATA_BUS_FLAGS);
  401504:	4629      	mov	r1, r5
  401506:	2019      	movs	r0, #25
  401508:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D2, OV_DATA_BUS_FLAGS);
  40150a:	4629      	mov	r1, r5
  40150c:	201a      	movs	r0, #26
  40150e:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D3, OV_DATA_BUS_FLAGS);
  401510:	4629      	mov	r1, r5
  401512:	201b      	movs	r0, #27
  401514:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D4, OV_DATA_BUS_FLAGS);
  401516:	4629      	mov	r1, r5
  401518:	201c      	movs	r0, #28
  40151a:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D5, OV_DATA_BUS_FLAGS);
  40151c:	4629      	mov	r1, r5
  40151e:	201d      	movs	r0, #29
  401520:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
  401522:	4629      	mov	r1, r5
  401524:	201e      	movs	r0, #30
  401526:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
  401528:	4629      	mov	r1, r5
  40152a:	201f      	movs	r0, #31
  40152c:	47a0      	blx	r4
  40152e:	bd38      	pop	{r3, r4, r5, pc}
  401530:	0040067d 	.word	0x0040067d
  401534:	400e0e00 	.word	0x400e0e00
  401538:	400e1000 	.word	0x400e1000
  40153c:	00400311 	.word	0x00400311
  401540:	28000001 	.word	0x28000001

00401544 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401544:	e7fe      	b.n	401544 <Dummy_Handler>
	...

00401548 <Reset_Handler>:
{
  401548:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  40154a:	4b21      	ldr	r3, [pc, #132]	; (4015d0 <Reset_Handler+0x88>)
  40154c:	4a21      	ldr	r2, [pc, #132]	; (4015d4 <Reset_Handler+0x8c>)
  40154e:	429a      	cmp	r2, r3
  401550:	d928      	bls.n	4015a4 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  401552:	4b21      	ldr	r3, [pc, #132]	; (4015d8 <Reset_Handler+0x90>)
  401554:	4a1e      	ldr	r2, [pc, #120]	; (4015d0 <Reset_Handler+0x88>)
  401556:	429a      	cmp	r2, r3
  401558:	d20c      	bcs.n	401574 <Reset_Handler+0x2c>
  40155a:	3b01      	subs	r3, #1
  40155c:	1a9b      	subs	r3, r3, r2
  40155e:	f023 0303 	bic.w	r3, r3, #3
  401562:	3304      	adds	r3, #4
  401564:	4413      	add	r3, r2
  401566:	491b      	ldr	r1, [pc, #108]	; (4015d4 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  401568:	f851 0b04 	ldr.w	r0, [r1], #4
  40156c:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  401570:	429a      	cmp	r2, r3
  401572:	d1f9      	bne.n	401568 <Reset_Handler+0x20>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  401574:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  401576:	4b19      	ldr	r3, [pc, #100]	; (4015dc <Reset_Handler+0x94>)
  401578:	4a19      	ldr	r2, [pc, #100]	; (4015e0 <Reset_Handler+0x98>)
  40157a:	429a      	cmp	r2, r3
  40157c:	d20a      	bcs.n	401594 <Reset_Handler+0x4c>
  40157e:	3b01      	subs	r3, #1
  401580:	1a9b      	subs	r3, r3, r2
  401582:	f023 0303 	bic.w	r3, r3, #3
  401586:	3304      	adds	r3, #4
  401588:	4413      	add	r3, r2
		*pDest++ = 0;
  40158a:	2100      	movs	r1, #0
  40158c:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  401590:	429a      	cmp	r2, r3
  401592:	d1fb      	bne.n	40158c <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  401594:	4b13      	ldr	r3, [pc, #76]	; (4015e4 <Reset_Handler+0x9c>)
  401596:	4a14      	ldr	r2, [pc, #80]	; (4015e8 <Reset_Handler+0xa0>)
  401598:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  40159a:	4b14      	ldr	r3, [pc, #80]	; (4015ec <Reset_Handler+0xa4>)
  40159c:	4798      	blx	r3
	main();
  40159e:	4b14      	ldr	r3, [pc, #80]	; (4015f0 <Reset_Handler+0xa8>)
  4015a0:	4798      	blx	r3
  4015a2:	e7fe      	b.n	4015a2 <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  4015a4:	4b0a      	ldr	r3, [pc, #40]	; (4015d0 <Reset_Handler+0x88>)
  4015a6:	4a0b      	ldr	r2, [pc, #44]	; (4015d4 <Reset_Handler+0x8c>)
  4015a8:	429a      	cmp	r2, r3
  4015aa:	d2e3      	bcs.n	401574 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4015ac:	4b0a      	ldr	r3, [pc, #40]	; (4015d8 <Reset_Handler+0x90>)
  4015ae:	4808      	ldr	r0, [pc, #32]	; (4015d0 <Reset_Handler+0x88>)
  4015b0:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4015b2:	4611      	mov	r1, r2
  4015b4:	3a04      	subs	r2, #4
  4015b6:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  4015b8:	2800      	cmp	r0, #0
  4015ba:	d0db      	beq.n	401574 <Reset_Handler+0x2c>
  4015bc:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  4015c0:	f852 0904 	ldr.w	r0, [r2], #-4
  4015c4:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  4015c8:	42ca      	cmn	r2, r1
  4015ca:	d1f9      	bne.n	4015c0 <Reset_Handler+0x78>
  4015cc:	e7d2      	b.n	401574 <Reset_Handler+0x2c>
  4015ce:	bf00      	nop
  4015d0:	20000000 	.word	0x20000000
  4015d4:	004077ec 	.word	0x004077ec
  4015d8:	200009c0 	.word	0x200009c0
  4015dc:	20019578 	.word	0x20019578
  4015e0:	200009c0 	.word	0x200009c0
  4015e4:	e000ed00 	.word	0xe000ed00
  4015e8:	00400000 	.word	0x00400000
  4015ec:	00401925 	.word	0x00401925
  4015f0:	004017b1 	.word	0x004017b1

004015f4 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4015f4:	4b3c      	ldr	r3, [pc, #240]	; (4016e8 <SystemCoreClockUpdate+0xf4>)
  4015f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4015f8:	f003 0303 	and.w	r3, r3, #3
  4015fc:	2b03      	cmp	r3, #3
  4015fe:	d80e      	bhi.n	40161e <SystemCoreClockUpdate+0x2a>
  401600:	e8df f003 	tbb	[pc, r3]
  401604:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  401608:	4b38      	ldr	r3, [pc, #224]	; (4016ec <SystemCoreClockUpdate+0xf8>)
  40160a:	695b      	ldr	r3, [r3, #20]
  40160c:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401610:	bf14      	ite	ne
  401612:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401616:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40161a:	4b35      	ldr	r3, [pc, #212]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  40161c:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  40161e:	4b32      	ldr	r3, [pc, #200]	; (4016e8 <SystemCoreClockUpdate+0xf4>)
  401620:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401622:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401626:	2b70      	cmp	r3, #112	; 0x70
  401628:	d055      	beq.n	4016d6 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40162a:	4b2f      	ldr	r3, [pc, #188]	; (4016e8 <SystemCoreClockUpdate+0xf4>)
  40162c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  40162e:	4930      	ldr	r1, [pc, #192]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401630:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  401634:	680b      	ldr	r3, [r1, #0]
  401636:	40d3      	lsrs	r3, r2
  401638:	600b      	str	r3, [r1, #0]
  40163a:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  40163c:	4b2a      	ldr	r3, [pc, #168]	; (4016e8 <SystemCoreClockUpdate+0xf4>)
  40163e:	6a1b      	ldr	r3, [r3, #32]
  401640:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401644:	d003      	beq.n	40164e <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  401646:	4a2b      	ldr	r2, [pc, #172]	; (4016f4 <SystemCoreClockUpdate+0x100>)
  401648:	4b29      	ldr	r3, [pc, #164]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  40164a:	601a      	str	r2, [r3, #0]
  40164c:	e7e7      	b.n	40161e <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40164e:	4a2a      	ldr	r2, [pc, #168]	; (4016f8 <SystemCoreClockUpdate+0x104>)
  401650:	4b27      	ldr	r3, [pc, #156]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  401652:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401654:	4b24      	ldr	r3, [pc, #144]	; (4016e8 <SystemCoreClockUpdate+0xf4>)
  401656:	6a1b      	ldr	r3, [r3, #32]
  401658:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40165c:	2b10      	cmp	r3, #16
  40165e:	d005      	beq.n	40166c <SystemCoreClockUpdate+0x78>
  401660:	2b20      	cmp	r3, #32
  401662:	d1dc      	bne.n	40161e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401664:	4a23      	ldr	r2, [pc, #140]	; (4016f4 <SystemCoreClockUpdate+0x100>)
  401666:	4b22      	ldr	r3, [pc, #136]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  401668:	601a      	str	r2, [r3, #0]
			break;
  40166a:	e7d8      	b.n	40161e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40166c:	4a23      	ldr	r2, [pc, #140]	; (4016fc <SystemCoreClockUpdate+0x108>)
  40166e:	4b20      	ldr	r3, [pc, #128]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  401670:	601a      	str	r2, [r3, #0]
			break;
  401672:	e7d4      	b.n	40161e <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401674:	4b1c      	ldr	r3, [pc, #112]	; (4016e8 <SystemCoreClockUpdate+0xf4>)
  401676:	6a1b      	ldr	r3, [r3, #32]
  401678:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40167c:	d018      	beq.n	4016b0 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  40167e:	4a1d      	ldr	r2, [pc, #116]	; (4016f4 <SystemCoreClockUpdate+0x100>)
  401680:	4b1b      	ldr	r3, [pc, #108]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  401682:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  401684:	4b18      	ldr	r3, [pc, #96]	; (4016e8 <SystemCoreClockUpdate+0xf4>)
  401686:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401688:	f003 0303 	and.w	r3, r3, #3
  40168c:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40168e:	4a16      	ldr	r2, [pc, #88]	; (4016e8 <SystemCoreClockUpdate+0xf4>)
  401690:	bf07      	ittee	eq
  401692:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  401694:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401696:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401698:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  40169a:	4815      	ldr	r0, [pc, #84]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  40169c:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4016a0:	6803      	ldr	r3, [r0, #0]
  4016a2:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  4016a6:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4016a8:	fbb3 f3f2 	udiv	r3, r3, r2
  4016ac:	6003      	str	r3, [r0, #0]
  4016ae:	e7b6      	b.n	40161e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4016b0:	4a11      	ldr	r2, [pc, #68]	; (4016f8 <SystemCoreClockUpdate+0x104>)
  4016b2:	4b0f      	ldr	r3, [pc, #60]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  4016b4:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4016b6:	4b0c      	ldr	r3, [pc, #48]	; (4016e8 <SystemCoreClockUpdate+0xf4>)
  4016b8:	6a1b      	ldr	r3, [r3, #32]
  4016ba:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4016be:	2b10      	cmp	r3, #16
  4016c0:	d005      	beq.n	4016ce <SystemCoreClockUpdate+0xda>
  4016c2:	2b20      	cmp	r3, #32
  4016c4:	d1de      	bne.n	401684 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4016c6:	4a0b      	ldr	r2, [pc, #44]	; (4016f4 <SystemCoreClockUpdate+0x100>)
  4016c8:	4b09      	ldr	r3, [pc, #36]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  4016ca:	601a      	str	r2, [r3, #0]
					break;
  4016cc:	e7da      	b.n	401684 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4016ce:	4a0b      	ldr	r2, [pc, #44]	; (4016fc <SystemCoreClockUpdate+0x108>)
  4016d0:	4b07      	ldr	r3, [pc, #28]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  4016d2:	601a      	str	r2, [r3, #0]
					break;
  4016d4:	e7d6      	b.n	401684 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  4016d6:	4a06      	ldr	r2, [pc, #24]	; (4016f0 <SystemCoreClockUpdate+0xfc>)
  4016d8:	6813      	ldr	r3, [r2, #0]
  4016da:	4909      	ldr	r1, [pc, #36]	; (401700 <SystemCoreClockUpdate+0x10c>)
  4016dc:	fba1 1303 	umull	r1, r3, r1, r3
  4016e0:	085b      	lsrs	r3, r3, #1
  4016e2:	6013      	str	r3, [r2, #0]
  4016e4:	4770      	bx	lr
  4016e6:	bf00      	nop
  4016e8:	400e0400 	.word	0x400e0400
  4016ec:	400e1410 	.word	0x400e1410
  4016f0:	2000000c 	.word	0x2000000c
  4016f4:	00b71b00 	.word	0x00b71b00
  4016f8:	003d0900 	.word	0x003d0900
  4016fc:	007a1200 	.word	0x007a1200
  401700:	aaaaaaab 	.word	0xaaaaaaab

00401704 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  401704:	4b12      	ldr	r3, [pc, #72]	; (401750 <system_init_flash+0x4c>)
  401706:	4298      	cmp	r0, r3
  401708:	d911      	bls.n	40172e <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  40170a:	4b12      	ldr	r3, [pc, #72]	; (401754 <system_init_flash+0x50>)
  40170c:	4298      	cmp	r0, r3
  40170e:	d913      	bls.n	401738 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  401710:	4b11      	ldr	r3, [pc, #68]	; (401758 <system_init_flash+0x54>)
  401712:	4298      	cmp	r0, r3
  401714:	d914      	bls.n	401740 <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  401716:	4b11      	ldr	r3, [pc, #68]	; (40175c <system_init_flash+0x58>)
  401718:	4298      	cmp	r0, r3
  40171a:	d915      	bls.n	401748 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  40171c:	4b10      	ldr	r3, [pc, #64]	; (401760 <system_init_flash+0x5c>)
  40171e:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401720:	bf94      	ite	ls
  401722:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401726:	4a0f      	ldrhi	r2, [pc, #60]	; (401764 <system_init_flash+0x60>)
  401728:	4b0f      	ldr	r3, [pc, #60]	; (401768 <system_init_flash+0x64>)
  40172a:	601a      	str	r2, [r3, #0]
  40172c:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40172e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401732:	4b0d      	ldr	r3, [pc, #52]	; (401768 <system_init_flash+0x64>)
  401734:	601a      	str	r2, [r3, #0]
  401736:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401738:	4a0c      	ldr	r2, [pc, #48]	; (40176c <system_init_flash+0x68>)
  40173a:	4b0b      	ldr	r3, [pc, #44]	; (401768 <system_init_flash+0x64>)
  40173c:	601a      	str	r2, [r3, #0]
  40173e:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401740:	4a0b      	ldr	r2, [pc, #44]	; (401770 <system_init_flash+0x6c>)
  401742:	4b09      	ldr	r3, [pc, #36]	; (401768 <system_init_flash+0x64>)
  401744:	601a      	str	r2, [r3, #0]
  401746:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401748:	4a0a      	ldr	r2, [pc, #40]	; (401774 <system_init_flash+0x70>)
  40174a:	4b07      	ldr	r3, [pc, #28]	; (401768 <system_init_flash+0x64>)
  40174c:	601a      	str	r2, [r3, #0]
  40174e:	4770      	bx	lr
  401750:	01312cff 	.word	0x01312cff
  401754:	026259ff 	.word	0x026259ff
  401758:	039386ff 	.word	0x039386ff
  40175c:	04c4b3ff 	.word	0x04c4b3ff
  401760:	05f5e0ff 	.word	0x05f5e0ff
  401764:	04000500 	.word	0x04000500
  401768:	400e0a00 	.word	0x400e0a00
  40176c:	04000100 	.word	0x04000100
  401770:	04000200 	.word	0x04000200
  401774:	04000300 	.word	0x04000300

00401778 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401778:	4b0a      	ldr	r3, [pc, #40]	; (4017a4 <_sbrk+0x2c>)
  40177a:	681b      	ldr	r3, [r3, #0]
  40177c:	b153      	cbz	r3, 401794 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40177e:	4b09      	ldr	r3, [pc, #36]	; (4017a4 <_sbrk+0x2c>)
  401780:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401782:	181a      	adds	r2, r3, r0
  401784:	4908      	ldr	r1, [pc, #32]	; (4017a8 <_sbrk+0x30>)
  401786:	4291      	cmp	r1, r2
  401788:	db08      	blt.n	40179c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40178a:	4610      	mov	r0, r2
  40178c:	4a05      	ldr	r2, [pc, #20]	; (4017a4 <_sbrk+0x2c>)
  40178e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401790:	4618      	mov	r0, r3
  401792:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401794:	4a05      	ldr	r2, [pc, #20]	; (4017ac <_sbrk+0x34>)
  401796:	4b03      	ldr	r3, [pc, #12]	; (4017a4 <_sbrk+0x2c>)
  401798:	601a      	str	r2, [r3, #0]
  40179a:	e7f0      	b.n	40177e <_sbrk+0x6>
		return (caddr_t) -1;	
  40179c:	f04f 30ff 	mov.w	r0, #4294967295
}
  4017a0:	4770      	bx	lr
  4017a2:	bf00      	nop
  4017a4:	20000a78 	.word	0x20000a78
  4017a8:	2001fffc 	.word	0x2001fffc
  4017ac:	2001c578 	.word	0x2001c578

004017b0 <main>:
#include "timer_interface.h"



int main (void)
{
  4017b0:	b580      	push	{r7, lr}
	/* Insert system clock initialization code here (sysclk_init()). */

	sysclk_init();
  4017b2:	4b3d      	ldr	r3, [pc, #244]	; (4018a8 <main+0xf8>)
  4017b4:	4798      	blx	r3
	wdt_disable(WDT);
  4017b6:	483d      	ldr	r0, [pc, #244]	; (4018ac <main+0xfc>)
  4017b8:	4b3d      	ldr	r3, [pc, #244]	; (4018b0 <main+0x100>)
  4017ba:	4798      	blx	r3
	board_init();
  4017bc:	4b3d      	ldr	r3, [pc, #244]	; (4018b4 <main+0x104>)
  4017be:	4798      	blx	r3
	
	wifi_status = false;
  4017c0:	2300      	movs	r3, #0
  4017c2:	4a3d      	ldr	r2, [pc, #244]	; (4018b8 <main+0x108>)
  4017c4:	7013      	strb	r3, [r2, #0]
	wifi_websocket_flag = false;
  4017c6:	4a3d      	ldr	r2, [pc, #244]	; (4018bc <main+0x10c>)
  4017c8:	7013      	strb	r3, [r2, #0]
	wifi_comm_success = false;
  4017ca:	4a3d      	ldr	r2, [pc, #244]	; (4018c0 <main+0x110>)
  4017cc:	7013      	strb	r3, [r2, #0]
	image_transfer_flag = false;
  4017ce:	4a3d      	ldr	r2, [pc, #244]	; (4018c4 <main+0x114>)
  4017d0:	7013      	strb	r3, [r2, #0]
	web_setup_flag = false;
  4017d2:	4a3d      	ldr	r2, [pc, #244]	; (4018c8 <main+0x118>)
  4017d4:	6013      	str	r3, [r2, #0]
	
	configure_tc();						// Configuring the timer from timer_interface
  4017d6:	4b3d      	ldr	r3, [pc, #244]	; (4018cc <main+0x11c>)
  4017d8:	4798      	blx	r3
	
	configure_usart_wifi();				// Configuring WIFI USART
  4017da:	4b3d      	ldr	r3, [pc, #244]	; (4018d0 <main+0x120>)
  4017dc:	4798      	blx	r3
	configure_wifi_comm_pin();			// Configuring WIFI command pin
  4017de:	4b3d      	ldr	r3, [pc, #244]	; (4018d4 <main+0x124>)
  4017e0:	4798      	blx	r3
	configure_wifi_web_setup_pin();     // Configuring WIFI web setup pin
  4017e2:	4b3d      	ldr	r3, [pc, #244]	; (4018d8 <main+0x128>)
  4017e4:	4798      	blx	r3
	
	// Hard reset the wifi chip. Free "connected-to-mcu" GPIOs are PB4, PB3, PA11, 
	gpio_set_pin_low(WIFI_RESET_PIN);   // Pulling the pin low, hard resetting
  4017e6:	2023      	movs	r0, #35	; 0x23
  4017e8:	4b3c      	ldr	r3, [pc, #240]	; (4018dc <main+0x12c>)
  4017ea:	4798      	blx	r3
	delay_ms(100);                      // Delaying for 100 ms, as instructed
  4017ec:	483c      	ldr	r0, [pc, #240]	; (4018e0 <main+0x130>)
  4017ee:	4b3d      	ldr	r3, [pc, #244]	; (4018e4 <main+0x134>)
  4017f0:	4798      	blx	r3
	gpio_set_pin_high(WIFI_RESET_PIN);  // Pulling the pin high
  4017f2:	2023      	movs	r0, #35	; 0x23
  4017f4:	4b3c      	ldr	r3, [pc, #240]	; (4018e8 <main+0x138>)
  4017f6:	4798      	blx	r3
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  4017f8:	4d3c      	ldr	r5, [pc, #240]	; (4018ec <main+0x13c>)


	while(!ioport_get_pin_level(WIFI_STATUS_PIN)) {
		if (web_setup_flag == true)
  4017fa:	4c33      	ldr	r4, [pc, #204]	; (4018c8 <main+0x118>)
	while(!ioport_get_pin_level(WIFI_STATUS_PIN)) {
  4017fc:	e002      	b.n	401804 <main+0x54>
		if (web_setup_flag == true)
  4017fe:	6823      	ldr	r3, [r4, #0]
  401800:	2b01      	cmp	r3, #1
  401802:	d013      	beq.n	40182c <main+0x7c>
  401804:	6beb      	ldr	r3, [r5, #60]	; 0x3c
	while(!ioport_get_pin_level(WIFI_STATUS_PIN)) {
  401806:	f013 0f04 	tst.w	r3, #4
  40180a:	d0f8      	beq.n	4017fe <main+0x4e>
	}
	

	
	// Initialize the camera
	init_camera();
  40180c:	4b38      	ldr	r3, [pc, #224]	; (4018f0 <main+0x140>)
  40180e:	4798      	blx	r3
	
	
	// Configure the camera
	configure_camera();
  401810:	4b38      	ldr	r3, [pc, #224]	; (4018f4 <main+0x144>)
  401812:	4798      	blx	r3

// 	write_wifi_command("set sy c p off\r\n", 3);					// Telling the wifi chip to turn off the command prompt
// 	write_wifi_command("set sy c e off\r\n", 3);					// Telling the wifi chip to turn off the echo
	
		write_wifi_command("set sy c p on\r\n", 3);					// Telling the wifi chip to turn off the command prompt
  401814:	2103      	movs	r1, #3
  401816:	4838      	ldr	r0, [pc, #224]	; (4018f8 <main+0x148>)
  401818:	4c38      	ldr	r4, [pc, #224]	; (4018fc <main+0x14c>)
  40181a:	47a0      	blx	r4
		write_wifi_command("set sy c e on\r\n", 3);					// Telling the wifi chip to turn off the echo
  40181c:	2103      	movs	r1, #3
  40181e:	4838      	ldr	r0, [pc, #224]	; (401900 <main+0x150>)
  401820:	47a0      	blx	r4
	
	while(1)
	{
		if (web_setup_flag) {
  401822:	4e29      	ldr	r6, [pc, #164]	; (4018c8 <main+0x118>)
			while (!ioport_get_pin_level(WIFI_STATUS_PIN)) {
			}
		}
		
		else {
			if (wifi_status == false) {
  401824:	4c24      	ldr	r4, [pc, #144]	; (4018b8 <main+0x108>)
			else 
			{
				if (wifi_websocket_flag == false)
				{
					write_wifi_command("poll all\r\n",3);
					delay_ms(1000);
  401826:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 401920 <main+0x170>
  40182a:	e013      	b.n	401854 <main+0xa4>
			usart_write_line(WIFI_USART, "setup web\r\n");
  40182c:	4935      	ldr	r1, [pc, #212]	; (401904 <main+0x154>)
  40182e:	4836      	ldr	r0, [pc, #216]	; (401908 <main+0x158>)
  401830:	4b36      	ldr	r3, [pc, #216]	; (40190c <main+0x15c>)
  401832:	4798      	blx	r3
			web_setup_flag = false;
  401834:	2300      	movs	r3, #0
  401836:	6023      	str	r3, [r4, #0]
  401838:	e7e4      	b.n	401804 <main+0x54>
			if (wifi_status == false) {
  40183a:	7823      	ldrb	r3, [r4, #0]
  40183c:	b1cb      	cbz	r3, 401872 <main+0xc2>
				if (wifi_websocket_flag == false)
  40183e:	4b1f      	ldr	r3, [pc, #124]	; (4018bc <main+0x10c>)
  401840:	781b      	ldrb	r3, [r3, #0]
  401842:	2b00      	cmp	r3, #0
  401844:	d12a      	bne.n	40189c <main+0xec>
					write_wifi_command("poll all\r\n",3);
  401846:	2103      	movs	r1, #3
  401848:	4831      	ldr	r0, [pc, #196]	; (401910 <main+0x160>)
  40184a:	4b2c      	ldr	r3, [pc, #176]	; (4018fc <main+0x14c>)
  40184c:	4798      	blx	r3
					delay_ms(1000);
  40184e:	4640      	mov	r0, r8
  401850:	4b24      	ldr	r3, [pc, #144]	; (4018e4 <main+0x134>)
  401852:	4798      	blx	r3
		if (web_setup_flag) {
  401854:	6833      	ldr	r3, [r6, #0]
  401856:	2b00      	cmp	r3, #0
  401858:	d0ef      	beq.n	40183a <main+0x8a>
			write_wifi_command("setup web\r\n", 3);
  40185a:	2103      	movs	r1, #3
  40185c:	4829      	ldr	r0, [pc, #164]	; (401904 <main+0x154>)
  40185e:	4b27      	ldr	r3, [pc, #156]	; (4018fc <main+0x14c>)
  401860:	4798      	blx	r3
			web_setup_flag = false;
  401862:	2300      	movs	r3, #0
  401864:	6033      	str	r3, [r6, #0]
  401866:	4a21      	ldr	r2, [pc, #132]	; (4018ec <main+0x13c>)
  401868:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
			while (!ioport_get_pin_level(WIFI_STATUS_PIN)) {
  40186a:	f013 0f04 	tst.w	r3, #4
  40186e:	d0fb      	beq.n	401868 <main+0xb8>
  401870:	e7f0      	b.n	401854 <main+0xa4>
 				gpio_set_pin_low(WIFI_RESET_PIN);   // Pulling the pin low, hard resetting
  401872:	2023      	movs	r0, #35	; 0x23
  401874:	4b19      	ldr	r3, [pc, #100]	; (4018dc <main+0x12c>)
  401876:	4798      	blx	r3
 				delay_ms(100);                      // Delaying for 100 ms, as instructed
  401878:	4819      	ldr	r0, [pc, #100]	; (4018e0 <main+0x130>)
  40187a:	4b1a      	ldr	r3, [pc, #104]	; (4018e4 <main+0x134>)
  40187c:	4798      	blx	r3
 				gpio_set_pin_high(WIFI_RESET_PIN);  // Pulling the pin high
  40187e:	2023      	movs	r0, #35	; 0x23
  401880:	4b19      	ldr	r3, [pc, #100]	; (4018e8 <main+0x138>)
  401882:	4798      	blx	r3
				while (!wifi_status) {
  401884:	7823      	ldrb	r3, [r4, #0]
  401886:	2b00      	cmp	r3, #0
  401888:	d1e4      	bne.n	401854 <main+0xa4>
					write_wifi_command("get wl n s\r\n",2);
  40188a:	4f22      	ldr	r7, [pc, #136]	; (401914 <main+0x164>)
  40188c:	4d1b      	ldr	r5, [pc, #108]	; (4018fc <main+0x14c>)
  40188e:	2102      	movs	r1, #2
  401890:	4638      	mov	r0, r7
  401892:	47a8      	blx	r5
				while (!wifi_status) {
  401894:	7823      	ldrb	r3, [r4, #0]
  401896:	2b00      	cmp	r3, #0
  401898:	d0f9      	beq.n	40188e <main+0xde>
  40189a:	e7db      	b.n	401854 <main+0xa4>
				}
				else
				{
					start_capture();
  40189c:	4b1e      	ldr	r3, [pc, #120]	; (401918 <main+0x168>)
  40189e:	4798      	blx	r3
					write_image_to_file();
  4018a0:	4b1e      	ldr	r3, [pc, #120]	; (40191c <main+0x16c>)
  4018a2:	4798      	blx	r3
  4018a4:	e7d6      	b.n	401854 <main+0xa4>
  4018a6:	bf00      	nop
  4018a8:	00400139 	.word	0x00400139
  4018ac:	400e1450 	.word	0x400e1450
  4018b0:	00400b41 	.word	0x00400b41
  4018b4:	00401489 	.word	0x00401489
  4018b8:	20000a75 	.word	0x20000a75
  4018bc:	20000a76 	.word	0x20000a76
  4018c0:	20000a74 	.word	0x20000a74
  4018c4:	20000a5c 	.word	0x20000a5c
  4018c8:	20000a70 	.word	0x20000a70
  4018cc:	00401091 	.word	0x00401091
  4018d0:	0040124d 	.word	0x0040124d
  4018d4:	004012ed 	.word	0x004012ed
  4018d8:	00401379 	.word	0x00401379
  4018dc:	004002f7 	.word	0x004002f7
  4018e0:	000d1437 	.word	0x000d1437
  4018e4:	20000001 	.word	0x20000001
  4018e8:	004002dd 	.word	0x004002dd
  4018ec:	400e1000 	.word	0x400e1000
  4018f0:	00400c65 	.word	0x00400c65
  4018f4:	00400cc9 	.word	0x00400cc9
  4018f8:	004074fc 	.word	0x004074fc
  4018fc:	00401339 	.word	0x00401339
  401900:	0040750c 	.word	0x0040750c
  401904:	004074f0 	.word	0x004074f0
  401908:	40024000 	.word	0x40024000
  40190c:	00400b09 	.word	0x00400b09
  401910:	0040752c 	.word	0x0040752c
  401914:	0040751c 	.word	0x0040751c
  401918:	00400d89 	.word	0x00400d89
  40191c:	004013e1 	.word	0x004013e1
  401920:	0082ca25 	.word	0x0082ca25

00401924 <__libc_init_array>:
  401924:	b570      	push	{r4, r5, r6, lr}
  401926:	4e0f      	ldr	r6, [pc, #60]	; (401964 <__libc_init_array+0x40>)
  401928:	4d0f      	ldr	r5, [pc, #60]	; (401968 <__libc_init_array+0x44>)
  40192a:	1b76      	subs	r6, r6, r5
  40192c:	10b6      	asrs	r6, r6, #2
  40192e:	bf18      	it	ne
  401930:	2400      	movne	r4, #0
  401932:	d005      	beq.n	401940 <__libc_init_array+0x1c>
  401934:	3401      	adds	r4, #1
  401936:	f855 3b04 	ldr.w	r3, [r5], #4
  40193a:	4798      	blx	r3
  40193c:	42a6      	cmp	r6, r4
  40193e:	d1f9      	bne.n	401934 <__libc_init_array+0x10>
  401940:	4e0a      	ldr	r6, [pc, #40]	; (40196c <__libc_init_array+0x48>)
  401942:	4d0b      	ldr	r5, [pc, #44]	; (401970 <__libc_init_array+0x4c>)
  401944:	1b76      	subs	r6, r6, r5
  401946:	f005 ff3b 	bl	4077c0 <_init>
  40194a:	10b6      	asrs	r6, r6, #2
  40194c:	bf18      	it	ne
  40194e:	2400      	movne	r4, #0
  401950:	d006      	beq.n	401960 <__libc_init_array+0x3c>
  401952:	3401      	adds	r4, #1
  401954:	f855 3b04 	ldr.w	r3, [r5], #4
  401958:	4798      	blx	r3
  40195a:	42a6      	cmp	r6, r4
  40195c:	d1f9      	bne.n	401952 <__libc_init_array+0x2e>
  40195e:	bd70      	pop	{r4, r5, r6, pc}
  401960:	bd70      	pop	{r4, r5, r6, pc}
  401962:	bf00      	nop
  401964:	004077cc 	.word	0x004077cc
  401968:	004077cc 	.word	0x004077cc
  40196c:	004077d4 	.word	0x004077d4
  401970:	004077cc 	.word	0x004077cc

00401974 <memset>:
  401974:	b470      	push	{r4, r5, r6}
  401976:	0786      	lsls	r6, r0, #30
  401978:	d046      	beq.n	401a08 <memset+0x94>
  40197a:	1e54      	subs	r4, r2, #1
  40197c:	2a00      	cmp	r2, #0
  40197e:	d041      	beq.n	401a04 <memset+0x90>
  401980:	b2ca      	uxtb	r2, r1
  401982:	4603      	mov	r3, r0
  401984:	e002      	b.n	40198c <memset+0x18>
  401986:	f114 34ff 	adds.w	r4, r4, #4294967295
  40198a:	d33b      	bcc.n	401a04 <memset+0x90>
  40198c:	f803 2b01 	strb.w	r2, [r3], #1
  401990:	079d      	lsls	r5, r3, #30
  401992:	d1f8      	bne.n	401986 <memset+0x12>
  401994:	2c03      	cmp	r4, #3
  401996:	d92e      	bls.n	4019f6 <memset+0x82>
  401998:	b2cd      	uxtb	r5, r1
  40199a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40199e:	2c0f      	cmp	r4, #15
  4019a0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4019a4:	d919      	bls.n	4019da <memset+0x66>
  4019a6:	f103 0210 	add.w	r2, r3, #16
  4019aa:	4626      	mov	r6, r4
  4019ac:	3e10      	subs	r6, #16
  4019ae:	2e0f      	cmp	r6, #15
  4019b0:	f842 5c10 	str.w	r5, [r2, #-16]
  4019b4:	f842 5c0c 	str.w	r5, [r2, #-12]
  4019b8:	f842 5c08 	str.w	r5, [r2, #-8]
  4019bc:	f842 5c04 	str.w	r5, [r2, #-4]
  4019c0:	f102 0210 	add.w	r2, r2, #16
  4019c4:	d8f2      	bhi.n	4019ac <memset+0x38>
  4019c6:	f1a4 0210 	sub.w	r2, r4, #16
  4019ca:	f022 020f 	bic.w	r2, r2, #15
  4019ce:	f004 040f 	and.w	r4, r4, #15
  4019d2:	3210      	adds	r2, #16
  4019d4:	2c03      	cmp	r4, #3
  4019d6:	4413      	add	r3, r2
  4019d8:	d90d      	bls.n	4019f6 <memset+0x82>
  4019da:	461e      	mov	r6, r3
  4019dc:	4622      	mov	r2, r4
  4019de:	3a04      	subs	r2, #4
  4019e0:	2a03      	cmp	r2, #3
  4019e2:	f846 5b04 	str.w	r5, [r6], #4
  4019e6:	d8fa      	bhi.n	4019de <memset+0x6a>
  4019e8:	1f22      	subs	r2, r4, #4
  4019ea:	f022 0203 	bic.w	r2, r2, #3
  4019ee:	3204      	adds	r2, #4
  4019f0:	4413      	add	r3, r2
  4019f2:	f004 0403 	and.w	r4, r4, #3
  4019f6:	b12c      	cbz	r4, 401a04 <memset+0x90>
  4019f8:	b2c9      	uxtb	r1, r1
  4019fa:	441c      	add	r4, r3
  4019fc:	f803 1b01 	strb.w	r1, [r3], #1
  401a00:	429c      	cmp	r4, r3
  401a02:	d1fb      	bne.n	4019fc <memset+0x88>
  401a04:	bc70      	pop	{r4, r5, r6}
  401a06:	4770      	bx	lr
  401a08:	4614      	mov	r4, r2
  401a0a:	4603      	mov	r3, r0
  401a0c:	e7c2      	b.n	401994 <memset+0x20>
  401a0e:	bf00      	nop

00401a10 <sprintf>:
  401a10:	b40e      	push	{r1, r2, r3}
  401a12:	b5f0      	push	{r4, r5, r6, r7, lr}
  401a14:	b09c      	sub	sp, #112	; 0x70
  401a16:	ab21      	add	r3, sp, #132	; 0x84
  401a18:	490f      	ldr	r1, [pc, #60]	; (401a58 <sprintf+0x48>)
  401a1a:	f853 2b04 	ldr.w	r2, [r3], #4
  401a1e:	9301      	str	r3, [sp, #4]
  401a20:	4605      	mov	r5, r0
  401a22:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401a26:	6808      	ldr	r0, [r1, #0]
  401a28:	9502      	str	r5, [sp, #8]
  401a2a:	f44f 7702 	mov.w	r7, #520	; 0x208
  401a2e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401a32:	a902      	add	r1, sp, #8
  401a34:	9506      	str	r5, [sp, #24]
  401a36:	f8ad 7014 	strh.w	r7, [sp, #20]
  401a3a:	9404      	str	r4, [sp, #16]
  401a3c:	9407      	str	r4, [sp, #28]
  401a3e:	f8ad 6016 	strh.w	r6, [sp, #22]
  401a42:	f000 fae3 	bl	40200c <_svfprintf_r>
  401a46:	9b02      	ldr	r3, [sp, #8]
  401a48:	2200      	movs	r2, #0
  401a4a:	701a      	strb	r2, [r3, #0]
  401a4c:	b01c      	add	sp, #112	; 0x70
  401a4e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401a52:	b003      	add	sp, #12
  401a54:	4770      	bx	lr
  401a56:	bf00      	nop
  401a58:	20000010 	.word	0x20000010

00401a5c <strchr>:
  401a5c:	b2c9      	uxtb	r1, r1
  401a5e:	2900      	cmp	r1, #0
  401a60:	d041      	beq.n	401ae6 <strchr+0x8a>
  401a62:	0782      	lsls	r2, r0, #30
  401a64:	b4f0      	push	{r4, r5, r6, r7}
  401a66:	d067      	beq.n	401b38 <strchr+0xdc>
  401a68:	7803      	ldrb	r3, [r0, #0]
  401a6a:	2b00      	cmp	r3, #0
  401a6c:	d068      	beq.n	401b40 <strchr+0xe4>
  401a6e:	4299      	cmp	r1, r3
  401a70:	d037      	beq.n	401ae2 <strchr+0x86>
  401a72:	1c43      	adds	r3, r0, #1
  401a74:	e004      	b.n	401a80 <strchr+0x24>
  401a76:	f813 0b01 	ldrb.w	r0, [r3], #1
  401a7a:	b390      	cbz	r0, 401ae2 <strchr+0x86>
  401a7c:	4281      	cmp	r1, r0
  401a7e:	d02f      	beq.n	401ae0 <strchr+0x84>
  401a80:	079a      	lsls	r2, r3, #30
  401a82:	461c      	mov	r4, r3
  401a84:	d1f7      	bne.n	401a76 <strchr+0x1a>
  401a86:	6825      	ldr	r5, [r4, #0]
  401a88:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  401a8c:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  401a90:	ea83 0605 	eor.w	r6, r3, r5
  401a94:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  401a98:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  401a9c:	ea20 0006 	bic.w	r0, r0, r6
  401aa0:	ea22 0205 	bic.w	r2, r2, r5
  401aa4:	4302      	orrs	r2, r0
  401aa6:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401aaa:	d111      	bne.n	401ad0 <strchr+0x74>
  401aac:	4620      	mov	r0, r4
  401aae:	f850 6f04 	ldr.w	r6, [r0, #4]!
  401ab2:	ea83 0706 	eor.w	r7, r3, r6
  401ab6:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  401aba:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  401abe:	ea25 0507 	bic.w	r5, r5, r7
  401ac2:	ea22 0206 	bic.w	r2, r2, r6
  401ac6:	432a      	orrs	r2, r5
  401ac8:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401acc:	d0ef      	beq.n	401aae <strchr+0x52>
  401ace:	4604      	mov	r4, r0
  401ad0:	7820      	ldrb	r0, [r4, #0]
  401ad2:	b918      	cbnz	r0, 401adc <strchr+0x80>
  401ad4:	e005      	b.n	401ae2 <strchr+0x86>
  401ad6:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  401ada:	b110      	cbz	r0, 401ae2 <strchr+0x86>
  401adc:	4281      	cmp	r1, r0
  401ade:	d1fa      	bne.n	401ad6 <strchr+0x7a>
  401ae0:	4620      	mov	r0, r4
  401ae2:	bcf0      	pop	{r4, r5, r6, r7}
  401ae4:	4770      	bx	lr
  401ae6:	0783      	lsls	r3, r0, #30
  401ae8:	d024      	beq.n	401b34 <strchr+0xd8>
  401aea:	7803      	ldrb	r3, [r0, #0]
  401aec:	2b00      	cmp	r3, #0
  401aee:	d0f9      	beq.n	401ae4 <strchr+0x88>
  401af0:	1c43      	adds	r3, r0, #1
  401af2:	e003      	b.n	401afc <strchr+0xa0>
  401af4:	7802      	ldrb	r2, [r0, #0]
  401af6:	3301      	adds	r3, #1
  401af8:	2a00      	cmp	r2, #0
  401afa:	d0f3      	beq.n	401ae4 <strchr+0x88>
  401afc:	0799      	lsls	r1, r3, #30
  401afe:	4618      	mov	r0, r3
  401b00:	d1f8      	bne.n	401af4 <strchr+0x98>
  401b02:	6819      	ldr	r1, [r3, #0]
  401b04:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  401b08:	ea22 0201 	bic.w	r2, r2, r1
  401b0c:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401b10:	d108      	bne.n	401b24 <strchr+0xc8>
  401b12:	f853 1f04 	ldr.w	r1, [r3, #4]!
  401b16:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  401b1a:	ea22 0201 	bic.w	r2, r2, r1
  401b1e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401b22:	d0f6      	beq.n	401b12 <strchr+0xb6>
  401b24:	781a      	ldrb	r2, [r3, #0]
  401b26:	4618      	mov	r0, r3
  401b28:	b142      	cbz	r2, 401b3c <strchr+0xe0>
  401b2a:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  401b2e:	2b00      	cmp	r3, #0
  401b30:	d1fb      	bne.n	401b2a <strchr+0xce>
  401b32:	4770      	bx	lr
  401b34:	4603      	mov	r3, r0
  401b36:	e7e4      	b.n	401b02 <strchr+0xa6>
  401b38:	4604      	mov	r4, r0
  401b3a:	e7a4      	b.n	401a86 <strchr+0x2a>
  401b3c:	4618      	mov	r0, r3
  401b3e:	4770      	bx	lr
  401b40:	4618      	mov	r0, r3
  401b42:	e7ce      	b.n	401ae2 <strchr+0x86>

00401b44 <critical_factorization>:
  401b44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401b48:	f04f 0e01 	mov.w	lr, #1
  401b4c:	4674      	mov	r4, lr
  401b4e:	2500      	movs	r5, #0
  401b50:	f04f 36ff 	mov.w	r6, #4294967295
  401b54:	192b      	adds	r3, r5, r4
  401b56:	428b      	cmp	r3, r1
  401b58:	eb00 0706 	add.w	r7, r0, r6
  401b5c:	d20d      	bcs.n	401b7a <critical_factorization+0x36>
  401b5e:	5d3f      	ldrb	r7, [r7, r4]
  401b60:	f810 c003 	ldrb.w	ip, [r0, r3]
  401b64:	45bc      	cmp	ip, r7
  401b66:	d22d      	bcs.n	401bc4 <critical_factorization+0x80>
  401b68:	461d      	mov	r5, r3
  401b6a:	2401      	movs	r4, #1
  401b6c:	eba3 0e06 	sub.w	lr, r3, r6
  401b70:	192b      	adds	r3, r5, r4
  401b72:	428b      	cmp	r3, r1
  401b74:	eb00 0706 	add.w	r7, r0, r6
  401b78:	d3f1      	bcc.n	401b5e <critical_factorization+0x1a>
  401b7a:	f04f 0801 	mov.w	r8, #1
  401b7e:	f8c2 e000 	str.w	lr, [r2]
  401b82:	4644      	mov	r4, r8
  401b84:	2500      	movs	r5, #0
  401b86:	f04f 37ff 	mov.w	r7, #4294967295
  401b8a:	192b      	adds	r3, r5, r4
  401b8c:	4299      	cmp	r1, r3
  401b8e:	eb00 0e07 	add.w	lr, r0, r7
  401b92:	d90e      	bls.n	401bb2 <critical_factorization+0x6e>
  401b94:	f81e e004 	ldrb.w	lr, [lr, r4]
  401b98:	f810 c003 	ldrb.w	ip, [r0, r3]
  401b9c:	45f4      	cmp	ip, lr
  401b9e:	d918      	bls.n	401bd2 <critical_factorization+0x8e>
  401ba0:	461d      	mov	r5, r3
  401ba2:	2401      	movs	r4, #1
  401ba4:	eba3 0807 	sub.w	r8, r3, r7
  401ba8:	192b      	adds	r3, r5, r4
  401baa:	4299      	cmp	r1, r3
  401bac:	eb00 0e07 	add.w	lr, r0, r7
  401bb0:	d8f0      	bhi.n	401b94 <critical_factorization+0x50>
  401bb2:	3701      	adds	r7, #1
  401bb4:	1c70      	adds	r0, r6, #1
  401bb6:	4287      	cmp	r7, r0
  401bb8:	bf24      	itt	cs
  401bba:	f8c2 8000 	strcs.w	r8, [r2]
  401bbe:	4638      	movcs	r0, r7
  401bc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401bc4:	d00c      	beq.n	401be0 <critical_factorization+0x9c>
  401bc6:	f04f 0e01 	mov.w	lr, #1
  401bca:	462e      	mov	r6, r5
  401bcc:	4674      	mov	r4, lr
  401bce:	4475      	add	r5, lr
  401bd0:	e7c0      	b.n	401b54 <critical_factorization+0x10>
  401bd2:	d00b      	beq.n	401bec <critical_factorization+0xa8>
  401bd4:	f04f 0801 	mov.w	r8, #1
  401bd8:	462f      	mov	r7, r5
  401bda:	4644      	mov	r4, r8
  401bdc:	4445      	add	r5, r8
  401bde:	e7d4      	b.n	401b8a <critical_factorization+0x46>
  401be0:	4574      	cmp	r4, lr
  401be2:	bf12      	itee	ne
  401be4:	3401      	addne	r4, #1
  401be6:	461d      	moveq	r5, r3
  401be8:	2401      	moveq	r4, #1
  401bea:	e7b3      	b.n	401b54 <critical_factorization+0x10>
  401bec:	4544      	cmp	r4, r8
  401bee:	bf12      	itee	ne
  401bf0:	3401      	addne	r4, #1
  401bf2:	461d      	moveq	r5, r3
  401bf4:	2401      	moveq	r4, #1
  401bf6:	e7c8      	b.n	401b8a <critical_factorization+0x46>

00401bf8 <two_way_long_needle>:
  401bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401bfc:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  401c00:	4616      	mov	r6, r2
  401c02:	4605      	mov	r5, r0
  401c04:	468b      	mov	fp, r1
  401c06:	4610      	mov	r0, r2
  401c08:	4619      	mov	r1, r3
  401c0a:	aa03      	add	r2, sp, #12
  401c0c:	461c      	mov	r4, r3
  401c0e:	f7ff ff99 	bl	401b44 <critical_factorization>
  401c12:	ab03      	add	r3, sp, #12
  401c14:	4681      	mov	r9, r0
  401c16:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  401c1a:	f843 4f04 	str.w	r4, [r3, #4]!
  401c1e:	4293      	cmp	r3, r2
  401c20:	d1fb      	bne.n	401c1a <two_way_long_needle+0x22>
  401c22:	b14c      	cbz	r4, 401c38 <two_way_long_needle+0x40>
  401c24:	1e63      	subs	r3, r4, #1
  401c26:	1e72      	subs	r2, r6, #1
  401c28:	a804      	add	r0, sp, #16
  401c2a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401c2e:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  401c32:	f113 33ff 	adds.w	r3, r3, #4294967295
  401c36:	d2f8      	bcs.n	401c2a <two_way_long_needle+0x32>
  401c38:	9903      	ldr	r1, [sp, #12]
  401c3a:	464a      	mov	r2, r9
  401c3c:	4431      	add	r1, r6
  401c3e:	4630      	mov	r0, r6
  401c40:	f002 ff0e 	bl	404a60 <memcmp>
  401c44:	2800      	cmp	r0, #0
  401c46:	d16f      	bne.n	401d28 <two_way_long_needle+0x130>
  401c48:	f109 33ff 	add.w	r3, r9, #4294967295
  401c4c:	9300      	str	r3, [sp, #0]
  401c4e:	18f3      	adds	r3, r6, r3
  401c50:	4682      	mov	sl, r0
  401c52:	9301      	str	r3, [sp, #4]
  401c54:	4623      	mov	r3, r4
  401c56:	4680      	mov	r8, r0
  401c58:	4654      	mov	r4, sl
  401c5a:	4658      	mov	r0, fp
  401c5c:	469a      	mov	sl, r3
  401c5e:	eb08 070a 	add.w	r7, r8, sl
  401c62:	1a3a      	subs	r2, r7, r0
  401c64:	2100      	movs	r1, #0
  401c66:	4428      	add	r0, r5
  401c68:	f002 feaa 	bl	4049c0 <memchr>
  401c6c:	2800      	cmp	r0, #0
  401c6e:	d156      	bne.n	401d1e <two_way_long_needle+0x126>
  401c70:	2f00      	cmp	r7, #0
  401c72:	d054      	beq.n	401d1e <two_way_long_needle+0x126>
  401c74:	19eb      	adds	r3, r5, r7
  401c76:	aa04      	add	r2, sp, #16
  401c78:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401c7c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401c80:	b14b      	cbz	r3, 401c96 <two_way_long_needle+0x9e>
  401c82:	b124      	cbz	r4, 401c8e <two_way_long_needle+0x96>
  401c84:	9a03      	ldr	r2, [sp, #12]
  401c86:	4293      	cmp	r3, r2
  401c88:	d201      	bcs.n	401c8e <two_way_long_needle+0x96>
  401c8a:	ebaa 0302 	sub.w	r3, sl, r2
  401c8e:	4498      	add	r8, r3
  401c90:	2400      	movs	r4, #0
  401c92:	4638      	mov	r0, r7
  401c94:	e7e3      	b.n	401c5e <two_way_long_needle+0x66>
  401c96:	454c      	cmp	r4, r9
  401c98:	4623      	mov	r3, r4
  401c9a:	f10a 3eff 	add.w	lr, sl, #4294967295
  401c9e:	bf38      	it	cc
  401ca0:	464b      	movcc	r3, r9
  401ca2:	4573      	cmp	r3, lr
  401ca4:	d213      	bcs.n	401cce <two_way_long_needle+0xd6>
  401ca6:	eb08 0203 	add.w	r2, r8, r3
  401caa:	f816 c003 	ldrb.w	ip, [r6, r3]
  401cae:	5ca8      	ldrb	r0, [r5, r2]
  401cb0:	4584      	cmp	ip, r0
  401cb2:	442a      	add	r2, r5
  401cb4:	eb06 0103 	add.w	r1, r6, r3
  401cb8:	d006      	beq.n	401cc8 <two_way_long_needle+0xd0>
  401cba:	e02c      	b.n	401d16 <two_way_long_needle+0x11e>
  401cbc:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  401cc0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401cc4:	4584      	cmp	ip, r0
  401cc6:	d126      	bne.n	401d16 <two_way_long_needle+0x11e>
  401cc8:	3301      	adds	r3, #1
  401cca:	4573      	cmp	r3, lr
  401ccc:	d3f6      	bcc.n	401cbc <two_way_long_needle+0xc4>
  401cce:	454c      	cmp	r4, r9
  401cd0:	9900      	ldr	r1, [sp, #0]
  401cd2:	f080 8089 	bcs.w	401de8 <two_way_long_needle+0x1f0>
  401cd6:	9b00      	ldr	r3, [sp, #0]
  401cd8:	eb08 0203 	add.w	r2, r8, r3
  401cdc:	9b01      	ldr	r3, [sp, #4]
  401cde:	5ca8      	ldrb	r0, [r5, r2]
  401ce0:	781b      	ldrb	r3, [r3, #0]
  401ce2:	4298      	cmp	r0, r3
  401ce4:	442a      	add	r2, r5
  401ce6:	d17f      	bne.n	401de8 <two_way_long_needle+0x1f0>
  401ce8:	9801      	ldr	r0, [sp, #4]
  401cea:	f104 3bff 	add.w	fp, r4, #4294967295
  401cee:	e006      	b.n	401cfe <two_way_long_needle+0x106>
  401cf0:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401cf4:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401cf8:	45f4      	cmp	ip, lr
  401cfa:	d103      	bne.n	401d04 <two_way_long_needle+0x10c>
  401cfc:	4619      	mov	r1, r3
  401cfe:	1e4b      	subs	r3, r1, #1
  401d00:	459b      	cmp	fp, r3
  401d02:	d1f5      	bne.n	401cf0 <two_way_long_needle+0xf8>
  401d04:	3401      	adds	r4, #1
  401d06:	428c      	cmp	r4, r1
  401d08:	d870      	bhi.n	401dec <two_way_long_needle+0x1f4>
  401d0a:	9c03      	ldr	r4, [sp, #12]
  401d0c:	4638      	mov	r0, r7
  401d0e:	44a0      	add	r8, r4
  401d10:	ebaa 0404 	sub.w	r4, sl, r4
  401d14:	e7a3      	b.n	401c5e <two_way_long_needle+0x66>
  401d16:	f1c9 0201 	rsb	r2, r9, #1
  401d1a:	4490      	add	r8, r2
  401d1c:	e7b7      	b.n	401c8e <two_way_long_needle+0x96>
  401d1e:	2000      	movs	r0, #0
  401d20:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d28:	eba4 0309 	sub.w	r3, r4, r9
  401d2c:	454b      	cmp	r3, r9
  401d2e:	bf38      	it	cc
  401d30:	464b      	movcc	r3, r9
  401d32:	3301      	adds	r3, #1
  401d34:	f109 38ff 	add.w	r8, r9, #4294967295
  401d38:	9303      	str	r3, [sp, #12]
  401d3a:	eb06 0308 	add.w	r3, r6, r8
  401d3e:	4658      	mov	r0, fp
  401d40:	f04f 0a00 	mov.w	sl, #0
  401d44:	46cb      	mov	fp, r9
  401d46:	4699      	mov	r9, r3
  401d48:	eb0a 0704 	add.w	r7, sl, r4
  401d4c:	1a3a      	subs	r2, r7, r0
  401d4e:	2100      	movs	r1, #0
  401d50:	4428      	add	r0, r5
  401d52:	f002 fe35 	bl	4049c0 <memchr>
  401d56:	2800      	cmp	r0, #0
  401d58:	d1e1      	bne.n	401d1e <two_way_long_needle+0x126>
  401d5a:	2f00      	cmp	r7, #0
  401d5c:	d0df      	beq.n	401d1e <two_way_long_needle+0x126>
  401d5e:	19eb      	adds	r3, r5, r7
  401d60:	aa04      	add	r2, sp, #16
  401d62:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401d66:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401d6a:	bba3      	cbnz	r3, 401dd6 <two_way_long_needle+0x1de>
  401d6c:	1e61      	subs	r1, r4, #1
  401d6e:	458b      	cmp	fp, r1
  401d70:	d215      	bcs.n	401d9e <two_way_long_needle+0x1a6>
  401d72:	eb0a 020b 	add.w	r2, sl, fp
  401d76:	f816 300b 	ldrb.w	r3, [r6, fp]
  401d7a:	f815 e002 	ldrb.w	lr, [r5, r2]
  401d7e:	459e      	cmp	lr, r3
  401d80:	442a      	add	r2, r5
  401d82:	eb06 000b 	add.w	r0, r6, fp
  401d86:	465b      	mov	r3, fp
  401d88:	d006      	beq.n	401d98 <two_way_long_needle+0x1a0>
  401d8a:	e027      	b.n	401ddc <two_way_long_needle+0x1e4>
  401d8c:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  401d90:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  401d94:	45f4      	cmp	ip, lr
  401d96:	d121      	bne.n	401ddc <two_way_long_needle+0x1e4>
  401d98:	3301      	adds	r3, #1
  401d9a:	428b      	cmp	r3, r1
  401d9c:	d3f6      	bcc.n	401d8c <two_way_long_needle+0x194>
  401d9e:	f1b8 3fff 	cmp.w	r8, #4294967295
  401da2:	d011      	beq.n	401dc8 <two_way_long_needle+0x1d0>
  401da4:	eb0a 0208 	add.w	r2, sl, r8
  401da8:	f899 1000 	ldrb.w	r1, [r9]
  401dac:	5cab      	ldrb	r3, [r5, r2]
  401dae:	4299      	cmp	r1, r3
  401db0:	442a      	add	r2, r5
  401db2:	d10f      	bne.n	401dd4 <two_way_long_needle+0x1dc>
  401db4:	464b      	mov	r3, r9
  401db6:	e005      	b.n	401dc4 <two_way_long_needle+0x1cc>
  401db8:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401dbc:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401dc0:	4288      	cmp	r0, r1
  401dc2:	d107      	bne.n	401dd4 <two_way_long_needle+0x1dc>
  401dc4:	42b3      	cmp	r3, r6
  401dc6:	d1f7      	bne.n	401db8 <two_way_long_needle+0x1c0>
  401dc8:	eb05 000a 	add.w	r0, r5, sl
  401dcc:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401dd4:	9b03      	ldr	r3, [sp, #12]
  401dd6:	449a      	add	sl, r3
  401dd8:	4638      	mov	r0, r7
  401dda:	e7b5      	b.n	401d48 <two_way_long_needle+0x150>
  401ddc:	f1cb 0201 	rsb	r2, fp, #1
  401de0:	4492      	add	sl, r2
  401de2:	449a      	add	sl, r3
  401de4:	4638      	mov	r0, r7
  401de6:	e7af      	b.n	401d48 <two_way_long_needle+0x150>
  401de8:	4649      	mov	r1, r9
  401dea:	e78b      	b.n	401d04 <two_way_long_needle+0x10c>
  401dec:	eb05 0008 	add.w	r0, r5, r8
  401df0:	e796      	b.n	401d20 <two_way_long_needle+0x128>
  401df2:	bf00      	nop

00401df4 <strstr>:
  401df4:	7802      	ldrb	r2, [r0, #0]
  401df6:	2a00      	cmp	r2, #0
  401df8:	f000 8101 	beq.w	401ffe <strstr+0x20a>
  401dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401e00:	f891 8000 	ldrb.w	r8, [r1]
  401e04:	b085      	sub	sp, #20
  401e06:	4644      	mov	r4, r8
  401e08:	f1b8 0f00 	cmp.w	r8, #0
  401e0c:	d016      	beq.n	401e3c <strstr+0x48>
  401e0e:	4686      	mov	lr, r0
  401e10:	f101 0c01 	add.w	ip, r1, #1
  401e14:	2701      	movs	r7, #1
  401e16:	e003      	b.n	401e20 <strstr+0x2c>
  401e18:	f813 4b01 	ldrb.w	r4, [r3], #1
  401e1c:	b16c      	cbz	r4, 401e3a <strstr+0x46>
  401e1e:	469c      	mov	ip, r3
  401e20:	42a2      	cmp	r2, r4
  401e22:	bf14      	ite	ne
  401e24:	2700      	movne	r7, #0
  401e26:	f007 0701 	andeq.w	r7, r7, #1
  401e2a:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  401e2e:	4663      	mov	r3, ip
  401e30:	2a00      	cmp	r2, #0
  401e32:	d1f1      	bne.n	401e18 <strstr+0x24>
  401e34:	f89c 3000 	ldrb.w	r3, [ip]
  401e38:	b9fb      	cbnz	r3, 401e7a <strstr+0x86>
  401e3a:	b117      	cbz	r7, 401e42 <strstr+0x4e>
  401e3c:	b005      	add	sp, #20
  401e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e42:	460e      	mov	r6, r1
  401e44:	4605      	mov	r5, r0
  401e46:	4641      	mov	r1, r8
  401e48:	3001      	adds	r0, #1
  401e4a:	ebac 0406 	sub.w	r4, ip, r6
  401e4e:	f7ff fe05 	bl	401a5c <strchr>
  401e52:	4607      	mov	r7, r0
  401e54:	b188      	cbz	r0, 401e7a <strstr+0x86>
  401e56:	2c01      	cmp	r4, #1
  401e58:	d0f0      	beq.n	401e3c <strstr+0x48>
  401e5a:	1928      	adds	r0, r5, r4
  401e5c:	4287      	cmp	r7, r0
  401e5e:	bf94      	ite	ls
  401e60:	1bc1      	subls	r1, r0, r7
  401e62:	2101      	movhi	r1, #1
  401e64:	2c1f      	cmp	r4, #31
  401e66:	468b      	mov	fp, r1
  401e68:	d90b      	bls.n	401e82 <strstr+0x8e>
  401e6a:	4623      	mov	r3, r4
  401e6c:	4632      	mov	r2, r6
  401e6e:	4638      	mov	r0, r7
  401e70:	f7ff fec2 	bl	401bf8 <two_way_long_needle>
  401e74:	b005      	add	sp, #20
  401e76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e7a:	2000      	movs	r0, #0
  401e7c:	b005      	add	sp, #20
  401e7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e82:	aa03      	add	r2, sp, #12
  401e84:	4621      	mov	r1, r4
  401e86:	4630      	mov	r0, r6
  401e88:	f7ff fe5c 	bl	401b44 <critical_factorization>
  401e8c:	9903      	ldr	r1, [sp, #12]
  401e8e:	4680      	mov	r8, r0
  401e90:	4602      	mov	r2, r0
  401e92:	4431      	add	r1, r6
  401e94:	4630      	mov	r0, r6
  401e96:	f002 fde3 	bl	404a60 <memcmp>
  401e9a:	2800      	cmp	r0, #0
  401e9c:	d157      	bne.n	401f4e <strstr+0x15a>
  401e9e:	f108 33ff 	add.w	r3, r8, #4294967295
  401ea2:	9300      	str	r3, [sp, #0]
  401ea4:	18f3      	adds	r3, r6, r3
  401ea6:	4681      	mov	r9, r0
  401ea8:	4605      	mov	r5, r0
  401eaa:	9301      	str	r3, [sp, #4]
  401eac:	4658      	mov	r0, fp
  401eae:	46b2      	mov	sl, r6
  401eb0:	1966      	adds	r6, r4, r5
  401eb2:	1a32      	subs	r2, r6, r0
  401eb4:	2100      	movs	r1, #0
  401eb6:	4438      	add	r0, r7
  401eb8:	f002 fd82 	bl	4049c0 <memchr>
  401ebc:	2800      	cmp	r0, #0
  401ebe:	d1dc      	bne.n	401e7a <strstr+0x86>
  401ec0:	2e00      	cmp	r6, #0
  401ec2:	d0da      	beq.n	401e7a <strstr+0x86>
  401ec4:	45c8      	cmp	r8, r9
  401ec6:	4643      	mov	r3, r8
  401ec8:	bf38      	it	cc
  401eca:	464b      	movcc	r3, r9
  401ecc:	429c      	cmp	r4, r3
  401ece:	d912      	bls.n	401ef6 <strstr+0x102>
  401ed0:	195a      	adds	r2, r3, r5
  401ed2:	f81a 1003 	ldrb.w	r1, [sl, r3]
  401ed6:	5cb8      	ldrb	r0, [r7, r2]
  401ed8:	4281      	cmp	r1, r0
  401eda:	443a      	add	r2, r7
  401edc:	eb0a 0e03 	add.w	lr, sl, r3
  401ee0:	d006      	beq.n	401ef0 <strstr+0xfc>
  401ee2:	e02c      	b.n	401f3e <strstr+0x14a>
  401ee4:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  401ee8:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401eec:	4288      	cmp	r0, r1
  401eee:	d126      	bne.n	401f3e <strstr+0x14a>
  401ef0:	3301      	adds	r3, #1
  401ef2:	429c      	cmp	r4, r3
  401ef4:	d1f6      	bne.n	401ee4 <strstr+0xf0>
  401ef6:	45c8      	cmp	r8, r9
  401ef8:	9900      	ldr	r1, [sp, #0]
  401efa:	f240 8083 	bls.w	402004 <strstr+0x210>
  401efe:	9b00      	ldr	r3, [sp, #0]
  401f00:	18ea      	adds	r2, r5, r3
  401f02:	9b01      	ldr	r3, [sp, #4]
  401f04:	5cb8      	ldrb	r0, [r7, r2]
  401f06:	781b      	ldrb	r3, [r3, #0]
  401f08:	4298      	cmp	r0, r3
  401f0a:	443a      	add	r2, r7
  401f0c:	d17a      	bne.n	402004 <strstr+0x210>
  401f0e:	9801      	ldr	r0, [sp, #4]
  401f10:	f109 3bff 	add.w	fp, r9, #4294967295
  401f14:	e006      	b.n	401f24 <strstr+0x130>
  401f16:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401f1a:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401f1e:	45f4      	cmp	ip, lr
  401f20:	d103      	bne.n	401f2a <strstr+0x136>
  401f22:	4619      	mov	r1, r3
  401f24:	1e4b      	subs	r3, r1, #1
  401f26:	455b      	cmp	r3, fp
  401f28:	d1f5      	bne.n	401f16 <strstr+0x122>
  401f2a:	f109 0901 	add.w	r9, r9, #1
  401f2e:	4589      	cmp	r9, r1
  401f30:	d857      	bhi.n	401fe2 <strstr+0x1ee>
  401f32:	9b03      	ldr	r3, [sp, #12]
  401f34:	4630      	mov	r0, r6
  401f36:	441d      	add	r5, r3
  401f38:	eba4 0903 	sub.w	r9, r4, r3
  401f3c:	e7b8      	b.n	401eb0 <strstr+0xbc>
  401f3e:	f1c8 0201 	rsb	r2, r8, #1
  401f42:	4415      	add	r5, r2
  401f44:	441d      	add	r5, r3
  401f46:	f04f 0900 	mov.w	r9, #0
  401f4a:	4630      	mov	r0, r6
  401f4c:	e7b0      	b.n	401eb0 <strstr+0xbc>
  401f4e:	eba4 0308 	sub.w	r3, r4, r8
  401f52:	4543      	cmp	r3, r8
  401f54:	bf38      	it	cc
  401f56:	4643      	movcc	r3, r8
  401f58:	3301      	adds	r3, #1
  401f5a:	f108 39ff 	add.w	r9, r8, #4294967295
  401f5e:	9303      	str	r3, [sp, #12]
  401f60:	eb06 0309 	add.w	r3, r6, r9
  401f64:	4658      	mov	r0, fp
  401f66:	2500      	movs	r5, #0
  401f68:	46bb      	mov	fp, r7
  401f6a:	469a      	mov	sl, r3
  401f6c:	1967      	adds	r7, r4, r5
  401f6e:	1a3a      	subs	r2, r7, r0
  401f70:	2100      	movs	r1, #0
  401f72:	4458      	add	r0, fp
  401f74:	f002 fd24 	bl	4049c0 <memchr>
  401f78:	2800      	cmp	r0, #0
  401f7a:	f47f af7e 	bne.w	401e7a <strstr+0x86>
  401f7e:	2f00      	cmp	r7, #0
  401f80:	f43f af7b 	beq.w	401e7a <strstr+0x86>
  401f84:	4544      	cmp	r4, r8
  401f86:	d915      	bls.n	401fb4 <strstr+0x1c0>
  401f88:	eb08 0205 	add.w	r2, r8, r5
  401f8c:	f816 3008 	ldrb.w	r3, [r6, r8]
  401f90:	f81b 0002 	ldrb.w	r0, [fp, r2]
  401f94:	4298      	cmp	r0, r3
  401f96:	445a      	add	r2, fp
  401f98:	eb06 0108 	add.w	r1, r6, r8
  401f9c:	4643      	mov	r3, r8
  401f9e:	d006      	beq.n	401fae <strstr+0x1ba>
  401fa0:	e023      	b.n	401fea <strstr+0x1f6>
  401fa2:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  401fa6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401faa:	4586      	cmp	lr, r0
  401fac:	d11d      	bne.n	401fea <strstr+0x1f6>
  401fae:	3301      	adds	r3, #1
  401fb0:	429c      	cmp	r4, r3
  401fb2:	d1f6      	bne.n	401fa2 <strstr+0x1ae>
  401fb4:	f1b9 3fff 	cmp.w	r9, #4294967295
  401fb8:	d012      	beq.n	401fe0 <strstr+0x1ec>
  401fba:	eb05 0209 	add.w	r2, r5, r9
  401fbe:	f89a 3000 	ldrb.w	r3, [sl]
  401fc2:	f81b 1002 	ldrb.w	r1, [fp, r2]
  401fc6:	4299      	cmp	r1, r3
  401fc8:	445a      	add	r2, fp
  401fca:	d114      	bne.n	401ff6 <strstr+0x202>
  401fcc:	4653      	mov	r3, sl
  401fce:	e005      	b.n	401fdc <strstr+0x1e8>
  401fd0:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401fd4:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401fd8:	4288      	cmp	r0, r1
  401fda:	d10c      	bne.n	401ff6 <strstr+0x202>
  401fdc:	42b3      	cmp	r3, r6
  401fde:	d1f7      	bne.n	401fd0 <strstr+0x1dc>
  401fe0:	465f      	mov	r7, fp
  401fe2:	1978      	adds	r0, r7, r5
  401fe4:	b005      	add	sp, #20
  401fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401fea:	f1c8 0201 	rsb	r2, r8, #1
  401fee:	4415      	add	r5, r2
  401ff0:	441d      	add	r5, r3
  401ff2:	4638      	mov	r0, r7
  401ff4:	e7ba      	b.n	401f6c <strstr+0x178>
  401ff6:	9b03      	ldr	r3, [sp, #12]
  401ff8:	4638      	mov	r0, r7
  401ffa:	441d      	add	r5, r3
  401ffc:	e7b6      	b.n	401f6c <strstr+0x178>
  401ffe:	780b      	ldrb	r3, [r1, #0]
  402000:	b913      	cbnz	r3, 402008 <strstr+0x214>
  402002:	4770      	bx	lr
  402004:	4641      	mov	r1, r8
  402006:	e790      	b.n	401f2a <strstr+0x136>
  402008:	2000      	movs	r0, #0
  40200a:	4770      	bx	lr

0040200c <_svfprintf_r>:
  40200c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402010:	b0c3      	sub	sp, #268	; 0x10c
  402012:	460c      	mov	r4, r1
  402014:	910b      	str	r1, [sp, #44]	; 0x2c
  402016:	4692      	mov	sl, r2
  402018:	930f      	str	r3, [sp, #60]	; 0x3c
  40201a:	900c      	str	r0, [sp, #48]	; 0x30
  40201c:	f002 fa0c 	bl	404438 <_localeconv_r>
  402020:	6803      	ldr	r3, [r0, #0]
  402022:	931a      	str	r3, [sp, #104]	; 0x68
  402024:	4618      	mov	r0, r3
  402026:	f003 f90b 	bl	405240 <strlen>
  40202a:	89a3      	ldrh	r3, [r4, #12]
  40202c:	9019      	str	r0, [sp, #100]	; 0x64
  40202e:	0619      	lsls	r1, r3, #24
  402030:	d503      	bpl.n	40203a <_svfprintf_r+0x2e>
  402032:	6923      	ldr	r3, [r4, #16]
  402034:	2b00      	cmp	r3, #0
  402036:	f001 8003 	beq.w	403040 <_svfprintf_r+0x1034>
  40203a:	2300      	movs	r3, #0
  40203c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  402040:	9313      	str	r3, [sp, #76]	; 0x4c
  402042:	9315      	str	r3, [sp, #84]	; 0x54
  402044:	9314      	str	r3, [sp, #80]	; 0x50
  402046:	9327      	str	r3, [sp, #156]	; 0x9c
  402048:	9326      	str	r3, [sp, #152]	; 0x98
  40204a:	9318      	str	r3, [sp, #96]	; 0x60
  40204c:	931b      	str	r3, [sp, #108]	; 0x6c
  40204e:	9309      	str	r3, [sp, #36]	; 0x24
  402050:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402054:	46c8      	mov	r8, r9
  402056:	9316      	str	r3, [sp, #88]	; 0x58
  402058:	9317      	str	r3, [sp, #92]	; 0x5c
  40205a:	f89a 3000 	ldrb.w	r3, [sl]
  40205e:	4654      	mov	r4, sl
  402060:	b1e3      	cbz	r3, 40209c <_svfprintf_r+0x90>
  402062:	2b25      	cmp	r3, #37	; 0x25
  402064:	d102      	bne.n	40206c <_svfprintf_r+0x60>
  402066:	e019      	b.n	40209c <_svfprintf_r+0x90>
  402068:	2b25      	cmp	r3, #37	; 0x25
  40206a:	d003      	beq.n	402074 <_svfprintf_r+0x68>
  40206c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402070:	2b00      	cmp	r3, #0
  402072:	d1f9      	bne.n	402068 <_svfprintf_r+0x5c>
  402074:	eba4 050a 	sub.w	r5, r4, sl
  402078:	b185      	cbz	r5, 40209c <_svfprintf_r+0x90>
  40207a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40207c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40207e:	f8c8 a000 	str.w	sl, [r8]
  402082:	3301      	adds	r3, #1
  402084:	442a      	add	r2, r5
  402086:	2b07      	cmp	r3, #7
  402088:	f8c8 5004 	str.w	r5, [r8, #4]
  40208c:	9227      	str	r2, [sp, #156]	; 0x9c
  40208e:	9326      	str	r3, [sp, #152]	; 0x98
  402090:	dc7f      	bgt.n	402192 <_svfprintf_r+0x186>
  402092:	f108 0808 	add.w	r8, r8, #8
  402096:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402098:	442b      	add	r3, r5
  40209a:	9309      	str	r3, [sp, #36]	; 0x24
  40209c:	7823      	ldrb	r3, [r4, #0]
  40209e:	2b00      	cmp	r3, #0
  4020a0:	d07f      	beq.n	4021a2 <_svfprintf_r+0x196>
  4020a2:	2300      	movs	r3, #0
  4020a4:	461a      	mov	r2, r3
  4020a6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4020aa:	4619      	mov	r1, r3
  4020ac:	930d      	str	r3, [sp, #52]	; 0x34
  4020ae:	469b      	mov	fp, r3
  4020b0:	f04f 30ff 	mov.w	r0, #4294967295
  4020b4:	7863      	ldrb	r3, [r4, #1]
  4020b6:	900a      	str	r0, [sp, #40]	; 0x28
  4020b8:	f104 0a01 	add.w	sl, r4, #1
  4020bc:	f10a 0a01 	add.w	sl, sl, #1
  4020c0:	f1a3 0020 	sub.w	r0, r3, #32
  4020c4:	2858      	cmp	r0, #88	; 0x58
  4020c6:	f200 83c1 	bhi.w	40284c <_svfprintf_r+0x840>
  4020ca:	e8df f010 	tbh	[pc, r0, lsl #1]
  4020ce:	0238      	.short	0x0238
  4020d0:	03bf03bf 	.word	0x03bf03bf
  4020d4:	03bf0240 	.word	0x03bf0240
  4020d8:	03bf03bf 	.word	0x03bf03bf
  4020dc:	03bf03bf 	.word	0x03bf03bf
  4020e0:	024503bf 	.word	0x024503bf
  4020e4:	03bf0203 	.word	0x03bf0203
  4020e8:	026b005d 	.word	0x026b005d
  4020ec:	028603bf 	.word	0x028603bf
  4020f0:	039d039d 	.word	0x039d039d
  4020f4:	039d039d 	.word	0x039d039d
  4020f8:	039d039d 	.word	0x039d039d
  4020fc:	039d039d 	.word	0x039d039d
  402100:	03bf039d 	.word	0x03bf039d
  402104:	03bf03bf 	.word	0x03bf03bf
  402108:	03bf03bf 	.word	0x03bf03bf
  40210c:	03bf03bf 	.word	0x03bf03bf
  402110:	03bf03bf 	.word	0x03bf03bf
  402114:	033703bf 	.word	0x033703bf
  402118:	03bf0357 	.word	0x03bf0357
  40211c:	03bf0357 	.word	0x03bf0357
  402120:	03bf03bf 	.word	0x03bf03bf
  402124:	039803bf 	.word	0x039803bf
  402128:	03bf03bf 	.word	0x03bf03bf
  40212c:	03bf03ad 	.word	0x03bf03ad
  402130:	03bf03bf 	.word	0x03bf03bf
  402134:	03bf03bf 	.word	0x03bf03bf
  402138:	03bf0259 	.word	0x03bf0259
  40213c:	031e03bf 	.word	0x031e03bf
  402140:	03bf03bf 	.word	0x03bf03bf
  402144:	03bf03bf 	.word	0x03bf03bf
  402148:	03bf03bf 	.word	0x03bf03bf
  40214c:	03bf03bf 	.word	0x03bf03bf
  402150:	03bf03bf 	.word	0x03bf03bf
  402154:	02db02c6 	.word	0x02db02c6
  402158:	03570357 	.word	0x03570357
  40215c:	028b0357 	.word	0x028b0357
  402160:	03bf02db 	.word	0x03bf02db
  402164:	029003bf 	.word	0x029003bf
  402168:	029d03bf 	.word	0x029d03bf
  40216c:	02b401cc 	.word	0x02b401cc
  402170:	03bf0208 	.word	0x03bf0208
  402174:	03bf01e1 	.word	0x03bf01e1
  402178:	03bf007e 	.word	0x03bf007e
  40217c:	020d03bf 	.word	0x020d03bf
  402180:	980d      	ldr	r0, [sp, #52]	; 0x34
  402182:	930f      	str	r3, [sp, #60]	; 0x3c
  402184:	4240      	negs	r0, r0
  402186:	900d      	str	r0, [sp, #52]	; 0x34
  402188:	f04b 0b04 	orr.w	fp, fp, #4
  40218c:	f89a 3000 	ldrb.w	r3, [sl]
  402190:	e794      	b.n	4020bc <_svfprintf_r+0xb0>
  402192:	aa25      	add	r2, sp, #148	; 0x94
  402194:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402196:	980c      	ldr	r0, [sp, #48]	; 0x30
  402198:	f003 f8c0 	bl	40531c <__ssprint_r>
  40219c:	b940      	cbnz	r0, 4021b0 <_svfprintf_r+0x1a4>
  40219e:	46c8      	mov	r8, r9
  4021a0:	e779      	b.n	402096 <_svfprintf_r+0x8a>
  4021a2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  4021a4:	b123      	cbz	r3, 4021b0 <_svfprintf_r+0x1a4>
  4021a6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4021a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4021aa:	aa25      	add	r2, sp, #148	; 0x94
  4021ac:	f003 f8b6 	bl	40531c <__ssprint_r>
  4021b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4021b2:	899b      	ldrh	r3, [r3, #12]
  4021b4:	f013 0f40 	tst.w	r3, #64	; 0x40
  4021b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4021ba:	bf18      	it	ne
  4021bc:	f04f 33ff 	movne.w	r3, #4294967295
  4021c0:	9309      	str	r3, [sp, #36]	; 0x24
  4021c2:	9809      	ldr	r0, [sp, #36]	; 0x24
  4021c4:	b043      	add	sp, #268	; 0x10c
  4021c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4021ca:	f01b 0f20 	tst.w	fp, #32
  4021ce:	9311      	str	r3, [sp, #68]	; 0x44
  4021d0:	f040 81dd 	bne.w	40258e <_svfprintf_r+0x582>
  4021d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4021d6:	f01b 0f10 	tst.w	fp, #16
  4021da:	4613      	mov	r3, r2
  4021dc:	f040 856e 	bne.w	402cbc <_svfprintf_r+0xcb0>
  4021e0:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4021e4:	f000 856a 	beq.w	402cbc <_svfprintf_r+0xcb0>
  4021e8:	8814      	ldrh	r4, [r2, #0]
  4021ea:	3204      	adds	r2, #4
  4021ec:	2500      	movs	r5, #0
  4021ee:	2301      	movs	r3, #1
  4021f0:	920f      	str	r2, [sp, #60]	; 0x3c
  4021f2:	2700      	movs	r7, #0
  4021f4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4021f8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4021fa:	1c4a      	adds	r2, r1, #1
  4021fc:	f000 8265 	beq.w	4026ca <_svfprintf_r+0x6be>
  402200:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402204:	9207      	str	r2, [sp, #28]
  402206:	ea54 0205 	orrs.w	r2, r4, r5
  40220a:	f040 8264 	bne.w	4026d6 <_svfprintf_r+0x6ca>
  40220e:	2900      	cmp	r1, #0
  402210:	f040 843c 	bne.w	402a8c <_svfprintf_r+0xa80>
  402214:	2b00      	cmp	r3, #0
  402216:	f040 84d7 	bne.w	402bc8 <_svfprintf_r+0xbbc>
  40221a:	f01b 0301 	ands.w	r3, fp, #1
  40221e:	930e      	str	r3, [sp, #56]	; 0x38
  402220:	f000 8604 	beq.w	402e2c <_svfprintf_r+0xe20>
  402224:	ae42      	add	r6, sp, #264	; 0x108
  402226:	2330      	movs	r3, #48	; 0x30
  402228:	f806 3d41 	strb.w	r3, [r6, #-65]!
  40222c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40222e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402230:	4293      	cmp	r3, r2
  402232:	bfb8      	it	lt
  402234:	4613      	movlt	r3, r2
  402236:	9308      	str	r3, [sp, #32]
  402238:	2300      	movs	r3, #0
  40223a:	9312      	str	r3, [sp, #72]	; 0x48
  40223c:	b117      	cbz	r7, 402244 <_svfprintf_r+0x238>
  40223e:	9b08      	ldr	r3, [sp, #32]
  402240:	3301      	adds	r3, #1
  402242:	9308      	str	r3, [sp, #32]
  402244:	9b07      	ldr	r3, [sp, #28]
  402246:	f013 0302 	ands.w	r3, r3, #2
  40224a:	9310      	str	r3, [sp, #64]	; 0x40
  40224c:	d002      	beq.n	402254 <_svfprintf_r+0x248>
  40224e:	9b08      	ldr	r3, [sp, #32]
  402250:	3302      	adds	r3, #2
  402252:	9308      	str	r3, [sp, #32]
  402254:	9b07      	ldr	r3, [sp, #28]
  402256:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  40225a:	f040 830e 	bne.w	40287a <_svfprintf_r+0x86e>
  40225e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402260:	9a08      	ldr	r2, [sp, #32]
  402262:	eba3 0b02 	sub.w	fp, r3, r2
  402266:	f1bb 0f00 	cmp.w	fp, #0
  40226a:	f340 8306 	ble.w	40287a <_svfprintf_r+0x86e>
  40226e:	f1bb 0f10 	cmp.w	fp, #16
  402272:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402274:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402276:	dd29      	ble.n	4022cc <_svfprintf_r+0x2c0>
  402278:	4643      	mov	r3, r8
  40227a:	4621      	mov	r1, r4
  40227c:	46a8      	mov	r8, r5
  40227e:	2710      	movs	r7, #16
  402280:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402282:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402284:	e006      	b.n	402294 <_svfprintf_r+0x288>
  402286:	f1ab 0b10 	sub.w	fp, fp, #16
  40228a:	f1bb 0f10 	cmp.w	fp, #16
  40228e:	f103 0308 	add.w	r3, r3, #8
  402292:	dd18      	ble.n	4022c6 <_svfprintf_r+0x2ba>
  402294:	3201      	adds	r2, #1
  402296:	48b7      	ldr	r0, [pc, #732]	; (402574 <_svfprintf_r+0x568>)
  402298:	9226      	str	r2, [sp, #152]	; 0x98
  40229a:	3110      	adds	r1, #16
  40229c:	2a07      	cmp	r2, #7
  40229e:	9127      	str	r1, [sp, #156]	; 0x9c
  4022a0:	e883 0081 	stmia.w	r3, {r0, r7}
  4022a4:	ddef      	ble.n	402286 <_svfprintf_r+0x27a>
  4022a6:	aa25      	add	r2, sp, #148	; 0x94
  4022a8:	4629      	mov	r1, r5
  4022aa:	4620      	mov	r0, r4
  4022ac:	f003 f836 	bl	40531c <__ssprint_r>
  4022b0:	2800      	cmp	r0, #0
  4022b2:	f47f af7d 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  4022b6:	f1ab 0b10 	sub.w	fp, fp, #16
  4022ba:	f1bb 0f10 	cmp.w	fp, #16
  4022be:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4022c0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4022c2:	464b      	mov	r3, r9
  4022c4:	dce6      	bgt.n	402294 <_svfprintf_r+0x288>
  4022c6:	4645      	mov	r5, r8
  4022c8:	460c      	mov	r4, r1
  4022ca:	4698      	mov	r8, r3
  4022cc:	3201      	adds	r2, #1
  4022ce:	4ba9      	ldr	r3, [pc, #676]	; (402574 <_svfprintf_r+0x568>)
  4022d0:	9226      	str	r2, [sp, #152]	; 0x98
  4022d2:	445c      	add	r4, fp
  4022d4:	2a07      	cmp	r2, #7
  4022d6:	9427      	str	r4, [sp, #156]	; 0x9c
  4022d8:	e888 0808 	stmia.w	r8, {r3, fp}
  4022dc:	f300 8498 	bgt.w	402c10 <_svfprintf_r+0xc04>
  4022e0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4022e4:	f108 0808 	add.w	r8, r8, #8
  4022e8:	b177      	cbz	r7, 402308 <_svfprintf_r+0x2fc>
  4022ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022ec:	3301      	adds	r3, #1
  4022ee:	3401      	adds	r4, #1
  4022f0:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  4022f4:	2201      	movs	r2, #1
  4022f6:	2b07      	cmp	r3, #7
  4022f8:	9427      	str	r4, [sp, #156]	; 0x9c
  4022fa:	9326      	str	r3, [sp, #152]	; 0x98
  4022fc:	e888 0006 	stmia.w	r8, {r1, r2}
  402300:	f300 83db 	bgt.w	402aba <_svfprintf_r+0xaae>
  402304:	f108 0808 	add.w	r8, r8, #8
  402308:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40230a:	b16b      	cbz	r3, 402328 <_svfprintf_r+0x31c>
  40230c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40230e:	3301      	adds	r3, #1
  402310:	3402      	adds	r4, #2
  402312:	a91e      	add	r1, sp, #120	; 0x78
  402314:	2202      	movs	r2, #2
  402316:	2b07      	cmp	r3, #7
  402318:	9427      	str	r4, [sp, #156]	; 0x9c
  40231a:	9326      	str	r3, [sp, #152]	; 0x98
  40231c:	e888 0006 	stmia.w	r8, {r1, r2}
  402320:	f300 83d6 	bgt.w	402ad0 <_svfprintf_r+0xac4>
  402324:	f108 0808 	add.w	r8, r8, #8
  402328:	2d80      	cmp	r5, #128	; 0x80
  40232a:	f000 8315 	beq.w	402958 <_svfprintf_r+0x94c>
  40232e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402330:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402332:	1a9f      	subs	r7, r3, r2
  402334:	2f00      	cmp	r7, #0
  402336:	dd36      	ble.n	4023a6 <_svfprintf_r+0x39a>
  402338:	2f10      	cmp	r7, #16
  40233a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40233c:	4d8e      	ldr	r5, [pc, #568]	; (402578 <_svfprintf_r+0x56c>)
  40233e:	dd27      	ble.n	402390 <_svfprintf_r+0x384>
  402340:	4642      	mov	r2, r8
  402342:	4621      	mov	r1, r4
  402344:	46b0      	mov	r8, r6
  402346:	f04f 0b10 	mov.w	fp, #16
  40234a:	462e      	mov	r6, r5
  40234c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40234e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402350:	e004      	b.n	40235c <_svfprintf_r+0x350>
  402352:	3f10      	subs	r7, #16
  402354:	2f10      	cmp	r7, #16
  402356:	f102 0208 	add.w	r2, r2, #8
  40235a:	dd15      	ble.n	402388 <_svfprintf_r+0x37c>
  40235c:	3301      	adds	r3, #1
  40235e:	3110      	adds	r1, #16
  402360:	2b07      	cmp	r3, #7
  402362:	9127      	str	r1, [sp, #156]	; 0x9c
  402364:	9326      	str	r3, [sp, #152]	; 0x98
  402366:	e882 0840 	stmia.w	r2, {r6, fp}
  40236a:	ddf2      	ble.n	402352 <_svfprintf_r+0x346>
  40236c:	aa25      	add	r2, sp, #148	; 0x94
  40236e:	4629      	mov	r1, r5
  402370:	4620      	mov	r0, r4
  402372:	f002 ffd3 	bl	40531c <__ssprint_r>
  402376:	2800      	cmp	r0, #0
  402378:	f47f af1a 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  40237c:	3f10      	subs	r7, #16
  40237e:	2f10      	cmp	r7, #16
  402380:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402382:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402384:	464a      	mov	r2, r9
  402386:	dce9      	bgt.n	40235c <_svfprintf_r+0x350>
  402388:	4635      	mov	r5, r6
  40238a:	460c      	mov	r4, r1
  40238c:	4646      	mov	r6, r8
  40238e:	4690      	mov	r8, r2
  402390:	3301      	adds	r3, #1
  402392:	443c      	add	r4, r7
  402394:	2b07      	cmp	r3, #7
  402396:	9427      	str	r4, [sp, #156]	; 0x9c
  402398:	9326      	str	r3, [sp, #152]	; 0x98
  40239a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40239e:	f300 8381 	bgt.w	402aa4 <_svfprintf_r+0xa98>
  4023a2:	f108 0808 	add.w	r8, r8, #8
  4023a6:	9b07      	ldr	r3, [sp, #28]
  4023a8:	05df      	lsls	r7, r3, #23
  4023aa:	f100 8268 	bmi.w	40287e <_svfprintf_r+0x872>
  4023ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023b0:	990e      	ldr	r1, [sp, #56]	; 0x38
  4023b2:	f8c8 6000 	str.w	r6, [r8]
  4023b6:	3301      	adds	r3, #1
  4023b8:	440c      	add	r4, r1
  4023ba:	2b07      	cmp	r3, #7
  4023bc:	9427      	str	r4, [sp, #156]	; 0x9c
  4023be:	f8c8 1004 	str.w	r1, [r8, #4]
  4023c2:	9326      	str	r3, [sp, #152]	; 0x98
  4023c4:	f300 834d 	bgt.w	402a62 <_svfprintf_r+0xa56>
  4023c8:	f108 0808 	add.w	r8, r8, #8
  4023cc:	9b07      	ldr	r3, [sp, #28]
  4023ce:	075b      	lsls	r3, r3, #29
  4023d0:	d53a      	bpl.n	402448 <_svfprintf_r+0x43c>
  4023d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4023d4:	9a08      	ldr	r2, [sp, #32]
  4023d6:	1a9d      	subs	r5, r3, r2
  4023d8:	2d00      	cmp	r5, #0
  4023da:	dd35      	ble.n	402448 <_svfprintf_r+0x43c>
  4023dc:	2d10      	cmp	r5, #16
  4023de:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023e0:	dd20      	ble.n	402424 <_svfprintf_r+0x418>
  4023e2:	2610      	movs	r6, #16
  4023e4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4023e6:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  4023ea:	e004      	b.n	4023f6 <_svfprintf_r+0x3ea>
  4023ec:	3d10      	subs	r5, #16
  4023ee:	2d10      	cmp	r5, #16
  4023f0:	f108 0808 	add.w	r8, r8, #8
  4023f4:	dd16      	ble.n	402424 <_svfprintf_r+0x418>
  4023f6:	3301      	adds	r3, #1
  4023f8:	4a5e      	ldr	r2, [pc, #376]	; (402574 <_svfprintf_r+0x568>)
  4023fa:	9326      	str	r3, [sp, #152]	; 0x98
  4023fc:	3410      	adds	r4, #16
  4023fe:	2b07      	cmp	r3, #7
  402400:	9427      	str	r4, [sp, #156]	; 0x9c
  402402:	e888 0044 	stmia.w	r8, {r2, r6}
  402406:	ddf1      	ble.n	4023ec <_svfprintf_r+0x3e0>
  402408:	aa25      	add	r2, sp, #148	; 0x94
  40240a:	4659      	mov	r1, fp
  40240c:	4638      	mov	r0, r7
  40240e:	f002 ff85 	bl	40531c <__ssprint_r>
  402412:	2800      	cmp	r0, #0
  402414:	f47f aecc 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402418:	3d10      	subs	r5, #16
  40241a:	2d10      	cmp	r5, #16
  40241c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40241e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402420:	46c8      	mov	r8, r9
  402422:	dce8      	bgt.n	4023f6 <_svfprintf_r+0x3ea>
  402424:	3301      	adds	r3, #1
  402426:	4a53      	ldr	r2, [pc, #332]	; (402574 <_svfprintf_r+0x568>)
  402428:	9326      	str	r3, [sp, #152]	; 0x98
  40242a:	442c      	add	r4, r5
  40242c:	2b07      	cmp	r3, #7
  40242e:	9427      	str	r4, [sp, #156]	; 0x9c
  402430:	e888 0024 	stmia.w	r8, {r2, r5}
  402434:	dd08      	ble.n	402448 <_svfprintf_r+0x43c>
  402436:	aa25      	add	r2, sp, #148	; 0x94
  402438:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40243a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40243c:	f002 ff6e 	bl	40531c <__ssprint_r>
  402440:	2800      	cmp	r0, #0
  402442:	f47f aeb5 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402446:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402448:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40244a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40244c:	9908      	ldr	r1, [sp, #32]
  40244e:	428a      	cmp	r2, r1
  402450:	bfac      	ite	ge
  402452:	189b      	addge	r3, r3, r2
  402454:	185b      	addlt	r3, r3, r1
  402456:	9309      	str	r3, [sp, #36]	; 0x24
  402458:	2c00      	cmp	r4, #0
  40245a:	f040 830d 	bne.w	402a78 <_svfprintf_r+0xa6c>
  40245e:	2300      	movs	r3, #0
  402460:	9326      	str	r3, [sp, #152]	; 0x98
  402462:	46c8      	mov	r8, r9
  402464:	e5f9      	b.n	40205a <_svfprintf_r+0x4e>
  402466:	9311      	str	r3, [sp, #68]	; 0x44
  402468:	f01b 0320 	ands.w	r3, fp, #32
  40246c:	f040 81e3 	bne.w	402836 <_svfprintf_r+0x82a>
  402470:	f01b 0210 	ands.w	r2, fp, #16
  402474:	f040 842e 	bne.w	402cd4 <_svfprintf_r+0xcc8>
  402478:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  40247c:	f000 842a 	beq.w	402cd4 <_svfprintf_r+0xcc8>
  402480:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402482:	4613      	mov	r3, r2
  402484:	460a      	mov	r2, r1
  402486:	3204      	adds	r2, #4
  402488:	880c      	ldrh	r4, [r1, #0]
  40248a:	920f      	str	r2, [sp, #60]	; 0x3c
  40248c:	2500      	movs	r5, #0
  40248e:	e6b0      	b.n	4021f2 <_svfprintf_r+0x1e6>
  402490:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402492:	9311      	str	r3, [sp, #68]	; 0x44
  402494:	6816      	ldr	r6, [r2, #0]
  402496:	2400      	movs	r4, #0
  402498:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  40249c:	1d15      	adds	r5, r2, #4
  40249e:	2e00      	cmp	r6, #0
  4024a0:	f000 86a7 	beq.w	4031f2 <_svfprintf_r+0x11e6>
  4024a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4024a6:	1c53      	adds	r3, r2, #1
  4024a8:	f000 8609 	beq.w	4030be <_svfprintf_r+0x10b2>
  4024ac:	4621      	mov	r1, r4
  4024ae:	4630      	mov	r0, r6
  4024b0:	f002 fa86 	bl	4049c0 <memchr>
  4024b4:	2800      	cmp	r0, #0
  4024b6:	f000 86e1 	beq.w	40327c <_svfprintf_r+0x1270>
  4024ba:	1b83      	subs	r3, r0, r6
  4024bc:	930e      	str	r3, [sp, #56]	; 0x38
  4024be:	940a      	str	r4, [sp, #40]	; 0x28
  4024c0:	950f      	str	r5, [sp, #60]	; 0x3c
  4024c2:	f8cd b01c 	str.w	fp, [sp, #28]
  4024c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4024ca:	9308      	str	r3, [sp, #32]
  4024cc:	9412      	str	r4, [sp, #72]	; 0x48
  4024ce:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4024d2:	e6b3      	b.n	40223c <_svfprintf_r+0x230>
  4024d4:	f89a 3000 	ldrb.w	r3, [sl]
  4024d8:	2201      	movs	r2, #1
  4024da:	212b      	movs	r1, #43	; 0x2b
  4024dc:	e5ee      	b.n	4020bc <_svfprintf_r+0xb0>
  4024de:	f04b 0b20 	orr.w	fp, fp, #32
  4024e2:	f89a 3000 	ldrb.w	r3, [sl]
  4024e6:	e5e9      	b.n	4020bc <_svfprintf_r+0xb0>
  4024e8:	9311      	str	r3, [sp, #68]	; 0x44
  4024ea:	2a00      	cmp	r2, #0
  4024ec:	f040 8795 	bne.w	40341a <_svfprintf_r+0x140e>
  4024f0:	4b22      	ldr	r3, [pc, #136]	; (40257c <_svfprintf_r+0x570>)
  4024f2:	9318      	str	r3, [sp, #96]	; 0x60
  4024f4:	f01b 0f20 	tst.w	fp, #32
  4024f8:	f040 8111 	bne.w	40271e <_svfprintf_r+0x712>
  4024fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4024fe:	f01b 0f10 	tst.w	fp, #16
  402502:	4613      	mov	r3, r2
  402504:	f040 83e1 	bne.w	402cca <_svfprintf_r+0xcbe>
  402508:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40250c:	f000 83dd 	beq.w	402cca <_svfprintf_r+0xcbe>
  402510:	3304      	adds	r3, #4
  402512:	8814      	ldrh	r4, [r2, #0]
  402514:	930f      	str	r3, [sp, #60]	; 0x3c
  402516:	2500      	movs	r5, #0
  402518:	f01b 0f01 	tst.w	fp, #1
  40251c:	f000 810c 	beq.w	402738 <_svfprintf_r+0x72c>
  402520:	ea54 0305 	orrs.w	r3, r4, r5
  402524:	f000 8108 	beq.w	402738 <_svfprintf_r+0x72c>
  402528:	2330      	movs	r3, #48	; 0x30
  40252a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40252e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  402532:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402536:	f04b 0b02 	orr.w	fp, fp, #2
  40253a:	2302      	movs	r3, #2
  40253c:	e659      	b.n	4021f2 <_svfprintf_r+0x1e6>
  40253e:	f89a 3000 	ldrb.w	r3, [sl]
  402542:	2900      	cmp	r1, #0
  402544:	f47f adba 	bne.w	4020bc <_svfprintf_r+0xb0>
  402548:	2201      	movs	r2, #1
  40254a:	2120      	movs	r1, #32
  40254c:	e5b6      	b.n	4020bc <_svfprintf_r+0xb0>
  40254e:	f04b 0b01 	orr.w	fp, fp, #1
  402552:	f89a 3000 	ldrb.w	r3, [sl]
  402556:	e5b1      	b.n	4020bc <_svfprintf_r+0xb0>
  402558:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40255a:	6823      	ldr	r3, [r4, #0]
  40255c:	930d      	str	r3, [sp, #52]	; 0x34
  40255e:	4618      	mov	r0, r3
  402560:	2800      	cmp	r0, #0
  402562:	4623      	mov	r3, r4
  402564:	f103 0304 	add.w	r3, r3, #4
  402568:	f6ff ae0a 	blt.w	402180 <_svfprintf_r+0x174>
  40256c:	930f      	str	r3, [sp, #60]	; 0x3c
  40256e:	f89a 3000 	ldrb.w	r3, [sl]
  402572:	e5a3      	b.n	4020bc <_svfprintf_r+0xb0>
  402574:	00407580 	.word	0x00407580
  402578:	00407590 	.word	0x00407590
  40257c:	00407560 	.word	0x00407560
  402580:	f04b 0b10 	orr.w	fp, fp, #16
  402584:	f01b 0f20 	tst.w	fp, #32
  402588:	9311      	str	r3, [sp, #68]	; 0x44
  40258a:	f43f ae23 	beq.w	4021d4 <_svfprintf_r+0x1c8>
  40258e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402590:	3507      	adds	r5, #7
  402592:	f025 0307 	bic.w	r3, r5, #7
  402596:	f103 0208 	add.w	r2, r3, #8
  40259a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40259e:	920f      	str	r2, [sp, #60]	; 0x3c
  4025a0:	2301      	movs	r3, #1
  4025a2:	e626      	b.n	4021f2 <_svfprintf_r+0x1e6>
  4025a4:	f89a 3000 	ldrb.w	r3, [sl]
  4025a8:	2b2a      	cmp	r3, #42	; 0x2a
  4025aa:	f10a 0401 	add.w	r4, sl, #1
  4025ae:	f000 8727 	beq.w	403400 <_svfprintf_r+0x13f4>
  4025b2:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4025b6:	2809      	cmp	r0, #9
  4025b8:	46a2      	mov	sl, r4
  4025ba:	f200 86ad 	bhi.w	403318 <_svfprintf_r+0x130c>
  4025be:	2300      	movs	r3, #0
  4025c0:	461c      	mov	r4, r3
  4025c2:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4025c6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4025ca:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4025ce:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4025d2:	2809      	cmp	r0, #9
  4025d4:	d9f5      	bls.n	4025c2 <_svfprintf_r+0x5b6>
  4025d6:	940a      	str	r4, [sp, #40]	; 0x28
  4025d8:	e572      	b.n	4020c0 <_svfprintf_r+0xb4>
  4025da:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4025de:	f89a 3000 	ldrb.w	r3, [sl]
  4025e2:	e56b      	b.n	4020bc <_svfprintf_r+0xb0>
  4025e4:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4025e8:	f89a 3000 	ldrb.w	r3, [sl]
  4025ec:	e566      	b.n	4020bc <_svfprintf_r+0xb0>
  4025ee:	f89a 3000 	ldrb.w	r3, [sl]
  4025f2:	2b6c      	cmp	r3, #108	; 0x6c
  4025f4:	bf03      	ittte	eq
  4025f6:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4025fa:	f04b 0b20 	orreq.w	fp, fp, #32
  4025fe:	f10a 0a01 	addeq.w	sl, sl, #1
  402602:	f04b 0b10 	orrne.w	fp, fp, #16
  402606:	e559      	b.n	4020bc <_svfprintf_r+0xb0>
  402608:	2a00      	cmp	r2, #0
  40260a:	f040 8711 	bne.w	403430 <_svfprintf_r+0x1424>
  40260e:	f01b 0f20 	tst.w	fp, #32
  402612:	f040 84f9 	bne.w	403008 <_svfprintf_r+0xffc>
  402616:	f01b 0f10 	tst.w	fp, #16
  40261a:	f040 84ac 	bne.w	402f76 <_svfprintf_r+0xf6a>
  40261e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402622:	f000 84a8 	beq.w	402f76 <_svfprintf_r+0xf6a>
  402626:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402628:	6813      	ldr	r3, [r2, #0]
  40262a:	3204      	adds	r2, #4
  40262c:	920f      	str	r2, [sp, #60]	; 0x3c
  40262e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402632:	801a      	strh	r2, [r3, #0]
  402634:	e511      	b.n	40205a <_svfprintf_r+0x4e>
  402636:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402638:	4bb3      	ldr	r3, [pc, #716]	; (402908 <_svfprintf_r+0x8fc>)
  40263a:	680c      	ldr	r4, [r1, #0]
  40263c:	9318      	str	r3, [sp, #96]	; 0x60
  40263e:	2230      	movs	r2, #48	; 0x30
  402640:	2378      	movs	r3, #120	; 0x78
  402642:	3104      	adds	r1, #4
  402644:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402648:	9311      	str	r3, [sp, #68]	; 0x44
  40264a:	f04b 0b02 	orr.w	fp, fp, #2
  40264e:	910f      	str	r1, [sp, #60]	; 0x3c
  402650:	2500      	movs	r5, #0
  402652:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402656:	2302      	movs	r3, #2
  402658:	e5cb      	b.n	4021f2 <_svfprintf_r+0x1e6>
  40265a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40265c:	9311      	str	r3, [sp, #68]	; 0x44
  40265e:	680a      	ldr	r2, [r1, #0]
  402660:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402664:	2300      	movs	r3, #0
  402666:	460a      	mov	r2, r1
  402668:	461f      	mov	r7, r3
  40266a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40266e:	3204      	adds	r2, #4
  402670:	2301      	movs	r3, #1
  402672:	9308      	str	r3, [sp, #32]
  402674:	f8cd b01c 	str.w	fp, [sp, #28]
  402678:	970a      	str	r7, [sp, #40]	; 0x28
  40267a:	9712      	str	r7, [sp, #72]	; 0x48
  40267c:	920f      	str	r2, [sp, #60]	; 0x3c
  40267e:	930e      	str	r3, [sp, #56]	; 0x38
  402680:	ae28      	add	r6, sp, #160	; 0xa0
  402682:	e5df      	b.n	402244 <_svfprintf_r+0x238>
  402684:	9311      	str	r3, [sp, #68]	; 0x44
  402686:	2a00      	cmp	r2, #0
  402688:	f040 86ea 	bne.w	403460 <_svfprintf_r+0x1454>
  40268c:	f01b 0f20 	tst.w	fp, #32
  402690:	d15d      	bne.n	40274e <_svfprintf_r+0x742>
  402692:	f01b 0f10 	tst.w	fp, #16
  402696:	f040 8308 	bne.w	402caa <_svfprintf_r+0xc9e>
  40269a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40269e:	f000 8304 	beq.w	402caa <_svfprintf_r+0xc9e>
  4026a2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4026a4:	f9b1 4000 	ldrsh.w	r4, [r1]
  4026a8:	3104      	adds	r1, #4
  4026aa:	17e5      	asrs	r5, r4, #31
  4026ac:	4622      	mov	r2, r4
  4026ae:	462b      	mov	r3, r5
  4026b0:	910f      	str	r1, [sp, #60]	; 0x3c
  4026b2:	2a00      	cmp	r2, #0
  4026b4:	f173 0300 	sbcs.w	r3, r3, #0
  4026b8:	db58      	blt.n	40276c <_svfprintf_r+0x760>
  4026ba:	990a      	ldr	r1, [sp, #40]	; 0x28
  4026bc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4026c0:	1c4a      	adds	r2, r1, #1
  4026c2:	f04f 0301 	mov.w	r3, #1
  4026c6:	f47f ad9b 	bne.w	402200 <_svfprintf_r+0x1f4>
  4026ca:	ea54 0205 	orrs.w	r2, r4, r5
  4026ce:	f000 81df 	beq.w	402a90 <_svfprintf_r+0xa84>
  4026d2:	f8cd b01c 	str.w	fp, [sp, #28]
  4026d6:	2b01      	cmp	r3, #1
  4026d8:	f000 827b 	beq.w	402bd2 <_svfprintf_r+0xbc6>
  4026dc:	2b02      	cmp	r3, #2
  4026de:	f040 8206 	bne.w	402aee <_svfprintf_r+0xae2>
  4026e2:	9818      	ldr	r0, [sp, #96]	; 0x60
  4026e4:	464e      	mov	r6, r9
  4026e6:	0923      	lsrs	r3, r4, #4
  4026e8:	f004 010f 	and.w	r1, r4, #15
  4026ec:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  4026f0:	092a      	lsrs	r2, r5, #4
  4026f2:	461c      	mov	r4, r3
  4026f4:	4615      	mov	r5, r2
  4026f6:	5c43      	ldrb	r3, [r0, r1]
  4026f8:	f806 3d01 	strb.w	r3, [r6, #-1]!
  4026fc:	ea54 0305 	orrs.w	r3, r4, r5
  402700:	d1f1      	bne.n	4026e6 <_svfprintf_r+0x6da>
  402702:	eba9 0306 	sub.w	r3, r9, r6
  402706:	930e      	str	r3, [sp, #56]	; 0x38
  402708:	e590      	b.n	40222c <_svfprintf_r+0x220>
  40270a:	9311      	str	r3, [sp, #68]	; 0x44
  40270c:	2a00      	cmp	r2, #0
  40270e:	f040 86a3 	bne.w	403458 <_svfprintf_r+0x144c>
  402712:	4b7e      	ldr	r3, [pc, #504]	; (40290c <_svfprintf_r+0x900>)
  402714:	9318      	str	r3, [sp, #96]	; 0x60
  402716:	f01b 0f20 	tst.w	fp, #32
  40271a:	f43f aeef 	beq.w	4024fc <_svfprintf_r+0x4f0>
  40271e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402720:	3507      	adds	r5, #7
  402722:	f025 0307 	bic.w	r3, r5, #7
  402726:	f103 0208 	add.w	r2, r3, #8
  40272a:	f01b 0f01 	tst.w	fp, #1
  40272e:	920f      	str	r2, [sp, #60]	; 0x3c
  402730:	e9d3 4500 	ldrd	r4, r5, [r3]
  402734:	f47f aef4 	bne.w	402520 <_svfprintf_r+0x514>
  402738:	2302      	movs	r3, #2
  40273a:	e55a      	b.n	4021f2 <_svfprintf_r+0x1e6>
  40273c:	9311      	str	r3, [sp, #68]	; 0x44
  40273e:	2a00      	cmp	r2, #0
  402740:	f040 8686 	bne.w	403450 <_svfprintf_r+0x1444>
  402744:	f04b 0b10 	orr.w	fp, fp, #16
  402748:	f01b 0f20 	tst.w	fp, #32
  40274c:	d0a1      	beq.n	402692 <_svfprintf_r+0x686>
  40274e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402750:	3507      	adds	r5, #7
  402752:	f025 0507 	bic.w	r5, r5, #7
  402756:	e9d5 2300 	ldrd	r2, r3, [r5]
  40275a:	2a00      	cmp	r2, #0
  40275c:	f105 0108 	add.w	r1, r5, #8
  402760:	461d      	mov	r5, r3
  402762:	f173 0300 	sbcs.w	r3, r3, #0
  402766:	910f      	str	r1, [sp, #60]	; 0x3c
  402768:	4614      	mov	r4, r2
  40276a:	daa6      	bge.n	4026ba <_svfprintf_r+0x6ae>
  40276c:	272d      	movs	r7, #45	; 0x2d
  40276e:	4264      	negs	r4, r4
  402770:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402774:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402778:	2301      	movs	r3, #1
  40277a:	e53d      	b.n	4021f8 <_svfprintf_r+0x1ec>
  40277c:	9311      	str	r3, [sp, #68]	; 0x44
  40277e:	2a00      	cmp	r2, #0
  402780:	f040 8662 	bne.w	403448 <_svfprintf_r+0x143c>
  402784:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402786:	3507      	adds	r5, #7
  402788:	f025 0307 	bic.w	r3, r5, #7
  40278c:	f103 0208 	add.w	r2, r3, #8
  402790:	920f      	str	r2, [sp, #60]	; 0x3c
  402792:	681a      	ldr	r2, [r3, #0]
  402794:	9215      	str	r2, [sp, #84]	; 0x54
  402796:	685b      	ldr	r3, [r3, #4]
  402798:	9314      	str	r3, [sp, #80]	; 0x50
  40279a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40279c:	9d15      	ldr	r5, [sp, #84]	; 0x54
  40279e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4027a2:	4628      	mov	r0, r5
  4027a4:	4621      	mov	r1, r4
  4027a6:	f04f 32ff 	mov.w	r2, #4294967295
  4027aa:	4b59      	ldr	r3, [pc, #356]	; (402910 <_svfprintf_r+0x904>)
  4027ac:	f003 fe7c 	bl	4064a8 <__aeabi_dcmpun>
  4027b0:	2800      	cmp	r0, #0
  4027b2:	f040 834a 	bne.w	402e4a <_svfprintf_r+0xe3e>
  4027b6:	4628      	mov	r0, r5
  4027b8:	4621      	mov	r1, r4
  4027ba:	f04f 32ff 	mov.w	r2, #4294967295
  4027be:	4b54      	ldr	r3, [pc, #336]	; (402910 <_svfprintf_r+0x904>)
  4027c0:	f003 fe54 	bl	40646c <__aeabi_dcmple>
  4027c4:	2800      	cmp	r0, #0
  4027c6:	f040 8340 	bne.w	402e4a <_svfprintf_r+0xe3e>
  4027ca:	a815      	add	r0, sp, #84	; 0x54
  4027cc:	c80d      	ldmia	r0, {r0, r2, r3}
  4027ce:	9914      	ldr	r1, [sp, #80]	; 0x50
  4027d0:	f003 fe42 	bl	406458 <__aeabi_dcmplt>
  4027d4:	2800      	cmp	r0, #0
  4027d6:	f040 8530 	bne.w	40323a <_svfprintf_r+0x122e>
  4027da:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4027de:	4e4d      	ldr	r6, [pc, #308]	; (402914 <_svfprintf_r+0x908>)
  4027e0:	4b4d      	ldr	r3, [pc, #308]	; (402918 <_svfprintf_r+0x90c>)
  4027e2:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  4027e6:	9007      	str	r0, [sp, #28]
  4027e8:	9811      	ldr	r0, [sp, #68]	; 0x44
  4027ea:	2203      	movs	r2, #3
  4027ec:	2100      	movs	r1, #0
  4027ee:	9208      	str	r2, [sp, #32]
  4027f0:	910a      	str	r1, [sp, #40]	; 0x28
  4027f2:	2847      	cmp	r0, #71	; 0x47
  4027f4:	bfd8      	it	le
  4027f6:	461e      	movle	r6, r3
  4027f8:	920e      	str	r2, [sp, #56]	; 0x38
  4027fa:	9112      	str	r1, [sp, #72]	; 0x48
  4027fc:	e51e      	b.n	40223c <_svfprintf_r+0x230>
  4027fe:	f04b 0b08 	orr.w	fp, fp, #8
  402802:	f89a 3000 	ldrb.w	r3, [sl]
  402806:	e459      	b.n	4020bc <_svfprintf_r+0xb0>
  402808:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40280c:	2300      	movs	r3, #0
  40280e:	461c      	mov	r4, r3
  402810:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402814:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402818:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40281c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402820:	2809      	cmp	r0, #9
  402822:	d9f5      	bls.n	402810 <_svfprintf_r+0x804>
  402824:	940d      	str	r4, [sp, #52]	; 0x34
  402826:	e44b      	b.n	4020c0 <_svfprintf_r+0xb4>
  402828:	f04b 0b10 	orr.w	fp, fp, #16
  40282c:	9311      	str	r3, [sp, #68]	; 0x44
  40282e:	f01b 0320 	ands.w	r3, fp, #32
  402832:	f43f ae1d 	beq.w	402470 <_svfprintf_r+0x464>
  402836:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402838:	3507      	adds	r5, #7
  40283a:	f025 0307 	bic.w	r3, r5, #7
  40283e:	f103 0208 	add.w	r2, r3, #8
  402842:	e9d3 4500 	ldrd	r4, r5, [r3]
  402846:	920f      	str	r2, [sp, #60]	; 0x3c
  402848:	2300      	movs	r3, #0
  40284a:	e4d2      	b.n	4021f2 <_svfprintf_r+0x1e6>
  40284c:	9311      	str	r3, [sp, #68]	; 0x44
  40284e:	2a00      	cmp	r2, #0
  402850:	f040 85e7 	bne.w	403422 <_svfprintf_r+0x1416>
  402854:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402856:	2a00      	cmp	r2, #0
  402858:	f43f aca3 	beq.w	4021a2 <_svfprintf_r+0x196>
  40285c:	2300      	movs	r3, #0
  40285e:	2101      	movs	r1, #1
  402860:	461f      	mov	r7, r3
  402862:	9108      	str	r1, [sp, #32]
  402864:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402868:	f8cd b01c 	str.w	fp, [sp, #28]
  40286c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402870:	930a      	str	r3, [sp, #40]	; 0x28
  402872:	9312      	str	r3, [sp, #72]	; 0x48
  402874:	910e      	str	r1, [sp, #56]	; 0x38
  402876:	ae28      	add	r6, sp, #160	; 0xa0
  402878:	e4e4      	b.n	402244 <_svfprintf_r+0x238>
  40287a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40287c:	e534      	b.n	4022e8 <_svfprintf_r+0x2dc>
  40287e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402880:	2b65      	cmp	r3, #101	; 0x65
  402882:	f340 80a7 	ble.w	4029d4 <_svfprintf_r+0x9c8>
  402886:	a815      	add	r0, sp, #84	; 0x54
  402888:	c80d      	ldmia	r0, {r0, r2, r3}
  40288a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40288c:	f003 fdda 	bl	406444 <__aeabi_dcmpeq>
  402890:	2800      	cmp	r0, #0
  402892:	f000 8150 	beq.w	402b36 <_svfprintf_r+0xb2a>
  402896:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402898:	4a20      	ldr	r2, [pc, #128]	; (40291c <_svfprintf_r+0x910>)
  40289a:	f8c8 2000 	str.w	r2, [r8]
  40289e:	3301      	adds	r3, #1
  4028a0:	3401      	adds	r4, #1
  4028a2:	2201      	movs	r2, #1
  4028a4:	2b07      	cmp	r3, #7
  4028a6:	9427      	str	r4, [sp, #156]	; 0x9c
  4028a8:	9326      	str	r3, [sp, #152]	; 0x98
  4028aa:	f8c8 2004 	str.w	r2, [r8, #4]
  4028ae:	f300 836a 	bgt.w	402f86 <_svfprintf_r+0xf7a>
  4028b2:	f108 0808 	add.w	r8, r8, #8
  4028b6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4028b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4028ba:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028bc:	4293      	cmp	r3, r2
  4028be:	db03      	blt.n	4028c8 <_svfprintf_r+0x8bc>
  4028c0:	9b07      	ldr	r3, [sp, #28]
  4028c2:	07dd      	lsls	r5, r3, #31
  4028c4:	f57f ad82 	bpl.w	4023cc <_svfprintf_r+0x3c0>
  4028c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028ca:	9919      	ldr	r1, [sp, #100]	; 0x64
  4028cc:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4028ce:	f8c8 2000 	str.w	r2, [r8]
  4028d2:	3301      	adds	r3, #1
  4028d4:	440c      	add	r4, r1
  4028d6:	2b07      	cmp	r3, #7
  4028d8:	f8c8 1004 	str.w	r1, [r8, #4]
  4028dc:	9427      	str	r4, [sp, #156]	; 0x9c
  4028de:	9326      	str	r3, [sp, #152]	; 0x98
  4028e0:	f300 839e 	bgt.w	403020 <_svfprintf_r+0x1014>
  4028e4:	f108 0808 	add.w	r8, r8, #8
  4028e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4028ea:	1e5e      	subs	r6, r3, #1
  4028ec:	2e00      	cmp	r6, #0
  4028ee:	f77f ad6d 	ble.w	4023cc <_svfprintf_r+0x3c0>
  4028f2:	2e10      	cmp	r6, #16
  4028f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028f6:	4d0a      	ldr	r5, [pc, #40]	; (402920 <_svfprintf_r+0x914>)
  4028f8:	f340 81f5 	ble.w	402ce6 <_svfprintf_r+0xcda>
  4028fc:	4622      	mov	r2, r4
  4028fe:	2710      	movs	r7, #16
  402900:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402904:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402906:	e013      	b.n	402930 <_svfprintf_r+0x924>
  402908:	00407560 	.word	0x00407560
  40290c:	0040754c 	.word	0x0040754c
  402910:	7fefffff 	.word	0x7fefffff
  402914:	00407540 	.word	0x00407540
  402918:	0040753c 	.word	0x0040753c
  40291c:	0040757c 	.word	0x0040757c
  402920:	00407590 	.word	0x00407590
  402924:	f108 0808 	add.w	r8, r8, #8
  402928:	3e10      	subs	r6, #16
  40292a:	2e10      	cmp	r6, #16
  40292c:	f340 81da 	ble.w	402ce4 <_svfprintf_r+0xcd8>
  402930:	3301      	adds	r3, #1
  402932:	3210      	adds	r2, #16
  402934:	2b07      	cmp	r3, #7
  402936:	9227      	str	r2, [sp, #156]	; 0x9c
  402938:	9326      	str	r3, [sp, #152]	; 0x98
  40293a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40293e:	ddf1      	ble.n	402924 <_svfprintf_r+0x918>
  402940:	aa25      	add	r2, sp, #148	; 0x94
  402942:	4621      	mov	r1, r4
  402944:	4658      	mov	r0, fp
  402946:	f002 fce9 	bl	40531c <__ssprint_r>
  40294a:	2800      	cmp	r0, #0
  40294c:	f47f ac30 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402950:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402952:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402954:	46c8      	mov	r8, r9
  402956:	e7e7      	b.n	402928 <_svfprintf_r+0x91c>
  402958:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40295a:	9a08      	ldr	r2, [sp, #32]
  40295c:	1a9f      	subs	r7, r3, r2
  40295e:	2f00      	cmp	r7, #0
  402960:	f77f ace5 	ble.w	40232e <_svfprintf_r+0x322>
  402964:	2f10      	cmp	r7, #16
  402966:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402968:	4db6      	ldr	r5, [pc, #728]	; (402c44 <_svfprintf_r+0xc38>)
  40296a:	dd27      	ble.n	4029bc <_svfprintf_r+0x9b0>
  40296c:	4642      	mov	r2, r8
  40296e:	4621      	mov	r1, r4
  402970:	46b0      	mov	r8, r6
  402972:	f04f 0b10 	mov.w	fp, #16
  402976:	462e      	mov	r6, r5
  402978:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40297a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40297c:	e004      	b.n	402988 <_svfprintf_r+0x97c>
  40297e:	3f10      	subs	r7, #16
  402980:	2f10      	cmp	r7, #16
  402982:	f102 0208 	add.w	r2, r2, #8
  402986:	dd15      	ble.n	4029b4 <_svfprintf_r+0x9a8>
  402988:	3301      	adds	r3, #1
  40298a:	3110      	adds	r1, #16
  40298c:	2b07      	cmp	r3, #7
  40298e:	9127      	str	r1, [sp, #156]	; 0x9c
  402990:	9326      	str	r3, [sp, #152]	; 0x98
  402992:	e882 0840 	stmia.w	r2, {r6, fp}
  402996:	ddf2      	ble.n	40297e <_svfprintf_r+0x972>
  402998:	aa25      	add	r2, sp, #148	; 0x94
  40299a:	4629      	mov	r1, r5
  40299c:	4620      	mov	r0, r4
  40299e:	f002 fcbd 	bl	40531c <__ssprint_r>
  4029a2:	2800      	cmp	r0, #0
  4029a4:	f47f ac04 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  4029a8:	3f10      	subs	r7, #16
  4029aa:	2f10      	cmp	r7, #16
  4029ac:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4029ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029b0:	464a      	mov	r2, r9
  4029b2:	dce9      	bgt.n	402988 <_svfprintf_r+0x97c>
  4029b4:	4635      	mov	r5, r6
  4029b6:	460c      	mov	r4, r1
  4029b8:	4646      	mov	r6, r8
  4029ba:	4690      	mov	r8, r2
  4029bc:	3301      	adds	r3, #1
  4029be:	443c      	add	r4, r7
  4029c0:	2b07      	cmp	r3, #7
  4029c2:	9427      	str	r4, [sp, #156]	; 0x9c
  4029c4:	9326      	str	r3, [sp, #152]	; 0x98
  4029c6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4029ca:	f300 8232 	bgt.w	402e32 <_svfprintf_r+0xe26>
  4029ce:	f108 0808 	add.w	r8, r8, #8
  4029d2:	e4ac      	b.n	40232e <_svfprintf_r+0x322>
  4029d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4029d6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4029d8:	2b01      	cmp	r3, #1
  4029da:	f340 81fe 	ble.w	402dda <_svfprintf_r+0xdce>
  4029de:	3701      	adds	r7, #1
  4029e0:	3401      	adds	r4, #1
  4029e2:	2301      	movs	r3, #1
  4029e4:	2f07      	cmp	r7, #7
  4029e6:	9427      	str	r4, [sp, #156]	; 0x9c
  4029e8:	9726      	str	r7, [sp, #152]	; 0x98
  4029ea:	f8c8 6000 	str.w	r6, [r8]
  4029ee:	f8c8 3004 	str.w	r3, [r8, #4]
  4029f2:	f300 8203 	bgt.w	402dfc <_svfprintf_r+0xdf0>
  4029f6:	f108 0808 	add.w	r8, r8, #8
  4029fa:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4029fc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  4029fe:	f8c8 3000 	str.w	r3, [r8]
  402a02:	3701      	adds	r7, #1
  402a04:	4414      	add	r4, r2
  402a06:	2f07      	cmp	r7, #7
  402a08:	9427      	str	r4, [sp, #156]	; 0x9c
  402a0a:	9726      	str	r7, [sp, #152]	; 0x98
  402a0c:	f8c8 2004 	str.w	r2, [r8, #4]
  402a10:	f300 8200 	bgt.w	402e14 <_svfprintf_r+0xe08>
  402a14:	f108 0808 	add.w	r8, r8, #8
  402a18:	a815      	add	r0, sp, #84	; 0x54
  402a1a:	c80d      	ldmia	r0, {r0, r2, r3}
  402a1c:	9914      	ldr	r1, [sp, #80]	; 0x50
  402a1e:	f003 fd11 	bl	406444 <__aeabi_dcmpeq>
  402a22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a24:	2800      	cmp	r0, #0
  402a26:	f040 8101 	bne.w	402c2c <_svfprintf_r+0xc20>
  402a2a:	3b01      	subs	r3, #1
  402a2c:	3701      	adds	r7, #1
  402a2e:	3601      	adds	r6, #1
  402a30:	441c      	add	r4, r3
  402a32:	2f07      	cmp	r7, #7
  402a34:	9726      	str	r7, [sp, #152]	; 0x98
  402a36:	9427      	str	r4, [sp, #156]	; 0x9c
  402a38:	f8c8 6000 	str.w	r6, [r8]
  402a3c:	f8c8 3004 	str.w	r3, [r8, #4]
  402a40:	f300 8127 	bgt.w	402c92 <_svfprintf_r+0xc86>
  402a44:	f108 0808 	add.w	r8, r8, #8
  402a48:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402a4a:	f8c8 2004 	str.w	r2, [r8, #4]
  402a4e:	3701      	adds	r7, #1
  402a50:	4414      	add	r4, r2
  402a52:	ab21      	add	r3, sp, #132	; 0x84
  402a54:	2f07      	cmp	r7, #7
  402a56:	9427      	str	r4, [sp, #156]	; 0x9c
  402a58:	9726      	str	r7, [sp, #152]	; 0x98
  402a5a:	f8c8 3000 	str.w	r3, [r8]
  402a5e:	f77f acb3 	ble.w	4023c8 <_svfprintf_r+0x3bc>
  402a62:	aa25      	add	r2, sp, #148	; 0x94
  402a64:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a66:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a68:	f002 fc58 	bl	40531c <__ssprint_r>
  402a6c:	2800      	cmp	r0, #0
  402a6e:	f47f ab9f 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402a72:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a74:	46c8      	mov	r8, r9
  402a76:	e4a9      	b.n	4023cc <_svfprintf_r+0x3c0>
  402a78:	aa25      	add	r2, sp, #148	; 0x94
  402a7a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a7c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a7e:	f002 fc4d 	bl	40531c <__ssprint_r>
  402a82:	2800      	cmp	r0, #0
  402a84:	f43f aceb 	beq.w	40245e <_svfprintf_r+0x452>
  402a88:	f7ff bb92 	b.w	4021b0 <_svfprintf_r+0x1a4>
  402a8c:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402a90:	2b01      	cmp	r3, #1
  402a92:	f000 8134 	beq.w	402cfe <_svfprintf_r+0xcf2>
  402a96:	2b02      	cmp	r3, #2
  402a98:	d125      	bne.n	402ae6 <_svfprintf_r+0xada>
  402a9a:	f8cd b01c 	str.w	fp, [sp, #28]
  402a9e:	2400      	movs	r4, #0
  402aa0:	2500      	movs	r5, #0
  402aa2:	e61e      	b.n	4026e2 <_svfprintf_r+0x6d6>
  402aa4:	aa25      	add	r2, sp, #148	; 0x94
  402aa6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402aa8:	980c      	ldr	r0, [sp, #48]	; 0x30
  402aaa:	f002 fc37 	bl	40531c <__ssprint_r>
  402aae:	2800      	cmp	r0, #0
  402ab0:	f47f ab7e 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402ab4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ab6:	46c8      	mov	r8, r9
  402ab8:	e475      	b.n	4023a6 <_svfprintf_r+0x39a>
  402aba:	aa25      	add	r2, sp, #148	; 0x94
  402abc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402abe:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ac0:	f002 fc2c 	bl	40531c <__ssprint_r>
  402ac4:	2800      	cmp	r0, #0
  402ac6:	f47f ab73 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402aca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402acc:	46c8      	mov	r8, r9
  402ace:	e41b      	b.n	402308 <_svfprintf_r+0x2fc>
  402ad0:	aa25      	add	r2, sp, #148	; 0x94
  402ad2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ad4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ad6:	f002 fc21 	bl	40531c <__ssprint_r>
  402ada:	2800      	cmp	r0, #0
  402adc:	f47f ab68 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402ae0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ae2:	46c8      	mov	r8, r9
  402ae4:	e420      	b.n	402328 <_svfprintf_r+0x31c>
  402ae6:	f8cd b01c 	str.w	fp, [sp, #28]
  402aea:	2400      	movs	r4, #0
  402aec:	2500      	movs	r5, #0
  402aee:	4649      	mov	r1, r9
  402af0:	e000      	b.n	402af4 <_svfprintf_r+0xae8>
  402af2:	4631      	mov	r1, r6
  402af4:	08e2      	lsrs	r2, r4, #3
  402af6:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402afa:	08e8      	lsrs	r0, r5, #3
  402afc:	f004 0307 	and.w	r3, r4, #7
  402b00:	4605      	mov	r5, r0
  402b02:	4614      	mov	r4, r2
  402b04:	3330      	adds	r3, #48	; 0x30
  402b06:	ea54 0205 	orrs.w	r2, r4, r5
  402b0a:	f801 3c01 	strb.w	r3, [r1, #-1]
  402b0e:	f101 36ff 	add.w	r6, r1, #4294967295
  402b12:	d1ee      	bne.n	402af2 <_svfprintf_r+0xae6>
  402b14:	9a07      	ldr	r2, [sp, #28]
  402b16:	07d2      	lsls	r2, r2, #31
  402b18:	f57f adf3 	bpl.w	402702 <_svfprintf_r+0x6f6>
  402b1c:	2b30      	cmp	r3, #48	; 0x30
  402b1e:	f43f adf0 	beq.w	402702 <_svfprintf_r+0x6f6>
  402b22:	3902      	subs	r1, #2
  402b24:	2330      	movs	r3, #48	; 0x30
  402b26:	f806 3c01 	strb.w	r3, [r6, #-1]
  402b2a:	eba9 0301 	sub.w	r3, r9, r1
  402b2e:	930e      	str	r3, [sp, #56]	; 0x38
  402b30:	460e      	mov	r6, r1
  402b32:	f7ff bb7b 	b.w	40222c <_svfprintf_r+0x220>
  402b36:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402b38:	2900      	cmp	r1, #0
  402b3a:	f340 822e 	ble.w	402f9a <_svfprintf_r+0xf8e>
  402b3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402b40:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402b42:	4293      	cmp	r3, r2
  402b44:	bfa8      	it	ge
  402b46:	4613      	movge	r3, r2
  402b48:	2b00      	cmp	r3, #0
  402b4a:	461f      	mov	r7, r3
  402b4c:	dd0d      	ble.n	402b6a <_svfprintf_r+0xb5e>
  402b4e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b50:	f8c8 6000 	str.w	r6, [r8]
  402b54:	3301      	adds	r3, #1
  402b56:	443c      	add	r4, r7
  402b58:	2b07      	cmp	r3, #7
  402b5a:	9427      	str	r4, [sp, #156]	; 0x9c
  402b5c:	f8c8 7004 	str.w	r7, [r8, #4]
  402b60:	9326      	str	r3, [sp, #152]	; 0x98
  402b62:	f300 831f 	bgt.w	4031a4 <_svfprintf_r+0x1198>
  402b66:	f108 0808 	add.w	r8, r8, #8
  402b6a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402b6c:	2f00      	cmp	r7, #0
  402b6e:	bfa8      	it	ge
  402b70:	1bdb      	subge	r3, r3, r7
  402b72:	2b00      	cmp	r3, #0
  402b74:	461f      	mov	r7, r3
  402b76:	f340 80d6 	ble.w	402d26 <_svfprintf_r+0xd1a>
  402b7a:	2f10      	cmp	r7, #16
  402b7c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b7e:	4d31      	ldr	r5, [pc, #196]	; (402c44 <_svfprintf_r+0xc38>)
  402b80:	f340 81ed 	ble.w	402f5e <_svfprintf_r+0xf52>
  402b84:	4642      	mov	r2, r8
  402b86:	4621      	mov	r1, r4
  402b88:	46b0      	mov	r8, r6
  402b8a:	f04f 0b10 	mov.w	fp, #16
  402b8e:	462e      	mov	r6, r5
  402b90:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402b92:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402b94:	e004      	b.n	402ba0 <_svfprintf_r+0xb94>
  402b96:	3208      	adds	r2, #8
  402b98:	3f10      	subs	r7, #16
  402b9a:	2f10      	cmp	r7, #16
  402b9c:	f340 81db 	ble.w	402f56 <_svfprintf_r+0xf4a>
  402ba0:	3301      	adds	r3, #1
  402ba2:	3110      	adds	r1, #16
  402ba4:	2b07      	cmp	r3, #7
  402ba6:	9127      	str	r1, [sp, #156]	; 0x9c
  402ba8:	9326      	str	r3, [sp, #152]	; 0x98
  402baa:	e882 0840 	stmia.w	r2, {r6, fp}
  402bae:	ddf2      	ble.n	402b96 <_svfprintf_r+0xb8a>
  402bb0:	aa25      	add	r2, sp, #148	; 0x94
  402bb2:	4629      	mov	r1, r5
  402bb4:	4620      	mov	r0, r4
  402bb6:	f002 fbb1 	bl	40531c <__ssprint_r>
  402bba:	2800      	cmp	r0, #0
  402bbc:	f47f aaf8 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402bc0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402bc2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bc4:	464a      	mov	r2, r9
  402bc6:	e7e7      	b.n	402b98 <_svfprintf_r+0xb8c>
  402bc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402bca:	930e      	str	r3, [sp, #56]	; 0x38
  402bcc:	464e      	mov	r6, r9
  402bce:	f7ff bb2d 	b.w	40222c <_svfprintf_r+0x220>
  402bd2:	2d00      	cmp	r5, #0
  402bd4:	bf08      	it	eq
  402bd6:	2c0a      	cmpeq	r4, #10
  402bd8:	f0c0 808f 	bcc.w	402cfa <_svfprintf_r+0xcee>
  402bdc:	464e      	mov	r6, r9
  402bde:	4620      	mov	r0, r4
  402be0:	4629      	mov	r1, r5
  402be2:	220a      	movs	r2, #10
  402be4:	2300      	movs	r3, #0
  402be6:	f003 fc9d 	bl	406524 <__aeabi_uldivmod>
  402bea:	3230      	adds	r2, #48	; 0x30
  402bec:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402bf0:	4620      	mov	r0, r4
  402bf2:	4629      	mov	r1, r5
  402bf4:	2300      	movs	r3, #0
  402bf6:	220a      	movs	r2, #10
  402bf8:	f003 fc94 	bl	406524 <__aeabi_uldivmod>
  402bfc:	4604      	mov	r4, r0
  402bfe:	460d      	mov	r5, r1
  402c00:	ea54 0305 	orrs.w	r3, r4, r5
  402c04:	d1eb      	bne.n	402bde <_svfprintf_r+0xbd2>
  402c06:	eba9 0306 	sub.w	r3, r9, r6
  402c0a:	930e      	str	r3, [sp, #56]	; 0x38
  402c0c:	f7ff bb0e 	b.w	40222c <_svfprintf_r+0x220>
  402c10:	aa25      	add	r2, sp, #148	; 0x94
  402c12:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c14:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c16:	f002 fb81 	bl	40531c <__ssprint_r>
  402c1a:	2800      	cmp	r0, #0
  402c1c:	f47f aac8 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402c20:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402c24:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c26:	46c8      	mov	r8, r9
  402c28:	f7ff bb5e 	b.w	4022e8 <_svfprintf_r+0x2dc>
  402c2c:	1e5e      	subs	r6, r3, #1
  402c2e:	2e00      	cmp	r6, #0
  402c30:	f77f af0a 	ble.w	402a48 <_svfprintf_r+0xa3c>
  402c34:	2e10      	cmp	r6, #16
  402c36:	4d03      	ldr	r5, [pc, #12]	; (402c44 <_svfprintf_r+0xc38>)
  402c38:	dd22      	ble.n	402c80 <_svfprintf_r+0xc74>
  402c3a:	4622      	mov	r2, r4
  402c3c:	f04f 0b10 	mov.w	fp, #16
  402c40:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402c42:	e006      	b.n	402c52 <_svfprintf_r+0xc46>
  402c44:	00407590 	.word	0x00407590
  402c48:	3e10      	subs	r6, #16
  402c4a:	2e10      	cmp	r6, #16
  402c4c:	f108 0808 	add.w	r8, r8, #8
  402c50:	dd15      	ble.n	402c7e <_svfprintf_r+0xc72>
  402c52:	3701      	adds	r7, #1
  402c54:	3210      	adds	r2, #16
  402c56:	2f07      	cmp	r7, #7
  402c58:	9227      	str	r2, [sp, #156]	; 0x9c
  402c5a:	9726      	str	r7, [sp, #152]	; 0x98
  402c5c:	e888 0820 	stmia.w	r8, {r5, fp}
  402c60:	ddf2      	ble.n	402c48 <_svfprintf_r+0xc3c>
  402c62:	aa25      	add	r2, sp, #148	; 0x94
  402c64:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c66:	4620      	mov	r0, r4
  402c68:	f002 fb58 	bl	40531c <__ssprint_r>
  402c6c:	2800      	cmp	r0, #0
  402c6e:	f47f aa9f 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402c72:	3e10      	subs	r6, #16
  402c74:	2e10      	cmp	r6, #16
  402c76:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402c78:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c7a:	46c8      	mov	r8, r9
  402c7c:	dce9      	bgt.n	402c52 <_svfprintf_r+0xc46>
  402c7e:	4614      	mov	r4, r2
  402c80:	3701      	adds	r7, #1
  402c82:	4434      	add	r4, r6
  402c84:	2f07      	cmp	r7, #7
  402c86:	9427      	str	r4, [sp, #156]	; 0x9c
  402c88:	9726      	str	r7, [sp, #152]	; 0x98
  402c8a:	e888 0060 	stmia.w	r8, {r5, r6}
  402c8e:	f77f aed9 	ble.w	402a44 <_svfprintf_r+0xa38>
  402c92:	aa25      	add	r2, sp, #148	; 0x94
  402c94:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c96:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c98:	f002 fb40 	bl	40531c <__ssprint_r>
  402c9c:	2800      	cmp	r0, #0
  402c9e:	f47f aa87 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402ca2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ca4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402ca6:	46c8      	mov	r8, r9
  402ca8:	e6ce      	b.n	402a48 <_svfprintf_r+0xa3c>
  402caa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402cac:	6814      	ldr	r4, [r2, #0]
  402cae:	4613      	mov	r3, r2
  402cb0:	3304      	adds	r3, #4
  402cb2:	17e5      	asrs	r5, r4, #31
  402cb4:	930f      	str	r3, [sp, #60]	; 0x3c
  402cb6:	4622      	mov	r2, r4
  402cb8:	462b      	mov	r3, r5
  402cba:	e4fa      	b.n	4026b2 <_svfprintf_r+0x6a6>
  402cbc:	3204      	adds	r2, #4
  402cbe:	681c      	ldr	r4, [r3, #0]
  402cc0:	920f      	str	r2, [sp, #60]	; 0x3c
  402cc2:	2301      	movs	r3, #1
  402cc4:	2500      	movs	r5, #0
  402cc6:	f7ff ba94 	b.w	4021f2 <_svfprintf_r+0x1e6>
  402cca:	681c      	ldr	r4, [r3, #0]
  402ccc:	3304      	adds	r3, #4
  402cce:	930f      	str	r3, [sp, #60]	; 0x3c
  402cd0:	2500      	movs	r5, #0
  402cd2:	e421      	b.n	402518 <_svfprintf_r+0x50c>
  402cd4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402cd6:	460a      	mov	r2, r1
  402cd8:	3204      	adds	r2, #4
  402cda:	680c      	ldr	r4, [r1, #0]
  402cdc:	920f      	str	r2, [sp, #60]	; 0x3c
  402cde:	2500      	movs	r5, #0
  402ce0:	f7ff ba87 	b.w	4021f2 <_svfprintf_r+0x1e6>
  402ce4:	4614      	mov	r4, r2
  402ce6:	3301      	adds	r3, #1
  402ce8:	4434      	add	r4, r6
  402cea:	2b07      	cmp	r3, #7
  402cec:	9427      	str	r4, [sp, #156]	; 0x9c
  402cee:	9326      	str	r3, [sp, #152]	; 0x98
  402cf0:	e888 0060 	stmia.w	r8, {r5, r6}
  402cf4:	f77f ab68 	ble.w	4023c8 <_svfprintf_r+0x3bc>
  402cf8:	e6b3      	b.n	402a62 <_svfprintf_r+0xa56>
  402cfa:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402cfe:	f8cd b01c 	str.w	fp, [sp, #28]
  402d02:	ae42      	add	r6, sp, #264	; 0x108
  402d04:	3430      	adds	r4, #48	; 0x30
  402d06:	2301      	movs	r3, #1
  402d08:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402d0c:	930e      	str	r3, [sp, #56]	; 0x38
  402d0e:	f7ff ba8d 	b.w	40222c <_svfprintf_r+0x220>
  402d12:	aa25      	add	r2, sp, #148	; 0x94
  402d14:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d16:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d18:	f002 fb00 	bl	40531c <__ssprint_r>
  402d1c:	2800      	cmp	r0, #0
  402d1e:	f47f aa47 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402d22:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d24:	46c8      	mov	r8, r9
  402d26:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402d28:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d2a:	429a      	cmp	r2, r3
  402d2c:	db44      	blt.n	402db8 <_svfprintf_r+0xdac>
  402d2e:	9b07      	ldr	r3, [sp, #28]
  402d30:	07d9      	lsls	r1, r3, #31
  402d32:	d441      	bmi.n	402db8 <_svfprintf_r+0xdac>
  402d34:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d36:	9812      	ldr	r0, [sp, #72]	; 0x48
  402d38:	1a9a      	subs	r2, r3, r2
  402d3a:	1a1d      	subs	r5, r3, r0
  402d3c:	4295      	cmp	r5, r2
  402d3e:	bfa8      	it	ge
  402d40:	4615      	movge	r5, r2
  402d42:	2d00      	cmp	r5, #0
  402d44:	dd0e      	ble.n	402d64 <_svfprintf_r+0xd58>
  402d46:	9926      	ldr	r1, [sp, #152]	; 0x98
  402d48:	f8c8 5004 	str.w	r5, [r8, #4]
  402d4c:	3101      	adds	r1, #1
  402d4e:	4406      	add	r6, r0
  402d50:	442c      	add	r4, r5
  402d52:	2907      	cmp	r1, #7
  402d54:	f8c8 6000 	str.w	r6, [r8]
  402d58:	9427      	str	r4, [sp, #156]	; 0x9c
  402d5a:	9126      	str	r1, [sp, #152]	; 0x98
  402d5c:	f300 823b 	bgt.w	4031d6 <_svfprintf_r+0x11ca>
  402d60:	f108 0808 	add.w	r8, r8, #8
  402d64:	2d00      	cmp	r5, #0
  402d66:	bfac      	ite	ge
  402d68:	1b56      	subge	r6, r2, r5
  402d6a:	4616      	movlt	r6, r2
  402d6c:	2e00      	cmp	r6, #0
  402d6e:	f77f ab2d 	ble.w	4023cc <_svfprintf_r+0x3c0>
  402d72:	2e10      	cmp	r6, #16
  402d74:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d76:	4db0      	ldr	r5, [pc, #704]	; (403038 <_svfprintf_r+0x102c>)
  402d78:	ddb5      	ble.n	402ce6 <_svfprintf_r+0xcda>
  402d7a:	4622      	mov	r2, r4
  402d7c:	2710      	movs	r7, #16
  402d7e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402d82:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402d84:	e004      	b.n	402d90 <_svfprintf_r+0xd84>
  402d86:	f108 0808 	add.w	r8, r8, #8
  402d8a:	3e10      	subs	r6, #16
  402d8c:	2e10      	cmp	r6, #16
  402d8e:	dda9      	ble.n	402ce4 <_svfprintf_r+0xcd8>
  402d90:	3301      	adds	r3, #1
  402d92:	3210      	adds	r2, #16
  402d94:	2b07      	cmp	r3, #7
  402d96:	9227      	str	r2, [sp, #156]	; 0x9c
  402d98:	9326      	str	r3, [sp, #152]	; 0x98
  402d9a:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d9e:	ddf2      	ble.n	402d86 <_svfprintf_r+0xd7a>
  402da0:	aa25      	add	r2, sp, #148	; 0x94
  402da2:	4621      	mov	r1, r4
  402da4:	4658      	mov	r0, fp
  402da6:	f002 fab9 	bl	40531c <__ssprint_r>
  402daa:	2800      	cmp	r0, #0
  402dac:	f47f aa00 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402db0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402db2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402db4:	46c8      	mov	r8, r9
  402db6:	e7e8      	b.n	402d8a <_svfprintf_r+0xd7e>
  402db8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402dba:	9819      	ldr	r0, [sp, #100]	; 0x64
  402dbc:	991a      	ldr	r1, [sp, #104]	; 0x68
  402dbe:	f8c8 1000 	str.w	r1, [r8]
  402dc2:	3301      	adds	r3, #1
  402dc4:	4404      	add	r4, r0
  402dc6:	2b07      	cmp	r3, #7
  402dc8:	9427      	str	r4, [sp, #156]	; 0x9c
  402dca:	f8c8 0004 	str.w	r0, [r8, #4]
  402dce:	9326      	str	r3, [sp, #152]	; 0x98
  402dd0:	f300 81f5 	bgt.w	4031be <_svfprintf_r+0x11b2>
  402dd4:	f108 0808 	add.w	r8, r8, #8
  402dd8:	e7ac      	b.n	402d34 <_svfprintf_r+0xd28>
  402dda:	9b07      	ldr	r3, [sp, #28]
  402ddc:	07da      	lsls	r2, r3, #31
  402dde:	f53f adfe 	bmi.w	4029de <_svfprintf_r+0x9d2>
  402de2:	3701      	adds	r7, #1
  402de4:	3401      	adds	r4, #1
  402de6:	2301      	movs	r3, #1
  402de8:	2f07      	cmp	r7, #7
  402dea:	9427      	str	r4, [sp, #156]	; 0x9c
  402dec:	9726      	str	r7, [sp, #152]	; 0x98
  402dee:	f8c8 6000 	str.w	r6, [r8]
  402df2:	f8c8 3004 	str.w	r3, [r8, #4]
  402df6:	f77f ae25 	ble.w	402a44 <_svfprintf_r+0xa38>
  402dfa:	e74a      	b.n	402c92 <_svfprintf_r+0xc86>
  402dfc:	aa25      	add	r2, sp, #148	; 0x94
  402dfe:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e00:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e02:	f002 fa8b 	bl	40531c <__ssprint_r>
  402e06:	2800      	cmp	r0, #0
  402e08:	f47f a9d2 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402e0c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e0e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402e10:	46c8      	mov	r8, r9
  402e12:	e5f2      	b.n	4029fa <_svfprintf_r+0x9ee>
  402e14:	aa25      	add	r2, sp, #148	; 0x94
  402e16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e18:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e1a:	f002 fa7f 	bl	40531c <__ssprint_r>
  402e1e:	2800      	cmp	r0, #0
  402e20:	f47f a9c6 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402e24:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e26:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402e28:	46c8      	mov	r8, r9
  402e2a:	e5f5      	b.n	402a18 <_svfprintf_r+0xa0c>
  402e2c:	464e      	mov	r6, r9
  402e2e:	f7ff b9fd 	b.w	40222c <_svfprintf_r+0x220>
  402e32:	aa25      	add	r2, sp, #148	; 0x94
  402e34:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e36:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e38:	f002 fa70 	bl	40531c <__ssprint_r>
  402e3c:	2800      	cmp	r0, #0
  402e3e:	f47f a9b7 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402e42:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e44:	46c8      	mov	r8, r9
  402e46:	f7ff ba72 	b.w	40232e <_svfprintf_r+0x322>
  402e4a:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402e4c:	4622      	mov	r2, r4
  402e4e:	4620      	mov	r0, r4
  402e50:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402e52:	4623      	mov	r3, r4
  402e54:	4621      	mov	r1, r4
  402e56:	f003 fb27 	bl	4064a8 <__aeabi_dcmpun>
  402e5a:	2800      	cmp	r0, #0
  402e5c:	f040 8286 	bne.w	40336c <_svfprintf_r+0x1360>
  402e60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e62:	3301      	adds	r3, #1
  402e64:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e66:	f023 0320 	bic.w	r3, r3, #32
  402e6a:	930e      	str	r3, [sp, #56]	; 0x38
  402e6c:	f000 81e2 	beq.w	403234 <_svfprintf_r+0x1228>
  402e70:	2b47      	cmp	r3, #71	; 0x47
  402e72:	f000 811e 	beq.w	4030b2 <_svfprintf_r+0x10a6>
  402e76:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402e7a:	9307      	str	r3, [sp, #28]
  402e7c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402e7e:	1e1f      	subs	r7, r3, #0
  402e80:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402e82:	9308      	str	r3, [sp, #32]
  402e84:	bfbb      	ittet	lt
  402e86:	463b      	movlt	r3, r7
  402e88:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402e8c:	2300      	movge	r3, #0
  402e8e:	232d      	movlt	r3, #45	; 0x2d
  402e90:	9310      	str	r3, [sp, #64]	; 0x40
  402e92:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e94:	2b66      	cmp	r3, #102	; 0x66
  402e96:	f000 81bb 	beq.w	403210 <_svfprintf_r+0x1204>
  402e9a:	2b46      	cmp	r3, #70	; 0x46
  402e9c:	f000 80df 	beq.w	40305e <_svfprintf_r+0x1052>
  402ea0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402ea2:	9a08      	ldr	r2, [sp, #32]
  402ea4:	2b45      	cmp	r3, #69	; 0x45
  402ea6:	bf0c      	ite	eq
  402ea8:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402eaa:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402eac:	a823      	add	r0, sp, #140	; 0x8c
  402eae:	a920      	add	r1, sp, #128	; 0x80
  402eb0:	bf08      	it	eq
  402eb2:	1c5d      	addeq	r5, r3, #1
  402eb4:	9004      	str	r0, [sp, #16]
  402eb6:	9103      	str	r1, [sp, #12]
  402eb8:	a81f      	add	r0, sp, #124	; 0x7c
  402eba:	2102      	movs	r1, #2
  402ebc:	463b      	mov	r3, r7
  402ebe:	9002      	str	r0, [sp, #8]
  402ec0:	9501      	str	r5, [sp, #4]
  402ec2:	9100      	str	r1, [sp, #0]
  402ec4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ec6:	f000 fb73 	bl	4035b0 <_dtoa_r>
  402eca:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ecc:	2b67      	cmp	r3, #103	; 0x67
  402ece:	4606      	mov	r6, r0
  402ed0:	f040 81e0 	bne.w	403294 <_svfprintf_r+0x1288>
  402ed4:	f01b 0f01 	tst.w	fp, #1
  402ed8:	f000 8246 	beq.w	403368 <_svfprintf_r+0x135c>
  402edc:	1974      	adds	r4, r6, r5
  402ede:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402ee0:	9808      	ldr	r0, [sp, #32]
  402ee2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402ee4:	4639      	mov	r1, r7
  402ee6:	f003 faad 	bl	406444 <__aeabi_dcmpeq>
  402eea:	2800      	cmp	r0, #0
  402eec:	f040 8165 	bne.w	4031ba <_svfprintf_r+0x11ae>
  402ef0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402ef2:	42a3      	cmp	r3, r4
  402ef4:	d206      	bcs.n	402f04 <_svfprintf_r+0xef8>
  402ef6:	2130      	movs	r1, #48	; 0x30
  402ef8:	1c5a      	adds	r2, r3, #1
  402efa:	9223      	str	r2, [sp, #140]	; 0x8c
  402efc:	7019      	strb	r1, [r3, #0]
  402efe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402f00:	429c      	cmp	r4, r3
  402f02:	d8f9      	bhi.n	402ef8 <_svfprintf_r+0xeec>
  402f04:	1b9b      	subs	r3, r3, r6
  402f06:	9313      	str	r3, [sp, #76]	; 0x4c
  402f08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402f0a:	2b47      	cmp	r3, #71	; 0x47
  402f0c:	f000 80e9 	beq.w	4030e2 <_svfprintf_r+0x10d6>
  402f10:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f12:	2b65      	cmp	r3, #101	; 0x65
  402f14:	f340 81cd 	ble.w	4032b2 <_svfprintf_r+0x12a6>
  402f18:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f1a:	2b66      	cmp	r3, #102	; 0x66
  402f1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402f1e:	9312      	str	r3, [sp, #72]	; 0x48
  402f20:	f000 819e 	beq.w	403260 <_svfprintf_r+0x1254>
  402f24:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f26:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402f28:	4619      	mov	r1, r3
  402f2a:	4291      	cmp	r1, r2
  402f2c:	f300 818a 	bgt.w	403244 <_svfprintf_r+0x1238>
  402f30:	f01b 0f01 	tst.w	fp, #1
  402f34:	f040 8213 	bne.w	40335e <_svfprintf_r+0x1352>
  402f38:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402f3c:	9308      	str	r3, [sp, #32]
  402f3e:	2367      	movs	r3, #103	; 0x67
  402f40:	920e      	str	r2, [sp, #56]	; 0x38
  402f42:	9311      	str	r3, [sp, #68]	; 0x44
  402f44:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402f46:	2b00      	cmp	r3, #0
  402f48:	f040 80c4 	bne.w	4030d4 <_svfprintf_r+0x10c8>
  402f4c:	930a      	str	r3, [sp, #40]	; 0x28
  402f4e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402f52:	f7ff b973 	b.w	40223c <_svfprintf_r+0x230>
  402f56:	4635      	mov	r5, r6
  402f58:	460c      	mov	r4, r1
  402f5a:	4646      	mov	r6, r8
  402f5c:	4690      	mov	r8, r2
  402f5e:	3301      	adds	r3, #1
  402f60:	443c      	add	r4, r7
  402f62:	2b07      	cmp	r3, #7
  402f64:	9427      	str	r4, [sp, #156]	; 0x9c
  402f66:	9326      	str	r3, [sp, #152]	; 0x98
  402f68:	e888 00a0 	stmia.w	r8, {r5, r7}
  402f6c:	f73f aed1 	bgt.w	402d12 <_svfprintf_r+0xd06>
  402f70:	f108 0808 	add.w	r8, r8, #8
  402f74:	e6d7      	b.n	402d26 <_svfprintf_r+0xd1a>
  402f76:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402f78:	6813      	ldr	r3, [r2, #0]
  402f7a:	3204      	adds	r2, #4
  402f7c:	920f      	str	r2, [sp, #60]	; 0x3c
  402f7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402f80:	601a      	str	r2, [r3, #0]
  402f82:	f7ff b86a 	b.w	40205a <_svfprintf_r+0x4e>
  402f86:	aa25      	add	r2, sp, #148	; 0x94
  402f88:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f8a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f8c:	f002 f9c6 	bl	40531c <__ssprint_r>
  402f90:	2800      	cmp	r0, #0
  402f92:	f47f a90d 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  402f96:	46c8      	mov	r8, r9
  402f98:	e48d      	b.n	4028b6 <_svfprintf_r+0x8aa>
  402f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f9c:	4a27      	ldr	r2, [pc, #156]	; (40303c <_svfprintf_r+0x1030>)
  402f9e:	f8c8 2000 	str.w	r2, [r8]
  402fa2:	3301      	adds	r3, #1
  402fa4:	3401      	adds	r4, #1
  402fa6:	2201      	movs	r2, #1
  402fa8:	2b07      	cmp	r3, #7
  402faa:	9427      	str	r4, [sp, #156]	; 0x9c
  402fac:	9326      	str	r3, [sp, #152]	; 0x98
  402fae:	f8c8 2004 	str.w	r2, [r8, #4]
  402fb2:	dc72      	bgt.n	40309a <_svfprintf_r+0x108e>
  402fb4:	f108 0808 	add.w	r8, r8, #8
  402fb8:	b929      	cbnz	r1, 402fc6 <_svfprintf_r+0xfba>
  402fba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402fbc:	b91b      	cbnz	r3, 402fc6 <_svfprintf_r+0xfba>
  402fbe:	9b07      	ldr	r3, [sp, #28]
  402fc0:	07d8      	lsls	r0, r3, #31
  402fc2:	f57f aa03 	bpl.w	4023cc <_svfprintf_r+0x3c0>
  402fc6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402fc8:	9819      	ldr	r0, [sp, #100]	; 0x64
  402fca:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402fcc:	f8c8 2000 	str.w	r2, [r8]
  402fd0:	3301      	adds	r3, #1
  402fd2:	4602      	mov	r2, r0
  402fd4:	4422      	add	r2, r4
  402fd6:	2b07      	cmp	r3, #7
  402fd8:	9227      	str	r2, [sp, #156]	; 0x9c
  402fda:	f8c8 0004 	str.w	r0, [r8, #4]
  402fde:	9326      	str	r3, [sp, #152]	; 0x98
  402fe0:	f300 818d 	bgt.w	4032fe <_svfprintf_r+0x12f2>
  402fe4:	f108 0808 	add.w	r8, r8, #8
  402fe8:	2900      	cmp	r1, #0
  402fea:	f2c0 8165 	blt.w	4032b8 <_svfprintf_r+0x12ac>
  402fee:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402ff0:	f8c8 6000 	str.w	r6, [r8]
  402ff4:	3301      	adds	r3, #1
  402ff6:	188c      	adds	r4, r1, r2
  402ff8:	2b07      	cmp	r3, #7
  402ffa:	9427      	str	r4, [sp, #156]	; 0x9c
  402ffc:	9326      	str	r3, [sp, #152]	; 0x98
  402ffe:	f8c8 1004 	str.w	r1, [r8, #4]
  403002:	f77f a9e1 	ble.w	4023c8 <_svfprintf_r+0x3bc>
  403006:	e52c      	b.n	402a62 <_svfprintf_r+0xa56>
  403008:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40300a:	9909      	ldr	r1, [sp, #36]	; 0x24
  40300c:	6813      	ldr	r3, [r2, #0]
  40300e:	17cd      	asrs	r5, r1, #31
  403010:	4608      	mov	r0, r1
  403012:	3204      	adds	r2, #4
  403014:	4629      	mov	r1, r5
  403016:	920f      	str	r2, [sp, #60]	; 0x3c
  403018:	e9c3 0100 	strd	r0, r1, [r3]
  40301c:	f7ff b81d 	b.w	40205a <_svfprintf_r+0x4e>
  403020:	aa25      	add	r2, sp, #148	; 0x94
  403022:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403024:	980c      	ldr	r0, [sp, #48]	; 0x30
  403026:	f002 f979 	bl	40531c <__ssprint_r>
  40302a:	2800      	cmp	r0, #0
  40302c:	f47f a8c0 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  403030:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403032:	46c8      	mov	r8, r9
  403034:	e458      	b.n	4028e8 <_svfprintf_r+0x8dc>
  403036:	bf00      	nop
  403038:	00407590 	.word	0x00407590
  40303c:	0040757c 	.word	0x0040757c
  403040:	2140      	movs	r1, #64	; 0x40
  403042:	980c      	ldr	r0, [sp, #48]	; 0x30
  403044:	f001 fa0a 	bl	40445c <_malloc_r>
  403048:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40304a:	6010      	str	r0, [r2, #0]
  40304c:	6110      	str	r0, [r2, #16]
  40304e:	2800      	cmp	r0, #0
  403050:	f000 81f2 	beq.w	403438 <_svfprintf_r+0x142c>
  403054:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403056:	2340      	movs	r3, #64	; 0x40
  403058:	6153      	str	r3, [r2, #20]
  40305a:	f7fe bfee 	b.w	40203a <_svfprintf_r+0x2e>
  40305e:	a823      	add	r0, sp, #140	; 0x8c
  403060:	a920      	add	r1, sp, #128	; 0x80
  403062:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403064:	9004      	str	r0, [sp, #16]
  403066:	9103      	str	r1, [sp, #12]
  403068:	a81f      	add	r0, sp, #124	; 0x7c
  40306a:	2103      	movs	r1, #3
  40306c:	9002      	str	r0, [sp, #8]
  40306e:	9a08      	ldr	r2, [sp, #32]
  403070:	9401      	str	r4, [sp, #4]
  403072:	463b      	mov	r3, r7
  403074:	9100      	str	r1, [sp, #0]
  403076:	980c      	ldr	r0, [sp, #48]	; 0x30
  403078:	f000 fa9a 	bl	4035b0 <_dtoa_r>
  40307c:	4625      	mov	r5, r4
  40307e:	4606      	mov	r6, r0
  403080:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403082:	2b46      	cmp	r3, #70	; 0x46
  403084:	eb06 0405 	add.w	r4, r6, r5
  403088:	f47f af29 	bne.w	402ede <_svfprintf_r+0xed2>
  40308c:	7833      	ldrb	r3, [r6, #0]
  40308e:	2b30      	cmp	r3, #48	; 0x30
  403090:	f000 8178 	beq.w	403384 <_svfprintf_r+0x1378>
  403094:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403096:	442c      	add	r4, r5
  403098:	e721      	b.n	402ede <_svfprintf_r+0xed2>
  40309a:	aa25      	add	r2, sp, #148	; 0x94
  40309c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40309e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030a0:	f002 f93c 	bl	40531c <__ssprint_r>
  4030a4:	2800      	cmp	r0, #0
  4030a6:	f47f a883 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  4030aa:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4030ac:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030ae:	46c8      	mov	r8, r9
  4030b0:	e782      	b.n	402fb8 <_svfprintf_r+0xfac>
  4030b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4030b4:	2b00      	cmp	r3, #0
  4030b6:	bf08      	it	eq
  4030b8:	2301      	moveq	r3, #1
  4030ba:	930a      	str	r3, [sp, #40]	; 0x28
  4030bc:	e6db      	b.n	402e76 <_svfprintf_r+0xe6a>
  4030be:	4630      	mov	r0, r6
  4030c0:	940a      	str	r4, [sp, #40]	; 0x28
  4030c2:	f002 f8bd 	bl	405240 <strlen>
  4030c6:	950f      	str	r5, [sp, #60]	; 0x3c
  4030c8:	900e      	str	r0, [sp, #56]	; 0x38
  4030ca:	f8cd b01c 	str.w	fp, [sp, #28]
  4030ce:	4603      	mov	r3, r0
  4030d0:	f7ff b9f9 	b.w	4024c6 <_svfprintf_r+0x4ba>
  4030d4:	272d      	movs	r7, #45	; 0x2d
  4030d6:	2300      	movs	r3, #0
  4030d8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4030dc:	930a      	str	r3, [sp, #40]	; 0x28
  4030de:	f7ff b8ae 	b.w	40223e <_svfprintf_r+0x232>
  4030e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4030e4:	9312      	str	r3, [sp, #72]	; 0x48
  4030e6:	461a      	mov	r2, r3
  4030e8:	3303      	adds	r3, #3
  4030ea:	db04      	blt.n	4030f6 <_svfprintf_r+0x10ea>
  4030ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4030ee:	4619      	mov	r1, r3
  4030f0:	4291      	cmp	r1, r2
  4030f2:	f6bf af17 	bge.w	402f24 <_svfprintf_r+0xf18>
  4030f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4030f8:	3b02      	subs	r3, #2
  4030fa:	9311      	str	r3, [sp, #68]	; 0x44
  4030fc:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403100:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403104:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403106:	3b01      	subs	r3, #1
  403108:	2b00      	cmp	r3, #0
  40310a:	931f      	str	r3, [sp, #124]	; 0x7c
  40310c:	bfbd      	ittte	lt
  40310e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403110:	f1c3 0301 	rsblt	r3, r3, #1
  403114:	222d      	movlt	r2, #45	; 0x2d
  403116:	222b      	movge	r2, #43	; 0x2b
  403118:	2b09      	cmp	r3, #9
  40311a:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  40311e:	f340 8116 	ble.w	40334e <_svfprintf_r+0x1342>
  403122:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403126:	4620      	mov	r0, r4
  403128:	4dab      	ldr	r5, [pc, #684]	; (4033d8 <_svfprintf_r+0x13cc>)
  40312a:	e000      	b.n	40312e <_svfprintf_r+0x1122>
  40312c:	4610      	mov	r0, r2
  40312e:	fb85 1203 	smull	r1, r2, r5, r3
  403132:	17d9      	asrs	r1, r3, #31
  403134:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403138:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  40313c:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403140:	3230      	adds	r2, #48	; 0x30
  403142:	2909      	cmp	r1, #9
  403144:	f800 2c01 	strb.w	r2, [r0, #-1]
  403148:	460b      	mov	r3, r1
  40314a:	f100 32ff 	add.w	r2, r0, #4294967295
  40314e:	dced      	bgt.n	40312c <_svfprintf_r+0x1120>
  403150:	3330      	adds	r3, #48	; 0x30
  403152:	3802      	subs	r0, #2
  403154:	b2d9      	uxtb	r1, r3
  403156:	4284      	cmp	r4, r0
  403158:	f802 1c01 	strb.w	r1, [r2, #-1]
  40315c:	f240 8165 	bls.w	40342a <_svfprintf_r+0x141e>
  403160:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403164:	4613      	mov	r3, r2
  403166:	e001      	b.n	40316c <_svfprintf_r+0x1160>
  403168:	f813 1b01 	ldrb.w	r1, [r3], #1
  40316c:	f800 1b01 	strb.w	r1, [r0], #1
  403170:	42a3      	cmp	r3, r4
  403172:	d1f9      	bne.n	403168 <_svfprintf_r+0x115c>
  403174:	3301      	adds	r3, #1
  403176:	1a9b      	subs	r3, r3, r2
  403178:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  40317c:	4413      	add	r3, r2
  40317e:	aa21      	add	r2, sp, #132	; 0x84
  403180:	1a9b      	subs	r3, r3, r2
  403182:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403184:	931b      	str	r3, [sp, #108]	; 0x6c
  403186:	2a01      	cmp	r2, #1
  403188:	4413      	add	r3, r2
  40318a:	930e      	str	r3, [sp, #56]	; 0x38
  40318c:	f340 8119 	ble.w	4033c2 <_svfprintf_r+0x13b6>
  403190:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403192:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403194:	4413      	add	r3, r2
  403196:	930e      	str	r3, [sp, #56]	; 0x38
  403198:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40319c:	9308      	str	r3, [sp, #32]
  40319e:	2300      	movs	r3, #0
  4031a0:	9312      	str	r3, [sp, #72]	; 0x48
  4031a2:	e6cf      	b.n	402f44 <_svfprintf_r+0xf38>
  4031a4:	aa25      	add	r2, sp, #148	; 0x94
  4031a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031a8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031aa:	f002 f8b7 	bl	40531c <__ssprint_r>
  4031ae:	2800      	cmp	r0, #0
  4031b0:	f47e affe 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  4031b4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031b6:	46c8      	mov	r8, r9
  4031b8:	e4d7      	b.n	402b6a <_svfprintf_r+0xb5e>
  4031ba:	4623      	mov	r3, r4
  4031bc:	e6a2      	b.n	402f04 <_svfprintf_r+0xef8>
  4031be:	aa25      	add	r2, sp, #148	; 0x94
  4031c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031c2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031c4:	f002 f8aa 	bl	40531c <__ssprint_r>
  4031c8:	2800      	cmp	r0, #0
  4031ca:	f47e aff1 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  4031ce:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4031d0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031d2:	46c8      	mov	r8, r9
  4031d4:	e5ae      	b.n	402d34 <_svfprintf_r+0xd28>
  4031d6:	aa25      	add	r2, sp, #148	; 0x94
  4031d8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031da:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031dc:	f002 f89e 	bl	40531c <__ssprint_r>
  4031e0:	2800      	cmp	r0, #0
  4031e2:	f47e afe5 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  4031e6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4031e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4031ea:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031ec:	1a9a      	subs	r2, r3, r2
  4031ee:	46c8      	mov	r8, r9
  4031f0:	e5b8      	b.n	402d64 <_svfprintf_r+0xd58>
  4031f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4031f4:	9612      	str	r6, [sp, #72]	; 0x48
  4031f6:	2b06      	cmp	r3, #6
  4031f8:	bf28      	it	cs
  4031fa:	2306      	movcs	r3, #6
  4031fc:	960a      	str	r6, [sp, #40]	; 0x28
  4031fe:	4637      	mov	r7, r6
  403200:	9308      	str	r3, [sp, #32]
  403202:	950f      	str	r5, [sp, #60]	; 0x3c
  403204:	f8cd b01c 	str.w	fp, [sp, #28]
  403208:	930e      	str	r3, [sp, #56]	; 0x38
  40320a:	4e74      	ldr	r6, [pc, #464]	; (4033dc <_svfprintf_r+0x13d0>)
  40320c:	f7ff b816 	b.w	40223c <_svfprintf_r+0x230>
  403210:	a823      	add	r0, sp, #140	; 0x8c
  403212:	a920      	add	r1, sp, #128	; 0x80
  403214:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403216:	9004      	str	r0, [sp, #16]
  403218:	9103      	str	r1, [sp, #12]
  40321a:	a81f      	add	r0, sp, #124	; 0x7c
  40321c:	2103      	movs	r1, #3
  40321e:	9002      	str	r0, [sp, #8]
  403220:	9a08      	ldr	r2, [sp, #32]
  403222:	9501      	str	r5, [sp, #4]
  403224:	463b      	mov	r3, r7
  403226:	9100      	str	r1, [sp, #0]
  403228:	980c      	ldr	r0, [sp, #48]	; 0x30
  40322a:	f000 f9c1 	bl	4035b0 <_dtoa_r>
  40322e:	4606      	mov	r6, r0
  403230:	1944      	adds	r4, r0, r5
  403232:	e72b      	b.n	40308c <_svfprintf_r+0x1080>
  403234:	2306      	movs	r3, #6
  403236:	930a      	str	r3, [sp, #40]	; 0x28
  403238:	e61d      	b.n	402e76 <_svfprintf_r+0xe6a>
  40323a:	272d      	movs	r7, #45	; 0x2d
  40323c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403240:	f7ff bacd 	b.w	4027de <_svfprintf_r+0x7d2>
  403244:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403246:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403248:	4413      	add	r3, r2
  40324a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40324c:	930e      	str	r3, [sp, #56]	; 0x38
  40324e:	2a00      	cmp	r2, #0
  403250:	f340 80b0 	ble.w	4033b4 <_svfprintf_r+0x13a8>
  403254:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403258:	9308      	str	r3, [sp, #32]
  40325a:	2367      	movs	r3, #103	; 0x67
  40325c:	9311      	str	r3, [sp, #68]	; 0x44
  40325e:	e671      	b.n	402f44 <_svfprintf_r+0xf38>
  403260:	2b00      	cmp	r3, #0
  403262:	f340 80c3 	ble.w	4033ec <_svfprintf_r+0x13e0>
  403266:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403268:	2a00      	cmp	r2, #0
  40326a:	f040 8099 	bne.w	4033a0 <_svfprintf_r+0x1394>
  40326e:	f01b 0f01 	tst.w	fp, #1
  403272:	f040 8095 	bne.w	4033a0 <_svfprintf_r+0x1394>
  403276:	9308      	str	r3, [sp, #32]
  403278:	930e      	str	r3, [sp, #56]	; 0x38
  40327a:	e663      	b.n	402f44 <_svfprintf_r+0xf38>
  40327c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40327e:	9308      	str	r3, [sp, #32]
  403280:	930e      	str	r3, [sp, #56]	; 0x38
  403282:	900a      	str	r0, [sp, #40]	; 0x28
  403284:	950f      	str	r5, [sp, #60]	; 0x3c
  403286:	f8cd b01c 	str.w	fp, [sp, #28]
  40328a:	9012      	str	r0, [sp, #72]	; 0x48
  40328c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403290:	f7fe bfd4 	b.w	40223c <_svfprintf_r+0x230>
  403294:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403296:	2b47      	cmp	r3, #71	; 0x47
  403298:	f47f ae20 	bne.w	402edc <_svfprintf_r+0xed0>
  40329c:	f01b 0f01 	tst.w	fp, #1
  4032a0:	f47f aeee 	bne.w	403080 <_svfprintf_r+0x1074>
  4032a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4032a6:	1b9b      	subs	r3, r3, r6
  4032a8:	9313      	str	r3, [sp, #76]	; 0x4c
  4032aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4032ac:	2b47      	cmp	r3, #71	; 0x47
  4032ae:	f43f af18 	beq.w	4030e2 <_svfprintf_r+0x10d6>
  4032b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4032b4:	9312      	str	r3, [sp, #72]	; 0x48
  4032b6:	e721      	b.n	4030fc <_svfprintf_r+0x10f0>
  4032b8:	424f      	negs	r7, r1
  4032ba:	3110      	adds	r1, #16
  4032bc:	4d48      	ldr	r5, [pc, #288]	; (4033e0 <_svfprintf_r+0x13d4>)
  4032be:	da2f      	bge.n	403320 <_svfprintf_r+0x1314>
  4032c0:	2410      	movs	r4, #16
  4032c2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4032c6:	e004      	b.n	4032d2 <_svfprintf_r+0x12c6>
  4032c8:	f108 0808 	add.w	r8, r8, #8
  4032cc:	3f10      	subs	r7, #16
  4032ce:	2f10      	cmp	r7, #16
  4032d0:	dd26      	ble.n	403320 <_svfprintf_r+0x1314>
  4032d2:	3301      	adds	r3, #1
  4032d4:	3210      	adds	r2, #16
  4032d6:	2b07      	cmp	r3, #7
  4032d8:	9227      	str	r2, [sp, #156]	; 0x9c
  4032da:	9326      	str	r3, [sp, #152]	; 0x98
  4032dc:	f8c8 5000 	str.w	r5, [r8]
  4032e0:	f8c8 4004 	str.w	r4, [r8, #4]
  4032e4:	ddf0      	ble.n	4032c8 <_svfprintf_r+0x12bc>
  4032e6:	aa25      	add	r2, sp, #148	; 0x94
  4032e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032ea:	4658      	mov	r0, fp
  4032ec:	f002 f816 	bl	40531c <__ssprint_r>
  4032f0:	2800      	cmp	r0, #0
  4032f2:	f47e af5d 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  4032f6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4032f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4032fa:	46c8      	mov	r8, r9
  4032fc:	e7e6      	b.n	4032cc <_svfprintf_r+0x12c0>
  4032fe:	aa25      	add	r2, sp, #148	; 0x94
  403300:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403302:	980c      	ldr	r0, [sp, #48]	; 0x30
  403304:	f002 f80a 	bl	40531c <__ssprint_r>
  403308:	2800      	cmp	r0, #0
  40330a:	f47e af51 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  40330e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403310:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403312:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403314:	46c8      	mov	r8, r9
  403316:	e667      	b.n	402fe8 <_svfprintf_r+0xfdc>
  403318:	2000      	movs	r0, #0
  40331a:	900a      	str	r0, [sp, #40]	; 0x28
  40331c:	f7fe bed0 	b.w	4020c0 <_svfprintf_r+0xb4>
  403320:	3301      	adds	r3, #1
  403322:	443a      	add	r2, r7
  403324:	2b07      	cmp	r3, #7
  403326:	e888 00a0 	stmia.w	r8, {r5, r7}
  40332a:	9227      	str	r2, [sp, #156]	; 0x9c
  40332c:	9326      	str	r3, [sp, #152]	; 0x98
  40332e:	f108 0808 	add.w	r8, r8, #8
  403332:	f77f ae5c 	ble.w	402fee <_svfprintf_r+0xfe2>
  403336:	aa25      	add	r2, sp, #148	; 0x94
  403338:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40333a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40333c:	f001 ffee 	bl	40531c <__ssprint_r>
  403340:	2800      	cmp	r0, #0
  403342:	f47e af35 	bne.w	4021b0 <_svfprintf_r+0x1a4>
  403346:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403348:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40334a:	46c8      	mov	r8, r9
  40334c:	e64f      	b.n	402fee <_svfprintf_r+0xfe2>
  40334e:	3330      	adds	r3, #48	; 0x30
  403350:	2230      	movs	r2, #48	; 0x30
  403352:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  403356:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  40335a:	ab22      	add	r3, sp, #136	; 0x88
  40335c:	e70f      	b.n	40317e <_svfprintf_r+0x1172>
  40335e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403360:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403362:	4413      	add	r3, r2
  403364:	930e      	str	r3, [sp, #56]	; 0x38
  403366:	e775      	b.n	403254 <_svfprintf_r+0x1248>
  403368:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40336a:	e5cb      	b.n	402f04 <_svfprintf_r+0xef8>
  40336c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40336e:	4e1d      	ldr	r6, [pc, #116]	; (4033e4 <_svfprintf_r+0x13d8>)
  403370:	2b00      	cmp	r3, #0
  403372:	bfb6      	itet	lt
  403374:	272d      	movlt	r7, #45	; 0x2d
  403376:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  40337a:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40337e:	4b1a      	ldr	r3, [pc, #104]	; (4033e8 <_svfprintf_r+0x13dc>)
  403380:	f7ff ba2f 	b.w	4027e2 <_svfprintf_r+0x7d6>
  403384:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403386:	9808      	ldr	r0, [sp, #32]
  403388:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40338a:	4639      	mov	r1, r7
  40338c:	f003 f85a 	bl	406444 <__aeabi_dcmpeq>
  403390:	2800      	cmp	r0, #0
  403392:	f47f ae7f 	bne.w	403094 <_svfprintf_r+0x1088>
  403396:	f1c5 0501 	rsb	r5, r5, #1
  40339a:	951f      	str	r5, [sp, #124]	; 0x7c
  40339c:	442c      	add	r4, r5
  40339e:	e59e      	b.n	402ede <_svfprintf_r+0xed2>
  4033a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4033a2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4033a4:	4413      	add	r3, r2
  4033a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4033a8:	441a      	add	r2, r3
  4033aa:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4033ae:	920e      	str	r2, [sp, #56]	; 0x38
  4033b0:	9308      	str	r3, [sp, #32]
  4033b2:	e5c7      	b.n	402f44 <_svfprintf_r+0xf38>
  4033b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4033b6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4033b8:	f1c3 0301 	rsb	r3, r3, #1
  4033bc:	441a      	add	r2, r3
  4033be:	4613      	mov	r3, r2
  4033c0:	e7d0      	b.n	403364 <_svfprintf_r+0x1358>
  4033c2:	f01b 0301 	ands.w	r3, fp, #1
  4033c6:	9312      	str	r3, [sp, #72]	; 0x48
  4033c8:	f47f aee2 	bne.w	403190 <_svfprintf_r+0x1184>
  4033cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4033ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4033d2:	9308      	str	r3, [sp, #32]
  4033d4:	e5b6      	b.n	402f44 <_svfprintf_r+0xf38>
  4033d6:	bf00      	nop
  4033d8:	66666667 	.word	0x66666667
  4033dc:	00407574 	.word	0x00407574
  4033e0:	00407590 	.word	0x00407590
  4033e4:	00407548 	.word	0x00407548
  4033e8:	00407544 	.word	0x00407544
  4033ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4033ee:	b913      	cbnz	r3, 4033f6 <_svfprintf_r+0x13ea>
  4033f0:	f01b 0f01 	tst.w	fp, #1
  4033f4:	d002      	beq.n	4033fc <_svfprintf_r+0x13f0>
  4033f6:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4033f8:	3301      	adds	r3, #1
  4033fa:	e7d4      	b.n	4033a6 <_svfprintf_r+0x139a>
  4033fc:	2301      	movs	r3, #1
  4033fe:	e73a      	b.n	403276 <_svfprintf_r+0x126a>
  403400:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403402:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403406:	6828      	ldr	r0, [r5, #0]
  403408:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  40340c:	900a      	str	r0, [sp, #40]	; 0x28
  40340e:	4628      	mov	r0, r5
  403410:	3004      	adds	r0, #4
  403412:	46a2      	mov	sl, r4
  403414:	900f      	str	r0, [sp, #60]	; 0x3c
  403416:	f7fe be51 	b.w	4020bc <_svfprintf_r+0xb0>
  40341a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40341e:	f7ff b867 	b.w	4024f0 <_svfprintf_r+0x4e4>
  403422:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403426:	f7ff ba15 	b.w	402854 <_svfprintf_r+0x848>
  40342a:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40342e:	e6a6      	b.n	40317e <_svfprintf_r+0x1172>
  403430:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403434:	f7ff b8eb 	b.w	40260e <_svfprintf_r+0x602>
  403438:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40343a:	230c      	movs	r3, #12
  40343c:	6013      	str	r3, [r2, #0]
  40343e:	f04f 33ff 	mov.w	r3, #4294967295
  403442:	9309      	str	r3, [sp, #36]	; 0x24
  403444:	f7fe bebd 	b.w	4021c2 <_svfprintf_r+0x1b6>
  403448:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40344c:	f7ff b99a 	b.w	402784 <_svfprintf_r+0x778>
  403450:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403454:	f7ff b976 	b.w	402744 <_svfprintf_r+0x738>
  403458:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40345c:	f7ff b959 	b.w	402712 <_svfprintf_r+0x706>
  403460:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403464:	f7ff b912 	b.w	40268c <_svfprintf_r+0x680>

00403468 <register_fini>:
  403468:	4b02      	ldr	r3, [pc, #8]	; (403474 <register_fini+0xc>)
  40346a:	b113      	cbz	r3, 403472 <register_fini+0xa>
  40346c:	4802      	ldr	r0, [pc, #8]	; (403478 <register_fini+0x10>)
  40346e:	f000 b805 	b.w	40347c <atexit>
  403472:	4770      	bx	lr
  403474:	00000000 	.word	0x00000000
  403478:	00404405 	.word	0x00404405

0040347c <atexit>:
  40347c:	2300      	movs	r3, #0
  40347e:	4601      	mov	r1, r0
  403480:	461a      	mov	r2, r3
  403482:	4618      	mov	r0, r3
  403484:	f001 bfc8 	b.w	405418 <__register_exitproc>

00403488 <quorem>:
  403488:	6902      	ldr	r2, [r0, #16]
  40348a:	690b      	ldr	r3, [r1, #16]
  40348c:	4293      	cmp	r3, r2
  40348e:	f300 808d 	bgt.w	4035ac <quorem+0x124>
  403492:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403496:	f103 38ff 	add.w	r8, r3, #4294967295
  40349a:	f101 0714 	add.w	r7, r1, #20
  40349e:	f100 0b14 	add.w	fp, r0, #20
  4034a2:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4034a6:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4034aa:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4034ae:	b083      	sub	sp, #12
  4034b0:	3201      	adds	r2, #1
  4034b2:	fbb3 f9f2 	udiv	r9, r3, r2
  4034b6:	eb0b 0304 	add.w	r3, fp, r4
  4034ba:	9400      	str	r4, [sp, #0]
  4034bc:	eb07 0a04 	add.w	sl, r7, r4
  4034c0:	9301      	str	r3, [sp, #4]
  4034c2:	f1b9 0f00 	cmp.w	r9, #0
  4034c6:	d039      	beq.n	40353c <quorem+0xb4>
  4034c8:	2500      	movs	r5, #0
  4034ca:	462e      	mov	r6, r5
  4034cc:	46bc      	mov	ip, r7
  4034ce:	46de      	mov	lr, fp
  4034d0:	f85c 4b04 	ldr.w	r4, [ip], #4
  4034d4:	f8de 3000 	ldr.w	r3, [lr]
  4034d8:	b2a2      	uxth	r2, r4
  4034da:	fb09 5502 	mla	r5, r9, r2, r5
  4034de:	0c22      	lsrs	r2, r4, #16
  4034e0:	0c2c      	lsrs	r4, r5, #16
  4034e2:	fb09 4202 	mla	r2, r9, r2, r4
  4034e6:	b2ad      	uxth	r5, r5
  4034e8:	1b75      	subs	r5, r6, r5
  4034ea:	b296      	uxth	r6, r2
  4034ec:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  4034f0:	fa15 f383 	uxtah	r3, r5, r3
  4034f4:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4034f8:	b29b      	uxth	r3, r3
  4034fa:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4034fe:	45e2      	cmp	sl, ip
  403500:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403504:	f84e 3b04 	str.w	r3, [lr], #4
  403508:	ea4f 4626 	mov.w	r6, r6, asr #16
  40350c:	d2e0      	bcs.n	4034d0 <quorem+0x48>
  40350e:	9b00      	ldr	r3, [sp, #0]
  403510:	f85b 3003 	ldr.w	r3, [fp, r3]
  403514:	b993      	cbnz	r3, 40353c <quorem+0xb4>
  403516:	9c01      	ldr	r4, [sp, #4]
  403518:	1f23      	subs	r3, r4, #4
  40351a:	459b      	cmp	fp, r3
  40351c:	d20c      	bcs.n	403538 <quorem+0xb0>
  40351e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403522:	b94b      	cbnz	r3, 403538 <quorem+0xb0>
  403524:	f1a4 0308 	sub.w	r3, r4, #8
  403528:	e002      	b.n	403530 <quorem+0xa8>
  40352a:	681a      	ldr	r2, [r3, #0]
  40352c:	3b04      	subs	r3, #4
  40352e:	b91a      	cbnz	r2, 403538 <quorem+0xb0>
  403530:	459b      	cmp	fp, r3
  403532:	f108 38ff 	add.w	r8, r8, #4294967295
  403536:	d3f8      	bcc.n	40352a <quorem+0xa2>
  403538:	f8c0 8010 	str.w	r8, [r0, #16]
  40353c:	4604      	mov	r4, r0
  40353e:	f001 fd63 	bl	405008 <__mcmp>
  403542:	2800      	cmp	r0, #0
  403544:	db2e      	blt.n	4035a4 <quorem+0x11c>
  403546:	f109 0901 	add.w	r9, r9, #1
  40354a:	465d      	mov	r5, fp
  40354c:	2300      	movs	r3, #0
  40354e:	f857 1b04 	ldr.w	r1, [r7], #4
  403552:	6828      	ldr	r0, [r5, #0]
  403554:	b28a      	uxth	r2, r1
  403556:	1a9a      	subs	r2, r3, r2
  403558:	0c0b      	lsrs	r3, r1, #16
  40355a:	fa12 f280 	uxtah	r2, r2, r0
  40355e:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403562:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403566:	b292      	uxth	r2, r2
  403568:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40356c:	45ba      	cmp	sl, r7
  40356e:	f845 2b04 	str.w	r2, [r5], #4
  403572:	ea4f 4323 	mov.w	r3, r3, asr #16
  403576:	d2ea      	bcs.n	40354e <quorem+0xc6>
  403578:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40357c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403580:	b982      	cbnz	r2, 4035a4 <quorem+0x11c>
  403582:	1f1a      	subs	r2, r3, #4
  403584:	4593      	cmp	fp, r2
  403586:	d20b      	bcs.n	4035a0 <quorem+0x118>
  403588:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40358c:	b942      	cbnz	r2, 4035a0 <quorem+0x118>
  40358e:	3b08      	subs	r3, #8
  403590:	e002      	b.n	403598 <quorem+0x110>
  403592:	681a      	ldr	r2, [r3, #0]
  403594:	3b04      	subs	r3, #4
  403596:	b91a      	cbnz	r2, 4035a0 <quorem+0x118>
  403598:	459b      	cmp	fp, r3
  40359a:	f108 38ff 	add.w	r8, r8, #4294967295
  40359e:	d3f8      	bcc.n	403592 <quorem+0x10a>
  4035a0:	f8c4 8010 	str.w	r8, [r4, #16]
  4035a4:	4648      	mov	r0, r9
  4035a6:	b003      	add	sp, #12
  4035a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4035ac:	2000      	movs	r0, #0
  4035ae:	4770      	bx	lr

004035b0 <_dtoa_r>:
  4035b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4035b4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4035b6:	b09b      	sub	sp, #108	; 0x6c
  4035b8:	4604      	mov	r4, r0
  4035ba:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4035bc:	4692      	mov	sl, r2
  4035be:	469b      	mov	fp, r3
  4035c0:	b141      	cbz	r1, 4035d4 <_dtoa_r+0x24>
  4035c2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4035c4:	604a      	str	r2, [r1, #4]
  4035c6:	2301      	movs	r3, #1
  4035c8:	4093      	lsls	r3, r2
  4035ca:	608b      	str	r3, [r1, #8]
  4035cc:	f001 fb44 	bl	404c58 <_Bfree>
  4035d0:	2300      	movs	r3, #0
  4035d2:	6423      	str	r3, [r4, #64]	; 0x40
  4035d4:	f1bb 0f00 	cmp.w	fp, #0
  4035d8:	465d      	mov	r5, fp
  4035da:	db35      	blt.n	403648 <_dtoa_r+0x98>
  4035dc:	2300      	movs	r3, #0
  4035de:	6033      	str	r3, [r6, #0]
  4035e0:	4b9d      	ldr	r3, [pc, #628]	; (403858 <_dtoa_r+0x2a8>)
  4035e2:	43ab      	bics	r3, r5
  4035e4:	d015      	beq.n	403612 <_dtoa_r+0x62>
  4035e6:	4650      	mov	r0, sl
  4035e8:	4659      	mov	r1, fp
  4035ea:	2200      	movs	r2, #0
  4035ec:	2300      	movs	r3, #0
  4035ee:	f002 ff29 	bl	406444 <__aeabi_dcmpeq>
  4035f2:	4680      	mov	r8, r0
  4035f4:	2800      	cmp	r0, #0
  4035f6:	d02d      	beq.n	403654 <_dtoa_r+0xa4>
  4035f8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4035fa:	2301      	movs	r3, #1
  4035fc:	6013      	str	r3, [r2, #0]
  4035fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403600:	2b00      	cmp	r3, #0
  403602:	f000 80bd 	beq.w	403780 <_dtoa_r+0x1d0>
  403606:	4895      	ldr	r0, [pc, #596]	; (40385c <_dtoa_r+0x2ac>)
  403608:	6018      	str	r0, [r3, #0]
  40360a:	3801      	subs	r0, #1
  40360c:	b01b      	add	sp, #108	; 0x6c
  40360e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403612:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403614:	f242 730f 	movw	r3, #9999	; 0x270f
  403618:	6013      	str	r3, [r2, #0]
  40361a:	f1ba 0f00 	cmp.w	sl, #0
  40361e:	d10d      	bne.n	40363c <_dtoa_r+0x8c>
  403620:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403624:	b955      	cbnz	r5, 40363c <_dtoa_r+0x8c>
  403626:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403628:	488d      	ldr	r0, [pc, #564]	; (403860 <_dtoa_r+0x2b0>)
  40362a:	2b00      	cmp	r3, #0
  40362c:	d0ee      	beq.n	40360c <_dtoa_r+0x5c>
  40362e:	f100 0308 	add.w	r3, r0, #8
  403632:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403634:	6013      	str	r3, [r2, #0]
  403636:	b01b      	add	sp, #108	; 0x6c
  403638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40363c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40363e:	4889      	ldr	r0, [pc, #548]	; (403864 <_dtoa_r+0x2b4>)
  403640:	2b00      	cmp	r3, #0
  403642:	d0e3      	beq.n	40360c <_dtoa_r+0x5c>
  403644:	1cc3      	adds	r3, r0, #3
  403646:	e7f4      	b.n	403632 <_dtoa_r+0x82>
  403648:	2301      	movs	r3, #1
  40364a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40364e:	6033      	str	r3, [r6, #0]
  403650:	46ab      	mov	fp, r5
  403652:	e7c5      	b.n	4035e0 <_dtoa_r+0x30>
  403654:	aa18      	add	r2, sp, #96	; 0x60
  403656:	ab19      	add	r3, sp, #100	; 0x64
  403658:	9201      	str	r2, [sp, #4]
  40365a:	9300      	str	r3, [sp, #0]
  40365c:	4652      	mov	r2, sl
  40365e:	465b      	mov	r3, fp
  403660:	4620      	mov	r0, r4
  403662:	f001 fd71 	bl	405148 <__d2b>
  403666:	0d2b      	lsrs	r3, r5, #20
  403668:	4681      	mov	r9, r0
  40366a:	d071      	beq.n	403750 <_dtoa_r+0x1a0>
  40366c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403670:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403674:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403676:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40367a:	4650      	mov	r0, sl
  40367c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403680:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403684:	2200      	movs	r2, #0
  403686:	4b78      	ldr	r3, [pc, #480]	; (403868 <_dtoa_r+0x2b8>)
  403688:	f002 fac0 	bl	405c0c <__aeabi_dsub>
  40368c:	a36c      	add	r3, pc, #432	; (adr r3, 403840 <_dtoa_r+0x290>)
  40368e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403692:	f002 fc6f 	bl	405f74 <__aeabi_dmul>
  403696:	a36c      	add	r3, pc, #432	; (adr r3, 403848 <_dtoa_r+0x298>)
  403698:	e9d3 2300 	ldrd	r2, r3, [r3]
  40369c:	f002 fab8 	bl	405c10 <__adddf3>
  4036a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4036a4:	4630      	mov	r0, r6
  4036a6:	f002 fbff 	bl	405ea8 <__aeabi_i2d>
  4036aa:	a369      	add	r3, pc, #420	; (adr r3, 403850 <_dtoa_r+0x2a0>)
  4036ac:	e9d3 2300 	ldrd	r2, r3, [r3]
  4036b0:	f002 fc60 	bl	405f74 <__aeabi_dmul>
  4036b4:	4602      	mov	r2, r0
  4036b6:	460b      	mov	r3, r1
  4036b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4036bc:	f002 faa8 	bl	405c10 <__adddf3>
  4036c0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4036c4:	f002 ff06 	bl	4064d4 <__aeabi_d2iz>
  4036c8:	2200      	movs	r2, #0
  4036ca:	9002      	str	r0, [sp, #8]
  4036cc:	2300      	movs	r3, #0
  4036ce:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4036d2:	f002 fec1 	bl	406458 <__aeabi_dcmplt>
  4036d6:	2800      	cmp	r0, #0
  4036d8:	f040 8173 	bne.w	4039c2 <_dtoa_r+0x412>
  4036dc:	9d02      	ldr	r5, [sp, #8]
  4036de:	2d16      	cmp	r5, #22
  4036e0:	f200 815d 	bhi.w	40399e <_dtoa_r+0x3ee>
  4036e4:	4b61      	ldr	r3, [pc, #388]	; (40386c <_dtoa_r+0x2bc>)
  4036e6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  4036ea:	e9d3 0100 	ldrd	r0, r1, [r3]
  4036ee:	4652      	mov	r2, sl
  4036f0:	465b      	mov	r3, fp
  4036f2:	f002 fecf 	bl	406494 <__aeabi_dcmpgt>
  4036f6:	2800      	cmp	r0, #0
  4036f8:	f000 81c5 	beq.w	403a86 <_dtoa_r+0x4d6>
  4036fc:	1e6b      	subs	r3, r5, #1
  4036fe:	9302      	str	r3, [sp, #8]
  403700:	2300      	movs	r3, #0
  403702:	930e      	str	r3, [sp, #56]	; 0x38
  403704:	1bbf      	subs	r7, r7, r6
  403706:	1e7b      	subs	r3, r7, #1
  403708:	9306      	str	r3, [sp, #24]
  40370a:	f100 8154 	bmi.w	4039b6 <_dtoa_r+0x406>
  40370e:	2300      	movs	r3, #0
  403710:	9308      	str	r3, [sp, #32]
  403712:	9b02      	ldr	r3, [sp, #8]
  403714:	2b00      	cmp	r3, #0
  403716:	f2c0 8145 	blt.w	4039a4 <_dtoa_r+0x3f4>
  40371a:	9a06      	ldr	r2, [sp, #24]
  40371c:	930d      	str	r3, [sp, #52]	; 0x34
  40371e:	4611      	mov	r1, r2
  403720:	4419      	add	r1, r3
  403722:	2300      	movs	r3, #0
  403724:	9106      	str	r1, [sp, #24]
  403726:	930c      	str	r3, [sp, #48]	; 0x30
  403728:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40372a:	2b09      	cmp	r3, #9
  40372c:	d82a      	bhi.n	403784 <_dtoa_r+0x1d4>
  40372e:	2b05      	cmp	r3, #5
  403730:	f340 865b 	ble.w	4043ea <_dtoa_r+0xe3a>
  403734:	3b04      	subs	r3, #4
  403736:	9324      	str	r3, [sp, #144]	; 0x90
  403738:	2500      	movs	r5, #0
  40373a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40373c:	3b02      	subs	r3, #2
  40373e:	2b03      	cmp	r3, #3
  403740:	f200 8642 	bhi.w	4043c8 <_dtoa_r+0xe18>
  403744:	e8df f013 	tbh	[pc, r3, lsl #1]
  403748:	02c903d4 	.word	0x02c903d4
  40374c:	046103df 	.word	0x046103df
  403750:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403752:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403754:	443e      	add	r6, r7
  403756:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40375a:	2b20      	cmp	r3, #32
  40375c:	f340 818e 	ble.w	403a7c <_dtoa_r+0x4cc>
  403760:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403764:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403768:	409d      	lsls	r5, r3
  40376a:	fa2a f000 	lsr.w	r0, sl, r0
  40376e:	4328      	orrs	r0, r5
  403770:	f002 fb8a 	bl	405e88 <__aeabi_ui2d>
  403774:	2301      	movs	r3, #1
  403776:	3e01      	subs	r6, #1
  403778:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40377c:	9314      	str	r3, [sp, #80]	; 0x50
  40377e:	e781      	b.n	403684 <_dtoa_r+0xd4>
  403780:	483b      	ldr	r0, [pc, #236]	; (403870 <_dtoa_r+0x2c0>)
  403782:	e743      	b.n	40360c <_dtoa_r+0x5c>
  403784:	2100      	movs	r1, #0
  403786:	6461      	str	r1, [r4, #68]	; 0x44
  403788:	4620      	mov	r0, r4
  40378a:	9125      	str	r1, [sp, #148]	; 0x94
  40378c:	f001 fa3e 	bl	404c0c <_Balloc>
  403790:	f04f 33ff 	mov.w	r3, #4294967295
  403794:	930a      	str	r3, [sp, #40]	; 0x28
  403796:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403798:	930f      	str	r3, [sp, #60]	; 0x3c
  40379a:	2301      	movs	r3, #1
  40379c:	9004      	str	r0, [sp, #16]
  40379e:	6420      	str	r0, [r4, #64]	; 0x40
  4037a0:	9224      	str	r2, [sp, #144]	; 0x90
  4037a2:	930b      	str	r3, [sp, #44]	; 0x2c
  4037a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4037a6:	2b00      	cmp	r3, #0
  4037a8:	f2c0 80d9 	blt.w	40395e <_dtoa_r+0x3ae>
  4037ac:	9a02      	ldr	r2, [sp, #8]
  4037ae:	2a0e      	cmp	r2, #14
  4037b0:	f300 80d5 	bgt.w	40395e <_dtoa_r+0x3ae>
  4037b4:	4b2d      	ldr	r3, [pc, #180]	; (40386c <_dtoa_r+0x2bc>)
  4037b6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4037ba:	e9d3 2300 	ldrd	r2, r3, [r3]
  4037be:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4037c2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4037c4:	2b00      	cmp	r3, #0
  4037c6:	f2c0 83ba 	blt.w	403f3e <_dtoa_r+0x98e>
  4037ca:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4037ce:	4650      	mov	r0, sl
  4037d0:	462a      	mov	r2, r5
  4037d2:	4633      	mov	r3, r6
  4037d4:	4659      	mov	r1, fp
  4037d6:	f002 fcf7 	bl	4061c8 <__aeabi_ddiv>
  4037da:	f002 fe7b 	bl	4064d4 <__aeabi_d2iz>
  4037de:	4680      	mov	r8, r0
  4037e0:	f002 fb62 	bl	405ea8 <__aeabi_i2d>
  4037e4:	462a      	mov	r2, r5
  4037e6:	4633      	mov	r3, r6
  4037e8:	f002 fbc4 	bl	405f74 <__aeabi_dmul>
  4037ec:	460b      	mov	r3, r1
  4037ee:	4602      	mov	r2, r0
  4037f0:	4659      	mov	r1, fp
  4037f2:	4650      	mov	r0, sl
  4037f4:	f002 fa0a 	bl	405c0c <__aeabi_dsub>
  4037f8:	9d04      	ldr	r5, [sp, #16]
  4037fa:	f108 0330 	add.w	r3, r8, #48	; 0x30
  4037fe:	702b      	strb	r3, [r5, #0]
  403800:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403802:	2b01      	cmp	r3, #1
  403804:	4606      	mov	r6, r0
  403806:	460f      	mov	r7, r1
  403808:	f105 0501 	add.w	r5, r5, #1
  40380c:	d068      	beq.n	4038e0 <_dtoa_r+0x330>
  40380e:	2200      	movs	r2, #0
  403810:	4b18      	ldr	r3, [pc, #96]	; (403874 <_dtoa_r+0x2c4>)
  403812:	f002 fbaf 	bl	405f74 <__aeabi_dmul>
  403816:	2200      	movs	r2, #0
  403818:	2300      	movs	r3, #0
  40381a:	4606      	mov	r6, r0
  40381c:	460f      	mov	r7, r1
  40381e:	f002 fe11 	bl	406444 <__aeabi_dcmpeq>
  403822:	2800      	cmp	r0, #0
  403824:	f040 8088 	bne.w	403938 <_dtoa_r+0x388>
  403828:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40382c:	f04f 0a00 	mov.w	sl, #0
  403830:	f8df b040 	ldr.w	fp, [pc, #64]	; 403874 <_dtoa_r+0x2c4>
  403834:	940c      	str	r4, [sp, #48]	; 0x30
  403836:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40383a:	e028      	b.n	40388e <_dtoa_r+0x2de>
  40383c:	f3af 8000 	nop.w
  403840:	636f4361 	.word	0x636f4361
  403844:	3fd287a7 	.word	0x3fd287a7
  403848:	8b60c8b3 	.word	0x8b60c8b3
  40384c:	3fc68a28 	.word	0x3fc68a28
  403850:	509f79fb 	.word	0x509f79fb
  403854:	3fd34413 	.word	0x3fd34413
  403858:	7ff00000 	.word	0x7ff00000
  40385c:	0040757d 	.word	0x0040757d
  403860:	004075a0 	.word	0x004075a0
  403864:	004075ac 	.word	0x004075ac
  403868:	3ff80000 	.word	0x3ff80000
  40386c:	004075d8 	.word	0x004075d8
  403870:	0040757c 	.word	0x0040757c
  403874:	40240000 	.word	0x40240000
  403878:	f002 fb7c 	bl	405f74 <__aeabi_dmul>
  40387c:	2200      	movs	r2, #0
  40387e:	2300      	movs	r3, #0
  403880:	4606      	mov	r6, r0
  403882:	460f      	mov	r7, r1
  403884:	f002 fdde 	bl	406444 <__aeabi_dcmpeq>
  403888:	2800      	cmp	r0, #0
  40388a:	f040 83c1 	bne.w	404010 <_dtoa_r+0xa60>
  40388e:	4642      	mov	r2, r8
  403890:	464b      	mov	r3, r9
  403892:	4630      	mov	r0, r6
  403894:	4639      	mov	r1, r7
  403896:	f002 fc97 	bl	4061c8 <__aeabi_ddiv>
  40389a:	f002 fe1b 	bl	4064d4 <__aeabi_d2iz>
  40389e:	4604      	mov	r4, r0
  4038a0:	f002 fb02 	bl	405ea8 <__aeabi_i2d>
  4038a4:	4642      	mov	r2, r8
  4038a6:	464b      	mov	r3, r9
  4038a8:	f002 fb64 	bl	405f74 <__aeabi_dmul>
  4038ac:	4602      	mov	r2, r0
  4038ae:	460b      	mov	r3, r1
  4038b0:	4630      	mov	r0, r6
  4038b2:	4639      	mov	r1, r7
  4038b4:	f002 f9aa 	bl	405c0c <__aeabi_dsub>
  4038b8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4038bc:	9e04      	ldr	r6, [sp, #16]
  4038be:	f805 eb01 	strb.w	lr, [r5], #1
  4038c2:	eba5 0e06 	sub.w	lr, r5, r6
  4038c6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4038c8:	45b6      	cmp	lr, r6
  4038ca:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4038ce:	4652      	mov	r2, sl
  4038d0:	465b      	mov	r3, fp
  4038d2:	d1d1      	bne.n	403878 <_dtoa_r+0x2c8>
  4038d4:	46a0      	mov	r8, r4
  4038d6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4038da:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4038dc:	4606      	mov	r6, r0
  4038de:	460f      	mov	r7, r1
  4038e0:	4632      	mov	r2, r6
  4038e2:	463b      	mov	r3, r7
  4038e4:	4630      	mov	r0, r6
  4038e6:	4639      	mov	r1, r7
  4038e8:	f002 f992 	bl	405c10 <__adddf3>
  4038ec:	4606      	mov	r6, r0
  4038ee:	460f      	mov	r7, r1
  4038f0:	4602      	mov	r2, r0
  4038f2:	460b      	mov	r3, r1
  4038f4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4038f8:	f002 fdae 	bl	406458 <__aeabi_dcmplt>
  4038fc:	b948      	cbnz	r0, 403912 <_dtoa_r+0x362>
  4038fe:	4632      	mov	r2, r6
  403900:	463b      	mov	r3, r7
  403902:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403906:	f002 fd9d 	bl	406444 <__aeabi_dcmpeq>
  40390a:	b1a8      	cbz	r0, 403938 <_dtoa_r+0x388>
  40390c:	f018 0f01 	tst.w	r8, #1
  403910:	d012      	beq.n	403938 <_dtoa_r+0x388>
  403912:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403916:	9a04      	ldr	r2, [sp, #16]
  403918:	1e6b      	subs	r3, r5, #1
  40391a:	e004      	b.n	403926 <_dtoa_r+0x376>
  40391c:	429a      	cmp	r2, r3
  40391e:	f000 8401 	beq.w	404124 <_dtoa_r+0xb74>
  403922:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403926:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40392a:	f103 0501 	add.w	r5, r3, #1
  40392e:	d0f5      	beq.n	40391c <_dtoa_r+0x36c>
  403930:	f108 0801 	add.w	r8, r8, #1
  403934:	f883 8000 	strb.w	r8, [r3]
  403938:	4649      	mov	r1, r9
  40393a:	4620      	mov	r0, r4
  40393c:	f001 f98c 	bl	404c58 <_Bfree>
  403940:	2200      	movs	r2, #0
  403942:	9b02      	ldr	r3, [sp, #8]
  403944:	702a      	strb	r2, [r5, #0]
  403946:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403948:	3301      	adds	r3, #1
  40394a:	6013      	str	r3, [r2, #0]
  40394c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40394e:	2b00      	cmp	r3, #0
  403950:	f000 839e 	beq.w	404090 <_dtoa_r+0xae0>
  403954:	9804      	ldr	r0, [sp, #16]
  403956:	601d      	str	r5, [r3, #0]
  403958:	b01b      	add	sp, #108	; 0x6c
  40395a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40395e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403960:	2a00      	cmp	r2, #0
  403962:	d03e      	beq.n	4039e2 <_dtoa_r+0x432>
  403964:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403966:	2a01      	cmp	r2, #1
  403968:	f340 8311 	ble.w	403f8e <_dtoa_r+0x9de>
  40396c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40396e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403970:	1e5f      	subs	r7, r3, #1
  403972:	42ba      	cmp	r2, r7
  403974:	f2c0 838f 	blt.w	404096 <_dtoa_r+0xae6>
  403978:	1bd7      	subs	r7, r2, r7
  40397a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40397c:	2b00      	cmp	r3, #0
  40397e:	f2c0 848b 	blt.w	404298 <_dtoa_r+0xce8>
  403982:	9d08      	ldr	r5, [sp, #32]
  403984:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403986:	9a08      	ldr	r2, [sp, #32]
  403988:	441a      	add	r2, r3
  40398a:	9208      	str	r2, [sp, #32]
  40398c:	9a06      	ldr	r2, [sp, #24]
  40398e:	2101      	movs	r1, #1
  403990:	441a      	add	r2, r3
  403992:	4620      	mov	r0, r4
  403994:	9206      	str	r2, [sp, #24]
  403996:	f001 f9f9 	bl	404d8c <__i2b>
  40399a:	4606      	mov	r6, r0
  40399c:	e024      	b.n	4039e8 <_dtoa_r+0x438>
  40399e:	2301      	movs	r3, #1
  4039a0:	930e      	str	r3, [sp, #56]	; 0x38
  4039a2:	e6af      	b.n	403704 <_dtoa_r+0x154>
  4039a4:	9a08      	ldr	r2, [sp, #32]
  4039a6:	9b02      	ldr	r3, [sp, #8]
  4039a8:	1ad2      	subs	r2, r2, r3
  4039aa:	425b      	negs	r3, r3
  4039ac:	930c      	str	r3, [sp, #48]	; 0x30
  4039ae:	2300      	movs	r3, #0
  4039b0:	9208      	str	r2, [sp, #32]
  4039b2:	930d      	str	r3, [sp, #52]	; 0x34
  4039b4:	e6b8      	b.n	403728 <_dtoa_r+0x178>
  4039b6:	f1c7 0301 	rsb	r3, r7, #1
  4039ba:	9308      	str	r3, [sp, #32]
  4039bc:	2300      	movs	r3, #0
  4039be:	9306      	str	r3, [sp, #24]
  4039c0:	e6a7      	b.n	403712 <_dtoa_r+0x162>
  4039c2:	9d02      	ldr	r5, [sp, #8]
  4039c4:	4628      	mov	r0, r5
  4039c6:	f002 fa6f 	bl	405ea8 <__aeabi_i2d>
  4039ca:	4602      	mov	r2, r0
  4039cc:	460b      	mov	r3, r1
  4039ce:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4039d2:	f002 fd37 	bl	406444 <__aeabi_dcmpeq>
  4039d6:	2800      	cmp	r0, #0
  4039d8:	f47f ae80 	bne.w	4036dc <_dtoa_r+0x12c>
  4039dc:	1e6b      	subs	r3, r5, #1
  4039de:	9302      	str	r3, [sp, #8]
  4039e0:	e67c      	b.n	4036dc <_dtoa_r+0x12c>
  4039e2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4039e4:	9d08      	ldr	r5, [sp, #32]
  4039e6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  4039e8:	2d00      	cmp	r5, #0
  4039ea:	dd0c      	ble.n	403a06 <_dtoa_r+0x456>
  4039ec:	9906      	ldr	r1, [sp, #24]
  4039ee:	2900      	cmp	r1, #0
  4039f0:	460b      	mov	r3, r1
  4039f2:	dd08      	ble.n	403a06 <_dtoa_r+0x456>
  4039f4:	42a9      	cmp	r1, r5
  4039f6:	9a08      	ldr	r2, [sp, #32]
  4039f8:	bfa8      	it	ge
  4039fa:	462b      	movge	r3, r5
  4039fc:	1ad2      	subs	r2, r2, r3
  4039fe:	1aed      	subs	r5, r5, r3
  403a00:	1acb      	subs	r3, r1, r3
  403a02:	9208      	str	r2, [sp, #32]
  403a04:	9306      	str	r3, [sp, #24]
  403a06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403a08:	b1d3      	cbz	r3, 403a40 <_dtoa_r+0x490>
  403a0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403a0c:	2b00      	cmp	r3, #0
  403a0e:	f000 82b7 	beq.w	403f80 <_dtoa_r+0x9d0>
  403a12:	2f00      	cmp	r7, #0
  403a14:	dd10      	ble.n	403a38 <_dtoa_r+0x488>
  403a16:	4631      	mov	r1, r6
  403a18:	463a      	mov	r2, r7
  403a1a:	4620      	mov	r0, r4
  403a1c:	f001 fa52 	bl	404ec4 <__pow5mult>
  403a20:	464a      	mov	r2, r9
  403a22:	4601      	mov	r1, r0
  403a24:	4606      	mov	r6, r0
  403a26:	4620      	mov	r0, r4
  403a28:	f001 f9ba 	bl	404da0 <__multiply>
  403a2c:	4649      	mov	r1, r9
  403a2e:	4680      	mov	r8, r0
  403a30:	4620      	mov	r0, r4
  403a32:	f001 f911 	bl	404c58 <_Bfree>
  403a36:	46c1      	mov	r9, r8
  403a38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403a3a:	1bda      	subs	r2, r3, r7
  403a3c:	f040 82a1 	bne.w	403f82 <_dtoa_r+0x9d2>
  403a40:	2101      	movs	r1, #1
  403a42:	4620      	mov	r0, r4
  403a44:	f001 f9a2 	bl	404d8c <__i2b>
  403a48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a4a:	2b00      	cmp	r3, #0
  403a4c:	4680      	mov	r8, r0
  403a4e:	dd1c      	ble.n	403a8a <_dtoa_r+0x4da>
  403a50:	4601      	mov	r1, r0
  403a52:	461a      	mov	r2, r3
  403a54:	4620      	mov	r0, r4
  403a56:	f001 fa35 	bl	404ec4 <__pow5mult>
  403a5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403a5c:	2b01      	cmp	r3, #1
  403a5e:	4680      	mov	r8, r0
  403a60:	f340 8254 	ble.w	403f0c <_dtoa_r+0x95c>
  403a64:	2300      	movs	r3, #0
  403a66:	930c      	str	r3, [sp, #48]	; 0x30
  403a68:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403a6c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403a70:	6918      	ldr	r0, [r3, #16]
  403a72:	f001 f93b 	bl	404cec <__hi0bits>
  403a76:	f1c0 0020 	rsb	r0, r0, #32
  403a7a:	e010      	b.n	403a9e <_dtoa_r+0x4ee>
  403a7c:	f1c3 0520 	rsb	r5, r3, #32
  403a80:	fa0a f005 	lsl.w	r0, sl, r5
  403a84:	e674      	b.n	403770 <_dtoa_r+0x1c0>
  403a86:	900e      	str	r0, [sp, #56]	; 0x38
  403a88:	e63c      	b.n	403704 <_dtoa_r+0x154>
  403a8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403a8c:	2b01      	cmp	r3, #1
  403a8e:	f340 8287 	ble.w	403fa0 <_dtoa_r+0x9f0>
  403a92:	2300      	movs	r3, #0
  403a94:	930c      	str	r3, [sp, #48]	; 0x30
  403a96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a98:	2001      	movs	r0, #1
  403a9a:	2b00      	cmp	r3, #0
  403a9c:	d1e4      	bne.n	403a68 <_dtoa_r+0x4b8>
  403a9e:	9a06      	ldr	r2, [sp, #24]
  403aa0:	4410      	add	r0, r2
  403aa2:	f010 001f 	ands.w	r0, r0, #31
  403aa6:	f000 80a1 	beq.w	403bec <_dtoa_r+0x63c>
  403aaa:	f1c0 0320 	rsb	r3, r0, #32
  403aae:	2b04      	cmp	r3, #4
  403ab0:	f340 849e 	ble.w	4043f0 <_dtoa_r+0xe40>
  403ab4:	9b08      	ldr	r3, [sp, #32]
  403ab6:	f1c0 001c 	rsb	r0, r0, #28
  403aba:	4403      	add	r3, r0
  403abc:	9308      	str	r3, [sp, #32]
  403abe:	4613      	mov	r3, r2
  403ac0:	4403      	add	r3, r0
  403ac2:	4405      	add	r5, r0
  403ac4:	9306      	str	r3, [sp, #24]
  403ac6:	9b08      	ldr	r3, [sp, #32]
  403ac8:	2b00      	cmp	r3, #0
  403aca:	dd05      	ble.n	403ad8 <_dtoa_r+0x528>
  403acc:	4649      	mov	r1, r9
  403ace:	461a      	mov	r2, r3
  403ad0:	4620      	mov	r0, r4
  403ad2:	f001 fa47 	bl	404f64 <__lshift>
  403ad6:	4681      	mov	r9, r0
  403ad8:	9b06      	ldr	r3, [sp, #24]
  403ada:	2b00      	cmp	r3, #0
  403adc:	dd05      	ble.n	403aea <_dtoa_r+0x53a>
  403ade:	4641      	mov	r1, r8
  403ae0:	461a      	mov	r2, r3
  403ae2:	4620      	mov	r0, r4
  403ae4:	f001 fa3e 	bl	404f64 <__lshift>
  403ae8:	4680      	mov	r8, r0
  403aea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403aec:	2b00      	cmp	r3, #0
  403aee:	f040 8086 	bne.w	403bfe <_dtoa_r+0x64e>
  403af2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403af4:	2b00      	cmp	r3, #0
  403af6:	f340 8266 	ble.w	403fc6 <_dtoa_r+0xa16>
  403afa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403afc:	2b00      	cmp	r3, #0
  403afe:	f000 8098 	beq.w	403c32 <_dtoa_r+0x682>
  403b02:	2d00      	cmp	r5, #0
  403b04:	dd05      	ble.n	403b12 <_dtoa_r+0x562>
  403b06:	4631      	mov	r1, r6
  403b08:	462a      	mov	r2, r5
  403b0a:	4620      	mov	r0, r4
  403b0c:	f001 fa2a 	bl	404f64 <__lshift>
  403b10:	4606      	mov	r6, r0
  403b12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403b14:	2b00      	cmp	r3, #0
  403b16:	f040 8337 	bne.w	404188 <_dtoa_r+0xbd8>
  403b1a:	9606      	str	r6, [sp, #24]
  403b1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b1e:	9a04      	ldr	r2, [sp, #16]
  403b20:	f8dd b018 	ldr.w	fp, [sp, #24]
  403b24:	3b01      	subs	r3, #1
  403b26:	18d3      	adds	r3, r2, r3
  403b28:	930b      	str	r3, [sp, #44]	; 0x2c
  403b2a:	f00a 0301 	and.w	r3, sl, #1
  403b2e:	930c      	str	r3, [sp, #48]	; 0x30
  403b30:	4617      	mov	r7, r2
  403b32:	46c2      	mov	sl, r8
  403b34:	4651      	mov	r1, sl
  403b36:	4648      	mov	r0, r9
  403b38:	f7ff fca6 	bl	403488 <quorem>
  403b3c:	4631      	mov	r1, r6
  403b3e:	4605      	mov	r5, r0
  403b40:	4648      	mov	r0, r9
  403b42:	f001 fa61 	bl	405008 <__mcmp>
  403b46:	465a      	mov	r2, fp
  403b48:	900a      	str	r0, [sp, #40]	; 0x28
  403b4a:	4651      	mov	r1, sl
  403b4c:	4620      	mov	r0, r4
  403b4e:	f001 fa77 	bl	405040 <__mdiff>
  403b52:	68c2      	ldr	r2, [r0, #12]
  403b54:	4680      	mov	r8, r0
  403b56:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403b5a:	2a00      	cmp	r2, #0
  403b5c:	f040 822b 	bne.w	403fb6 <_dtoa_r+0xa06>
  403b60:	4601      	mov	r1, r0
  403b62:	4648      	mov	r0, r9
  403b64:	9308      	str	r3, [sp, #32]
  403b66:	f001 fa4f 	bl	405008 <__mcmp>
  403b6a:	4641      	mov	r1, r8
  403b6c:	9006      	str	r0, [sp, #24]
  403b6e:	4620      	mov	r0, r4
  403b70:	f001 f872 	bl	404c58 <_Bfree>
  403b74:	9a06      	ldr	r2, [sp, #24]
  403b76:	9b08      	ldr	r3, [sp, #32]
  403b78:	b932      	cbnz	r2, 403b88 <_dtoa_r+0x5d8>
  403b7a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403b7c:	b921      	cbnz	r1, 403b88 <_dtoa_r+0x5d8>
  403b7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403b80:	2a00      	cmp	r2, #0
  403b82:	f000 83ef 	beq.w	404364 <_dtoa_r+0xdb4>
  403b86:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403b88:	990a      	ldr	r1, [sp, #40]	; 0x28
  403b8a:	2900      	cmp	r1, #0
  403b8c:	f2c0 829f 	blt.w	4040ce <_dtoa_r+0xb1e>
  403b90:	d105      	bne.n	403b9e <_dtoa_r+0x5ee>
  403b92:	9924      	ldr	r1, [sp, #144]	; 0x90
  403b94:	b919      	cbnz	r1, 403b9e <_dtoa_r+0x5ee>
  403b96:	990c      	ldr	r1, [sp, #48]	; 0x30
  403b98:	2900      	cmp	r1, #0
  403b9a:	f000 8298 	beq.w	4040ce <_dtoa_r+0xb1e>
  403b9e:	2a00      	cmp	r2, #0
  403ba0:	f300 8306 	bgt.w	4041b0 <_dtoa_r+0xc00>
  403ba4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403ba6:	703b      	strb	r3, [r7, #0]
  403ba8:	f107 0801 	add.w	r8, r7, #1
  403bac:	4297      	cmp	r7, r2
  403bae:	4645      	mov	r5, r8
  403bb0:	f000 830c 	beq.w	4041cc <_dtoa_r+0xc1c>
  403bb4:	4649      	mov	r1, r9
  403bb6:	2300      	movs	r3, #0
  403bb8:	220a      	movs	r2, #10
  403bba:	4620      	mov	r0, r4
  403bbc:	f001 f856 	bl	404c6c <__multadd>
  403bc0:	455e      	cmp	r6, fp
  403bc2:	4681      	mov	r9, r0
  403bc4:	4631      	mov	r1, r6
  403bc6:	f04f 0300 	mov.w	r3, #0
  403bca:	f04f 020a 	mov.w	r2, #10
  403bce:	4620      	mov	r0, r4
  403bd0:	f000 81eb 	beq.w	403faa <_dtoa_r+0x9fa>
  403bd4:	f001 f84a 	bl	404c6c <__multadd>
  403bd8:	4659      	mov	r1, fp
  403bda:	4606      	mov	r6, r0
  403bdc:	2300      	movs	r3, #0
  403bde:	220a      	movs	r2, #10
  403be0:	4620      	mov	r0, r4
  403be2:	f001 f843 	bl	404c6c <__multadd>
  403be6:	4647      	mov	r7, r8
  403be8:	4683      	mov	fp, r0
  403bea:	e7a3      	b.n	403b34 <_dtoa_r+0x584>
  403bec:	201c      	movs	r0, #28
  403bee:	9b08      	ldr	r3, [sp, #32]
  403bf0:	4403      	add	r3, r0
  403bf2:	9308      	str	r3, [sp, #32]
  403bf4:	9b06      	ldr	r3, [sp, #24]
  403bf6:	4403      	add	r3, r0
  403bf8:	4405      	add	r5, r0
  403bfa:	9306      	str	r3, [sp, #24]
  403bfc:	e763      	b.n	403ac6 <_dtoa_r+0x516>
  403bfe:	4641      	mov	r1, r8
  403c00:	4648      	mov	r0, r9
  403c02:	f001 fa01 	bl	405008 <__mcmp>
  403c06:	2800      	cmp	r0, #0
  403c08:	f6bf af73 	bge.w	403af2 <_dtoa_r+0x542>
  403c0c:	9f02      	ldr	r7, [sp, #8]
  403c0e:	4649      	mov	r1, r9
  403c10:	2300      	movs	r3, #0
  403c12:	220a      	movs	r2, #10
  403c14:	4620      	mov	r0, r4
  403c16:	3f01      	subs	r7, #1
  403c18:	9702      	str	r7, [sp, #8]
  403c1a:	f001 f827 	bl	404c6c <__multadd>
  403c1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403c20:	4681      	mov	r9, r0
  403c22:	2b00      	cmp	r3, #0
  403c24:	f040 83b6 	bne.w	404394 <_dtoa_r+0xde4>
  403c28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403c2a:	2b00      	cmp	r3, #0
  403c2c:	f340 83bf 	ble.w	4043ae <_dtoa_r+0xdfe>
  403c30:	930a      	str	r3, [sp, #40]	; 0x28
  403c32:	f8dd b010 	ldr.w	fp, [sp, #16]
  403c36:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403c38:	465d      	mov	r5, fp
  403c3a:	e002      	b.n	403c42 <_dtoa_r+0x692>
  403c3c:	f001 f816 	bl	404c6c <__multadd>
  403c40:	4681      	mov	r9, r0
  403c42:	4641      	mov	r1, r8
  403c44:	4648      	mov	r0, r9
  403c46:	f7ff fc1f 	bl	403488 <quorem>
  403c4a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403c4e:	f805 ab01 	strb.w	sl, [r5], #1
  403c52:	eba5 030b 	sub.w	r3, r5, fp
  403c56:	42bb      	cmp	r3, r7
  403c58:	f04f 020a 	mov.w	r2, #10
  403c5c:	f04f 0300 	mov.w	r3, #0
  403c60:	4649      	mov	r1, r9
  403c62:	4620      	mov	r0, r4
  403c64:	dbea      	blt.n	403c3c <_dtoa_r+0x68c>
  403c66:	9b04      	ldr	r3, [sp, #16]
  403c68:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403c6a:	2a01      	cmp	r2, #1
  403c6c:	bfac      	ite	ge
  403c6e:	189b      	addge	r3, r3, r2
  403c70:	3301      	addlt	r3, #1
  403c72:	461d      	mov	r5, r3
  403c74:	f04f 0b00 	mov.w	fp, #0
  403c78:	4649      	mov	r1, r9
  403c7a:	2201      	movs	r2, #1
  403c7c:	4620      	mov	r0, r4
  403c7e:	f001 f971 	bl	404f64 <__lshift>
  403c82:	4641      	mov	r1, r8
  403c84:	4681      	mov	r9, r0
  403c86:	f001 f9bf 	bl	405008 <__mcmp>
  403c8a:	2800      	cmp	r0, #0
  403c8c:	f340 823d 	ble.w	40410a <_dtoa_r+0xb5a>
  403c90:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403c94:	9904      	ldr	r1, [sp, #16]
  403c96:	1e6b      	subs	r3, r5, #1
  403c98:	e004      	b.n	403ca4 <_dtoa_r+0x6f4>
  403c9a:	428b      	cmp	r3, r1
  403c9c:	f000 81ae 	beq.w	403ffc <_dtoa_r+0xa4c>
  403ca0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403ca4:	2a39      	cmp	r2, #57	; 0x39
  403ca6:	f103 0501 	add.w	r5, r3, #1
  403caa:	d0f6      	beq.n	403c9a <_dtoa_r+0x6ea>
  403cac:	3201      	adds	r2, #1
  403cae:	701a      	strb	r2, [r3, #0]
  403cb0:	4641      	mov	r1, r8
  403cb2:	4620      	mov	r0, r4
  403cb4:	f000 ffd0 	bl	404c58 <_Bfree>
  403cb8:	2e00      	cmp	r6, #0
  403cba:	f43f ae3d 	beq.w	403938 <_dtoa_r+0x388>
  403cbe:	f1bb 0f00 	cmp.w	fp, #0
  403cc2:	d005      	beq.n	403cd0 <_dtoa_r+0x720>
  403cc4:	45b3      	cmp	fp, r6
  403cc6:	d003      	beq.n	403cd0 <_dtoa_r+0x720>
  403cc8:	4659      	mov	r1, fp
  403cca:	4620      	mov	r0, r4
  403ccc:	f000 ffc4 	bl	404c58 <_Bfree>
  403cd0:	4631      	mov	r1, r6
  403cd2:	4620      	mov	r0, r4
  403cd4:	f000 ffc0 	bl	404c58 <_Bfree>
  403cd8:	e62e      	b.n	403938 <_dtoa_r+0x388>
  403cda:	2300      	movs	r3, #0
  403cdc:	930b      	str	r3, [sp, #44]	; 0x2c
  403cde:	9b02      	ldr	r3, [sp, #8]
  403ce0:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403ce2:	4413      	add	r3, r2
  403ce4:	930f      	str	r3, [sp, #60]	; 0x3c
  403ce6:	3301      	adds	r3, #1
  403ce8:	2b01      	cmp	r3, #1
  403cea:	461f      	mov	r7, r3
  403cec:	461e      	mov	r6, r3
  403cee:	930a      	str	r3, [sp, #40]	; 0x28
  403cf0:	bfb8      	it	lt
  403cf2:	2701      	movlt	r7, #1
  403cf4:	2100      	movs	r1, #0
  403cf6:	2f17      	cmp	r7, #23
  403cf8:	6461      	str	r1, [r4, #68]	; 0x44
  403cfa:	d90a      	bls.n	403d12 <_dtoa_r+0x762>
  403cfc:	2201      	movs	r2, #1
  403cfe:	2304      	movs	r3, #4
  403d00:	005b      	lsls	r3, r3, #1
  403d02:	f103 0014 	add.w	r0, r3, #20
  403d06:	4287      	cmp	r7, r0
  403d08:	4611      	mov	r1, r2
  403d0a:	f102 0201 	add.w	r2, r2, #1
  403d0e:	d2f7      	bcs.n	403d00 <_dtoa_r+0x750>
  403d10:	6461      	str	r1, [r4, #68]	; 0x44
  403d12:	4620      	mov	r0, r4
  403d14:	f000 ff7a 	bl	404c0c <_Balloc>
  403d18:	2e0e      	cmp	r6, #14
  403d1a:	9004      	str	r0, [sp, #16]
  403d1c:	6420      	str	r0, [r4, #64]	; 0x40
  403d1e:	f63f ad41 	bhi.w	4037a4 <_dtoa_r+0x1f4>
  403d22:	2d00      	cmp	r5, #0
  403d24:	f43f ad3e 	beq.w	4037a4 <_dtoa_r+0x1f4>
  403d28:	9902      	ldr	r1, [sp, #8]
  403d2a:	2900      	cmp	r1, #0
  403d2c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403d30:	f340 8202 	ble.w	404138 <_dtoa_r+0xb88>
  403d34:	4bb8      	ldr	r3, [pc, #736]	; (404018 <_dtoa_r+0xa68>)
  403d36:	f001 020f 	and.w	r2, r1, #15
  403d3a:	110d      	asrs	r5, r1, #4
  403d3c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403d40:	06e9      	lsls	r1, r5, #27
  403d42:	e9d3 6700 	ldrd	r6, r7, [r3]
  403d46:	f140 81ae 	bpl.w	4040a6 <_dtoa_r+0xaf6>
  403d4a:	4bb4      	ldr	r3, [pc, #720]	; (40401c <_dtoa_r+0xa6c>)
  403d4c:	4650      	mov	r0, sl
  403d4e:	4659      	mov	r1, fp
  403d50:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403d54:	f002 fa38 	bl	4061c8 <__aeabi_ddiv>
  403d58:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403d5c:	f005 050f 	and.w	r5, r5, #15
  403d60:	f04f 0a03 	mov.w	sl, #3
  403d64:	b18d      	cbz	r5, 403d8a <_dtoa_r+0x7da>
  403d66:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 40401c <_dtoa_r+0xa6c>
  403d6a:	07ea      	lsls	r2, r5, #31
  403d6c:	d509      	bpl.n	403d82 <_dtoa_r+0x7d2>
  403d6e:	4630      	mov	r0, r6
  403d70:	4639      	mov	r1, r7
  403d72:	e9d8 2300 	ldrd	r2, r3, [r8]
  403d76:	f002 f8fd 	bl	405f74 <__aeabi_dmul>
  403d7a:	f10a 0a01 	add.w	sl, sl, #1
  403d7e:	4606      	mov	r6, r0
  403d80:	460f      	mov	r7, r1
  403d82:	106d      	asrs	r5, r5, #1
  403d84:	f108 0808 	add.w	r8, r8, #8
  403d88:	d1ef      	bne.n	403d6a <_dtoa_r+0x7ba>
  403d8a:	463b      	mov	r3, r7
  403d8c:	4632      	mov	r2, r6
  403d8e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403d92:	f002 fa19 	bl	4061c8 <__aeabi_ddiv>
  403d96:	4607      	mov	r7, r0
  403d98:	4688      	mov	r8, r1
  403d9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403d9c:	b143      	cbz	r3, 403db0 <_dtoa_r+0x800>
  403d9e:	2200      	movs	r2, #0
  403da0:	4b9f      	ldr	r3, [pc, #636]	; (404020 <_dtoa_r+0xa70>)
  403da2:	4638      	mov	r0, r7
  403da4:	4641      	mov	r1, r8
  403da6:	f002 fb57 	bl	406458 <__aeabi_dcmplt>
  403daa:	2800      	cmp	r0, #0
  403dac:	f040 8286 	bne.w	4042bc <_dtoa_r+0xd0c>
  403db0:	4650      	mov	r0, sl
  403db2:	f002 f879 	bl	405ea8 <__aeabi_i2d>
  403db6:	463a      	mov	r2, r7
  403db8:	4643      	mov	r3, r8
  403dba:	f002 f8db 	bl	405f74 <__aeabi_dmul>
  403dbe:	4b99      	ldr	r3, [pc, #612]	; (404024 <_dtoa_r+0xa74>)
  403dc0:	2200      	movs	r2, #0
  403dc2:	f001 ff25 	bl	405c10 <__adddf3>
  403dc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403dc8:	4605      	mov	r5, r0
  403dca:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403dce:	2b00      	cmp	r3, #0
  403dd0:	f000 813e 	beq.w	404050 <_dtoa_r+0xaa0>
  403dd4:	9b02      	ldr	r3, [sp, #8]
  403dd6:	9315      	str	r3, [sp, #84]	; 0x54
  403dd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403dda:	9312      	str	r3, [sp, #72]	; 0x48
  403ddc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403dde:	2b00      	cmp	r3, #0
  403de0:	f000 81fa 	beq.w	4041d8 <_dtoa_r+0xc28>
  403de4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403de6:	4b8c      	ldr	r3, [pc, #560]	; (404018 <_dtoa_r+0xa68>)
  403de8:	498f      	ldr	r1, [pc, #572]	; (404028 <_dtoa_r+0xa78>)
  403dea:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403dee:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403df2:	2000      	movs	r0, #0
  403df4:	f002 f9e8 	bl	4061c8 <__aeabi_ddiv>
  403df8:	462a      	mov	r2, r5
  403dfa:	4633      	mov	r3, r6
  403dfc:	f001 ff06 	bl	405c0c <__aeabi_dsub>
  403e00:	4682      	mov	sl, r0
  403e02:	468b      	mov	fp, r1
  403e04:	4638      	mov	r0, r7
  403e06:	4641      	mov	r1, r8
  403e08:	f002 fb64 	bl	4064d4 <__aeabi_d2iz>
  403e0c:	4605      	mov	r5, r0
  403e0e:	f002 f84b 	bl	405ea8 <__aeabi_i2d>
  403e12:	4602      	mov	r2, r0
  403e14:	460b      	mov	r3, r1
  403e16:	4638      	mov	r0, r7
  403e18:	4641      	mov	r1, r8
  403e1a:	f001 fef7 	bl	405c0c <__aeabi_dsub>
  403e1e:	3530      	adds	r5, #48	; 0x30
  403e20:	fa5f f885 	uxtb.w	r8, r5
  403e24:	9d04      	ldr	r5, [sp, #16]
  403e26:	4606      	mov	r6, r0
  403e28:	460f      	mov	r7, r1
  403e2a:	f885 8000 	strb.w	r8, [r5]
  403e2e:	4602      	mov	r2, r0
  403e30:	460b      	mov	r3, r1
  403e32:	4650      	mov	r0, sl
  403e34:	4659      	mov	r1, fp
  403e36:	3501      	adds	r5, #1
  403e38:	f002 fb2c 	bl	406494 <__aeabi_dcmpgt>
  403e3c:	2800      	cmp	r0, #0
  403e3e:	d154      	bne.n	403eea <_dtoa_r+0x93a>
  403e40:	4632      	mov	r2, r6
  403e42:	463b      	mov	r3, r7
  403e44:	2000      	movs	r0, #0
  403e46:	4976      	ldr	r1, [pc, #472]	; (404020 <_dtoa_r+0xa70>)
  403e48:	f001 fee0 	bl	405c0c <__aeabi_dsub>
  403e4c:	4602      	mov	r2, r0
  403e4e:	460b      	mov	r3, r1
  403e50:	4650      	mov	r0, sl
  403e52:	4659      	mov	r1, fp
  403e54:	f002 fb1e 	bl	406494 <__aeabi_dcmpgt>
  403e58:	2800      	cmp	r0, #0
  403e5a:	f040 8270 	bne.w	40433e <_dtoa_r+0xd8e>
  403e5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403e60:	2a01      	cmp	r2, #1
  403e62:	f000 8111 	beq.w	404088 <_dtoa_r+0xad8>
  403e66:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403e68:	9a04      	ldr	r2, [sp, #16]
  403e6a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403e6e:	4413      	add	r3, r2
  403e70:	4699      	mov	r9, r3
  403e72:	e00d      	b.n	403e90 <_dtoa_r+0x8e0>
  403e74:	2000      	movs	r0, #0
  403e76:	496a      	ldr	r1, [pc, #424]	; (404020 <_dtoa_r+0xa70>)
  403e78:	f001 fec8 	bl	405c0c <__aeabi_dsub>
  403e7c:	4652      	mov	r2, sl
  403e7e:	465b      	mov	r3, fp
  403e80:	f002 faea 	bl	406458 <__aeabi_dcmplt>
  403e84:	2800      	cmp	r0, #0
  403e86:	f040 8258 	bne.w	40433a <_dtoa_r+0xd8a>
  403e8a:	454d      	cmp	r5, r9
  403e8c:	f000 80fa 	beq.w	404084 <_dtoa_r+0xad4>
  403e90:	4650      	mov	r0, sl
  403e92:	4659      	mov	r1, fp
  403e94:	2200      	movs	r2, #0
  403e96:	4b65      	ldr	r3, [pc, #404]	; (40402c <_dtoa_r+0xa7c>)
  403e98:	f002 f86c 	bl	405f74 <__aeabi_dmul>
  403e9c:	2200      	movs	r2, #0
  403e9e:	4b63      	ldr	r3, [pc, #396]	; (40402c <_dtoa_r+0xa7c>)
  403ea0:	4682      	mov	sl, r0
  403ea2:	468b      	mov	fp, r1
  403ea4:	4630      	mov	r0, r6
  403ea6:	4639      	mov	r1, r7
  403ea8:	f002 f864 	bl	405f74 <__aeabi_dmul>
  403eac:	460f      	mov	r7, r1
  403eae:	4606      	mov	r6, r0
  403eb0:	f002 fb10 	bl	4064d4 <__aeabi_d2iz>
  403eb4:	4680      	mov	r8, r0
  403eb6:	f001 fff7 	bl	405ea8 <__aeabi_i2d>
  403eba:	4602      	mov	r2, r0
  403ebc:	460b      	mov	r3, r1
  403ebe:	4630      	mov	r0, r6
  403ec0:	4639      	mov	r1, r7
  403ec2:	f001 fea3 	bl	405c0c <__aeabi_dsub>
  403ec6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403eca:	fa5f f888 	uxtb.w	r8, r8
  403ece:	4652      	mov	r2, sl
  403ed0:	465b      	mov	r3, fp
  403ed2:	f805 8b01 	strb.w	r8, [r5], #1
  403ed6:	4606      	mov	r6, r0
  403ed8:	460f      	mov	r7, r1
  403eda:	f002 fabd 	bl	406458 <__aeabi_dcmplt>
  403ede:	4632      	mov	r2, r6
  403ee0:	463b      	mov	r3, r7
  403ee2:	2800      	cmp	r0, #0
  403ee4:	d0c6      	beq.n	403e74 <_dtoa_r+0x8c4>
  403ee6:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403eea:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403eec:	9302      	str	r3, [sp, #8]
  403eee:	e523      	b.n	403938 <_dtoa_r+0x388>
  403ef0:	2300      	movs	r3, #0
  403ef2:	930b      	str	r3, [sp, #44]	; 0x2c
  403ef4:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403ef6:	2b00      	cmp	r3, #0
  403ef8:	f340 80dc 	ble.w	4040b4 <_dtoa_r+0xb04>
  403efc:	461f      	mov	r7, r3
  403efe:	461e      	mov	r6, r3
  403f00:	930f      	str	r3, [sp, #60]	; 0x3c
  403f02:	930a      	str	r3, [sp, #40]	; 0x28
  403f04:	e6f6      	b.n	403cf4 <_dtoa_r+0x744>
  403f06:	2301      	movs	r3, #1
  403f08:	930b      	str	r3, [sp, #44]	; 0x2c
  403f0a:	e7f3      	b.n	403ef4 <_dtoa_r+0x944>
  403f0c:	f1ba 0f00 	cmp.w	sl, #0
  403f10:	f47f ada8 	bne.w	403a64 <_dtoa_r+0x4b4>
  403f14:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403f18:	2b00      	cmp	r3, #0
  403f1a:	f47f adba 	bne.w	403a92 <_dtoa_r+0x4e2>
  403f1e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403f22:	0d3f      	lsrs	r7, r7, #20
  403f24:	053f      	lsls	r7, r7, #20
  403f26:	2f00      	cmp	r7, #0
  403f28:	f000 820d 	beq.w	404346 <_dtoa_r+0xd96>
  403f2c:	9b08      	ldr	r3, [sp, #32]
  403f2e:	3301      	adds	r3, #1
  403f30:	9308      	str	r3, [sp, #32]
  403f32:	9b06      	ldr	r3, [sp, #24]
  403f34:	3301      	adds	r3, #1
  403f36:	9306      	str	r3, [sp, #24]
  403f38:	2301      	movs	r3, #1
  403f3a:	930c      	str	r3, [sp, #48]	; 0x30
  403f3c:	e5ab      	b.n	403a96 <_dtoa_r+0x4e6>
  403f3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f40:	2b00      	cmp	r3, #0
  403f42:	f73f ac42 	bgt.w	4037ca <_dtoa_r+0x21a>
  403f46:	f040 8221 	bne.w	40438c <_dtoa_r+0xddc>
  403f4a:	2200      	movs	r2, #0
  403f4c:	4b38      	ldr	r3, [pc, #224]	; (404030 <_dtoa_r+0xa80>)
  403f4e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403f52:	f002 f80f 	bl	405f74 <__aeabi_dmul>
  403f56:	4652      	mov	r2, sl
  403f58:	465b      	mov	r3, fp
  403f5a:	f002 fa91 	bl	406480 <__aeabi_dcmpge>
  403f5e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403f62:	4646      	mov	r6, r8
  403f64:	2800      	cmp	r0, #0
  403f66:	d041      	beq.n	403fec <_dtoa_r+0xa3c>
  403f68:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403f6a:	9d04      	ldr	r5, [sp, #16]
  403f6c:	43db      	mvns	r3, r3
  403f6e:	9302      	str	r3, [sp, #8]
  403f70:	4641      	mov	r1, r8
  403f72:	4620      	mov	r0, r4
  403f74:	f000 fe70 	bl	404c58 <_Bfree>
  403f78:	2e00      	cmp	r6, #0
  403f7a:	f43f acdd 	beq.w	403938 <_dtoa_r+0x388>
  403f7e:	e6a7      	b.n	403cd0 <_dtoa_r+0x720>
  403f80:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403f82:	4649      	mov	r1, r9
  403f84:	4620      	mov	r0, r4
  403f86:	f000 ff9d 	bl	404ec4 <__pow5mult>
  403f8a:	4681      	mov	r9, r0
  403f8c:	e558      	b.n	403a40 <_dtoa_r+0x490>
  403f8e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403f90:	2a00      	cmp	r2, #0
  403f92:	f000 8187 	beq.w	4042a4 <_dtoa_r+0xcf4>
  403f96:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403f9a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403f9c:	9d08      	ldr	r5, [sp, #32]
  403f9e:	e4f2      	b.n	403986 <_dtoa_r+0x3d6>
  403fa0:	f1ba 0f00 	cmp.w	sl, #0
  403fa4:	f47f ad75 	bne.w	403a92 <_dtoa_r+0x4e2>
  403fa8:	e7b4      	b.n	403f14 <_dtoa_r+0x964>
  403faa:	f000 fe5f 	bl	404c6c <__multadd>
  403fae:	4647      	mov	r7, r8
  403fb0:	4606      	mov	r6, r0
  403fb2:	4683      	mov	fp, r0
  403fb4:	e5be      	b.n	403b34 <_dtoa_r+0x584>
  403fb6:	4601      	mov	r1, r0
  403fb8:	4620      	mov	r0, r4
  403fba:	9306      	str	r3, [sp, #24]
  403fbc:	f000 fe4c 	bl	404c58 <_Bfree>
  403fc0:	2201      	movs	r2, #1
  403fc2:	9b06      	ldr	r3, [sp, #24]
  403fc4:	e5e0      	b.n	403b88 <_dtoa_r+0x5d8>
  403fc6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fc8:	2b02      	cmp	r3, #2
  403fca:	f77f ad96 	ble.w	403afa <_dtoa_r+0x54a>
  403fce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403fd0:	2b00      	cmp	r3, #0
  403fd2:	d1c9      	bne.n	403f68 <_dtoa_r+0x9b8>
  403fd4:	4641      	mov	r1, r8
  403fd6:	2205      	movs	r2, #5
  403fd8:	4620      	mov	r0, r4
  403fda:	f000 fe47 	bl	404c6c <__multadd>
  403fde:	4601      	mov	r1, r0
  403fe0:	4680      	mov	r8, r0
  403fe2:	4648      	mov	r0, r9
  403fe4:	f001 f810 	bl	405008 <__mcmp>
  403fe8:	2800      	cmp	r0, #0
  403fea:	ddbd      	ble.n	403f68 <_dtoa_r+0x9b8>
  403fec:	9a02      	ldr	r2, [sp, #8]
  403fee:	9904      	ldr	r1, [sp, #16]
  403ff0:	2331      	movs	r3, #49	; 0x31
  403ff2:	3201      	adds	r2, #1
  403ff4:	9202      	str	r2, [sp, #8]
  403ff6:	700b      	strb	r3, [r1, #0]
  403ff8:	1c4d      	adds	r5, r1, #1
  403ffa:	e7b9      	b.n	403f70 <_dtoa_r+0x9c0>
  403ffc:	9a02      	ldr	r2, [sp, #8]
  403ffe:	3201      	adds	r2, #1
  404000:	9202      	str	r2, [sp, #8]
  404002:	9a04      	ldr	r2, [sp, #16]
  404004:	2331      	movs	r3, #49	; 0x31
  404006:	7013      	strb	r3, [r2, #0]
  404008:	e652      	b.n	403cb0 <_dtoa_r+0x700>
  40400a:	2301      	movs	r3, #1
  40400c:	930b      	str	r3, [sp, #44]	; 0x2c
  40400e:	e666      	b.n	403cde <_dtoa_r+0x72e>
  404010:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  404014:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404016:	e48f      	b.n	403938 <_dtoa_r+0x388>
  404018:	004075d8 	.word	0x004075d8
  40401c:	004075b0 	.word	0x004075b0
  404020:	3ff00000 	.word	0x3ff00000
  404024:	401c0000 	.word	0x401c0000
  404028:	3fe00000 	.word	0x3fe00000
  40402c:	40240000 	.word	0x40240000
  404030:	40140000 	.word	0x40140000
  404034:	4650      	mov	r0, sl
  404036:	f001 ff37 	bl	405ea8 <__aeabi_i2d>
  40403a:	463a      	mov	r2, r7
  40403c:	4643      	mov	r3, r8
  40403e:	f001 ff99 	bl	405f74 <__aeabi_dmul>
  404042:	2200      	movs	r2, #0
  404044:	4bc1      	ldr	r3, [pc, #772]	; (40434c <_dtoa_r+0xd9c>)
  404046:	f001 fde3 	bl	405c10 <__adddf3>
  40404a:	4605      	mov	r5, r0
  40404c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404050:	4641      	mov	r1, r8
  404052:	2200      	movs	r2, #0
  404054:	4bbe      	ldr	r3, [pc, #760]	; (404350 <_dtoa_r+0xda0>)
  404056:	4638      	mov	r0, r7
  404058:	f001 fdd8 	bl	405c0c <__aeabi_dsub>
  40405c:	462a      	mov	r2, r5
  40405e:	4633      	mov	r3, r6
  404060:	4682      	mov	sl, r0
  404062:	468b      	mov	fp, r1
  404064:	f002 fa16 	bl	406494 <__aeabi_dcmpgt>
  404068:	4680      	mov	r8, r0
  40406a:	2800      	cmp	r0, #0
  40406c:	f040 8110 	bne.w	404290 <_dtoa_r+0xce0>
  404070:	462a      	mov	r2, r5
  404072:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  404076:	4650      	mov	r0, sl
  404078:	4659      	mov	r1, fp
  40407a:	f002 f9ed 	bl	406458 <__aeabi_dcmplt>
  40407e:	b118      	cbz	r0, 404088 <_dtoa_r+0xad8>
  404080:	4646      	mov	r6, r8
  404082:	e771      	b.n	403f68 <_dtoa_r+0x9b8>
  404084:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404088:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  40408c:	f7ff bb8a 	b.w	4037a4 <_dtoa_r+0x1f4>
  404090:	9804      	ldr	r0, [sp, #16]
  404092:	f7ff babb 	b.w	40360c <_dtoa_r+0x5c>
  404096:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404098:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40409a:	970c      	str	r7, [sp, #48]	; 0x30
  40409c:	1afb      	subs	r3, r7, r3
  40409e:	441a      	add	r2, r3
  4040a0:	920d      	str	r2, [sp, #52]	; 0x34
  4040a2:	2700      	movs	r7, #0
  4040a4:	e469      	b.n	40397a <_dtoa_r+0x3ca>
  4040a6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  4040aa:	f04f 0a02 	mov.w	sl, #2
  4040ae:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  4040b2:	e657      	b.n	403d64 <_dtoa_r+0x7b4>
  4040b4:	2100      	movs	r1, #0
  4040b6:	2301      	movs	r3, #1
  4040b8:	6461      	str	r1, [r4, #68]	; 0x44
  4040ba:	4620      	mov	r0, r4
  4040bc:	9325      	str	r3, [sp, #148]	; 0x94
  4040be:	f000 fda5 	bl	404c0c <_Balloc>
  4040c2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4040c4:	9004      	str	r0, [sp, #16]
  4040c6:	6420      	str	r0, [r4, #64]	; 0x40
  4040c8:	930a      	str	r3, [sp, #40]	; 0x28
  4040ca:	930f      	str	r3, [sp, #60]	; 0x3c
  4040cc:	e629      	b.n	403d22 <_dtoa_r+0x772>
  4040ce:	2a00      	cmp	r2, #0
  4040d0:	46d0      	mov	r8, sl
  4040d2:	f8cd b018 	str.w	fp, [sp, #24]
  4040d6:	469a      	mov	sl, r3
  4040d8:	dd11      	ble.n	4040fe <_dtoa_r+0xb4e>
  4040da:	4649      	mov	r1, r9
  4040dc:	2201      	movs	r2, #1
  4040de:	4620      	mov	r0, r4
  4040e0:	f000 ff40 	bl	404f64 <__lshift>
  4040e4:	4641      	mov	r1, r8
  4040e6:	4681      	mov	r9, r0
  4040e8:	f000 ff8e 	bl	405008 <__mcmp>
  4040ec:	2800      	cmp	r0, #0
  4040ee:	f340 8146 	ble.w	40437e <_dtoa_r+0xdce>
  4040f2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  4040f6:	f000 8106 	beq.w	404306 <_dtoa_r+0xd56>
  4040fa:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  4040fe:	46b3      	mov	fp, r6
  404100:	f887 a000 	strb.w	sl, [r7]
  404104:	1c7d      	adds	r5, r7, #1
  404106:	9e06      	ldr	r6, [sp, #24]
  404108:	e5d2      	b.n	403cb0 <_dtoa_r+0x700>
  40410a:	d104      	bne.n	404116 <_dtoa_r+0xb66>
  40410c:	f01a 0f01 	tst.w	sl, #1
  404110:	d001      	beq.n	404116 <_dtoa_r+0xb66>
  404112:	e5bd      	b.n	403c90 <_dtoa_r+0x6e0>
  404114:	4615      	mov	r5, r2
  404116:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40411a:	2b30      	cmp	r3, #48	; 0x30
  40411c:	f105 32ff 	add.w	r2, r5, #4294967295
  404120:	d0f8      	beq.n	404114 <_dtoa_r+0xb64>
  404122:	e5c5      	b.n	403cb0 <_dtoa_r+0x700>
  404124:	9904      	ldr	r1, [sp, #16]
  404126:	2230      	movs	r2, #48	; 0x30
  404128:	700a      	strb	r2, [r1, #0]
  40412a:	9a02      	ldr	r2, [sp, #8]
  40412c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404130:	3201      	adds	r2, #1
  404132:	9202      	str	r2, [sp, #8]
  404134:	f7ff bbfc 	b.w	403930 <_dtoa_r+0x380>
  404138:	f000 80bb 	beq.w	4042b2 <_dtoa_r+0xd02>
  40413c:	9b02      	ldr	r3, [sp, #8]
  40413e:	425d      	negs	r5, r3
  404140:	4b84      	ldr	r3, [pc, #528]	; (404354 <_dtoa_r+0xda4>)
  404142:	f005 020f 	and.w	r2, r5, #15
  404146:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40414a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40414e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404152:	f001 ff0f 	bl	405f74 <__aeabi_dmul>
  404156:	112d      	asrs	r5, r5, #4
  404158:	4607      	mov	r7, r0
  40415a:	4688      	mov	r8, r1
  40415c:	f000 812c 	beq.w	4043b8 <_dtoa_r+0xe08>
  404160:	4e7d      	ldr	r6, [pc, #500]	; (404358 <_dtoa_r+0xda8>)
  404162:	f04f 0a02 	mov.w	sl, #2
  404166:	07eb      	lsls	r3, r5, #31
  404168:	d509      	bpl.n	40417e <_dtoa_r+0xbce>
  40416a:	4638      	mov	r0, r7
  40416c:	4641      	mov	r1, r8
  40416e:	e9d6 2300 	ldrd	r2, r3, [r6]
  404172:	f001 feff 	bl	405f74 <__aeabi_dmul>
  404176:	f10a 0a01 	add.w	sl, sl, #1
  40417a:	4607      	mov	r7, r0
  40417c:	4688      	mov	r8, r1
  40417e:	106d      	asrs	r5, r5, #1
  404180:	f106 0608 	add.w	r6, r6, #8
  404184:	d1ef      	bne.n	404166 <_dtoa_r+0xbb6>
  404186:	e608      	b.n	403d9a <_dtoa_r+0x7ea>
  404188:	6871      	ldr	r1, [r6, #4]
  40418a:	4620      	mov	r0, r4
  40418c:	f000 fd3e 	bl	404c0c <_Balloc>
  404190:	6933      	ldr	r3, [r6, #16]
  404192:	3302      	adds	r3, #2
  404194:	009a      	lsls	r2, r3, #2
  404196:	4605      	mov	r5, r0
  404198:	f106 010c 	add.w	r1, r6, #12
  40419c:	300c      	adds	r0, #12
  40419e:	f000 fc8f 	bl	404ac0 <memcpy>
  4041a2:	4629      	mov	r1, r5
  4041a4:	2201      	movs	r2, #1
  4041a6:	4620      	mov	r0, r4
  4041a8:	f000 fedc 	bl	404f64 <__lshift>
  4041ac:	9006      	str	r0, [sp, #24]
  4041ae:	e4b5      	b.n	403b1c <_dtoa_r+0x56c>
  4041b0:	2b39      	cmp	r3, #57	; 0x39
  4041b2:	f8cd b018 	str.w	fp, [sp, #24]
  4041b6:	46d0      	mov	r8, sl
  4041b8:	f000 80a5 	beq.w	404306 <_dtoa_r+0xd56>
  4041bc:	f103 0a01 	add.w	sl, r3, #1
  4041c0:	46b3      	mov	fp, r6
  4041c2:	f887 a000 	strb.w	sl, [r7]
  4041c6:	1c7d      	adds	r5, r7, #1
  4041c8:	9e06      	ldr	r6, [sp, #24]
  4041ca:	e571      	b.n	403cb0 <_dtoa_r+0x700>
  4041cc:	465a      	mov	r2, fp
  4041ce:	46d0      	mov	r8, sl
  4041d0:	46b3      	mov	fp, r6
  4041d2:	469a      	mov	sl, r3
  4041d4:	4616      	mov	r6, r2
  4041d6:	e54f      	b.n	403c78 <_dtoa_r+0x6c8>
  4041d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041da:	495e      	ldr	r1, [pc, #376]	; (404354 <_dtoa_r+0xda4>)
  4041dc:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  4041e0:	462a      	mov	r2, r5
  4041e2:	4633      	mov	r3, r6
  4041e4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  4041e8:	f001 fec4 	bl	405f74 <__aeabi_dmul>
  4041ec:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  4041f0:	4638      	mov	r0, r7
  4041f2:	4641      	mov	r1, r8
  4041f4:	f002 f96e 	bl	4064d4 <__aeabi_d2iz>
  4041f8:	4605      	mov	r5, r0
  4041fa:	f001 fe55 	bl	405ea8 <__aeabi_i2d>
  4041fe:	460b      	mov	r3, r1
  404200:	4602      	mov	r2, r0
  404202:	4641      	mov	r1, r8
  404204:	4638      	mov	r0, r7
  404206:	f001 fd01 	bl	405c0c <__aeabi_dsub>
  40420a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40420c:	460f      	mov	r7, r1
  40420e:	9904      	ldr	r1, [sp, #16]
  404210:	3530      	adds	r5, #48	; 0x30
  404212:	2b01      	cmp	r3, #1
  404214:	700d      	strb	r5, [r1, #0]
  404216:	4606      	mov	r6, r0
  404218:	f101 0501 	add.w	r5, r1, #1
  40421c:	d026      	beq.n	40426c <_dtoa_r+0xcbc>
  40421e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404220:	9a04      	ldr	r2, [sp, #16]
  404222:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404360 <_dtoa_r+0xdb0>
  404226:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40422a:	4413      	add	r3, r2
  40422c:	f04f 0a00 	mov.w	sl, #0
  404230:	4699      	mov	r9, r3
  404232:	4652      	mov	r2, sl
  404234:	465b      	mov	r3, fp
  404236:	4630      	mov	r0, r6
  404238:	4639      	mov	r1, r7
  40423a:	f001 fe9b 	bl	405f74 <__aeabi_dmul>
  40423e:	460f      	mov	r7, r1
  404240:	4606      	mov	r6, r0
  404242:	f002 f947 	bl	4064d4 <__aeabi_d2iz>
  404246:	4680      	mov	r8, r0
  404248:	f001 fe2e 	bl	405ea8 <__aeabi_i2d>
  40424c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404250:	4602      	mov	r2, r0
  404252:	460b      	mov	r3, r1
  404254:	4630      	mov	r0, r6
  404256:	4639      	mov	r1, r7
  404258:	f001 fcd8 	bl	405c0c <__aeabi_dsub>
  40425c:	f805 8b01 	strb.w	r8, [r5], #1
  404260:	454d      	cmp	r5, r9
  404262:	4606      	mov	r6, r0
  404264:	460f      	mov	r7, r1
  404266:	d1e4      	bne.n	404232 <_dtoa_r+0xc82>
  404268:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40426c:	4b3b      	ldr	r3, [pc, #236]	; (40435c <_dtoa_r+0xdac>)
  40426e:	2200      	movs	r2, #0
  404270:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404274:	f001 fccc 	bl	405c10 <__adddf3>
  404278:	4632      	mov	r2, r6
  40427a:	463b      	mov	r3, r7
  40427c:	f002 f8ec 	bl	406458 <__aeabi_dcmplt>
  404280:	2800      	cmp	r0, #0
  404282:	d046      	beq.n	404312 <_dtoa_r+0xd62>
  404284:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404286:	9302      	str	r3, [sp, #8]
  404288:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40428c:	f7ff bb43 	b.w	403916 <_dtoa_r+0x366>
  404290:	f04f 0800 	mov.w	r8, #0
  404294:	4646      	mov	r6, r8
  404296:	e6a9      	b.n	403fec <_dtoa_r+0xa3c>
  404298:	9b08      	ldr	r3, [sp, #32]
  40429a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40429c:	1a9d      	subs	r5, r3, r2
  40429e:	2300      	movs	r3, #0
  4042a0:	f7ff bb71 	b.w	403986 <_dtoa_r+0x3d6>
  4042a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4042a6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4042a8:	9d08      	ldr	r5, [sp, #32]
  4042aa:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4042ae:	f7ff bb6a 	b.w	403986 <_dtoa_r+0x3d6>
  4042b2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  4042b6:	f04f 0a02 	mov.w	sl, #2
  4042ba:	e56e      	b.n	403d9a <_dtoa_r+0x7ea>
  4042bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4042be:	2b00      	cmp	r3, #0
  4042c0:	f43f aeb8 	beq.w	404034 <_dtoa_r+0xa84>
  4042c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4042c6:	2b00      	cmp	r3, #0
  4042c8:	f77f aede 	ble.w	404088 <_dtoa_r+0xad8>
  4042cc:	2200      	movs	r2, #0
  4042ce:	4b24      	ldr	r3, [pc, #144]	; (404360 <_dtoa_r+0xdb0>)
  4042d0:	4638      	mov	r0, r7
  4042d2:	4641      	mov	r1, r8
  4042d4:	f001 fe4e 	bl	405f74 <__aeabi_dmul>
  4042d8:	4607      	mov	r7, r0
  4042da:	4688      	mov	r8, r1
  4042dc:	f10a 0001 	add.w	r0, sl, #1
  4042e0:	f001 fde2 	bl	405ea8 <__aeabi_i2d>
  4042e4:	463a      	mov	r2, r7
  4042e6:	4643      	mov	r3, r8
  4042e8:	f001 fe44 	bl	405f74 <__aeabi_dmul>
  4042ec:	2200      	movs	r2, #0
  4042ee:	4b17      	ldr	r3, [pc, #92]	; (40434c <_dtoa_r+0xd9c>)
  4042f0:	f001 fc8e 	bl	405c10 <__adddf3>
  4042f4:	9a02      	ldr	r2, [sp, #8]
  4042f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4042f8:	9312      	str	r3, [sp, #72]	; 0x48
  4042fa:	3a01      	subs	r2, #1
  4042fc:	4605      	mov	r5, r0
  4042fe:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404302:	9215      	str	r2, [sp, #84]	; 0x54
  404304:	e56a      	b.n	403ddc <_dtoa_r+0x82c>
  404306:	2239      	movs	r2, #57	; 0x39
  404308:	46b3      	mov	fp, r6
  40430a:	703a      	strb	r2, [r7, #0]
  40430c:	9e06      	ldr	r6, [sp, #24]
  40430e:	1c7d      	adds	r5, r7, #1
  404310:	e4c0      	b.n	403c94 <_dtoa_r+0x6e4>
  404312:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  404316:	2000      	movs	r0, #0
  404318:	4910      	ldr	r1, [pc, #64]	; (40435c <_dtoa_r+0xdac>)
  40431a:	f001 fc77 	bl	405c0c <__aeabi_dsub>
  40431e:	4632      	mov	r2, r6
  404320:	463b      	mov	r3, r7
  404322:	f002 f8b7 	bl	406494 <__aeabi_dcmpgt>
  404326:	b908      	cbnz	r0, 40432c <_dtoa_r+0xd7c>
  404328:	e6ae      	b.n	404088 <_dtoa_r+0xad8>
  40432a:	4615      	mov	r5, r2
  40432c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404330:	2b30      	cmp	r3, #48	; 0x30
  404332:	f105 32ff 	add.w	r2, r5, #4294967295
  404336:	d0f8      	beq.n	40432a <_dtoa_r+0xd7a>
  404338:	e5d7      	b.n	403eea <_dtoa_r+0x93a>
  40433a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40433e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404340:	9302      	str	r3, [sp, #8]
  404342:	f7ff bae8 	b.w	403916 <_dtoa_r+0x366>
  404346:	970c      	str	r7, [sp, #48]	; 0x30
  404348:	f7ff bba5 	b.w	403a96 <_dtoa_r+0x4e6>
  40434c:	401c0000 	.word	0x401c0000
  404350:	40140000 	.word	0x40140000
  404354:	004075d8 	.word	0x004075d8
  404358:	004075b0 	.word	0x004075b0
  40435c:	3fe00000 	.word	0x3fe00000
  404360:	40240000 	.word	0x40240000
  404364:	2b39      	cmp	r3, #57	; 0x39
  404366:	f8cd b018 	str.w	fp, [sp, #24]
  40436a:	46d0      	mov	r8, sl
  40436c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404370:	469a      	mov	sl, r3
  404372:	d0c8      	beq.n	404306 <_dtoa_r+0xd56>
  404374:	f1bb 0f00 	cmp.w	fp, #0
  404378:	f73f aebf 	bgt.w	4040fa <_dtoa_r+0xb4a>
  40437c:	e6bf      	b.n	4040fe <_dtoa_r+0xb4e>
  40437e:	f47f aebe 	bne.w	4040fe <_dtoa_r+0xb4e>
  404382:	f01a 0f01 	tst.w	sl, #1
  404386:	f43f aeba 	beq.w	4040fe <_dtoa_r+0xb4e>
  40438a:	e6b2      	b.n	4040f2 <_dtoa_r+0xb42>
  40438c:	f04f 0800 	mov.w	r8, #0
  404390:	4646      	mov	r6, r8
  404392:	e5e9      	b.n	403f68 <_dtoa_r+0x9b8>
  404394:	4631      	mov	r1, r6
  404396:	2300      	movs	r3, #0
  404398:	220a      	movs	r2, #10
  40439a:	4620      	mov	r0, r4
  40439c:	f000 fc66 	bl	404c6c <__multadd>
  4043a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4043a2:	2b00      	cmp	r3, #0
  4043a4:	4606      	mov	r6, r0
  4043a6:	dd0a      	ble.n	4043be <_dtoa_r+0xe0e>
  4043a8:	930a      	str	r3, [sp, #40]	; 0x28
  4043aa:	f7ff bbaa 	b.w	403b02 <_dtoa_r+0x552>
  4043ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4043b0:	2b02      	cmp	r3, #2
  4043b2:	dc23      	bgt.n	4043fc <_dtoa_r+0xe4c>
  4043b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4043b6:	e43b      	b.n	403c30 <_dtoa_r+0x680>
  4043b8:	f04f 0a02 	mov.w	sl, #2
  4043bc:	e4ed      	b.n	403d9a <_dtoa_r+0x7ea>
  4043be:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4043c0:	2b02      	cmp	r3, #2
  4043c2:	dc1b      	bgt.n	4043fc <_dtoa_r+0xe4c>
  4043c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4043c6:	e7ef      	b.n	4043a8 <_dtoa_r+0xdf8>
  4043c8:	2500      	movs	r5, #0
  4043ca:	6465      	str	r5, [r4, #68]	; 0x44
  4043cc:	4629      	mov	r1, r5
  4043ce:	4620      	mov	r0, r4
  4043d0:	f000 fc1c 	bl	404c0c <_Balloc>
  4043d4:	f04f 33ff 	mov.w	r3, #4294967295
  4043d8:	930a      	str	r3, [sp, #40]	; 0x28
  4043da:	930f      	str	r3, [sp, #60]	; 0x3c
  4043dc:	2301      	movs	r3, #1
  4043de:	9004      	str	r0, [sp, #16]
  4043e0:	9525      	str	r5, [sp, #148]	; 0x94
  4043e2:	6420      	str	r0, [r4, #64]	; 0x40
  4043e4:	930b      	str	r3, [sp, #44]	; 0x2c
  4043e6:	f7ff b9dd 	b.w	4037a4 <_dtoa_r+0x1f4>
  4043ea:	2501      	movs	r5, #1
  4043ec:	f7ff b9a5 	b.w	40373a <_dtoa_r+0x18a>
  4043f0:	f43f ab69 	beq.w	403ac6 <_dtoa_r+0x516>
  4043f4:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4043f8:	f7ff bbf9 	b.w	403bee <_dtoa_r+0x63e>
  4043fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4043fe:	930a      	str	r3, [sp, #40]	; 0x28
  404400:	e5e5      	b.n	403fce <_dtoa_r+0xa1e>
  404402:	bf00      	nop

00404404 <__libc_fini_array>:
  404404:	b538      	push	{r3, r4, r5, lr}
  404406:	4c0a      	ldr	r4, [pc, #40]	; (404430 <__libc_fini_array+0x2c>)
  404408:	4d0a      	ldr	r5, [pc, #40]	; (404434 <__libc_fini_array+0x30>)
  40440a:	1b64      	subs	r4, r4, r5
  40440c:	10a4      	asrs	r4, r4, #2
  40440e:	d00a      	beq.n	404426 <__libc_fini_array+0x22>
  404410:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404414:	3b01      	subs	r3, #1
  404416:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40441a:	3c01      	subs	r4, #1
  40441c:	f855 3904 	ldr.w	r3, [r5], #-4
  404420:	4798      	blx	r3
  404422:	2c00      	cmp	r4, #0
  404424:	d1f9      	bne.n	40441a <__libc_fini_array+0x16>
  404426:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40442a:	f003 b9d3 	b.w	4077d4 <_fini>
  40442e:	bf00      	nop
  404430:	004077e4 	.word	0x004077e4
  404434:	004077e0 	.word	0x004077e0

00404438 <_localeconv_r>:
  404438:	4a04      	ldr	r2, [pc, #16]	; (40444c <_localeconv_r+0x14>)
  40443a:	4b05      	ldr	r3, [pc, #20]	; (404450 <_localeconv_r+0x18>)
  40443c:	6812      	ldr	r2, [r2, #0]
  40443e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404440:	2800      	cmp	r0, #0
  404442:	bf08      	it	eq
  404444:	4618      	moveq	r0, r3
  404446:	30f0      	adds	r0, #240	; 0xf0
  404448:	4770      	bx	lr
  40444a:	bf00      	nop
  40444c:	20000010 	.word	0x20000010
  404450:	20000854 	.word	0x20000854

00404454 <__retarget_lock_acquire_recursive>:
  404454:	4770      	bx	lr
  404456:	bf00      	nop

00404458 <__retarget_lock_release_recursive>:
  404458:	4770      	bx	lr
  40445a:	bf00      	nop

0040445c <_malloc_r>:
  40445c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404460:	f101 060b 	add.w	r6, r1, #11
  404464:	2e16      	cmp	r6, #22
  404466:	b083      	sub	sp, #12
  404468:	4605      	mov	r5, r0
  40446a:	f240 809e 	bls.w	4045aa <_malloc_r+0x14e>
  40446e:	f036 0607 	bics.w	r6, r6, #7
  404472:	f100 80bd 	bmi.w	4045f0 <_malloc_r+0x194>
  404476:	42b1      	cmp	r1, r6
  404478:	f200 80ba 	bhi.w	4045f0 <_malloc_r+0x194>
  40447c:	f000 fbba 	bl	404bf4 <__malloc_lock>
  404480:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404484:	f0c0 8293 	bcc.w	4049ae <_malloc_r+0x552>
  404488:	0a73      	lsrs	r3, r6, #9
  40448a:	f000 80b8 	beq.w	4045fe <_malloc_r+0x1a2>
  40448e:	2b04      	cmp	r3, #4
  404490:	f200 8179 	bhi.w	404786 <_malloc_r+0x32a>
  404494:	09b3      	lsrs	r3, r6, #6
  404496:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40449a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40449e:	00c3      	lsls	r3, r0, #3
  4044a0:	4fbf      	ldr	r7, [pc, #764]	; (4047a0 <_malloc_r+0x344>)
  4044a2:	443b      	add	r3, r7
  4044a4:	f1a3 0108 	sub.w	r1, r3, #8
  4044a8:	685c      	ldr	r4, [r3, #4]
  4044aa:	42a1      	cmp	r1, r4
  4044ac:	d106      	bne.n	4044bc <_malloc_r+0x60>
  4044ae:	e00c      	b.n	4044ca <_malloc_r+0x6e>
  4044b0:	2a00      	cmp	r2, #0
  4044b2:	f280 80aa 	bge.w	40460a <_malloc_r+0x1ae>
  4044b6:	68e4      	ldr	r4, [r4, #12]
  4044b8:	42a1      	cmp	r1, r4
  4044ba:	d006      	beq.n	4044ca <_malloc_r+0x6e>
  4044bc:	6863      	ldr	r3, [r4, #4]
  4044be:	f023 0303 	bic.w	r3, r3, #3
  4044c2:	1b9a      	subs	r2, r3, r6
  4044c4:	2a0f      	cmp	r2, #15
  4044c6:	ddf3      	ble.n	4044b0 <_malloc_r+0x54>
  4044c8:	4670      	mov	r0, lr
  4044ca:	693c      	ldr	r4, [r7, #16]
  4044cc:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4047b4 <_malloc_r+0x358>
  4044d0:	4574      	cmp	r4, lr
  4044d2:	f000 81ab 	beq.w	40482c <_malloc_r+0x3d0>
  4044d6:	6863      	ldr	r3, [r4, #4]
  4044d8:	f023 0303 	bic.w	r3, r3, #3
  4044dc:	1b9a      	subs	r2, r3, r6
  4044de:	2a0f      	cmp	r2, #15
  4044e0:	f300 8190 	bgt.w	404804 <_malloc_r+0x3a8>
  4044e4:	2a00      	cmp	r2, #0
  4044e6:	f8c7 e014 	str.w	lr, [r7, #20]
  4044ea:	f8c7 e010 	str.w	lr, [r7, #16]
  4044ee:	f280 809d 	bge.w	40462c <_malloc_r+0x1d0>
  4044f2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4044f6:	f080 8161 	bcs.w	4047bc <_malloc_r+0x360>
  4044fa:	08db      	lsrs	r3, r3, #3
  4044fc:	f103 0c01 	add.w	ip, r3, #1
  404500:	1099      	asrs	r1, r3, #2
  404502:	687a      	ldr	r2, [r7, #4]
  404504:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404508:	f8c4 8008 	str.w	r8, [r4, #8]
  40450c:	2301      	movs	r3, #1
  40450e:	408b      	lsls	r3, r1
  404510:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404514:	4313      	orrs	r3, r2
  404516:	3908      	subs	r1, #8
  404518:	60e1      	str	r1, [r4, #12]
  40451a:	607b      	str	r3, [r7, #4]
  40451c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404520:	f8c8 400c 	str.w	r4, [r8, #12]
  404524:	1082      	asrs	r2, r0, #2
  404526:	2401      	movs	r4, #1
  404528:	4094      	lsls	r4, r2
  40452a:	429c      	cmp	r4, r3
  40452c:	f200 808b 	bhi.w	404646 <_malloc_r+0x1ea>
  404530:	421c      	tst	r4, r3
  404532:	d106      	bne.n	404542 <_malloc_r+0xe6>
  404534:	f020 0003 	bic.w	r0, r0, #3
  404538:	0064      	lsls	r4, r4, #1
  40453a:	421c      	tst	r4, r3
  40453c:	f100 0004 	add.w	r0, r0, #4
  404540:	d0fa      	beq.n	404538 <_malloc_r+0xdc>
  404542:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404546:	46cc      	mov	ip, r9
  404548:	4680      	mov	r8, r0
  40454a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40454e:	459c      	cmp	ip, r3
  404550:	d107      	bne.n	404562 <_malloc_r+0x106>
  404552:	e16d      	b.n	404830 <_malloc_r+0x3d4>
  404554:	2a00      	cmp	r2, #0
  404556:	f280 817b 	bge.w	404850 <_malloc_r+0x3f4>
  40455a:	68db      	ldr	r3, [r3, #12]
  40455c:	459c      	cmp	ip, r3
  40455e:	f000 8167 	beq.w	404830 <_malloc_r+0x3d4>
  404562:	6859      	ldr	r1, [r3, #4]
  404564:	f021 0103 	bic.w	r1, r1, #3
  404568:	1b8a      	subs	r2, r1, r6
  40456a:	2a0f      	cmp	r2, #15
  40456c:	ddf2      	ble.n	404554 <_malloc_r+0xf8>
  40456e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404572:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404576:	9300      	str	r3, [sp, #0]
  404578:	199c      	adds	r4, r3, r6
  40457a:	4628      	mov	r0, r5
  40457c:	f046 0601 	orr.w	r6, r6, #1
  404580:	f042 0501 	orr.w	r5, r2, #1
  404584:	605e      	str	r6, [r3, #4]
  404586:	f8c8 c00c 	str.w	ip, [r8, #12]
  40458a:	f8cc 8008 	str.w	r8, [ip, #8]
  40458e:	617c      	str	r4, [r7, #20]
  404590:	613c      	str	r4, [r7, #16]
  404592:	f8c4 e00c 	str.w	lr, [r4, #12]
  404596:	f8c4 e008 	str.w	lr, [r4, #8]
  40459a:	6065      	str	r5, [r4, #4]
  40459c:	505a      	str	r2, [r3, r1]
  40459e:	f000 fb2f 	bl	404c00 <__malloc_unlock>
  4045a2:	9b00      	ldr	r3, [sp, #0]
  4045a4:	f103 0408 	add.w	r4, r3, #8
  4045a8:	e01e      	b.n	4045e8 <_malloc_r+0x18c>
  4045aa:	2910      	cmp	r1, #16
  4045ac:	d820      	bhi.n	4045f0 <_malloc_r+0x194>
  4045ae:	f000 fb21 	bl	404bf4 <__malloc_lock>
  4045b2:	2610      	movs	r6, #16
  4045b4:	2318      	movs	r3, #24
  4045b6:	2002      	movs	r0, #2
  4045b8:	4f79      	ldr	r7, [pc, #484]	; (4047a0 <_malloc_r+0x344>)
  4045ba:	443b      	add	r3, r7
  4045bc:	f1a3 0208 	sub.w	r2, r3, #8
  4045c0:	685c      	ldr	r4, [r3, #4]
  4045c2:	4294      	cmp	r4, r2
  4045c4:	f000 813d 	beq.w	404842 <_malloc_r+0x3e6>
  4045c8:	6863      	ldr	r3, [r4, #4]
  4045ca:	68e1      	ldr	r1, [r4, #12]
  4045cc:	68a6      	ldr	r6, [r4, #8]
  4045ce:	f023 0303 	bic.w	r3, r3, #3
  4045d2:	4423      	add	r3, r4
  4045d4:	4628      	mov	r0, r5
  4045d6:	685a      	ldr	r2, [r3, #4]
  4045d8:	60f1      	str	r1, [r6, #12]
  4045da:	f042 0201 	orr.w	r2, r2, #1
  4045de:	608e      	str	r6, [r1, #8]
  4045e0:	605a      	str	r2, [r3, #4]
  4045e2:	f000 fb0d 	bl	404c00 <__malloc_unlock>
  4045e6:	3408      	adds	r4, #8
  4045e8:	4620      	mov	r0, r4
  4045ea:	b003      	add	sp, #12
  4045ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045f0:	2400      	movs	r4, #0
  4045f2:	230c      	movs	r3, #12
  4045f4:	4620      	mov	r0, r4
  4045f6:	602b      	str	r3, [r5, #0]
  4045f8:	b003      	add	sp, #12
  4045fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045fe:	2040      	movs	r0, #64	; 0x40
  404600:	f44f 7300 	mov.w	r3, #512	; 0x200
  404604:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404608:	e74a      	b.n	4044a0 <_malloc_r+0x44>
  40460a:	4423      	add	r3, r4
  40460c:	68e1      	ldr	r1, [r4, #12]
  40460e:	685a      	ldr	r2, [r3, #4]
  404610:	68a6      	ldr	r6, [r4, #8]
  404612:	f042 0201 	orr.w	r2, r2, #1
  404616:	60f1      	str	r1, [r6, #12]
  404618:	4628      	mov	r0, r5
  40461a:	608e      	str	r6, [r1, #8]
  40461c:	605a      	str	r2, [r3, #4]
  40461e:	f000 faef 	bl	404c00 <__malloc_unlock>
  404622:	3408      	adds	r4, #8
  404624:	4620      	mov	r0, r4
  404626:	b003      	add	sp, #12
  404628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40462c:	4423      	add	r3, r4
  40462e:	4628      	mov	r0, r5
  404630:	685a      	ldr	r2, [r3, #4]
  404632:	f042 0201 	orr.w	r2, r2, #1
  404636:	605a      	str	r2, [r3, #4]
  404638:	f000 fae2 	bl	404c00 <__malloc_unlock>
  40463c:	3408      	adds	r4, #8
  40463e:	4620      	mov	r0, r4
  404640:	b003      	add	sp, #12
  404642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404646:	68bc      	ldr	r4, [r7, #8]
  404648:	6863      	ldr	r3, [r4, #4]
  40464a:	f023 0803 	bic.w	r8, r3, #3
  40464e:	45b0      	cmp	r8, r6
  404650:	d304      	bcc.n	40465c <_malloc_r+0x200>
  404652:	eba8 0306 	sub.w	r3, r8, r6
  404656:	2b0f      	cmp	r3, #15
  404658:	f300 8085 	bgt.w	404766 <_malloc_r+0x30a>
  40465c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4047b8 <_malloc_r+0x35c>
  404660:	4b50      	ldr	r3, [pc, #320]	; (4047a4 <_malloc_r+0x348>)
  404662:	f8d9 2000 	ldr.w	r2, [r9]
  404666:	681b      	ldr	r3, [r3, #0]
  404668:	3201      	adds	r2, #1
  40466a:	4433      	add	r3, r6
  40466c:	eb04 0a08 	add.w	sl, r4, r8
  404670:	f000 8155 	beq.w	40491e <_malloc_r+0x4c2>
  404674:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404678:	330f      	adds	r3, #15
  40467a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40467e:	f02b 0b0f 	bic.w	fp, fp, #15
  404682:	4659      	mov	r1, fp
  404684:	4628      	mov	r0, r5
  404686:	f000 fdbb 	bl	405200 <_sbrk_r>
  40468a:	1c41      	adds	r1, r0, #1
  40468c:	4602      	mov	r2, r0
  40468e:	f000 80fc 	beq.w	40488a <_malloc_r+0x42e>
  404692:	4582      	cmp	sl, r0
  404694:	f200 80f7 	bhi.w	404886 <_malloc_r+0x42a>
  404698:	4b43      	ldr	r3, [pc, #268]	; (4047a8 <_malloc_r+0x34c>)
  40469a:	6819      	ldr	r1, [r3, #0]
  40469c:	4459      	add	r1, fp
  40469e:	6019      	str	r1, [r3, #0]
  4046a0:	f000 814d 	beq.w	40493e <_malloc_r+0x4e2>
  4046a4:	f8d9 0000 	ldr.w	r0, [r9]
  4046a8:	3001      	adds	r0, #1
  4046aa:	bf1b      	ittet	ne
  4046ac:	eba2 0a0a 	subne.w	sl, r2, sl
  4046b0:	4451      	addne	r1, sl
  4046b2:	f8c9 2000 	streq.w	r2, [r9]
  4046b6:	6019      	strne	r1, [r3, #0]
  4046b8:	f012 0107 	ands.w	r1, r2, #7
  4046bc:	f000 8115 	beq.w	4048ea <_malloc_r+0x48e>
  4046c0:	f1c1 0008 	rsb	r0, r1, #8
  4046c4:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4046c8:	4402      	add	r2, r0
  4046ca:	3108      	adds	r1, #8
  4046cc:	eb02 090b 	add.w	r9, r2, fp
  4046d0:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4046d4:	eba1 0909 	sub.w	r9, r1, r9
  4046d8:	4649      	mov	r1, r9
  4046da:	4628      	mov	r0, r5
  4046dc:	9301      	str	r3, [sp, #4]
  4046de:	9200      	str	r2, [sp, #0]
  4046e0:	f000 fd8e 	bl	405200 <_sbrk_r>
  4046e4:	1c43      	adds	r3, r0, #1
  4046e6:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4046ea:	f000 8143 	beq.w	404974 <_malloc_r+0x518>
  4046ee:	1a80      	subs	r0, r0, r2
  4046f0:	4448      	add	r0, r9
  4046f2:	f040 0001 	orr.w	r0, r0, #1
  4046f6:	6819      	ldr	r1, [r3, #0]
  4046f8:	60ba      	str	r2, [r7, #8]
  4046fa:	4449      	add	r1, r9
  4046fc:	42bc      	cmp	r4, r7
  4046fe:	6050      	str	r0, [r2, #4]
  404700:	6019      	str	r1, [r3, #0]
  404702:	d017      	beq.n	404734 <_malloc_r+0x2d8>
  404704:	f1b8 0f0f 	cmp.w	r8, #15
  404708:	f240 80fb 	bls.w	404902 <_malloc_r+0x4a6>
  40470c:	6860      	ldr	r0, [r4, #4]
  40470e:	f1a8 020c 	sub.w	r2, r8, #12
  404712:	f022 0207 	bic.w	r2, r2, #7
  404716:	eb04 0e02 	add.w	lr, r4, r2
  40471a:	f000 0001 	and.w	r0, r0, #1
  40471e:	f04f 0c05 	mov.w	ip, #5
  404722:	4310      	orrs	r0, r2
  404724:	2a0f      	cmp	r2, #15
  404726:	6060      	str	r0, [r4, #4]
  404728:	f8ce c004 	str.w	ip, [lr, #4]
  40472c:	f8ce c008 	str.w	ip, [lr, #8]
  404730:	f200 8117 	bhi.w	404962 <_malloc_r+0x506>
  404734:	4b1d      	ldr	r3, [pc, #116]	; (4047ac <_malloc_r+0x350>)
  404736:	68bc      	ldr	r4, [r7, #8]
  404738:	681a      	ldr	r2, [r3, #0]
  40473a:	4291      	cmp	r1, r2
  40473c:	bf88      	it	hi
  40473e:	6019      	strhi	r1, [r3, #0]
  404740:	4b1b      	ldr	r3, [pc, #108]	; (4047b0 <_malloc_r+0x354>)
  404742:	681a      	ldr	r2, [r3, #0]
  404744:	4291      	cmp	r1, r2
  404746:	6862      	ldr	r2, [r4, #4]
  404748:	bf88      	it	hi
  40474a:	6019      	strhi	r1, [r3, #0]
  40474c:	f022 0203 	bic.w	r2, r2, #3
  404750:	4296      	cmp	r6, r2
  404752:	eba2 0306 	sub.w	r3, r2, r6
  404756:	d801      	bhi.n	40475c <_malloc_r+0x300>
  404758:	2b0f      	cmp	r3, #15
  40475a:	dc04      	bgt.n	404766 <_malloc_r+0x30a>
  40475c:	4628      	mov	r0, r5
  40475e:	f000 fa4f 	bl	404c00 <__malloc_unlock>
  404762:	2400      	movs	r4, #0
  404764:	e740      	b.n	4045e8 <_malloc_r+0x18c>
  404766:	19a2      	adds	r2, r4, r6
  404768:	f043 0301 	orr.w	r3, r3, #1
  40476c:	f046 0601 	orr.w	r6, r6, #1
  404770:	6066      	str	r6, [r4, #4]
  404772:	4628      	mov	r0, r5
  404774:	60ba      	str	r2, [r7, #8]
  404776:	6053      	str	r3, [r2, #4]
  404778:	f000 fa42 	bl	404c00 <__malloc_unlock>
  40477c:	3408      	adds	r4, #8
  40477e:	4620      	mov	r0, r4
  404780:	b003      	add	sp, #12
  404782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404786:	2b14      	cmp	r3, #20
  404788:	d971      	bls.n	40486e <_malloc_r+0x412>
  40478a:	2b54      	cmp	r3, #84	; 0x54
  40478c:	f200 80a3 	bhi.w	4048d6 <_malloc_r+0x47a>
  404790:	0b33      	lsrs	r3, r6, #12
  404792:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404796:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40479a:	00c3      	lsls	r3, r0, #3
  40479c:	e680      	b.n	4044a0 <_malloc_r+0x44>
  40479e:	bf00      	nop
  4047a0:	20000444 	.word	0x20000444
  4047a4:	20000aac 	.word	0x20000aac
  4047a8:	20000a7c 	.word	0x20000a7c
  4047ac:	20000aa4 	.word	0x20000aa4
  4047b0:	20000aa8 	.word	0x20000aa8
  4047b4:	2000044c 	.word	0x2000044c
  4047b8:	2000084c 	.word	0x2000084c
  4047bc:	0a5a      	lsrs	r2, r3, #9
  4047be:	2a04      	cmp	r2, #4
  4047c0:	d95b      	bls.n	40487a <_malloc_r+0x41e>
  4047c2:	2a14      	cmp	r2, #20
  4047c4:	f200 80ae 	bhi.w	404924 <_malloc_r+0x4c8>
  4047c8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4047cc:	00c9      	lsls	r1, r1, #3
  4047ce:	325b      	adds	r2, #91	; 0x5b
  4047d0:	eb07 0c01 	add.w	ip, r7, r1
  4047d4:	5879      	ldr	r1, [r7, r1]
  4047d6:	f1ac 0c08 	sub.w	ip, ip, #8
  4047da:	458c      	cmp	ip, r1
  4047dc:	f000 8088 	beq.w	4048f0 <_malloc_r+0x494>
  4047e0:	684a      	ldr	r2, [r1, #4]
  4047e2:	f022 0203 	bic.w	r2, r2, #3
  4047e6:	4293      	cmp	r3, r2
  4047e8:	d273      	bcs.n	4048d2 <_malloc_r+0x476>
  4047ea:	6889      	ldr	r1, [r1, #8]
  4047ec:	458c      	cmp	ip, r1
  4047ee:	d1f7      	bne.n	4047e0 <_malloc_r+0x384>
  4047f0:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4047f4:	687b      	ldr	r3, [r7, #4]
  4047f6:	60e2      	str	r2, [r4, #12]
  4047f8:	f8c4 c008 	str.w	ip, [r4, #8]
  4047fc:	6094      	str	r4, [r2, #8]
  4047fe:	f8cc 400c 	str.w	r4, [ip, #12]
  404802:	e68f      	b.n	404524 <_malloc_r+0xc8>
  404804:	19a1      	adds	r1, r4, r6
  404806:	f046 0c01 	orr.w	ip, r6, #1
  40480a:	f042 0601 	orr.w	r6, r2, #1
  40480e:	f8c4 c004 	str.w	ip, [r4, #4]
  404812:	4628      	mov	r0, r5
  404814:	6179      	str	r1, [r7, #20]
  404816:	6139      	str	r1, [r7, #16]
  404818:	f8c1 e00c 	str.w	lr, [r1, #12]
  40481c:	f8c1 e008 	str.w	lr, [r1, #8]
  404820:	604e      	str	r6, [r1, #4]
  404822:	50e2      	str	r2, [r4, r3]
  404824:	f000 f9ec 	bl	404c00 <__malloc_unlock>
  404828:	3408      	adds	r4, #8
  40482a:	e6dd      	b.n	4045e8 <_malloc_r+0x18c>
  40482c:	687b      	ldr	r3, [r7, #4]
  40482e:	e679      	b.n	404524 <_malloc_r+0xc8>
  404830:	f108 0801 	add.w	r8, r8, #1
  404834:	f018 0f03 	tst.w	r8, #3
  404838:	f10c 0c08 	add.w	ip, ip, #8
  40483c:	f47f ae85 	bne.w	40454a <_malloc_r+0xee>
  404840:	e02d      	b.n	40489e <_malloc_r+0x442>
  404842:	68dc      	ldr	r4, [r3, #12]
  404844:	42a3      	cmp	r3, r4
  404846:	bf08      	it	eq
  404848:	3002      	addeq	r0, #2
  40484a:	f43f ae3e 	beq.w	4044ca <_malloc_r+0x6e>
  40484e:	e6bb      	b.n	4045c8 <_malloc_r+0x16c>
  404850:	4419      	add	r1, r3
  404852:	461c      	mov	r4, r3
  404854:	684a      	ldr	r2, [r1, #4]
  404856:	68db      	ldr	r3, [r3, #12]
  404858:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40485c:	f042 0201 	orr.w	r2, r2, #1
  404860:	604a      	str	r2, [r1, #4]
  404862:	4628      	mov	r0, r5
  404864:	60f3      	str	r3, [r6, #12]
  404866:	609e      	str	r6, [r3, #8]
  404868:	f000 f9ca 	bl	404c00 <__malloc_unlock>
  40486c:	e6bc      	b.n	4045e8 <_malloc_r+0x18c>
  40486e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404872:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404876:	00c3      	lsls	r3, r0, #3
  404878:	e612      	b.n	4044a0 <_malloc_r+0x44>
  40487a:	099a      	lsrs	r2, r3, #6
  40487c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404880:	00c9      	lsls	r1, r1, #3
  404882:	3238      	adds	r2, #56	; 0x38
  404884:	e7a4      	b.n	4047d0 <_malloc_r+0x374>
  404886:	42bc      	cmp	r4, r7
  404888:	d054      	beq.n	404934 <_malloc_r+0x4d8>
  40488a:	68bc      	ldr	r4, [r7, #8]
  40488c:	6862      	ldr	r2, [r4, #4]
  40488e:	f022 0203 	bic.w	r2, r2, #3
  404892:	e75d      	b.n	404750 <_malloc_r+0x2f4>
  404894:	f859 3908 	ldr.w	r3, [r9], #-8
  404898:	4599      	cmp	r9, r3
  40489a:	f040 8086 	bne.w	4049aa <_malloc_r+0x54e>
  40489e:	f010 0f03 	tst.w	r0, #3
  4048a2:	f100 30ff 	add.w	r0, r0, #4294967295
  4048a6:	d1f5      	bne.n	404894 <_malloc_r+0x438>
  4048a8:	687b      	ldr	r3, [r7, #4]
  4048aa:	ea23 0304 	bic.w	r3, r3, r4
  4048ae:	607b      	str	r3, [r7, #4]
  4048b0:	0064      	lsls	r4, r4, #1
  4048b2:	429c      	cmp	r4, r3
  4048b4:	f63f aec7 	bhi.w	404646 <_malloc_r+0x1ea>
  4048b8:	2c00      	cmp	r4, #0
  4048ba:	f43f aec4 	beq.w	404646 <_malloc_r+0x1ea>
  4048be:	421c      	tst	r4, r3
  4048c0:	4640      	mov	r0, r8
  4048c2:	f47f ae3e 	bne.w	404542 <_malloc_r+0xe6>
  4048c6:	0064      	lsls	r4, r4, #1
  4048c8:	421c      	tst	r4, r3
  4048ca:	f100 0004 	add.w	r0, r0, #4
  4048ce:	d0fa      	beq.n	4048c6 <_malloc_r+0x46a>
  4048d0:	e637      	b.n	404542 <_malloc_r+0xe6>
  4048d2:	468c      	mov	ip, r1
  4048d4:	e78c      	b.n	4047f0 <_malloc_r+0x394>
  4048d6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4048da:	d815      	bhi.n	404908 <_malloc_r+0x4ac>
  4048dc:	0bf3      	lsrs	r3, r6, #15
  4048de:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4048e2:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4048e6:	00c3      	lsls	r3, r0, #3
  4048e8:	e5da      	b.n	4044a0 <_malloc_r+0x44>
  4048ea:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4048ee:	e6ed      	b.n	4046cc <_malloc_r+0x270>
  4048f0:	687b      	ldr	r3, [r7, #4]
  4048f2:	1092      	asrs	r2, r2, #2
  4048f4:	2101      	movs	r1, #1
  4048f6:	fa01 f202 	lsl.w	r2, r1, r2
  4048fa:	4313      	orrs	r3, r2
  4048fc:	607b      	str	r3, [r7, #4]
  4048fe:	4662      	mov	r2, ip
  404900:	e779      	b.n	4047f6 <_malloc_r+0x39a>
  404902:	2301      	movs	r3, #1
  404904:	6053      	str	r3, [r2, #4]
  404906:	e729      	b.n	40475c <_malloc_r+0x300>
  404908:	f240 5254 	movw	r2, #1364	; 0x554
  40490c:	4293      	cmp	r3, r2
  40490e:	d822      	bhi.n	404956 <_malloc_r+0x4fa>
  404910:	0cb3      	lsrs	r3, r6, #18
  404912:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404916:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40491a:	00c3      	lsls	r3, r0, #3
  40491c:	e5c0      	b.n	4044a0 <_malloc_r+0x44>
  40491e:	f103 0b10 	add.w	fp, r3, #16
  404922:	e6ae      	b.n	404682 <_malloc_r+0x226>
  404924:	2a54      	cmp	r2, #84	; 0x54
  404926:	d829      	bhi.n	40497c <_malloc_r+0x520>
  404928:	0b1a      	lsrs	r2, r3, #12
  40492a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40492e:	00c9      	lsls	r1, r1, #3
  404930:	326e      	adds	r2, #110	; 0x6e
  404932:	e74d      	b.n	4047d0 <_malloc_r+0x374>
  404934:	4b20      	ldr	r3, [pc, #128]	; (4049b8 <_malloc_r+0x55c>)
  404936:	6819      	ldr	r1, [r3, #0]
  404938:	4459      	add	r1, fp
  40493a:	6019      	str	r1, [r3, #0]
  40493c:	e6b2      	b.n	4046a4 <_malloc_r+0x248>
  40493e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404942:	2800      	cmp	r0, #0
  404944:	f47f aeae 	bne.w	4046a4 <_malloc_r+0x248>
  404948:	eb08 030b 	add.w	r3, r8, fp
  40494c:	68ba      	ldr	r2, [r7, #8]
  40494e:	f043 0301 	orr.w	r3, r3, #1
  404952:	6053      	str	r3, [r2, #4]
  404954:	e6ee      	b.n	404734 <_malloc_r+0x2d8>
  404956:	207f      	movs	r0, #127	; 0x7f
  404958:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40495c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404960:	e59e      	b.n	4044a0 <_malloc_r+0x44>
  404962:	f104 0108 	add.w	r1, r4, #8
  404966:	4628      	mov	r0, r5
  404968:	9300      	str	r3, [sp, #0]
  40496a:	f000 fe37 	bl	4055dc <_free_r>
  40496e:	9b00      	ldr	r3, [sp, #0]
  404970:	6819      	ldr	r1, [r3, #0]
  404972:	e6df      	b.n	404734 <_malloc_r+0x2d8>
  404974:	2001      	movs	r0, #1
  404976:	f04f 0900 	mov.w	r9, #0
  40497a:	e6bc      	b.n	4046f6 <_malloc_r+0x29a>
  40497c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404980:	d805      	bhi.n	40498e <_malloc_r+0x532>
  404982:	0bda      	lsrs	r2, r3, #15
  404984:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404988:	00c9      	lsls	r1, r1, #3
  40498a:	3277      	adds	r2, #119	; 0x77
  40498c:	e720      	b.n	4047d0 <_malloc_r+0x374>
  40498e:	f240 5154 	movw	r1, #1364	; 0x554
  404992:	428a      	cmp	r2, r1
  404994:	d805      	bhi.n	4049a2 <_malloc_r+0x546>
  404996:	0c9a      	lsrs	r2, r3, #18
  404998:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40499c:	00c9      	lsls	r1, r1, #3
  40499e:	327c      	adds	r2, #124	; 0x7c
  4049a0:	e716      	b.n	4047d0 <_malloc_r+0x374>
  4049a2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4049a6:	227e      	movs	r2, #126	; 0x7e
  4049a8:	e712      	b.n	4047d0 <_malloc_r+0x374>
  4049aa:	687b      	ldr	r3, [r7, #4]
  4049ac:	e780      	b.n	4048b0 <_malloc_r+0x454>
  4049ae:	08f0      	lsrs	r0, r6, #3
  4049b0:	f106 0308 	add.w	r3, r6, #8
  4049b4:	e600      	b.n	4045b8 <_malloc_r+0x15c>
  4049b6:	bf00      	nop
  4049b8:	20000a7c 	.word	0x20000a7c
  4049bc:	00000000 	.word	0x00000000

004049c0 <memchr>:
  4049c0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4049c4:	2a10      	cmp	r2, #16
  4049c6:	db2b      	blt.n	404a20 <memchr+0x60>
  4049c8:	f010 0f07 	tst.w	r0, #7
  4049cc:	d008      	beq.n	4049e0 <memchr+0x20>
  4049ce:	f810 3b01 	ldrb.w	r3, [r0], #1
  4049d2:	3a01      	subs	r2, #1
  4049d4:	428b      	cmp	r3, r1
  4049d6:	d02d      	beq.n	404a34 <memchr+0x74>
  4049d8:	f010 0f07 	tst.w	r0, #7
  4049dc:	b342      	cbz	r2, 404a30 <memchr+0x70>
  4049de:	d1f6      	bne.n	4049ce <memchr+0xe>
  4049e0:	b4f0      	push	{r4, r5, r6, r7}
  4049e2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4049e6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4049ea:	f022 0407 	bic.w	r4, r2, #7
  4049ee:	f07f 0700 	mvns.w	r7, #0
  4049f2:	2300      	movs	r3, #0
  4049f4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4049f8:	3c08      	subs	r4, #8
  4049fa:	ea85 0501 	eor.w	r5, r5, r1
  4049fe:	ea86 0601 	eor.w	r6, r6, r1
  404a02:	fa85 f547 	uadd8	r5, r5, r7
  404a06:	faa3 f587 	sel	r5, r3, r7
  404a0a:	fa86 f647 	uadd8	r6, r6, r7
  404a0e:	faa5 f687 	sel	r6, r5, r7
  404a12:	b98e      	cbnz	r6, 404a38 <memchr+0x78>
  404a14:	d1ee      	bne.n	4049f4 <memchr+0x34>
  404a16:	bcf0      	pop	{r4, r5, r6, r7}
  404a18:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404a1c:	f002 0207 	and.w	r2, r2, #7
  404a20:	b132      	cbz	r2, 404a30 <memchr+0x70>
  404a22:	f810 3b01 	ldrb.w	r3, [r0], #1
  404a26:	3a01      	subs	r2, #1
  404a28:	ea83 0301 	eor.w	r3, r3, r1
  404a2c:	b113      	cbz	r3, 404a34 <memchr+0x74>
  404a2e:	d1f8      	bne.n	404a22 <memchr+0x62>
  404a30:	2000      	movs	r0, #0
  404a32:	4770      	bx	lr
  404a34:	3801      	subs	r0, #1
  404a36:	4770      	bx	lr
  404a38:	2d00      	cmp	r5, #0
  404a3a:	bf06      	itte	eq
  404a3c:	4635      	moveq	r5, r6
  404a3e:	3803      	subeq	r0, #3
  404a40:	3807      	subne	r0, #7
  404a42:	f015 0f01 	tst.w	r5, #1
  404a46:	d107      	bne.n	404a58 <memchr+0x98>
  404a48:	3001      	adds	r0, #1
  404a4a:	f415 7f80 	tst.w	r5, #256	; 0x100
  404a4e:	bf02      	ittt	eq
  404a50:	3001      	addeq	r0, #1
  404a52:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404a56:	3001      	addeq	r0, #1
  404a58:	bcf0      	pop	{r4, r5, r6, r7}
  404a5a:	3801      	subs	r0, #1
  404a5c:	4770      	bx	lr
  404a5e:	bf00      	nop

00404a60 <memcmp>:
  404a60:	2a03      	cmp	r2, #3
  404a62:	b470      	push	{r4, r5, r6}
  404a64:	d922      	bls.n	404aac <memcmp+0x4c>
  404a66:	ea40 0301 	orr.w	r3, r0, r1
  404a6a:	079b      	lsls	r3, r3, #30
  404a6c:	d011      	beq.n	404a92 <memcmp+0x32>
  404a6e:	7803      	ldrb	r3, [r0, #0]
  404a70:	780c      	ldrb	r4, [r1, #0]
  404a72:	42a3      	cmp	r3, r4
  404a74:	d11d      	bne.n	404ab2 <memcmp+0x52>
  404a76:	440a      	add	r2, r1
  404a78:	3101      	adds	r1, #1
  404a7a:	e005      	b.n	404a88 <memcmp+0x28>
  404a7c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  404a80:	f811 4b01 	ldrb.w	r4, [r1], #1
  404a84:	42a3      	cmp	r3, r4
  404a86:	d114      	bne.n	404ab2 <memcmp+0x52>
  404a88:	4291      	cmp	r1, r2
  404a8a:	d1f7      	bne.n	404a7c <memcmp+0x1c>
  404a8c:	2000      	movs	r0, #0
  404a8e:	bc70      	pop	{r4, r5, r6}
  404a90:	4770      	bx	lr
  404a92:	680d      	ldr	r5, [r1, #0]
  404a94:	6806      	ldr	r6, [r0, #0]
  404a96:	42ae      	cmp	r6, r5
  404a98:	460c      	mov	r4, r1
  404a9a:	4603      	mov	r3, r0
  404a9c:	f101 0104 	add.w	r1, r1, #4
  404aa0:	f100 0004 	add.w	r0, r0, #4
  404aa4:	d108      	bne.n	404ab8 <memcmp+0x58>
  404aa6:	3a04      	subs	r2, #4
  404aa8:	2a03      	cmp	r2, #3
  404aaa:	d8f2      	bhi.n	404a92 <memcmp+0x32>
  404aac:	2a00      	cmp	r2, #0
  404aae:	d1de      	bne.n	404a6e <memcmp+0xe>
  404ab0:	e7ec      	b.n	404a8c <memcmp+0x2c>
  404ab2:	1b18      	subs	r0, r3, r4
  404ab4:	bc70      	pop	{r4, r5, r6}
  404ab6:	4770      	bx	lr
  404ab8:	4621      	mov	r1, r4
  404aba:	4618      	mov	r0, r3
  404abc:	e7d7      	b.n	404a6e <memcmp+0xe>
  404abe:	bf00      	nop

00404ac0 <memcpy>:
  404ac0:	4684      	mov	ip, r0
  404ac2:	ea41 0300 	orr.w	r3, r1, r0
  404ac6:	f013 0303 	ands.w	r3, r3, #3
  404aca:	d16d      	bne.n	404ba8 <memcpy+0xe8>
  404acc:	3a40      	subs	r2, #64	; 0x40
  404ace:	d341      	bcc.n	404b54 <memcpy+0x94>
  404ad0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ad4:	f840 3b04 	str.w	r3, [r0], #4
  404ad8:	f851 3b04 	ldr.w	r3, [r1], #4
  404adc:	f840 3b04 	str.w	r3, [r0], #4
  404ae0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ae4:	f840 3b04 	str.w	r3, [r0], #4
  404ae8:	f851 3b04 	ldr.w	r3, [r1], #4
  404aec:	f840 3b04 	str.w	r3, [r0], #4
  404af0:	f851 3b04 	ldr.w	r3, [r1], #4
  404af4:	f840 3b04 	str.w	r3, [r0], #4
  404af8:	f851 3b04 	ldr.w	r3, [r1], #4
  404afc:	f840 3b04 	str.w	r3, [r0], #4
  404b00:	f851 3b04 	ldr.w	r3, [r1], #4
  404b04:	f840 3b04 	str.w	r3, [r0], #4
  404b08:	f851 3b04 	ldr.w	r3, [r1], #4
  404b0c:	f840 3b04 	str.w	r3, [r0], #4
  404b10:	f851 3b04 	ldr.w	r3, [r1], #4
  404b14:	f840 3b04 	str.w	r3, [r0], #4
  404b18:	f851 3b04 	ldr.w	r3, [r1], #4
  404b1c:	f840 3b04 	str.w	r3, [r0], #4
  404b20:	f851 3b04 	ldr.w	r3, [r1], #4
  404b24:	f840 3b04 	str.w	r3, [r0], #4
  404b28:	f851 3b04 	ldr.w	r3, [r1], #4
  404b2c:	f840 3b04 	str.w	r3, [r0], #4
  404b30:	f851 3b04 	ldr.w	r3, [r1], #4
  404b34:	f840 3b04 	str.w	r3, [r0], #4
  404b38:	f851 3b04 	ldr.w	r3, [r1], #4
  404b3c:	f840 3b04 	str.w	r3, [r0], #4
  404b40:	f851 3b04 	ldr.w	r3, [r1], #4
  404b44:	f840 3b04 	str.w	r3, [r0], #4
  404b48:	f851 3b04 	ldr.w	r3, [r1], #4
  404b4c:	f840 3b04 	str.w	r3, [r0], #4
  404b50:	3a40      	subs	r2, #64	; 0x40
  404b52:	d2bd      	bcs.n	404ad0 <memcpy+0x10>
  404b54:	3230      	adds	r2, #48	; 0x30
  404b56:	d311      	bcc.n	404b7c <memcpy+0xbc>
  404b58:	f851 3b04 	ldr.w	r3, [r1], #4
  404b5c:	f840 3b04 	str.w	r3, [r0], #4
  404b60:	f851 3b04 	ldr.w	r3, [r1], #4
  404b64:	f840 3b04 	str.w	r3, [r0], #4
  404b68:	f851 3b04 	ldr.w	r3, [r1], #4
  404b6c:	f840 3b04 	str.w	r3, [r0], #4
  404b70:	f851 3b04 	ldr.w	r3, [r1], #4
  404b74:	f840 3b04 	str.w	r3, [r0], #4
  404b78:	3a10      	subs	r2, #16
  404b7a:	d2ed      	bcs.n	404b58 <memcpy+0x98>
  404b7c:	320c      	adds	r2, #12
  404b7e:	d305      	bcc.n	404b8c <memcpy+0xcc>
  404b80:	f851 3b04 	ldr.w	r3, [r1], #4
  404b84:	f840 3b04 	str.w	r3, [r0], #4
  404b88:	3a04      	subs	r2, #4
  404b8a:	d2f9      	bcs.n	404b80 <memcpy+0xc0>
  404b8c:	3204      	adds	r2, #4
  404b8e:	d008      	beq.n	404ba2 <memcpy+0xe2>
  404b90:	07d2      	lsls	r2, r2, #31
  404b92:	bf1c      	itt	ne
  404b94:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404b98:	f800 3b01 	strbne.w	r3, [r0], #1
  404b9c:	d301      	bcc.n	404ba2 <memcpy+0xe2>
  404b9e:	880b      	ldrh	r3, [r1, #0]
  404ba0:	8003      	strh	r3, [r0, #0]
  404ba2:	4660      	mov	r0, ip
  404ba4:	4770      	bx	lr
  404ba6:	bf00      	nop
  404ba8:	2a08      	cmp	r2, #8
  404baa:	d313      	bcc.n	404bd4 <memcpy+0x114>
  404bac:	078b      	lsls	r3, r1, #30
  404bae:	d08d      	beq.n	404acc <memcpy+0xc>
  404bb0:	f010 0303 	ands.w	r3, r0, #3
  404bb4:	d08a      	beq.n	404acc <memcpy+0xc>
  404bb6:	f1c3 0304 	rsb	r3, r3, #4
  404bba:	1ad2      	subs	r2, r2, r3
  404bbc:	07db      	lsls	r3, r3, #31
  404bbe:	bf1c      	itt	ne
  404bc0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404bc4:	f800 3b01 	strbne.w	r3, [r0], #1
  404bc8:	d380      	bcc.n	404acc <memcpy+0xc>
  404bca:	f831 3b02 	ldrh.w	r3, [r1], #2
  404bce:	f820 3b02 	strh.w	r3, [r0], #2
  404bd2:	e77b      	b.n	404acc <memcpy+0xc>
  404bd4:	3a04      	subs	r2, #4
  404bd6:	d3d9      	bcc.n	404b8c <memcpy+0xcc>
  404bd8:	3a01      	subs	r2, #1
  404bda:	f811 3b01 	ldrb.w	r3, [r1], #1
  404bde:	f800 3b01 	strb.w	r3, [r0], #1
  404be2:	d2f9      	bcs.n	404bd8 <memcpy+0x118>
  404be4:	780b      	ldrb	r3, [r1, #0]
  404be6:	7003      	strb	r3, [r0, #0]
  404be8:	784b      	ldrb	r3, [r1, #1]
  404bea:	7043      	strb	r3, [r0, #1]
  404bec:	788b      	ldrb	r3, [r1, #2]
  404bee:	7083      	strb	r3, [r0, #2]
  404bf0:	4660      	mov	r0, ip
  404bf2:	4770      	bx	lr

00404bf4 <__malloc_lock>:
  404bf4:	4801      	ldr	r0, [pc, #4]	; (404bfc <__malloc_lock+0x8>)
  404bf6:	f7ff bc2d 	b.w	404454 <__retarget_lock_acquire_recursive>
  404bfa:	bf00      	nop
  404bfc:	20019560 	.word	0x20019560

00404c00 <__malloc_unlock>:
  404c00:	4801      	ldr	r0, [pc, #4]	; (404c08 <__malloc_unlock+0x8>)
  404c02:	f7ff bc29 	b.w	404458 <__retarget_lock_release_recursive>
  404c06:	bf00      	nop
  404c08:	20019560 	.word	0x20019560

00404c0c <_Balloc>:
  404c0c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404c0e:	b570      	push	{r4, r5, r6, lr}
  404c10:	4605      	mov	r5, r0
  404c12:	460c      	mov	r4, r1
  404c14:	b14b      	cbz	r3, 404c2a <_Balloc+0x1e>
  404c16:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404c1a:	b180      	cbz	r0, 404c3e <_Balloc+0x32>
  404c1c:	6802      	ldr	r2, [r0, #0]
  404c1e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404c22:	2300      	movs	r3, #0
  404c24:	6103      	str	r3, [r0, #16]
  404c26:	60c3      	str	r3, [r0, #12]
  404c28:	bd70      	pop	{r4, r5, r6, pc}
  404c2a:	2221      	movs	r2, #33	; 0x21
  404c2c:	2104      	movs	r1, #4
  404c2e:	f000 fc55 	bl	4054dc <_calloc_r>
  404c32:	64e8      	str	r0, [r5, #76]	; 0x4c
  404c34:	4603      	mov	r3, r0
  404c36:	2800      	cmp	r0, #0
  404c38:	d1ed      	bne.n	404c16 <_Balloc+0xa>
  404c3a:	2000      	movs	r0, #0
  404c3c:	bd70      	pop	{r4, r5, r6, pc}
  404c3e:	2101      	movs	r1, #1
  404c40:	fa01 f604 	lsl.w	r6, r1, r4
  404c44:	1d72      	adds	r2, r6, #5
  404c46:	4628      	mov	r0, r5
  404c48:	0092      	lsls	r2, r2, #2
  404c4a:	f000 fc47 	bl	4054dc <_calloc_r>
  404c4e:	2800      	cmp	r0, #0
  404c50:	d0f3      	beq.n	404c3a <_Balloc+0x2e>
  404c52:	6044      	str	r4, [r0, #4]
  404c54:	6086      	str	r6, [r0, #8]
  404c56:	e7e4      	b.n	404c22 <_Balloc+0x16>

00404c58 <_Bfree>:
  404c58:	b131      	cbz	r1, 404c68 <_Bfree+0x10>
  404c5a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404c5c:	684a      	ldr	r2, [r1, #4]
  404c5e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404c62:	6008      	str	r0, [r1, #0]
  404c64:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404c68:	4770      	bx	lr
  404c6a:	bf00      	nop

00404c6c <__multadd>:
  404c6c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404c6e:	690c      	ldr	r4, [r1, #16]
  404c70:	b083      	sub	sp, #12
  404c72:	460d      	mov	r5, r1
  404c74:	4606      	mov	r6, r0
  404c76:	f101 0e14 	add.w	lr, r1, #20
  404c7a:	2700      	movs	r7, #0
  404c7c:	f8de 0000 	ldr.w	r0, [lr]
  404c80:	b281      	uxth	r1, r0
  404c82:	fb02 3301 	mla	r3, r2, r1, r3
  404c86:	0c01      	lsrs	r1, r0, #16
  404c88:	0c18      	lsrs	r0, r3, #16
  404c8a:	fb02 0101 	mla	r1, r2, r1, r0
  404c8e:	b29b      	uxth	r3, r3
  404c90:	3701      	adds	r7, #1
  404c92:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404c96:	42bc      	cmp	r4, r7
  404c98:	f84e 3b04 	str.w	r3, [lr], #4
  404c9c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404ca0:	dcec      	bgt.n	404c7c <__multadd+0x10>
  404ca2:	b13b      	cbz	r3, 404cb4 <__multadd+0x48>
  404ca4:	68aa      	ldr	r2, [r5, #8]
  404ca6:	4294      	cmp	r4, r2
  404ca8:	da07      	bge.n	404cba <__multadd+0x4e>
  404caa:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404cae:	3401      	adds	r4, #1
  404cb0:	6153      	str	r3, [r2, #20]
  404cb2:	612c      	str	r4, [r5, #16]
  404cb4:	4628      	mov	r0, r5
  404cb6:	b003      	add	sp, #12
  404cb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404cba:	6869      	ldr	r1, [r5, #4]
  404cbc:	9301      	str	r3, [sp, #4]
  404cbe:	3101      	adds	r1, #1
  404cc0:	4630      	mov	r0, r6
  404cc2:	f7ff ffa3 	bl	404c0c <_Balloc>
  404cc6:	692a      	ldr	r2, [r5, #16]
  404cc8:	3202      	adds	r2, #2
  404cca:	f105 010c 	add.w	r1, r5, #12
  404cce:	4607      	mov	r7, r0
  404cd0:	0092      	lsls	r2, r2, #2
  404cd2:	300c      	adds	r0, #12
  404cd4:	f7ff fef4 	bl	404ac0 <memcpy>
  404cd8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404cda:	6869      	ldr	r1, [r5, #4]
  404cdc:	9b01      	ldr	r3, [sp, #4]
  404cde:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404ce2:	6028      	str	r0, [r5, #0]
  404ce4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404ce8:	463d      	mov	r5, r7
  404cea:	e7de      	b.n	404caa <__multadd+0x3e>

00404cec <__hi0bits>:
  404cec:	0c02      	lsrs	r2, r0, #16
  404cee:	0412      	lsls	r2, r2, #16
  404cf0:	4603      	mov	r3, r0
  404cf2:	b9b2      	cbnz	r2, 404d22 <__hi0bits+0x36>
  404cf4:	0403      	lsls	r3, r0, #16
  404cf6:	2010      	movs	r0, #16
  404cf8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404cfc:	bf04      	itt	eq
  404cfe:	021b      	lsleq	r3, r3, #8
  404d00:	3008      	addeq	r0, #8
  404d02:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404d06:	bf04      	itt	eq
  404d08:	011b      	lsleq	r3, r3, #4
  404d0a:	3004      	addeq	r0, #4
  404d0c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404d10:	bf04      	itt	eq
  404d12:	009b      	lsleq	r3, r3, #2
  404d14:	3002      	addeq	r0, #2
  404d16:	2b00      	cmp	r3, #0
  404d18:	db02      	blt.n	404d20 <__hi0bits+0x34>
  404d1a:	005b      	lsls	r3, r3, #1
  404d1c:	d403      	bmi.n	404d26 <__hi0bits+0x3a>
  404d1e:	2020      	movs	r0, #32
  404d20:	4770      	bx	lr
  404d22:	2000      	movs	r0, #0
  404d24:	e7e8      	b.n	404cf8 <__hi0bits+0xc>
  404d26:	3001      	adds	r0, #1
  404d28:	4770      	bx	lr
  404d2a:	bf00      	nop

00404d2c <__lo0bits>:
  404d2c:	6803      	ldr	r3, [r0, #0]
  404d2e:	f013 0207 	ands.w	r2, r3, #7
  404d32:	4601      	mov	r1, r0
  404d34:	d007      	beq.n	404d46 <__lo0bits+0x1a>
  404d36:	07da      	lsls	r2, r3, #31
  404d38:	d421      	bmi.n	404d7e <__lo0bits+0x52>
  404d3a:	0798      	lsls	r0, r3, #30
  404d3c:	d421      	bmi.n	404d82 <__lo0bits+0x56>
  404d3e:	089b      	lsrs	r3, r3, #2
  404d40:	600b      	str	r3, [r1, #0]
  404d42:	2002      	movs	r0, #2
  404d44:	4770      	bx	lr
  404d46:	b298      	uxth	r0, r3
  404d48:	b198      	cbz	r0, 404d72 <__lo0bits+0x46>
  404d4a:	4610      	mov	r0, r2
  404d4c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404d50:	bf04      	itt	eq
  404d52:	0a1b      	lsreq	r3, r3, #8
  404d54:	3008      	addeq	r0, #8
  404d56:	071a      	lsls	r2, r3, #28
  404d58:	bf04      	itt	eq
  404d5a:	091b      	lsreq	r3, r3, #4
  404d5c:	3004      	addeq	r0, #4
  404d5e:	079a      	lsls	r2, r3, #30
  404d60:	bf04      	itt	eq
  404d62:	089b      	lsreq	r3, r3, #2
  404d64:	3002      	addeq	r0, #2
  404d66:	07da      	lsls	r2, r3, #31
  404d68:	d407      	bmi.n	404d7a <__lo0bits+0x4e>
  404d6a:	085b      	lsrs	r3, r3, #1
  404d6c:	d104      	bne.n	404d78 <__lo0bits+0x4c>
  404d6e:	2020      	movs	r0, #32
  404d70:	4770      	bx	lr
  404d72:	0c1b      	lsrs	r3, r3, #16
  404d74:	2010      	movs	r0, #16
  404d76:	e7e9      	b.n	404d4c <__lo0bits+0x20>
  404d78:	3001      	adds	r0, #1
  404d7a:	600b      	str	r3, [r1, #0]
  404d7c:	4770      	bx	lr
  404d7e:	2000      	movs	r0, #0
  404d80:	4770      	bx	lr
  404d82:	085b      	lsrs	r3, r3, #1
  404d84:	600b      	str	r3, [r1, #0]
  404d86:	2001      	movs	r0, #1
  404d88:	4770      	bx	lr
  404d8a:	bf00      	nop

00404d8c <__i2b>:
  404d8c:	b510      	push	{r4, lr}
  404d8e:	460c      	mov	r4, r1
  404d90:	2101      	movs	r1, #1
  404d92:	f7ff ff3b 	bl	404c0c <_Balloc>
  404d96:	2201      	movs	r2, #1
  404d98:	6144      	str	r4, [r0, #20]
  404d9a:	6102      	str	r2, [r0, #16]
  404d9c:	bd10      	pop	{r4, pc}
  404d9e:	bf00      	nop

00404da0 <__multiply>:
  404da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404da4:	690c      	ldr	r4, [r1, #16]
  404da6:	6915      	ldr	r5, [r2, #16]
  404da8:	42ac      	cmp	r4, r5
  404daa:	b083      	sub	sp, #12
  404dac:	468b      	mov	fp, r1
  404dae:	4616      	mov	r6, r2
  404db0:	da04      	bge.n	404dbc <__multiply+0x1c>
  404db2:	4622      	mov	r2, r4
  404db4:	46b3      	mov	fp, r6
  404db6:	462c      	mov	r4, r5
  404db8:	460e      	mov	r6, r1
  404dba:	4615      	mov	r5, r2
  404dbc:	f8db 3008 	ldr.w	r3, [fp, #8]
  404dc0:	f8db 1004 	ldr.w	r1, [fp, #4]
  404dc4:	eb04 0805 	add.w	r8, r4, r5
  404dc8:	4598      	cmp	r8, r3
  404dca:	bfc8      	it	gt
  404dcc:	3101      	addgt	r1, #1
  404dce:	f7ff ff1d 	bl	404c0c <_Balloc>
  404dd2:	f100 0914 	add.w	r9, r0, #20
  404dd6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404dda:	45d1      	cmp	r9, sl
  404ddc:	9000      	str	r0, [sp, #0]
  404dde:	d205      	bcs.n	404dec <__multiply+0x4c>
  404de0:	464b      	mov	r3, r9
  404de2:	2100      	movs	r1, #0
  404de4:	f843 1b04 	str.w	r1, [r3], #4
  404de8:	459a      	cmp	sl, r3
  404dea:	d8fb      	bhi.n	404de4 <__multiply+0x44>
  404dec:	f106 0c14 	add.w	ip, r6, #20
  404df0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404df4:	f10b 0b14 	add.w	fp, fp, #20
  404df8:	459c      	cmp	ip, r3
  404dfa:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404dfe:	d24c      	bcs.n	404e9a <__multiply+0xfa>
  404e00:	f8cd a004 	str.w	sl, [sp, #4]
  404e04:	469a      	mov	sl, r3
  404e06:	f8dc 5000 	ldr.w	r5, [ip]
  404e0a:	b2af      	uxth	r7, r5
  404e0c:	b1ef      	cbz	r7, 404e4a <__multiply+0xaa>
  404e0e:	2100      	movs	r1, #0
  404e10:	464d      	mov	r5, r9
  404e12:	465e      	mov	r6, fp
  404e14:	460c      	mov	r4, r1
  404e16:	f856 2b04 	ldr.w	r2, [r6], #4
  404e1a:	6828      	ldr	r0, [r5, #0]
  404e1c:	b293      	uxth	r3, r2
  404e1e:	b281      	uxth	r1, r0
  404e20:	fb07 1303 	mla	r3, r7, r3, r1
  404e24:	0c12      	lsrs	r2, r2, #16
  404e26:	0c01      	lsrs	r1, r0, #16
  404e28:	4423      	add	r3, r4
  404e2a:	fb07 1102 	mla	r1, r7, r2, r1
  404e2e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404e32:	b29b      	uxth	r3, r3
  404e34:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404e38:	45b6      	cmp	lr, r6
  404e3a:	f845 3b04 	str.w	r3, [r5], #4
  404e3e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404e42:	d8e8      	bhi.n	404e16 <__multiply+0x76>
  404e44:	602c      	str	r4, [r5, #0]
  404e46:	f8dc 5000 	ldr.w	r5, [ip]
  404e4a:	0c2d      	lsrs	r5, r5, #16
  404e4c:	d01d      	beq.n	404e8a <__multiply+0xea>
  404e4e:	f8d9 3000 	ldr.w	r3, [r9]
  404e52:	4648      	mov	r0, r9
  404e54:	461c      	mov	r4, r3
  404e56:	4659      	mov	r1, fp
  404e58:	2200      	movs	r2, #0
  404e5a:	880e      	ldrh	r6, [r1, #0]
  404e5c:	0c24      	lsrs	r4, r4, #16
  404e5e:	fb05 4406 	mla	r4, r5, r6, r4
  404e62:	4422      	add	r2, r4
  404e64:	b29b      	uxth	r3, r3
  404e66:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404e6a:	f840 3b04 	str.w	r3, [r0], #4
  404e6e:	f851 3b04 	ldr.w	r3, [r1], #4
  404e72:	6804      	ldr	r4, [r0, #0]
  404e74:	0c1b      	lsrs	r3, r3, #16
  404e76:	b2a6      	uxth	r6, r4
  404e78:	fb05 6303 	mla	r3, r5, r3, r6
  404e7c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404e80:	458e      	cmp	lr, r1
  404e82:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404e86:	d8e8      	bhi.n	404e5a <__multiply+0xba>
  404e88:	6003      	str	r3, [r0, #0]
  404e8a:	f10c 0c04 	add.w	ip, ip, #4
  404e8e:	45e2      	cmp	sl, ip
  404e90:	f109 0904 	add.w	r9, r9, #4
  404e94:	d8b7      	bhi.n	404e06 <__multiply+0x66>
  404e96:	f8dd a004 	ldr.w	sl, [sp, #4]
  404e9a:	f1b8 0f00 	cmp.w	r8, #0
  404e9e:	dd0b      	ble.n	404eb8 <__multiply+0x118>
  404ea0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404ea4:	f1aa 0a04 	sub.w	sl, sl, #4
  404ea8:	b11b      	cbz	r3, 404eb2 <__multiply+0x112>
  404eaa:	e005      	b.n	404eb8 <__multiply+0x118>
  404eac:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404eb0:	b913      	cbnz	r3, 404eb8 <__multiply+0x118>
  404eb2:	f1b8 0801 	subs.w	r8, r8, #1
  404eb6:	d1f9      	bne.n	404eac <__multiply+0x10c>
  404eb8:	9800      	ldr	r0, [sp, #0]
  404eba:	f8c0 8010 	str.w	r8, [r0, #16]
  404ebe:	b003      	add	sp, #12
  404ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404ec4 <__pow5mult>:
  404ec4:	f012 0303 	ands.w	r3, r2, #3
  404ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404ecc:	4614      	mov	r4, r2
  404ece:	4607      	mov	r7, r0
  404ed0:	d12e      	bne.n	404f30 <__pow5mult+0x6c>
  404ed2:	460d      	mov	r5, r1
  404ed4:	10a4      	asrs	r4, r4, #2
  404ed6:	d01c      	beq.n	404f12 <__pow5mult+0x4e>
  404ed8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404eda:	b396      	cbz	r6, 404f42 <__pow5mult+0x7e>
  404edc:	07e3      	lsls	r3, r4, #31
  404ede:	f04f 0800 	mov.w	r8, #0
  404ee2:	d406      	bmi.n	404ef2 <__pow5mult+0x2e>
  404ee4:	1064      	asrs	r4, r4, #1
  404ee6:	d014      	beq.n	404f12 <__pow5mult+0x4e>
  404ee8:	6830      	ldr	r0, [r6, #0]
  404eea:	b1a8      	cbz	r0, 404f18 <__pow5mult+0x54>
  404eec:	4606      	mov	r6, r0
  404eee:	07e3      	lsls	r3, r4, #31
  404ef0:	d5f8      	bpl.n	404ee4 <__pow5mult+0x20>
  404ef2:	4632      	mov	r2, r6
  404ef4:	4629      	mov	r1, r5
  404ef6:	4638      	mov	r0, r7
  404ef8:	f7ff ff52 	bl	404da0 <__multiply>
  404efc:	b1b5      	cbz	r5, 404f2c <__pow5mult+0x68>
  404efe:	686a      	ldr	r2, [r5, #4]
  404f00:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404f02:	1064      	asrs	r4, r4, #1
  404f04:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404f08:	6029      	str	r1, [r5, #0]
  404f0a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404f0e:	4605      	mov	r5, r0
  404f10:	d1ea      	bne.n	404ee8 <__pow5mult+0x24>
  404f12:	4628      	mov	r0, r5
  404f14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f18:	4632      	mov	r2, r6
  404f1a:	4631      	mov	r1, r6
  404f1c:	4638      	mov	r0, r7
  404f1e:	f7ff ff3f 	bl	404da0 <__multiply>
  404f22:	6030      	str	r0, [r6, #0]
  404f24:	f8c0 8000 	str.w	r8, [r0]
  404f28:	4606      	mov	r6, r0
  404f2a:	e7e0      	b.n	404eee <__pow5mult+0x2a>
  404f2c:	4605      	mov	r5, r0
  404f2e:	e7d9      	b.n	404ee4 <__pow5mult+0x20>
  404f30:	1e5a      	subs	r2, r3, #1
  404f32:	4d0b      	ldr	r5, [pc, #44]	; (404f60 <__pow5mult+0x9c>)
  404f34:	2300      	movs	r3, #0
  404f36:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404f3a:	f7ff fe97 	bl	404c6c <__multadd>
  404f3e:	4605      	mov	r5, r0
  404f40:	e7c8      	b.n	404ed4 <__pow5mult+0x10>
  404f42:	2101      	movs	r1, #1
  404f44:	4638      	mov	r0, r7
  404f46:	f7ff fe61 	bl	404c0c <_Balloc>
  404f4a:	f240 2171 	movw	r1, #625	; 0x271
  404f4e:	2201      	movs	r2, #1
  404f50:	2300      	movs	r3, #0
  404f52:	6141      	str	r1, [r0, #20]
  404f54:	6102      	str	r2, [r0, #16]
  404f56:	4606      	mov	r6, r0
  404f58:	64b8      	str	r0, [r7, #72]	; 0x48
  404f5a:	6003      	str	r3, [r0, #0]
  404f5c:	e7be      	b.n	404edc <__pow5mult+0x18>
  404f5e:	bf00      	nop
  404f60:	004076a0 	.word	0x004076a0

00404f64 <__lshift>:
  404f64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404f68:	4691      	mov	r9, r2
  404f6a:	690a      	ldr	r2, [r1, #16]
  404f6c:	688b      	ldr	r3, [r1, #8]
  404f6e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404f72:	eb04 0802 	add.w	r8, r4, r2
  404f76:	f108 0501 	add.w	r5, r8, #1
  404f7a:	429d      	cmp	r5, r3
  404f7c:	460e      	mov	r6, r1
  404f7e:	4607      	mov	r7, r0
  404f80:	6849      	ldr	r1, [r1, #4]
  404f82:	dd04      	ble.n	404f8e <__lshift+0x2a>
  404f84:	005b      	lsls	r3, r3, #1
  404f86:	429d      	cmp	r5, r3
  404f88:	f101 0101 	add.w	r1, r1, #1
  404f8c:	dcfa      	bgt.n	404f84 <__lshift+0x20>
  404f8e:	4638      	mov	r0, r7
  404f90:	f7ff fe3c 	bl	404c0c <_Balloc>
  404f94:	2c00      	cmp	r4, #0
  404f96:	f100 0314 	add.w	r3, r0, #20
  404f9a:	dd06      	ble.n	404faa <__lshift+0x46>
  404f9c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404fa0:	2100      	movs	r1, #0
  404fa2:	f843 1b04 	str.w	r1, [r3], #4
  404fa6:	429a      	cmp	r2, r3
  404fa8:	d1fb      	bne.n	404fa2 <__lshift+0x3e>
  404faa:	6934      	ldr	r4, [r6, #16]
  404fac:	f106 0114 	add.w	r1, r6, #20
  404fb0:	f019 091f 	ands.w	r9, r9, #31
  404fb4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404fb8:	d01d      	beq.n	404ff6 <__lshift+0x92>
  404fba:	f1c9 0c20 	rsb	ip, r9, #32
  404fbe:	2200      	movs	r2, #0
  404fc0:	680c      	ldr	r4, [r1, #0]
  404fc2:	fa04 f409 	lsl.w	r4, r4, r9
  404fc6:	4314      	orrs	r4, r2
  404fc8:	f843 4b04 	str.w	r4, [r3], #4
  404fcc:	f851 2b04 	ldr.w	r2, [r1], #4
  404fd0:	458e      	cmp	lr, r1
  404fd2:	fa22 f20c 	lsr.w	r2, r2, ip
  404fd6:	d8f3      	bhi.n	404fc0 <__lshift+0x5c>
  404fd8:	601a      	str	r2, [r3, #0]
  404fda:	b10a      	cbz	r2, 404fe0 <__lshift+0x7c>
  404fdc:	f108 0502 	add.w	r5, r8, #2
  404fe0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404fe2:	6872      	ldr	r2, [r6, #4]
  404fe4:	3d01      	subs	r5, #1
  404fe6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404fea:	6105      	str	r5, [r0, #16]
  404fec:	6031      	str	r1, [r6, #0]
  404fee:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404ff2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404ff6:	3b04      	subs	r3, #4
  404ff8:	f851 2b04 	ldr.w	r2, [r1], #4
  404ffc:	f843 2f04 	str.w	r2, [r3, #4]!
  405000:	458e      	cmp	lr, r1
  405002:	d8f9      	bhi.n	404ff8 <__lshift+0x94>
  405004:	e7ec      	b.n	404fe0 <__lshift+0x7c>
  405006:	bf00      	nop

00405008 <__mcmp>:
  405008:	b430      	push	{r4, r5}
  40500a:	690b      	ldr	r3, [r1, #16]
  40500c:	4605      	mov	r5, r0
  40500e:	6900      	ldr	r0, [r0, #16]
  405010:	1ac0      	subs	r0, r0, r3
  405012:	d10f      	bne.n	405034 <__mcmp+0x2c>
  405014:	009b      	lsls	r3, r3, #2
  405016:	3514      	adds	r5, #20
  405018:	3114      	adds	r1, #20
  40501a:	4419      	add	r1, r3
  40501c:	442b      	add	r3, r5
  40501e:	e001      	b.n	405024 <__mcmp+0x1c>
  405020:	429d      	cmp	r5, r3
  405022:	d207      	bcs.n	405034 <__mcmp+0x2c>
  405024:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405028:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40502c:	4294      	cmp	r4, r2
  40502e:	d0f7      	beq.n	405020 <__mcmp+0x18>
  405030:	d302      	bcc.n	405038 <__mcmp+0x30>
  405032:	2001      	movs	r0, #1
  405034:	bc30      	pop	{r4, r5}
  405036:	4770      	bx	lr
  405038:	f04f 30ff 	mov.w	r0, #4294967295
  40503c:	e7fa      	b.n	405034 <__mcmp+0x2c>
  40503e:	bf00      	nop

00405040 <__mdiff>:
  405040:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405044:	690f      	ldr	r7, [r1, #16]
  405046:	460e      	mov	r6, r1
  405048:	6911      	ldr	r1, [r2, #16]
  40504a:	1a7f      	subs	r7, r7, r1
  40504c:	2f00      	cmp	r7, #0
  40504e:	4690      	mov	r8, r2
  405050:	d117      	bne.n	405082 <__mdiff+0x42>
  405052:	0089      	lsls	r1, r1, #2
  405054:	f106 0514 	add.w	r5, r6, #20
  405058:	f102 0e14 	add.w	lr, r2, #20
  40505c:	186b      	adds	r3, r5, r1
  40505e:	4471      	add	r1, lr
  405060:	e001      	b.n	405066 <__mdiff+0x26>
  405062:	429d      	cmp	r5, r3
  405064:	d25c      	bcs.n	405120 <__mdiff+0xe0>
  405066:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40506a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40506e:	42a2      	cmp	r2, r4
  405070:	d0f7      	beq.n	405062 <__mdiff+0x22>
  405072:	d25e      	bcs.n	405132 <__mdiff+0xf2>
  405074:	4633      	mov	r3, r6
  405076:	462c      	mov	r4, r5
  405078:	4646      	mov	r6, r8
  40507a:	4675      	mov	r5, lr
  40507c:	4698      	mov	r8, r3
  40507e:	2701      	movs	r7, #1
  405080:	e005      	b.n	40508e <__mdiff+0x4e>
  405082:	db58      	blt.n	405136 <__mdiff+0xf6>
  405084:	f106 0514 	add.w	r5, r6, #20
  405088:	f108 0414 	add.w	r4, r8, #20
  40508c:	2700      	movs	r7, #0
  40508e:	6871      	ldr	r1, [r6, #4]
  405090:	f7ff fdbc 	bl	404c0c <_Balloc>
  405094:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405098:	6936      	ldr	r6, [r6, #16]
  40509a:	60c7      	str	r7, [r0, #12]
  40509c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4050a0:	46a6      	mov	lr, r4
  4050a2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4050a6:	f100 0414 	add.w	r4, r0, #20
  4050aa:	2300      	movs	r3, #0
  4050ac:	f85e 1b04 	ldr.w	r1, [lr], #4
  4050b0:	f855 8b04 	ldr.w	r8, [r5], #4
  4050b4:	b28a      	uxth	r2, r1
  4050b6:	fa13 f388 	uxtah	r3, r3, r8
  4050ba:	0c09      	lsrs	r1, r1, #16
  4050bc:	1a9a      	subs	r2, r3, r2
  4050be:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4050c2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4050c6:	b292      	uxth	r2, r2
  4050c8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4050cc:	45f4      	cmp	ip, lr
  4050ce:	f844 2b04 	str.w	r2, [r4], #4
  4050d2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4050d6:	d8e9      	bhi.n	4050ac <__mdiff+0x6c>
  4050d8:	42af      	cmp	r7, r5
  4050da:	d917      	bls.n	40510c <__mdiff+0xcc>
  4050dc:	46a4      	mov	ip, r4
  4050de:	46ae      	mov	lr, r5
  4050e0:	f85e 2b04 	ldr.w	r2, [lr], #4
  4050e4:	fa13 f382 	uxtah	r3, r3, r2
  4050e8:	1419      	asrs	r1, r3, #16
  4050ea:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  4050ee:	b29b      	uxth	r3, r3
  4050f0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  4050f4:	4577      	cmp	r7, lr
  4050f6:	f84c 2b04 	str.w	r2, [ip], #4
  4050fa:	ea4f 4321 	mov.w	r3, r1, asr #16
  4050fe:	d8ef      	bhi.n	4050e0 <__mdiff+0xa0>
  405100:	43ed      	mvns	r5, r5
  405102:	442f      	add	r7, r5
  405104:	f027 0703 	bic.w	r7, r7, #3
  405108:	3704      	adds	r7, #4
  40510a:	443c      	add	r4, r7
  40510c:	3c04      	subs	r4, #4
  40510e:	b922      	cbnz	r2, 40511a <__mdiff+0xda>
  405110:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405114:	3e01      	subs	r6, #1
  405116:	2b00      	cmp	r3, #0
  405118:	d0fa      	beq.n	405110 <__mdiff+0xd0>
  40511a:	6106      	str	r6, [r0, #16]
  40511c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405120:	2100      	movs	r1, #0
  405122:	f7ff fd73 	bl	404c0c <_Balloc>
  405126:	2201      	movs	r2, #1
  405128:	2300      	movs	r3, #0
  40512a:	6102      	str	r2, [r0, #16]
  40512c:	6143      	str	r3, [r0, #20]
  40512e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405132:	4674      	mov	r4, lr
  405134:	e7ab      	b.n	40508e <__mdiff+0x4e>
  405136:	4633      	mov	r3, r6
  405138:	f106 0414 	add.w	r4, r6, #20
  40513c:	f102 0514 	add.w	r5, r2, #20
  405140:	4616      	mov	r6, r2
  405142:	2701      	movs	r7, #1
  405144:	4698      	mov	r8, r3
  405146:	e7a2      	b.n	40508e <__mdiff+0x4e>

00405148 <__d2b>:
  405148:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40514c:	b082      	sub	sp, #8
  40514e:	2101      	movs	r1, #1
  405150:	461c      	mov	r4, r3
  405152:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405156:	4615      	mov	r5, r2
  405158:	9e08      	ldr	r6, [sp, #32]
  40515a:	f7ff fd57 	bl	404c0c <_Balloc>
  40515e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405162:	4680      	mov	r8, r0
  405164:	b10f      	cbz	r7, 40516a <__d2b+0x22>
  405166:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40516a:	9401      	str	r4, [sp, #4]
  40516c:	b31d      	cbz	r5, 4051b6 <__d2b+0x6e>
  40516e:	a802      	add	r0, sp, #8
  405170:	f840 5d08 	str.w	r5, [r0, #-8]!
  405174:	f7ff fdda 	bl	404d2c <__lo0bits>
  405178:	2800      	cmp	r0, #0
  40517a:	d134      	bne.n	4051e6 <__d2b+0x9e>
  40517c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405180:	f8c8 2014 	str.w	r2, [r8, #20]
  405184:	2b00      	cmp	r3, #0
  405186:	bf0c      	ite	eq
  405188:	2101      	moveq	r1, #1
  40518a:	2102      	movne	r1, #2
  40518c:	f8c8 3018 	str.w	r3, [r8, #24]
  405190:	f8c8 1010 	str.w	r1, [r8, #16]
  405194:	b9df      	cbnz	r7, 4051ce <__d2b+0x86>
  405196:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40519a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40519e:	6030      	str	r0, [r6, #0]
  4051a0:	6918      	ldr	r0, [r3, #16]
  4051a2:	f7ff fda3 	bl	404cec <__hi0bits>
  4051a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4051a8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4051ac:	6018      	str	r0, [r3, #0]
  4051ae:	4640      	mov	r0, r8
  4051b0:	b002      	add	sp, #8
  4051b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051b6:	a801      	add	r0, sp, #4
  4051b8:	f7ff fdb8 	bl	404d2c <__lo0bits>
  4051bc:	9b01      	ldr	r3, [sp, #4]
  4051be:	f8c8 3014 	str.w	r3, [r8, #20]
  4051c2:	2101      	movs	r1, #1
  4051c4:	3020      	adds	r0, #32
  4051c6:	f8c8 1010 	str.w	r1, [r8, #16]
  4051ca:	2f00      	cmp	r7, #0
  4051cc:	d0e3      	beq.n	405196 <__d2b+0x4e>
  4051ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4051d0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4051d4:	4407      	add	r7, r0
  4051d6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4051da:	6037      	str	r7, [r6, #0]
  4051dc:	6018      	str	r0, [r3, #0]
  4051de:	4640      	mov	r0, r8
  4051e0:	b002      	add	sp, #8
  4051e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051e6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  4051ea:	f1c0 0220 	rsb	r2, r0, #32
  4051ee:	fa03 f202 	lsl.w	r2, r3, r2
  4051f2:	430a      	orrs	r2, r1
  4051f4:	40c3      	lsrs	r3, r0
  4051f6:	9301      	str	r3, [sp, #4]
  4051f8:	f8c8 2014 	str.w	r2, [r8, #20]
  4051fc:	e7c2      	b.n	405184 <__d2b+0x3c>
  4051fe:	bf00      	nop

00405200 <_sbrk_r>:
  405200:	b538      	push	{r3, r4, r5, lr}
  405202:	4c07      	ldr	r4, [pc, #28]	; (405220 <_sbrk_r+0x20>)
  405204:	2300      	movs	r3, #0
  405206:	4605      	mov	r5, r0
  405208:	4608      	mov	r0, r1
  40520a:	6023      	str	r3, [r4, #0]
  40520c:	f7fc fab4 	bl	401778 <_sbrk>
  405210:	1c43      	adds	r3, r0, #1
  405212:	d000      	beq.n	405216 <_sbrk_r+0x16>
  405214:	bd38      	pop	{r3, r4, r5, pc}
  405216:	6823      	ldr	r3, [r4, #0]
  405218:	2b00      	cmp	r3, #0
  40521a:	d0fb      	beq.n	405214 <_sbrk_r+0x14>
  40521c:	602b      	str	r3, [r5, #0]
  40521e:	bd38      	pop	{r3, r4, r5, pc}
  405220:	20019574 	.word	0x20019574
	...

00405240 <strlen>:
  405240:	f890 f000 	pld	[r0]
  405244:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405248:	f020 0107 	bic.w	r1, r0, #7
  40524c:	f06f 0c00 	mvn.w	ip, #0
  405250:	f010 0407 	ands.w	r4, r0, #7
  405254:	f891 f020 	pld	[r1, #32]
  405258:	f040 8049 	bne.w	4052ee <strlen+0xae>
  40525c:	f04f 0400 	mov.w	r4, #0
  405260:	f06f 0007 	mvn.w	r0, #7
  405264:	e9d1 2300 	ldrd	r2, r3, [r1]
  405268:	f891 f040 	pld	[r1, #64]	; 0x40
  40526c:	f100 0008 	add.w	r0, r0, #8
  405270:	fa82 f24c 	uadd8	r2, r2, ip
  405274:	faa4 f28c 	sel	r2, r4, ip
  405278:	fa83 f34c 	uadd8	r3, r3, ip
  40527c:	faa2 f38c 	sel	r3, r2, ip
  405280:	bb4b      	cbnz	r3, 4052d6 <strlen+0x96>
  405282:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405286:	fa82 f24c 	uadd8	r2, r2, ip
  40528a:	f100 0008 	add.w	r0, r0, #8
  40528e:	faa4 f28c 	sel	r2, r4, ip
  405292:	fa83 f34c 	uadd8	r3, r3, ip
  405296:	faa2 f38c 	sel	r3, r2, ip
  40529a:	b9e3      	cbnz	r3, 4052d6 <strlen+0x96>
  40529c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4052a0:	fa82 f24c 	uadd8	r2, r2, ip
  4052a4:	f100 0008 	add.w	r0, r0, #8
  4052a8:	faa4 f28c 	sel	r2, r4, ip
  4052ac:	fa83 f34c 	uadd8	r3, r3, ip
  4052b0:	faa2 f38c 	sel	r3, r2, ip
  4052b4:	b97b      	cbnz	r3, 4052d6 <strlen+0x96>
  4052b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4052ba:	f101 0120 	add.w	r1, r1, #32
  4052be:	fa82 f24c 	uadd8	r2, r2, ip
  4052c2:	f100 0008 	add.w	r0, r0, #8
  4052c6:	faa4 f28c 	sel	r2, r4, ip
  4052ca:	fa83 f34c 	uadd8	r3, r3, ip
  4052ce:	faa2 f38c 	sel	r3, r2, ip
  4052d2:	2b00      	cmp	r3, #0
  4052d4:	d0c6      	beq.n	405264 <strlen+0x24>
  4052d6:	2a00      	cmp	r2, #0
  4052d8:	bf04      	itt	eq
  4052da:	3004      	addeq	r0, #4
  4052dc:	461a      	moveq	r2, r3
  4052de:	ba12      	rev	r2, r2
  4052e0:	fab2 f282 	clz	r2, r2
  4052e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4052e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4052ec:	4770      	bx	lr
  4052ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4052f2:	f004 0503 	and.w	r5, r4, #3
  4052f6:	f1c4 0000 	rsb	r0, r4, #0
  4052fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4052fe:	f014 0f04 	tst.w	r4, #4
  405302:	f891 f040 	pld	[r1, #64]	; 0x40
  405306:	fa0c f505 	lsl.w	r5, ip, r5
  40530a:	ea62 0205 	orn	r2, r2, r5
  40530e:	bf1c      	itt	ne
  405310:	ea63 0305 	ornne	r3, r3, r5
  405314:	4662      	movne	r2, ip
  405316:	f04f 0400 	mov.w	r4, #0
  40531a:	e7a9      	b.n	405270 <strlen+0x30>

0040531c <__ssprint_r>:
  40531c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405320:	6893      	ldr	r3, [r2, #8]
  405322:	b083      	sub	sp, #12
  405324:	4690      	mov	r8, r2
  405326:	2b00      	cmp	r3, #0
  405328:	d070      	beq.n	40540c <__ssprint_r+0xf0>
  40532a:	4682      	mov	sl, r0
  40532c:	460c      	mov	r4, r1
  40532e:	6817      	ldr	r7, [r2, #0]
  405330:	688d      	ldr	r5, [r1, #8]
  405332:	6808      	ldr	r0, [r1, #0]
  405334:	e042      	b.n	4053bc <__ssprint_r+0xa0>
  405336:	89a3      	ldrh	r3, [r4, #12]
  405338:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40533c:	d02e      	beq.n	40539c <__ssprint_r+0x80>
  40533e:	6965      	ldr	r5, [r4, #20]
  405340:	6921      	ldr	r1, [r4, #16]
  405342:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405346:	eba0 0b01 	sub.w	fp, r0, r1
  40534a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40534e:	f10b 0001 	add.w	r0, fp, #1
  405352:	106d      	asrs	r5, r5, #1
  405354:	4430      	add	r0, r6
  405356:	42a8      	cmp	r0, r5
  405358:	462a      	mov	r2, r5
  40535a:	bf84      	itt	hi
  40535c:	4605      	movhi	r5, r0
  40535e:	462a      	movhi	r2, r5
  405360:	055b      	lsls	r3, r3, #21
  405362:	d538      	bpl.n	4053d6 <__ssprint_r+0xba>
  405364:	4611      	mov	r1, r2
  405366:	4650      	mov	r0, sl
  405368:	f7ff f878 	bl	40445c <_malloc_r>
  40536c:	2800      	cmp	r0, #0
  40536e:	d03c      	beq.n	4053ea <__ssprint_r+0xce>
  405370:	465a      	mov	r2, fp
  405372:	6921      	ldr	r1, [r4, #16]
  405374:	9001      	str	r0, [sp, #4]
  405376:	f7ff fba3 	bl	404ac0 <memcpy>
  40537a:	89a2      	ldrh	r2, [r4, #12]
  40537c:	9b01      	ldr	r3, [sp, #4]
  40537e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405382:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405386:	81a2      	strh	r2, [r4, #12]
  405388:	eba5 020b 	sub.w	r2, r5, fp
  40538c:	eb03 000b 	add.w	r0, r3, fp
  405390:	6165      	str	r5, [r4, #20]
  405392:	6123      	str	r3, [r4, #16]
  405394:	6020      	str	r0, [r4, #0]
  405396:	60a2      	str	r2, [r4, #8]
  405398:	4635      	mov	r5, r6
  40539a:	46b3      	mov	fp, r6
  40539c:	465a      	mov	r2, fp
  40539e:	4649      	mov	r1, r9
  4053a0:	f000 fa18 	bl	4057d4 <memmove>
  4053a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4053a8:	68a2      	ldr	r2, [r4, #8]
  4053aa:	6820      	ldr	r0, [r4, #0]
  4053ac:	1b55      	subs	r5, r2, r5
  4053ae:	4458      	add	r0, fp
  4053b0:	1b9e      	subs	r6, r3, r6
  4053b2:	60a5      	str	r5, [r4, #8]
  4053b4:	6020      	str	r0, [r4, #0]
  4053b6:	f8c8 6008 	str.w	r6, [r8, #8]
  4053ba:	b33e      	cbz	r6, 40540c <__ssprint_r+0xf0>
  4053bc:	687e      	ldr	r6, [r7, #4]
  4053be:	463b      	mov	r3, r7
  4053c0:	3708      	adds	r7, #8
  4053c2:	2e00      	cmp	r6, #0
  4053c4:	d0fa      	beq.n	4053bc <__ssprint_r+0xa0>
  4053c6:	42ae      	cmp	r6, r5
  4053c8:	f8d3 9000 	ldr.w	r9, [r3]
  4053cc:	46ab      	mov	fp, r5
  4053ce:	d2b2      	bcs.n	405336 <__ssprint_r+0x1a>
  4053d0:	4635      	mov	r5, r6
  4053d2:	46b3      	mov	fp, r6
  4053d4:	e7e2      	b.n	40539c <__ssprint_r+0x80>
  4053d6:	4650      	mov	r0, sl
  4053d8:	f000 fa60 	bl	40589c <_realloc_r>
  4053dc:	4603      	mov	r3, r0
  4053de:	2800      	cmp	r0, #0
  4053e0:	d1d2      	bne.n	405388 <__ssprint_r+0x6c>
  4053e2:	6921      	ldr	r1, [r4, #16]
  4053e4:	4650      	mov	r0, sl
  4053e6:	f000 f8f9 	bl	4055dc <_free_r>
  4053ea:	230c      	movs	r3, #12
  4053ec:	f8ca 3000 	str.w	r3, [sl]
  4053f0:	89a3      	ldrh	r3, [r4, #12]
  4053f2:	2200      	movs	r2, #0
  4053f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4053f8:	f04f 30ff 	mov.w	r0, #4294967295
  4053fc:	81a3      	strh	r3, [r4, #12]
  4053fe:	f8c8 2008 	str.w	r2, [r8, #8]
  405402:	f8c8 2004 	str.w	r2, [r8, #4]
  405406:	b003      	add	sp, #12
  405408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40540c:	2000      	movs	r0, #0
  40540e:	f8c8 0004 	str.w	r0, [r8, #4]
  405412:	b003      	add	sp, #12
  405414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405418 <__register_exitproc>:
  405418:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40541c:	4d2c      	ldr	r5, [pc, #176]	; (4054d0 <__register_exitproc+0xb8>)
  40541e:	4606      	mov	r6, r0
  405420:	6828      	ldr	r0, [r5, #0]
  405422:	4698      	mov	r8, r3
  405424:	460f      	mov	r7, r1
  405426:	4691      	mov	r9, r2
  405428:	f7ff f814 	bl	404454 <__retarget_lock_acquire_recursive>
  40542c:	4b29      	ldr	r3, [pc, #164]	; (4054d4 <__register_exitproc+0xbc>)
  40542e:	681c      	ldr	r4, [r3, #0]
  405430:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405434:	2b00      	cmp	r3, #0
  405436:	d03e      	beq.n	4054b6 <__register_exitproc+0x9e>
  405438:	685a      	ldr	r2, [r3, #4]
  40543a:	2a1f      	cmp	r2, #31
  40543c:	dc1c      	bgt.n	405478 <__register_exitproc+0x60>
  40543e:	f102 0e01 	add.w	lr, r2, #1
  405442:	b176      	cbz	r6, 405462 <__register_exitproc+0x4a>
  405444:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405448:	2401      	movs	r4, #1
  40544a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40544e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405452:	4094      	lsls	r4, r2
  405454:	4320      	orrs	r0, r4
  405456:	2e02      	cmp	r6, #2
  405458:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40545c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405460:	d023      	beq.n	4054aa <__register_exitproc+0x92>
  405462:	3202      	adds	r2, #2
  405464:	f8c3 e004 	str.w	lr, [r3, #4]
  405468:	6828      	ldr	r0, [r5, #0]
  40546a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40546e:	f7fe fff3 	bl	404458 <__retarget_lock_release_recursive>
  405472:	2000      	movs	r0, #0
  405474:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405478:	4b17      	ldr	r3, [pc, #92]	; (4054d8 <__register_exitproc+0xc0>)
  40547a:	b30b      	cbz	r3, 4054c0 <__register_exitproc+0xa8>
  40547c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405480:	f3af 8000 	nop.w
  405484:	4603      	mov	r3, r0
  405486:	b1d8      	cbz	r0, 4054c0 <__register_exitproc+0xa8>
  405488:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40548c:	6002      	str	r2, [r0, #0]
  40548e:	2100      	movs	r1, #0
  405490:	6041      	str	r1, [r0, #4]
  405492:	460a      	mov	r2, r1
  405494:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405498:	f04f 0e01 	mov.w	lr, #1
  40549c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4054a0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4054a4:	2e00      	cmp	r6, #0
  4054a6:	d0dc      	beq.n	405462 <__register_exitproc+0x4a>
  4054a8:	e7cc      	b.n	405444 <__register_exitproc+0x2c>
  4054aa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4054ae:	430c      	orrs	r4, r1
  4054b0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4054b4:	e7d5      	b.n	405462 <__register_exitproc+0x4a>
  4054b6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4054ba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4054be:	e7bb      	b.n	405438 <__register_exitproc+0x20>
  4054c0:	6828      	ldr	r0, [r5, #0]
  4054c2:	f7fe ffc9 	bl	404458 <__retarget_lock_release_recursive>
  4054c6:	f04f 30ff 	mov.w	r0, #4294967295
  4054ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4054ce:	bf00      	nop
  4054d0:	20000440 	.word	0x20000440
  4054d4:	00407538 	.word	0x00407538
  4054d8:	00000000 	.word	0x00000000

004054dc <_calloc_r>:
  4054dc:	b510      	push	{r4, lr}
  4054de:	fb02 f101 	mul.w	r1, r2, r1
  4054e2:	f7fe ffbb 	bl	40445c <_malloc_r>
  4054e6:	4604      	mov	r4, r0
  4054e8:	b1d8      	cbz	r0, 405522 <_calloc_r+0x46>
  4054ea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4054ee:	f022 0203 	bic.w	r2, r2, #3
  4054f2:	3a04      	subs	r2, #4
  4054f4:	2a24      	cmp	r2, #36	; 0x24
  4054f6:	d818      	bhi.n	40552a <_calloc_r+0x4e>
  4054f8:	2a13      	cmp	r2, #19
  4054fa:	d914      	bls.n	405526 <_calloc_r+0x4a>
  4054fc:	2300      	movs	r3, #0
  4054fe:	2a1b      	cmp	r2, #27
  405500:	6003      	str	r3, [r0, #0]
  405502:	6043      	str	r3, [r0, #4]
  405504:	d916      	bls.n	405534 <_calloc_r+0x58>
  405506:	2a24      	cmp	r2, #36	; 0x24
  405508:	6083      	str	r3, [r0, #8]
  40550a:	60c3      	str	r3, [r0, #12]
  40550c:	bf11      	iteee	ne
  40550e:	f100 0210 	addne.w	r2, r0, #16
  405512:	6103      	streq	r3, [r0, #16]
  405514:	6143      	streq	r3, [r0, #20]
  405516:	f100 0218 	addeq.w	r2, r0, #24
  40551a:	2300      	movs	r3, #0
  40551c:	6013      	str	r3, [r2, #0]
  40551e:	6053      	str	r3, [r2, #4]
  405520:	6093      	str	r3, [r2, #8]
  405522:	4620      	mov	r0, r4
  405524:	bd10      	pop	{r4, pc}
  405526:	4602      	mov	r2, r0
  405528:	e7f7      	b.n	40551a <_calloc_r+0x3e>
  40552a:	2100      	movs	r1, #0
  40552c:	f7fc fa22 	bl	401974 <memset>
  405530:	4620      	mov	r0, r4
  405532:	bd10      	pop	{r4, pc}
  405534:	f100 0208 	add.w	r2, r0, #8
  405538:	e7ef      	b.n	40551a <_calloc_r+0x3e>
  40553a:	bf00      	nop

0040553c <_malloc_trim_r>:
  40553c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40553e:	4f24      	ldr	r7, [pc, #144]	; (4055d0 <_malloc_trim_r+0x94>)
  405540:	460c      	mov	r4, r1
  405542:	4606      	mov	r6, r0
  405544:	f7ff fb56 	bl	404bf4 <__malloc_lock>
  405548:	68bb      	ldr	r3, [r7, #8]
  40554a:	685d      	ldr	r5, [r3, #4]
  40554c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405550:	310f      	adds	r1, #15
  405552:	f025 0503 	bic.w	r5, r5, #3
  405556:	4429      	add	r1, r5
  405558:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40555c:	f021 010f 	bic.w	r1, r1, #15
  405560:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405564:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405568:	db07      	blt.n	40557a <_malloc_trim_r+0x3e>
  40556a:	2100      	movs	r1, #0
  40556c:	4630      	mov	r0, r6
  40556e:	f7ff fe47 	bl	405200 <_sbrk_r>
  405572:	68bb      	ldr	r3, [r7, #8]
  405574:	442b      	add	r3, r5
  405576:	4298      	cmp	r0, r3
  405578:	d004      	beq.n	405584 <_malloc_trim_r+0x48>
  40557a:	4630      	mov	r0, r6
  40557c:	f7ff fb40 	bl	404c00 <__malloc_unlock>
  405580:	2000      	movs	r0, #0
  405582:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405584:	4261      	negs	r1, r4
  405586:	4630      	mov	r0, r6
  405588:	f7ff fe3a 	bl	405200 <_sbrk_r>
  40558c:	3001      	adds	r0, #1
  40558e:	d00d      	beq.n	4055ac <_malloc_trim_r+0x70>
  405590:	4b10      	ldr	r3, [pc, #64]	; (4055d4 <_malloc_trim_r+0x98>)
  405592:	68ba      	ldr	r2, [r7, #8]
  405594:	6819      	ldr	r1, [r3, #0]
  405596:	1b2d      	subs	r5, r5, r4
  405598:	f045 0501 	orr.w	r5, r5, #1
  40559c:	4630      	mov	r0, r6
  40559e:	1b09      	subs	r1, r1, r4
  4055a0:	6055      	str	r5, [r2, #4]
  4055a2:	6019      	str	r1, [r3, #0]
  4055a4:	f7ff fb2c 	bl	404c00 <__malloc_unlock>
  4055a8:	2001      	movs	r0, #1
  4055aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055ac:	2100      	movs	r1, #0
  4055ae:	4630      	mov	r0, r6
  4055b0:	f7ff fe26 	bl	405200 <_sbrk_r>
  4055b4:	68ba      	ldr	r2, [r7, #8]
  4055b6:	1a83      	subs	r3, r0, r2
  4055b8:	2b0f      	cmp	r3, #15
  4055ba:	ddde      	ble.n	40557a <_malloc_trim_r+0x3e>
  4055bc:	4c06      	ldr	r4, [pc, #24]	; (4055d8 <_malloc_trim_r+0x9c>)
  4055be:	4905      	ldr	r1, [pc, #20]	; (4055d4 <_malloc_trim_r+0x98>)
  4055c0:	6824      	ldr	r4, [r4, #0]
  4055c2:	f043 0301 	orr.w	r3, r3, #1
  4055c6:	1b00      	subs	r0, r0, r4
  4055c8:	6053      	str	r3, [r2, #4]
  4055ca:	6008      	str	r0, [r1, #0]
  4055cc:	e7d5      	b.n	40557a <_malloc_trim_r+0x3e>
  4055ce:	bf00      	nop
  4055d0:	20000444 	.word	0x20000444
  4055d4:	20000a7c 	.word	0x20000a7c
  4055d8:	2000084c 	.word	0x2000084c

004055dc <_free_r>:
  4055dc:	2900      	cmp	r1, #0
  4055de:	d044      	beq.n	40566a <_free_r+0x8e>
  4055e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4055e4:	460d      	mov	r5, r1
  4055e6:	4680      	mov	r8, r0
  4055e8:	f7ff fb04 	bl	404bf4 <__malloc_lock>
  4055ec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4055f0:	4969      	ldr	r1, [pc, #420]	; (405798 <_free_r+0x1bc>)
  4055f2:	f027 0301 	bic.w	r3, r7, #1
  4055f6:	f1a5 0408 	sub.w	r4, r5, #8
  4055fa:	18e2      	adds	r2, r4, r3
  4055fc:	688e      	ldr	r6, [r1, #8]
  4055fe:	6850      	ldr	r0, [r2, #4]
  405600:	42b2      	cmp	r2, r6
  405602:	f020 0003 	bic.w	r0, r0, #3
  405606:	d05e      	beq.n	4056c6 <_free_r+0xea>
  405608:	07fe      	lsls	r6, r7, #31
  40560a:	6050      	str	r0, [r2, #4]
  40560c:	d40b      	bmi.n	405626 <_free_r+0x4a>
  40560e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405612:	1be4      	subs	r4, r4, r7
  405614:	f101 0e08 	add.w	lr, r1, #8
  405618:	68a5      	ldr	r5, [r4, #8]
  40561a:	4575      	cmp	r5, lr
  40561c:	443b      	add	r3, r7
  40561e:	d06d      	beq.n	4056fc <_free_r+0x120>
  405620:	68e7      	ldr	r7, [r4, #12]
  405622:	60ef      	str	r7, [r5, #12]
  405624:	60bd      	str	r5, [r7, #8]
  405626:	1815      	adds	r5, r2, r0
  405628:	686d      	ldr	r5, [r5, #4]
  40562a:	07ed      	lsls	r5, r5, #31
  40562c:	d53e      	bpl.n	4056ac <_free_r+0xd0>
  40562e:	f043 0201 	orr.w	r2, r3, #1
  405632:	6062      	str	r2, [r4, #4]
  405634:	50e3      	str	r3, [r4, r3]
  405636:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40563a:	d217      	bcs.n	40566c <_free_r+0x90>
  40563c:	08db      	lsrs	r3, r3, #3
  40563e:	1c58      	adds	r0, r3, #1
  405640:	109a      	asrs	r2, r3, #2
  405642:	684d      	ldr	r5, [r1, #4]
  405644:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405648:	60a7      	str	r7, [r4, #8]
  40564a:	2301      	movs	r3, #1
  40564c:	4093      	lsls	r3, r2
  40564e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405652:	432b      	orrs	r3, r5
  405654:	3a08      	subs	r2, #8
  405656:	60e2      	str	r2, [r4, #12]
  405658:	604b      	str	r3, [r1, #4]
  40565a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40565e:	60fc      	str	r4, [r7, #12]
  405660:	4640      	mov	r0, r8
  405662:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405666:	f7ff bacb 	b.w	404c00 <__malloc_unlock>
  40566a:	4770      	bx	lr
  40566c:	0a5a      	lsrs	r2, r3, #9
  40566e:	2a04      	cmp	r2, #4
  405670:	d852      	bhi.n	405718 <_free_r+0x13c>
  405672:	099a      	lsrs	r2, r3, #6
  405674:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405678:	00ff      	lsls	r7, r7, #3
  40567a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40567e:	19c8      	adds	r0, r1, r7
  405680:	59ca      	ldr	r2, [r1, r7]
  405682:	3808      	subs	r0, #8
  405684:	4290      	cmp	r0, r2
  405686:	d04f      	beq.n	405728 <_free_r+0x14c>
  405688:	6851      	ldr	r1, [r2, #4]
  40568a:	f021 0103 	bic.w	r1, r1, #3
  40568e:	428b      	cmp	r3, r1
  405690:	d232      	bcs.n	4056f8 <_free_r+0x11c>
  405692:	6892      	ldr	r2, [r2, #8]
  405694:	4290      	cmp	r0, r2
  405696:	d1f7      	bne.n	405688 <_free_r+0xac>
  405698:	68c3      	ldr	r3, [r0, #12]
  40569a:	60a0      	str	r0, [r4, #8]
  40569c:	60e3      	str	r3, [r4, #12]
  40569e:	609c      	str	r4, [r3, #8]
  4056a0:	60c4      	str	r4, [r0, #12]
  4056a2:	4640      	mov	r0, r8
  4056a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4056a8:	f7ff baaa 	b.w	404c00 <__malloc_unlock>
  4056ac:	6895      	ldr	r5, [r2, #8]
  4056ae:	4f3b      	ldr	r7, [pc, #236]	; (40579c <_free_r+0x1c0>)
  4056b0:	42bd      	cmp	r5, r7
  4056b2:	4403      	add	r3, r0
  4056b4:	d040      	beq.n	405738 <_free_r+0x15c>
  4056b6:	68d0      	ldr	r0, [r2, #12]
  4056b8:	60e8      	str	r0, [r5, #12]
  4056ba:	f043 0201 	orr.w	r2, r3, #1
  4056be:	6085      	str	r5, [r0, #8]
  4056c0:	6062      	str	r2, [r4, #4]
  4056c2:	50e3      	str	r3, [r4, r3]
  4056c4:	e7b7      	b.n	405636 <_free_r+0x5a>
  4056c6:	07ff      	lsls	r7, r7, #31
  4056c8:	4403      	add	r3, r0
  4056ca:	d407      	bmi.n	4056dc <_free_r+0x100>
  4056cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4056d0:	1aa4      	subs	r4, r4, r2
  4056d2:	4413      	add	r3, r2
  4056d4:	68a0      	ldr	r0, [r4, #8]
  4056d6:	68e2      	ldr	r2, [r4, #12]
  4056d8:	60c2      	str	r2, [r0, #12]
  4056da:	6090      	str	r0, [r2, #8]
  4056dc:	4a30      	ldr	r2, [pc, #192]	; (4057a0 <_free_r+0x1c4>)
  4056de:	6812      	ldr	r2, [r2, #0]
  4056e0:	f043 0001 	orr.w	r0, r3, #1
  4056e4:	4293      	cmp	r3, r2
  4056e6:	6060      	str	r0, [r4, #4]
  4056e8:	608c      	str	r4, [r1, #8]
  4056ea:	d3b9      	bcc.n	405660 <_free_r+0x84>
  4056ec:	4b2d      	ldr	r3, [pc, #180]	; (4057a4 <_free_r+0x1c8>)
  4056ee:	4640      	mov	r0, r8
  4056f0:	6819      	ldr	r1, [r3, #0]
  4056f2:	f7ff ff23 	bl	40553c <_malloc_trim_r>
  4056f6:	e7b3      	b.n	405660 <_free_r+0x84>
  4056f8:	4610      	mov	r0, r2
  4056fa:	e7cd      	b.n	405698 <_free_r+0xbc>
  4056fc:	1811      	adds	r1, r2, r0
  4056fe:	6849      	ldr	r1, [r1, #4]
  405700:	07c9      	lsls	r1, r1, #31
  405702:	d444      	bmi.n	40578e <_free_r+0x1b2>
  405704:	6891      	ldr	r1, [r2, #8]
  405706:	68d2      	ldr	r2, [r2, #12]
  405708:	60ca      	str	r2, [r1, #12]
  40570a:	4403      	add	r3, r0
  40570c:	f043 0001 	orr.w	r0, r3, #1
  405710:	6091      	str	r1, [r2, #8]
  405712:	6060      	str	r0, [r4, #4]
  405714:	50e3      	str	r3, [r4, r3]
  405716:	e7a3      	b.n	405660 <_free_r+0x84>
  405718:	2a14      	cmp	r2, #20
  40571a:	d816      	bhi.n	40574a <_free_r+0x16e>
  40571c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405720:	00ff      	lsls	r7, r7, #3
  405722:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405726:	e7aa      	b.n	40567e <_free_r+0xa2>
  405728:	10aa      	asrs	r2, r5, #2
  40572a:	2301      	movs	r3, #1
  40572c:	684d      	ldr	r5, [r1, #4]
  40572e:	4093      	lsls	r3, r2
  405730:	432b      	orrs	r3, r5
  405732:	604b      	str	r3, [r1, #4]
  405734:	4603      	mov	r3, r0
  405736:	e7b0      	b.n	40569a <_free_r+0xbe>
  405738:	f043 0201 	orr.w	r2, r3, #1
  40573c:	614c      	str	r4, [r1, #20]
  40573e:	610c      	str	r4, [r1, #16]
  405740:	60e5      	str	r5, [r4, #12]
  405742:	60a5      	str	r5, [r4, #8]
  405744:	6062      	str	r2, [r4, #4]
  405746:	50e3      	str	r3, [r4, r3]
  405748:	e78a      	b.n	405660 <_free_r+0x84>
  40574a:	2a54      	cmp	r2, #84	; 0x54
  40574c:	d806      	bhi.n	40575c <_free_r+0x180>
  40574e:	0b1a      	lsrs	r2, r3, #12
  405750:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405754:	00ff      	lsls	r7, r7, #3
  405756:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40575a:	e790      	b.n	40567e <_free_r+0xa2>
  40575c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405760:	d806      	bhi.n	405770 <_free_r+0x194>
  405762:	0bda      	lsrs	r2, r3, #15
  405764:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405768:	00ff      	lsls	r7, r7, #3
  40576a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40576e:	e786      	b.n	40567e <_free_r+0xa2>
  405770:	f240 5054 	movw	r0, #1364	; 0x554
  405774:	4282      	cmp	r2, r0
  405776:	d806      	bhi.n	405786 <_free_r+0x1aa>
  405778:	0c9a      	lsrs	r2, r3, #18
  40577a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40577e:	00ff      	lsls	r7, r7, #3
  405780:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405784:	e77b      	b.n	40567e <_free_r+0xa2>
  405786:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40578a:	257e      	movs	r5, #126	; 0x7e
  40578c:	e777      	b.n	40567e <_free_r+0xa2>
  40578e:	f043 0101 	orr.w	r1, r3, #1
  405792:	6061      	str	r1, [r4, #4]
  405794:	6013      	str	r3, [r2, #0]
  405796:	e763      	b.n	405660 <_free_r+0x84>
  405798:	20000444 	.word	0x20000444
  40579c:	2000044c 	.word	0x2000044c
  4057a0:	20000850 	.word	0x20000850
  4057a4:	20000aac 	.word	0x20000aac

004057a8 <__ascii_mbtowc>:
  4057a8:	b082      	sub	sp, #8
  4057aa:	b149      	cbz	r1, 4057c0 <__ascii_mbtowc+0x18>
  4057ac:	b15a      	cbz	r2, 4057c6 <__ascii_mbtowc+0x1e>
  4057ae:	b16b      	cbz	r3, 4057cc <__ascii_mbtowc+0x24>
  4057b0:	7813      	ldrb	r3, [r2, #0]
  4057b2:	600b      	str	r3, [r1, #0]
  4057b4:	7812      	ldrb	r2, [r2, #0]
  4057b6:	1c10      	adds	r0, r2, #0
  4057b8:	bf18      	it	ne
  4057ba:	2001      	movne	r0, #1
  4057bc:	b002      	add	sp, #8
  4057be:	4770      	bx	lr
  4057c0:	a901      	add	r1, sp, #4
  4057c2:	2a00      	cmp	r2, #0
  4057c4:	d1f3      	bne.n	4057ae <__ascii_mbtowc+0x6>
  4057c6:	4610      	mov	r0, r2
  4057c8:	b002      	add	sp, #8
  4057ca:	4770      	bx	lr
  4057cc:	f06f 0001 	mvn.w	r0, #1
  4057d0:	e7f4      	b.n	4057bc <__ascii_mbtowc+0x14>
  4057d2:	bf00      	nop

004057d4 <memmove>:
  4057d4:	4288      	cmp	r0, r1
  4057d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4057d8:	d90d      	bls.n	4057f6 <memmove+0x22>
  4057da:	188b      	adds	r3, r1, r2
  4057dc:	4298      	cmp	r0, r3
  4057de:	d20a      	bcs.n	4057f6 <memmove+0x22>
  4057e0:	1884      	adds	r4, r0, r2
  4057e2:	2a00      	cmp	r2, #0
  4057e4:	d051      	beq.n	40588a <memmove+0xb6>
  4057e6:	4622      	mov	r2, r4
  4057e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4057ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4057f0:	4299      	cmp	r1, r3
  4057f2:	d1f9      	bne.n	4057e8 <memmove+0x14>
  4057f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4057f6:	2a0f      	cmp	r2, #15
  4057f8:	d948      	bls.n	40588c <memmove+0xb8>
  4057fa:	ea41 0300 	orr.w	r3, r1, r0
  4057fe:	079b      	lsls	r3, r3, #30
  405800:	d146      	bne.n	405890 <memmove+0xbc>
  405802:	f100 0410 	add.w	r4, r0, #16
  405806:	f101 0310 	add.w	r3, r1, #16
  40580a:	4615      	mov	r5, r2
  40580c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405810:	f844 6c10 	str.w	r6, [r4, #-16]
  405814:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405818:	f844 6c0c 	str.w	r6, [r4, #-12]
  40581c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405820:	f844 6c08 	str.w	r6, [r4, #-8]
  405824:	3d10      	subs	r5, #16
  405826:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40582a:	f844 6c04 	str.w	r6, [r4, #-4]
  40582e:	2d0f      	cmp	r5, #15
  405830:	f103 0310 	add.w	r3, r3, #16
  405834:	f104 0410 	add.w	r4, r4, #16
  405838:	d8e8      	bhi.n	40580c <memmove+0x38>
  40583a:	f1a2 0310 	sub.w	r3, r2, #16
  40583e:	f023 030f 	bic.w	r3, r3, #15
  405842:	f002 0e0f 	and.w	lr, r2, #15
  405846:	3310      	adds	r3, #16
  405848:	f1be 0f03 	cmp.w	lr, #3
  40584c:	4419      	add	r1, r3
  40584e:	4403      	add	r3, r0
  405850:	d921      	bls.n	405896 <memmove+0xc2>
  405852:	1f1e      	subs	r6, r3, #4
  405854:	460d      	mov	r5, r1
  405856:	4674      	mov	r4, lr
  405858:	3c04      	subs	r4, #4
  40585a:	f855 7b04 	ldr.w	r7, [r5], #4
  40585e:	f846 7f04 	str.w	r7, [r6, #4]!
  405862:	2c03      	cmp	r4, #3
  405864:	d8f8      	bhi.n	405858 <memmove+0x84>
  405866:	f1ae 0404 	sub.w	r4, lr, #4
  40586a:	f024 0403 	bic.w	r4, r4, #3
  40586e:	3404      	adds	r4, #4
  405870:	4421      	add	r1, r4
  405872:	4423      	add	r3, r4
  405874:	f002 0203 	and.w	r2, r2, #3
  405878:	b162      	cbz	r2, 405894 <memmove+0xc0>
  40587a:	3b01      	subs	r3, #1
  40587c:	440a      	add	r2, r1
  40587e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405882:	f803 4f01 	strb.w	r4, [r3, #1]!
  405886:	428a      	cmp	r2, r1
  405888:	d1f9      	bne.n	40587e <memmove+0xaa>
  40588a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40588c:	4603      	mov	r3, r0
  40588e:	e7f3      	b.n	405878 <memmove+0xa4>
  405890:	4603      	mov	r3, r0
  405892:	e7f2      	b.n	40587a <memmove+0xa6>
  405894:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405896:	4672      	mov	r2, lr
  405898:	e7ee      	b.n	405878 <memmove+0xa4>
  40589a:	bf00      	nop

0040589c <_realloc_r>:
  40589c:	2900      	cmp	r1, #0
  40589e:	f000 8095 	beq.w	4059cc <_realloc_r+0x130>
  4058a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4058a6:	460d      	mov	r5, r1
  4058a8:	4616      	mov	r6, r2
  4058aa:	b083      	sub	sp, #12
  4058ac:	4680      	mov	r8, r0
  4058ae:	f106 070b 	add.w	r7, r6, #11
  4058b2:	f7ff f99f 	bl	404bf4 <__malloc_lock>
  4058b6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4058ba:	2f16      	cmp	r7, #22
  4058bc:	f02e 0403 	bic.w	r4, lr, #3
  4058c0:	f1a5 0908 	sub.w	r9, r5, #8
  4058c4:	d83c      	bhi.n	405940 <_realloc_r+0xa4>
  4058c6:	2210      	movs	r2, #16
  4058c8:	4617      	mov	r7, r2
  4058ca:	42be      	cmp	r6, r7
  4058cc:	d83d      	bhi.n	40594a <_realloc_r+0xae>
  4058ce:	4294      	cmp	r4, r2
  4058d0:	da43      	bge.n	40595a <_realloc_r+0xbe>
  4058d2:	4bc4      	ldr	r3, [pc, #784]	; (405be4 <_realloc_r+0x348>)
  4058d4:	6899      	ldr	r1, [r3, #8]
  4058d6:	eb09 0004 	add.w	r0, r9, r4
  4058da:	4288      	cmp	r0, r1
  4058dc:	f000 80b4 	beq.w	405a48 <_realloc_r+0x1ac>
  4058e0:	6843      	ldr	r3, [r0, #4]
  4058e2:	f023 0101 	bic.w	r1, r3, #1
  4058e6:	4401      	add	r1, r0
  4058e8:	6849      	ldr	r1, [r1, #4]
  4058ea:	07c9      	lsls	r1, r1, #31
  4058ec:	d54c      	bpl.n	405988 <_realloc_r+0xec>
  4058ee:	f01e 0f01 	tst.w	lr, #1
  4058f2:	f000 809b 	beq.w	405a2c <_realloc_r+0x190>
  4058f6:	4631      	mov	r1, r6
  4058f8:	4640      	mov	r0, r8
  4058fa:	f7fe fdaf 	bl	40445c <_malloc_r>
  4058fe:	4606      	mov	r6, r0
  405900:	2800      	cmp	r0, #0
  405902:	d03a      	beq.n	40597a <_realloc_r+0xde>
  405904:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405908:	f023 0301 	bic.w	r3, r3, #1
  40590c:	444b      	add	r3, r9
  40590e:	f1a0 0208 	sub.w	r2, r0, #8
  405912:	429a      	cmp	r2, r3
  405914:	f000 8121 	beq.w	405b5a <_realloc_r+0x2be>
  405918:	1f22      	subs	r2, r4, #4
  40591a:	2a24      	cmp	r2, #36	; 0x24
  40591c:	f200 8107 	bhi.w	405b2e <_realloc_r+0x292>
  405920:	2a13      	cmp	r2, #19
  405922:	f200 80db 	bhi.w	405adc <_realloc_r+0x240>
  405926:	4603      	mov	r3, r0
  405928:	462a      	mov	r2, r5
  40592a:	6811      	ldr	r1, [r2, #0]
  40592c:	6019      	str	r1, [r3, #0]
  40592e:	6851      	ldr	r1, [r2, #4]
  405930:	6059      	str	r1, [r3, #4]
  405932:	6892      	ldr	r2, [r2, #8]
  405934:	609a      	str	r2, [r3, #8]
  405936:	4629      	mov	r1, r5
  405938:	4640      	mov	r0, r8
  40593a:	f7ff fe4f 	bl	4055dc <_free_r>
  40593e:	e01c      	b.n	40597a <_realloc_r+0xde>
  405940:	f027 0707 	bic.w	r7, r7, #7
  405944:	2f00      	cmp	r7, #0
  405946:	463a      	mov	r2, r7
  405948:	dabf      	bge.n	4058ca <_realloc_r+0x2e>
  40594a:	2600      	movs	r6, #0
  40594c:	230c      	movs	r3, #12
  40594e:	4630      	mov	r0, r6
  405950:	f8c8 3000 	str.w	r3, [r8]
  405954:	b003      	add	sp, #12
  405956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40595a:	462e      	mov	r6, r5
  40595c:	1be3      	subs	r3, r4, r7
  40595e:	2b0f      	cmp	r3, #15
  405960:	d81e      	bhi.n	4059a0 <_realloc_r+0x104>
  405962:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405966:	f003 0301 	and.w	r3, r3, #1
  40596a:	4323      	orrs	r3, r4
  40596c:	444c      	add	r4, r9
  40596e:	f8c9 3004 	str.w	r3, [r9, #4]
  405972:	6863      	ldr	r3, [r4, #4]
  405974:	f043 0301 	orr.w	r3, r3, #1
  405978:	6063      	str	r3, [r4, #4]
  40597a:	4640      	mov	r0, r8
  40597c:	f7ff f940 	bl	404c00 <__malloc_unlock>
  405980:	4630      	mov	r0, r6
  405982:	b003      	add	sp, #12
  405984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405988:	f023 0303 	bic.w	r3, r3, #3
  40598c:	18e1      	adds	r1, r4, r3
  40598e:	4291      	cmp	r1, r2
  405990:	db1f      	blt.n	4059d2 <_realloc_r+0x136>
  405992:	68c3      	ldr	r3, [r0, #12]
  405994:	6882      	ldr	r2, [r0, #8]
  405996:	462e      	mov	r6, r5
  405998:	60d3      	str	r3, [r2, #12]
  40599a:	460c      	mov	r4, r1
  40599c:	609a      	str	r2, [r3, #8]
  40599e:	e7dd      	b.n	40595c <_realloc_r+0xc0>
  4059a0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4059a4:	eb09 0107 	add.w	r1, r9, r7
  4059a8:	f002 0201 	and.w	r2, r2, #1
  4059ac:	444c      	add	r4, r9
  4059ae:	f043 0301 	orr.w	r3, r3, #1
  4059b2:	4317      	orrs	r7, r2
  4059b4:	f8c9 7004 	str.w	r7, [r9, #4]
  4059b8:	604b      	str	r3, [r1, #4]
  4059ba:	6863      	ldr	r3, [r4, #4]
  4059bc:	f043 0301 	orr.w	r3, r3, #1
  4059c0:	3108      	adds	r1, #8
  4059c2:	6063      	str	r3, [r4, #4]
  4059c4:	4640      	mov	r0, r8
  4059c6:	f7ff fe09 	bl	4055dc <_free_r>
  4059ca:	e7d6      	b.n	40597a <_realloc_r+0xde>
  4059cc:	4611      	mov	r1, r2
  4059ce:	f7fe bd45 	b.w	40445c <_malloc_r>
  4059d2:	f01e 0f01 	tst.w	lr, #1
  4059d6:	d18e      	bne.n	4058f6 <_realloc_r+0x5a>
  4059d8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4059dc:	eba9 0a01 	sub.w	sl, r9, r1
  4059e0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4059e4:	f021 0103 	bic.w	r1, r1, #3
  4059e8:	440b      	add	r3, r1
  4059ea:	4423      	add	r3, r4
  4059ec:	4293      	cmp	r3, r2
  4059ee:	db25      	blt.n	405a3c <_realloc_r+0x1a0>
  4059f0:	68c2      	ldr	r2, [r0, #12]
  4059f2:	6881      	ldr	r1, [r0, #8]
  4059f4:	4656      	mov	r6, sl
  4059f6:	60ca      	str	r2, [r1, #12]
  4059f8:	6091      	str	r1, [r2, #8]
  4059fa:	f8da 100c 	ldr.w	r1, [sl, #12]
  4059fe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405a02:	1f22      	subs	r2, r4, #4
  405a04:	2a24      	cmp	r2, #36	; 0x24
  405a06:	60c1      	str	r1, [r0, #12]
  405a08:	6088      	str	r0, [r1, #8]
  405a0a:	f200 8094 	bhi.w	405b36 <_realloc_r+0x29a>
  405a0e:	2a13      	cmp	r2, #19
  405a10:	d96f      	bls.n	405af2 <_realloc_r+0x256>
  405a12:	6829      	ldr	r1, [r5, #0]
  405a14:	f8ca 1008 	str.w	r1, [sl, #8]
  405a18:	6869      	ldr	r1, [r5, #4]
  405a1a:	f8ca 100c 	str.w	r1, [sl, #12]
  405a1e:	2a1b      	cmp	r2, #27
  405a20:	f200 80a2 	bhi.w	405b68 <_realloc_r+0x2cc>
  405a24:	3508      	adds	r5, #8
  405a26:	f10a 0210 	add.w	r2, sl, #16
  405a2a:	e063      	b.n	405af4 <_realloc_r+0x258>
  405a2c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405a30:	eba9 0a03 	sub.w	sl, r9, r3
  405a34:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a38:	f021 0103 	bic.w	r1, r1, #3
  405a3c:	1863      	adds	r3, r4, r1
  405a3e:	4293      	cmp	r3, r2
  405a40:	f6ff af59 	blt.w	4058f6 <_realloc_r+0x5a>
  405a44:	4656      	mov	r6, sl
  405a46:	e7d8      	b.n	4059fa <_realloc_r+0x15e>
  405a48:	6841      	ldr	r1, [r0, #4]
  405a4a:	f021 0b03 	bic.w	fp, r1, #3
  405a4e:	44a3      	add	fp, r4
  405a50:	f107 0010 	add.w	r0, r7, #16
  405a54:	4583      	cmp	fp, r0
  405a56:	da56      	bge.n	405b06 <_realloc_r+0x26a>
  405a58:	f01e 0f01 	tst.w	lr, #1
  405a5c:	f47f af4b 	bne.w	4058f6 <_realloc_r+0x5a>
  405a60:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405a64:	eba9 0a01 	sub.w	sl, r9, r1
  405a68:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a6c:	f021 0103 	bic.w	r1, r1, #3
  405a70:	448b      	add	fp, r1
  405a72:	4558      	cmp	r0, fp
  405a74:	dce2      	bgt.n	405a3c <_realloc_r+0x1a0>
  405a76:	4656      	mov	r6, sl
  405a78:	f8da 100c 	ldr.w	r1, [sl, #12]
  405a7c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405a80:	1f22      	subs	r2, r4, #4
  405a82:	2a24      	cmp	r2, #36	; 0x24
  405a84:	60c1      	str	r1, [r0, #12]
  405a86:	6088      	str	r0, [r1, #8]
  405a88:	f200 808f 	bhi.w	405baa <_realloc_r+0x30e>
  405a8c:	2a13      	cmp	r2, #19
  405a8e:	f240 808a 	bls.w	405ba6 <_realloc_r+0x30a>
  405a92:	6829      	ldr	r1, [r5, #0]
  405a94:	f8ca 1008 	str.w	r1, [sl, #8]
  405a98:	6869      	ldr	r1, [r5, #4]
  405a9a:	f8ca 100c 	str.w	r1, [sl, #12]
  405a9e:	2a1b      	cmp	r2, #27
  405aa0:	f200 808a 	bhi.w	405bb8 <_realloc_r+0x31c>
  405aa4:	3508      	adds	r5, #8
  405aa6:	f10a 0210 	add.w	r2, sl, #16
  405aaa:	6829      	ldr	r1, [r5, #0]
  405aac:	6011      	str	r1, [r2, #0]
  405aae:	6869      	ldr	r1, [r5, #4]
  405ab0:	6051      	str	r1, [r2, #4]
  405ab2:	68a9      	ldr	r1, [r5, #8]
  405ab4:	6091      	str	r1, [r2, #8]
  405ab6:	eb0a 0107 	add.w	r1, sl, r7
  405aba:	ebab 0207 	sub.w	r2, fp, r7
  405abe:	f042 0201 	orr.w	r2, r2, #1
  405ac2:	6099      	str	r1, [r3, #8]
  405ac4:	604a      	str	r2, [r1, #4]
  405ac6:	f8da 3004 	ldr.w	r3, [sl, #4]
  405aca:	f003 0301 	and.w	r3, r3, #1
  405ace:	431f      	orrs	r7, r3
  405ad0:	4640      	mov	r0, r8
  405ad2:	f8ca 7004 	str.w	r7, [sl, #4]
  405ad6:	f7ff f893 	bl	404c00 <__malloc_unlock>
  405ada:	e751      	b.n	405980 <_realloc_r+0xe4>
  405adc:	682b      	ldr	r3, [r5, #0]
  405ade:	6003      	str	r3, [r0, #0]
  405ae0:	686b      	ldr	r3, [r5, #4]
  405ae2:	6043      	str	r3, [r0, #4]
  405ae4:	2a1b      	cmp	r2, #27
  405ae6:	d82d      	bhi.n	405b44 <_realloc_r+0x2a8>
  405ae8:	f100 0308 	add.w	r3, r0, #8
  405aec:	f105 0208 	add.w	r2, r5, #8
  405af0:	e71b      	b.n	40592a <_realloc_r+0x8e>
  405af2:	4632      	mov	r2, r6
  405af4:	6829      	ldr	r1, [r5, #0]
  405af6:	6011      	str	r1, [r2, #0]
  405af8:	6869      	ldr	r1, [r5, #4]
  405afa:	6051      	str	r1, [r2, #4]
  405afc:	68a9      	ldr	r1, [r5, #8]
  405afe:	6091      	str	r1, [r2, #8]
  405b00:	461c      	mov	r4, r3
  405b02:	46d1      	mov	r9, sl
  405b04:	e72a      	b.n	40595c <_realloc_r+0xc0>
  405b06:	eb09 0107 	add.w	r1, r9, r7
  405b0a:	ebab 0b07 	sub.w	fp, fp, r7
  405b0e:	f04b 0201 	orr.w	r2, fp, #1
  405b12:	6099      	str	r1, [r3, #8]
  405b14:	604a      	str	r2, [r1, #4]
  405b16:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405b1a:	f003 0301 	and.w	r3, r3, #1
  405b1e:	431f      	orrs	r7, r3
  405b20:	4640      	mov	r0, r8
  405b22:	f845 7c04 	str.w	r7, [r5, #-4]
  405b26:	f7ff f86b 	bl	404c00 <__malloc_unlock>
  405b2a:	462e      	mov	r6, r5
  405b2c:	e728      	b.n	405980 <_realloc_r+0xe4>
  405b2e:	4629      	mov	r1, r5
  405b30:	f7ff fe50 	bl	4057d4 <memmove>
  405b34:	e6ff      	b.n	405936 <_realloc_r+0x9a>
  405b36:	4629      	mov	r1, r5
  405b38:	4630      	mov	r0, r6
  405b3a:	461c      	mov	r4, r3
  405b3c:	46d1      	mov	r9, sl
  405b3e:	f7ff fe49 	bl	4057d4 <memmove>
  405b42:	e70b      	b.n	40595c <_realloc_r+0xc0>
  405b44:	68ab      	ldr	r3, [r5, #8]
  405b46:	6083      	str	r3, [r0, #8]
  405b48:	68eb      	ldr	r3, [r5, #12]
  405b4a:	60c3      	str	r3, [r0, #12]
  405b4c:	2a24      	cmp	r2, #36	; 0x24
  405b4e:	d017      	beq.n	405b80 <_realloc_r+0x2e4>
  405b50:	f100 0310 	add.w	r3, r0, #16
  405b54:	f105 0210 	add.w	r2, r5, #16
  405b58:	e6e7      	b.n	40592a <_realloc_r+0x8e>
  405b5a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405b5e:	f023 0303 	bic.w	r3, r3, #3
  405b62:	441c      	add	r4, r3
  405b64:	462e      	mov	r6, r5
  405b66:	e6f9      	b.n	40595c <_realloc_r+0xc0>
  405b68:	68a9      	ldr	r1, [r5, #8]
  405b6a:	f8ca 1010 	str.w	r1, [sl, #16]
  405b6e:	68e9      	ldr	r1, [r5, #12]
  405b70:	f8ca 1014 	str.w	r1, [sl, #20]
  405b74:	2a24      	cmp	r2, #36	; 0x24
  405b76:	d00c      	beq.n	405b92 <_realloc_r+0x2f6>
  405b78:	3510      	adds	r5, #16
  405b7a:	f10a 0218 	add.w	r2, sl, #24
  405b7e:	e7b9      	b.n	405af4 <_realloc_r+0x258>
  405b80:	692b      	ldr	r3, [r5, #16]
  405b82:	6103      	str	r3, [r0, #16]
  405b84:	696b      	ldr	r3, [r5, #20]
  405b86:	6143      	str	r3, [r0, #20]
  405b88:	f105 0218 	add.w	r2, r5, #24
  405b8c:	f100 0318 	add.w	r3, r0, #24
  405b90:	e6cb      	b.n	40592a <_realloc_r+0x8e>
  405b92:	692a      	ldr	r2, [r5, #16]
  405b94:	f8ca 2018 	str.w	r2, [sl, #24]
  405b98:	696a      	ldr	r2, [r5, #20]
  405b9a:	f8ca 201c 	str.w	r2, [sl, #28]
  405b9e:	3518      	adds	r5, #24
  405ba0:	f10a 0220 	add.w	r2, sl, #32
  405ba4:	e7a6      	b.n	405af4 <_realloc_r+0x258>
  405ba6:	4632      	mov	r2, r6
  405ba8:	e77f      	b.n	405aaa <_realloc_r+0x20e>
  405baa:	4629      	mov	r1, r5
  405bac:	4630      	mov	r0, r6
  405bae:	9301      	str	r3, [sp, #4]
  405bb0:	f7ff fe10 	bl	4057d4 <memmove>
  405bb4:	9b01      	ldr	r3, [sp, #4]
  405bb6:	e77e      	b.n	405ab6 <_realloc_r+0x21a>
  405bb8:	68a9      	ldr	r1, [r5, #8]
  405bba:	f8ca 1010 	str.w	r1, [sl, #16]
  405bbe:	68e9      	ldr	r1, [r5, #12]
  405bc0:	f8ca 1014 	str.w	r1, [sl, #20]
  405bc4:	2a24      	cmp	r2, #36	; 0x24
  405bc6:	d003      	beq.n	405bd0 <_realloc_r+0x334>
  405bc8:	3510      	adds	r5, #16
  405bca:	f10a 0218 	add.w	r2, sl, #24
  405bce:	e76c      	b.n	405aaa <_realloc_r+0x20e>
  405bd0:	692a      	ldr	r2, [r5, #16]
  405bd2:	f8ca 2018 	str.w	r2, [sl, #24]
  405bd6:	696a      	ldr	r2, [r5, #20]
  405bd8:	f8ca 201c 	str.w	r2, [sl, #28]
  405bdc:	3518      	adds	r5, #24
  405bde:	f10a 0220 	add.w	r2, sl, #32
  405be2:	e762      	b.n	405aaa <_realloc_r+0x20e>
  405be4:	20000444 	.word	0x20000444

00405be8 <__ascii_wctomb>:
  405be8:	b121      	cbz	r1, 405bf4 <__ascii_wctomb+0xc>
  405bea:	2aff      	cmp	r2, #255	; 0xff
  405bec:	d804      	bhi.n	405bf8 <__ascii_wctomb+0x10>
  405bee:	700a      	strb	r2, [r1, #0]
  405bf0:	2001      	movs	r0, #1
  405bf2:	4770      	bx	lr
  405bf4:	4608      	mov	r0, r1
  405bf6:	4770      	bx	lr
  405bf8:	238a      	movs	r3, #138	; 0x8a
  405bfa:	6003      	str	r3, [r0, #0]
  405bfc:	f04f 30ff 	mov.w	r0, #4294967295
  405c00:	4770      	bx	lr
  405c02:	bf00      	nop

00405c04 <__aeabi_drsub>:
  405c04:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405c08:	e002      	b.n	405c10 <__adddf3>
  405c0a:	bf00      	nop

00405c0c <__aeabi_dsub>:
  405c0c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405c10 <__adddf3>:
  405c10:	b530      	push	{r4, r5, lr}
  405c12:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405c16:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405c1a:	ea94 0f05 	teq	r4, r5
  405c1e:	bf08      	it	eq
  405c20:	ea90 0f02 	teqeq	r0, r2
  405c24:	bf1f      	itttt	ne
  405c26:	ea54 0c00 	orrsne.w	ip, r4, r0
  405c2a:	ea55 0c02 	orrsne.w	ip, r5, r2
  405c2e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405c32:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405c36:	f000 80e2 	beq.w	405dfe <__adddf3+0x1ee>
  405c3a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405c3e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405c42:	bfb8      	it	lt
  405c44:	426d      	neglt	r5, r5
  405c46:	dd0c      	ble.n	405c62 <__adddf3+0x52>
  405c48:	442c      	add	r4, r5
  405c4a:	ea80 0202 	eor.w	r2, r0, r2
  405c4e:	ea81 0303 	eor.w	r3, r1, r3
  405c52:	ea82 0000 	eor.w	r0, r2, r0
  405c56:	ea83 0101 	eor.w	r1, r3, r1
  405c5a:	ea80 0202 	eor.w	r2, r0, r2
  405c5e:	ea81 0303 	eor.w	r3, r1, r3
  405c62:	2d36      	cmp	r5, #54	; 0x36
  405c64:	bf88      	it	hi
  405c66:	bd30      	pophi	{r4, r5, pc}
  405c68:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405c6c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405c70:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405c74:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405c78:	d002      	beq.n	405c80 <__adddf3+0x70>
  405c7a:	4240      	negs	r0, r0
  405c7c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405c80:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405c84:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405c88:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405c8c:	d002      	beq.n	405c94 <__adddf3+0x84>
  405c8e:	4252      	negs	r2, r2
  405c90:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405c94:	ea94 0f05 	teq	r4, r5
  405c98:	f000 80a7 	beq.w	405dea <__adddf3+0x1da>
  405c9c:	f1a4 0401 	sub.w	r4, r4, #1
  405ca0:	f1d5 0e20 	rsbs	lr, r5, #32
  405ca4:	db0d      	blt.n	405cc2 <__adddf3+0xb2>
  405ca6:	fa02 fc0e 	lsl.w	ip, r2, lr
  405caa:	fa22 f205 	lsr.w	r2, r2, r5
  405cae:	1880      	adds	r0, r0, r2
  405cb0:	f141 0100 	adc.w	r1, r1, #0
  405cb4:	fa03 f20e 	lsl.w	r2, r3, lr
  405cb8:	1880      	adds	r0, r0, r2
  405cba:	fa43 f305 	asr.w	r3, r3, r5
  405cbe:	4159      	adcs	r1, r3
  405cc0:	e00e      	b.n	405ce0 <__adddf3+0xd0>
  405cc2:	f1a5 0520 	sub.w	r5, r5, #32
  405cc6:	f10e 0e20 	add.w	lr, lr, #32
  405cca:	2a01      	cmp	r2, #1
  405ccc:	fa03 fc0e 	lsl.w	ip, r3, lr
  405cd0:	bf28      	it	cs
  405cd2:	f04c 0c02 	orrcs.w	ip, ip, #2
  405cd6:	fa43 f305 	asr.w	r3, r3, r5
  405cda:	18c0      	adds	r0, r0, r3
  405cdc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405ce0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405ce4:	d507      	bpl.n	405cf6 <__adddf3+0xe6>
  405ce6:	f04f 0e00 	mov.w	lr, #0
  405cea:	f1dc 0c00 	rsbs	ip, ip, #0
  405cee:	eb7e 0000 	sbcs.w	r0, lr, r0
  405cf2:	eb6e 0101 	sbc.w	r1, lr, r1
  405cf6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405cfa:	d31b      	bcc.n	405d34 <__adddf3+0x124>
  405cfc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405d00:	d30c      	bcc.n	405d1c <__adddf3+0x10c>
  405d02:	0849      	lsrs	r1, r1, #1
  405d04:	ea5f 0030 	movs.w	r0, r0, rrx
  405d08:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405d0c:	f104 0401 	add.w	r4, r4, #1
  405d10:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405d14:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405d18:	f080 809a 	bcs.w	405e50 <__adddf3+0x240>
  405d1c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405d20:	bf08      	it	eq
  405d22:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405d26:	f150 0000 	adcs.w	r0, r0, #0
  405d2a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405d2e:	ea41 0105 	orr.w	r1, r1, r5
  405d32:	bd30      	pop	{r4, r5, pc}
  405d34:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405d38:	4140      	adcs	r0, r0
  405d3a:	eb41 0101 	adc.w	r1, r1, r1
  405d3e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405d42:	f1a4 0401 	sub.w	r4, r4, #1
  405d46:	d1e9      	bne.n	405d1c <__adddf3+0x10c>
  405d48:	f091 0f00 	teq	r1, #0
  405d4c:	bf04      	itt	eq
  405d4e:	4601      	moveq	r1, r0
  405d50:	2000      	moveq	r0, #0
  405d52:	fab1 f381 	clz	r3, r1
  405d56:	bf08      	it	eq
  405d58:	3320      	addeq	r3, #32
  405d5a:	f1a3 030b 	sub.w	r3, r3, #11
  405d5e:	f1b3 0220 	subs.w	r2, r3, #32
  405d62:	da0c      	bge.n	405d7e <__adddf3+0x16e>
  405d64:	320c      	adds	r2, #12
  405d66:	dd08      	ble.n	405d7a <__adddf3+0x16a>
  405d68:	f102 0c14 	add.w	ip, r2, #20
  405d6c:	f1c2 020c 	rsb	r2, r2, #12
  405d70:	fa01 f00c 	lsl.w	r0, r1, ip
  405d74:	fa21 f102 	lsr.w	r1, r1, r2
  405d78:	e00c      	b.n	405d94 <__adddf3+0x184>
  405d7a:	f102 0214 	add.w	r2, r2, #20
  405d7e:	bfd8      	it	le
  405d80:	f1c2 0c20 	rsble	ip, r2, #32
  405d84:	fa01 f102 	lsl.w	r1, r1, r2
  405d88:	fa20 fc0c 	lsr.w	ip, r0, ip
  405d8c:	bfdc      	itt	le
  405d8e:	ea41 010c 	orrle.w	r1, r1, ip
  405d92:	4090      	lslle	r0, r2
  405d94:	1ae4      	subs	r4, r4, r3
  405d96:	bfa2      	ittt	ge
  405d98:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405d9c:	4329      	orrge	r1, r5
  405d9e:	bd30      	popge	{r4, r5, pc}
  405da0:	ea6f 0404 	mvn.w	r4, r4
  405da4:	3c1f      	subs	r4, #31
  405da6:	da1c      	bge.n	405de2 <__adddf3+0x1d2>
  405da8:	340c      	adds	r4, #12
  405daa:	dc0e      	bgt.n	405dca <__adddf3+0x1ba>
  405dac:	f104 0414 	add.w	r4, r4, #20
  405db0:	f1c4 0220 	rsb	r2, r4, #32
  405db4:	fa20 f004 	lsr.w	r0, r0, r4
  405db8:	fa01 f302 	lsl.w	r3, r1, r2
  405dbc:	ea40 0003 	orr.w	r0, r0, r3
  405dc0:	fa21 f304 	lsr.w	r3, r1, r4
  405dc4:	ea45 0103 	orr.w	r1, r5, r3
  405dc8:	bd30      	pop	{r4, r5, pc}
  405dca:	f1c4 040c 	rsb	r4, r4, #12
  405dce:	f1c4 0220 	rsb	r2, r4, #32
  405dd2:	fa20 f002 	lsr.w	r0, r0, r2
  405dd6:	fa01 f304 	lsl.w	r3, r1, r4
  405dda:	ea40 0003 	orr.w	r0, r0, r3
  405dde:	4629      	mov	r1, r5
  405de0:	bd30      	pop	{r4, r5, pc}
  405de2:	fa21 f004 	lsr.w	r0, r1, r4
  405de6:	4629      	mov	r1, r5
  405de8:	bd30      	pop	{r4, r5, pc}
  405dea:	f094 0f00 	teq	r4, #0
  405dee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405df2:	bf06      	itte	eq
  405df4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405df8:	3401      	addeq	r4, #1
  405dfa:	3d01      	subne	r5, #1
  405dfc:	e74e      	b.n	405c9c <__adddf3+0x8c>
  405dfe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405e02:	bf18      	it	ne
  405e04:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405e08:	d029      	beq.n	405e5e <__adddf3+0x24e>
  405e0a:	ea94 0f05 	teq	r4, r5
  405e0e:	bf08      	it	eq
  405e10:	ea90 0f02 	teqeq	r0, r2
  405e14:	d005      	beq.n	405e22 <__adddf3+0x212>
  405e16:	ea54 0c00 	orrs.w	ip, r4, r0
  405e1a:	bf04      	itt	eq
  405e1c:	4619      	moveq	r1, r3
  405e1e:	4610      	moveq	r0, r2
  405e20:	bd30      	pop	{r4, r5, pc}
  405e22:	ea91 0f03 	teq	r1, r3
  405e26:	bf1e      	ittt	ne
  405e28:	2100      	movne	r1, #0
  405e2a:	2000      	movne	r0, #0
  405e2c:	bd30      	popne	{r4, r5, pc}
  405e2e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405e32:	d105      	bne.n	405e40 <__adddf3+0x230>
  405e34:	0040      	lsls	r0, r0, #1
  405e36:	4149      	adcs	r1, r1
  405e38:	bf28      	it	cs
  405e3a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405e3e:	bd30      	pop	{r4, r5, pc}
  405e40:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405e44:	bf3c      	itt	cc
  405e46:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405e4a:	bd30      	popcc	{r4, r5, pc}
  405e4c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405e50:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405e54:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405e58:	f04f 0000 	mov.w	r0, #0
  405e5c:	bd30      	pop	{r4, r5, pc}
  405e5e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405e62:	bf1a      	itte	ne
  405e64:	4619      	movne	r1, r3
  405e66:	4610      	movne	r0, r2
  405e68:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405e6c:	bf1c      	itt	ne
  405e6e:	460b      	movne	r3, r1
  405e70:	4602      	movne	r2, r0
  405e72:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405e76:	bf06      	itte	eq
  405e78:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405e7c:	ea91 0f03 	teqeq	r1, r3
  405e80:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405e84:	bd30      	pop	{r4, r5, pc}
  405e86:	bf00      	nop

00405e88 <__aeabi_ui2d>:
  405e88:	f090 0f00 	teq	r0, #0
  405e8c:	bf04      	itt	eq
  405e8e:	2100      	moveq	r1, #0
  405e90:	4770      	bxeq	lr
  405e92:	b530      	push	{r4, r5, lr}
  405e94:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405e98:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405e9c:	f04f 0500 	mov.w	r5, #0
  405ea0:	f04f 0100 	mov.w	r1, #0
  405ea4:	e750      	b.n	405d48 <__adddf3+0x138>
  405ea6:	bf00      	nop

00405ea8 <__aeabi_i2d>:
  405ea8:	f090 0f00 	teq	r0, #0
  405eac:	bf04      	itt	eq
  405eae:	2100      	moveq	r1, #0
  405eb0:	4770      	bxeq	lr
  405eb2:	b530      	push	{r4, r5, lr}
  405eb4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405eb8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405ebc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405ec0:	bf48      	it	mi
  405ec2:	4240      	negmi	r0, r0
  405ec4:	f04f 0100 	mov.w	r1, #0
  405ec8:	e73e      	b.n	405d48 <__adddf3+0x138>
  405eca:	bf00      	nop

00405ecc <__aeabi_f2d>:
  405ecc:	0042      	lsls	r2, r0, #1
  405ece:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405ed2:	ea4f 0131 	mov.w	r1, r1, rrx
  405ed6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405eda:	bf1f      	itttt	ne
  405edc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405ee0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405ee4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405ee8:	4770      	bxne	lr
  405eea:	f092 0f00 	teq	r2, #0
  405eee:	bf14      	ite	ne
  405ef0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405ef4:	4770      	bxeq	lr
  405ef6:	b530      	push	{r4, r5, lr}
  405ef8:	f44f 7460 	mov.w	r4, #896	; 0x380
  405efc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405f00:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405f04:	e720      	b.n	405d48 <__adddf3+0x138>
  405f06:	bf00      	nop

00405f08 <__aeabi_ul2d>:
  405f08:	ea50 0201 	orrs.w	r2, r0, r1
  405f0c:	bf08      	it	eq
  405f0e:	4770      	bxeq	lr
  405f10:	b530      	push	{r4, r5, lr}
  405f12:	f04f 0500 	mov.w	r5, #0
  405f16:	e00a      	b.n	405f2e <__aeabi_l2d+0x16>

00405f18 <__aeabi_l2d>:
  405f18:	ea50 0201 	orrs.w	r2, r0, r1
  405f1c:	bf08      	it	eq
  405f1e:	4770      	bxeq	lr
  405f20:	b530      	push	{r4, r5, lr}
  405f22:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405f26:	d502      	bpl.n	405f2e <__aeabi_l2d+0x16>
  405f28:	4240      	negs	r0, r0
  405f2a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405f2e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405f32:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405f36:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405f3a:	f43f aedc 	beq.w	405cf6 <__adddf3+0xe6>
  405f3e:	f04f 0203 	mov.w	r2, #3
  405f42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405f46:	bf18      	it	ne
  405f48:	3203      	addne	r2, #3
  405f4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405f4e:	bf18      	it	ne
  405f50:	3203      	addne	r2, #3
  405f52:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405f56:	f1c2 0320 	rsb	r3, r2, #32
  405f5a:	fa00 fc03 	lsl.w	ip, r0, r3
  405f5e:	fa20 f002 	lsr.w	r0, r0, r2
  405f62:	fa01 fe03 	lsl.w	lr, r1, r3
  405f66:	ea40 000e 	orr.w	r0, r0, lr
  405f6a:	fa21 f102 	lsr.w	r1, r1, r2
  405f6e:	4414      	add	r4, r2
  405f70:	e6c1      	b.n	405cf6 <__adddf3+0xe6>
  405f72:	bf00      	nop

00405f74 <__aeabi_dmul>:
  405f74:	b570      	push	{r4, r5, r6, lr}
  405f76:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405f7a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405f7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405f82:	bf1d      	ittte	ne
  405f84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405f88:	ea94 0f0c 	teqne	r4, ip
  405f8c:	ea95 0f0c 	teqne	r5, ip
  405f90:	f000 f8de 	bleq	406150 <__aeabi_dmul+0x1dc>
  405f94:	442c      	add	r4, r5
  405f96:	ea81 0603 	eor.w	r6, r1, r3
  405f9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405f9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405fa2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405fa6:	bf18      	it	ne
  405fa8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405fac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405fb0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405fb4:	d038      	beq.n	406028 <__aeabi_dmul+0xb4>
  405fb6:	fba0 ce02 	umull	ip, lr, r0, r2
  405fba:	f04f 0500 	mov.w	r5, #0
  405fbe:	fbe1 e502 	umlal	lr, r5, r1, r2
  405fc2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405fc6:	fbe0 e503 	umlal	lr, r5, r0, r3
  405fca:	f04f 0600 	mov.w	r6, #0
  405fce:	fbe1 5603 	umlal	r5, r6, r1, r3
  405fd2:	f09c 0f00 	teq	ip, #0
  405fd6:	bf18      	it	ne
  405fd8:	f04e 0e01 	orrne.w	lr, lr, #1
  405fdc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405fe0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405fe4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405fe8:	d204      	bcs.n	405ff4 <__aeabi_dmul+0x80>
  405fea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405fee:	416d      	adcs	r5, r5
  405ff0:	eb46 0606 	adc.w	r6, r6, r6
  405ff4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405ff8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405ffc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  406000:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  406004:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  406008:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40600c:	bf88      	it	hi
  40600e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  406012:	d81e      	bhi.n	406052 <__aeabi_dmul+0xde>
  406014:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  406018:	bf08      	it	eq
  40601a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40601e:	f150 0000 	adcs.w	r0, r0, #0
  406022:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  406026:	bd70      	pop	{r4, r5, r6, pc}
  406028:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40602c:	ea46 0101 	orr.w	r1, r6, r1
  406030:	ea40 0002 	orr.w	r0, r0, r2
  406034:	ea81 0103 	eor.w	r1, r1, r3
  406038:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40603c:	bfc2      	ittt	gt
  40603e:	ebd4 050c 	rsbsgt	r5, r4, ip
  406042:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406046:	bd70      	popgt	{r4, r5, r6, pc}
  406048:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40604c:	f04f 0e00 	mov.w	lr, #0
  406050:	3c01      	subs	r4, #1
  406052:	f300 80ab 	bgt.w	4061ac <__aeabi_dmul+0x238>
  406056:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40605a:	bfde      	ittt	le
  40605c:	2000      	movle	r0, #0
  40605e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  406062:	bd70      	pople	{r4, r5, r6, pc}
  406064:	f1c4 0400 	rsb	r4, r4, #0
  406068:	3c20      	subs	r4, #32
  40606a:	da35      	bge.n	4060d8 <__aeabi_dmul+0x164>
  40606c:	340c      	adds	r4, #12
  40606e:	dc1b      	bgt.n	4060a8 <__aeabi_dmul+0x134>
  406070:	f104 0414 	add.w	r4, r4, #20
  406074:	f1c4 0520 	rsb	r5, r4, #32
  406078:	fa00 f305 	lsl.w	r3, r0, r5
  40607c:	fa20 f004 	lsr.w	r0, r0, r4
  406080:	fa01 f205 	lsl.w	r2, r1, r5
  406084:	ea40 0002 	orr.w	r0, r0, r2
  406088:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40608c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  406090:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  406094:	fa21 f604 	lsr.w	r6, r1, r4
  406098:	eb42 0106 	adc.w	r1, r2, r6
  40609c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4060a0:	bf08      	it	eq
  4060a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4060a6:	bd70      	pop	{r4, r5, r6, pc}
  4060a8:	f1c4 040c 	rsb	r4, r4, #12
  4060ac:	f1c4 0520 	rsb	r5, r4, #32
  4060b0:	fa00 f304 	lsl.w	r3, r0, r4
  4060b4:	fa20 f005 	lsr.w	r0, r0, r5
  4060b8:	fa01 f204 	lsl.w	r2, r1, r4
  4060bc:	ea40 0002 	orr.w	r0, r0, r2
  4060c0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4060c4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4060c8:	f141 0100 	adc.w	r1, r1, #0
  4060cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4060d0:	bf08      	it	eq
  4060d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4060d6:	bd70      	pop	{r4, r5, r6, pc}
  4060d8:	f1c4 0520 	rsb	r5, r4, #32
  4060dc:	fa00 f205 	lsl.w	r2, r0, r5
  4060e0:	ea4e 0e02 	orr.w	lr, lr, r2
  4060e4:	fa20 f304 	lsr.w	r3, r0, r4
  4060e8:	fa01 f205 	lsl.w	r2, r1, r5
  4060ec:	ea43 0302 	orr.w	r3, r3, r2
  4060f0:	fa21 f004 	lsr.w	r0, r1, r4
  4060f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4060f8:	fa21 f204 	lsr.w	r2, r1, r4
  4060fc:	ea20 0002 	bic.w	r0, r0, r2
  406100:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  406104:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406108:	bf08      	it	eq
  40610a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40610e:	bd70      	pop	{r4, r5, r6, pc}
  406110:	f094 0f00 	teq	r4, #0
  406114:	d10f      	bne.n	406136 <__aeabi_dmul+0x1c2>
  406116:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  40611a:	0040      	lsls	r0, r0, #1
  40611c:	eb41 0101 	adc.w	r1, r1, r1
  406120:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406124:	bf08      	it	eq
  406126:	3c01      	subeq	r4, #1
  406128:	d0f7      	beq.n	40611a <__aeabi_dmul+0x1a6>
  40612a:	ea41 0106 	orr.w	r1, r1, r6
  40612e:	f095 0f00 	teq	r5, #0
  406132:	bf18      	it	ne
  406134:	4770      	bxne	lr
  406136:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40613a:	0052      	lsls	r2, r2, #1
  40613c:	eb43 0303 	adc.w	r3, r3, r3
  406140:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  406144:	bf08      	it	eq
  406146:	3d01      	subeq	r5, #1
  406148:	d0f7      	beq.n	40613a <__aeabi_dmul+0x1c6>
  40614a:	ea43 0306 	orr.w	r3, r3, r6
  40614e:	4770      	bx	lr
  406150:	ea94 0f0c 	teq	r4, ip
  406154:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  406158:	bf18      	it	ne
  40615a:	ea95 0f0c 	teqne	r5, ip
  40615e:	d00c      	beq.n	40617a <__aeabi_dmul+0x206>
  406160:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  406164:	bf18      	it	ne
  406166:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40616a:	d1d1      	bne.n	406110 <__aeabi_dmul+0x19c>
  40616c:	ea81 0103 	eor.w	r1, r1, r3
  406170:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406174:	f04f 0000 	mov.w	r0, #0
  406178:	bd70      	pop	{r4, r5, r6, pc}
  40617a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40617e:	bf06      	itte	eq
  406180:	4610      	moveq	r0, r2
  406182:	4619      	moveq	r1, r3
  406184:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406188:	d019      	beq.n	4061be <__aeabi_dmul+0x24a>
  40618a:	ea94 0f0c 	teq	r4, ip
  40618e:	d102      	bne.n	406196 <__aeabi_dmul+0x222>
  406190:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  406194:	d113      	bne.n	4061be <__aeabi_dmul+0x24a>
  406196:	ea95 0f0c 	teq	r5, ip
  40619a:	d105      	bne.n	4061a8 <__aeabi_dmul+0x234>
  40619c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  4061a0:	bf1c      	itt	ne
  4061a2:	4610      	movne	r0, r2
  4061a4:	4619      	movne	r1, r3
  4061a6:	d10a      	bne.n	4061be <__aeabi_dmul+0x24a>
  4061a8:	ea81 0103 	eor.w	r1, r1, r3
  4061ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4061b0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4061b4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4061b8:	f04f 0000 	mov.w	r0, #0
  4061bc:	bd70      	pop	{r4, r5, r6, pc}
  4061be:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4061c2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4061c6:	bd70      	pop	{r4, r5, r6, pc}

004061c8 <__aeabi_ddiv>:
  4061c8:	b570      	push	{r4, r5, r6, lr}
  4061ca:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4061ce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4061d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4061d6:	bf1d      	ittte	ne
  4061d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4061dc:	ea94 0f0c 	teqne	r4, ip
  4061e0:	ea95 0f0c 	teqne	r5, ip
  4061e4:	f000 f8a7 	bleq	406336 <__aeabi_ddiv+0x16e>
  4061e8:	eba4 0405 	sub.w	r4, r4, r5
  4061ec:	ea81 0e03 	eor.w	lr, r1, r3
  4061f0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4061f4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4061f8:	f000 8088 	beq.w	40630c <__aeabi_ddiv+0x144>
  4061fc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  406200:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  406204:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  406208:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40620c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  406210:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  406214:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  406218:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40621c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  406220:	429d      	cmp	r5, r3
  406222:	bf08      	it	eq
  406224:	4296      	cmpeq	r6, r2
  406226:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40622a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40622e:	d202      	bcs.n	406236 <__aeabi_ddiv+0x6e>
  406230:	085b      	lsrs	r3, r3, #1
  406232:	ea4f 0232 	mov.w	r2, r2, rrx
  406236:	1ab6      	subs	r6, r6, r2
  406238:	eb65 0503 	sbc.w	r5, r5, r3
  40623c:	085b      	lsrs	r3, r3, #1
  40623e:	ea4f 0232 	mov.w	r2, r2, rrx
  406242:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  406246:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40624a:	ebb6 0e02 	subs.w	lr, r6, r2
  40624e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406252:	bf22      	ittt	cs
  406254:	1ab6      	subcs	r6, r6, r2
  406256:	4675      	movcs	r5, lr
  406258:	ea40 000c 	orrcs.w	r0, r0, ip
  40625c:	085b      	lsrs	r3, r3, #1
  40625e:	ea4f 0232 	mov.w	r2, r2, rrx
  406262:	ebb6 0e02 	subs.w	lr, r6, r2
  406266:	eb75 0e03 	sbcs.w	lr, r5, r3
  40626a:	bf22      	ittt	cs
  40626c:	1ab6      	subcs	r6, r6, r2
  40626e:	4675      	movcs	r5, lr
  406270:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  406274:	085b      	lsrs	r3, r3, #1
  406276:	ea4f 0232 	mov.w	r2, r2, rrx
  40627a:	ebb6 0e02 	subs.w	lr, r6, r2
  40627e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406282:	bf22      	ittt	cs
  406284:	1ab6      	subcs	r6, r6, r2
  406286:	4675      	movcs	r5, lr
  406288:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40628c:	085b      	lsrs	r3, r3, #1
  40628e:	ea4f 0232 	mov.w	r2, r2, rrx
  406292:	ebb6 0e02 	subs.w	lr, r6, r2
  406296:	eb75 0e03 	sbcs.w	lr, r5, r3
  40629a:	bf22      	ittt	cs
  40629c:	1ab6      	subcs	r6, r6, r2
  40629e:	4675      	movcs	r5, lr
  4062a0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4062a4:	ea55 0e06 	orrs.w	lr, r5, r6
  4062a8:	d018      	beq.n	4062dc <__aeabi_ddiv+0x114>
  4062aa:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4062ae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4062b2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4062b6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4062ba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4062be:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4062c2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4062c6:	d1c0      	bne.n	40624a <__aeabi_ddiv+0x82>
  4062c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4062cc:	d10b      	bne.n	4062e6 <__aeabi_ddiv+0x11e>
  4062ce:	ea41 0100 	orr.w	r1, r1, r0
  4062d2:	f04f 0000 	mov.w	r0, #0
  4062d6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4062da:	e7b6      	b.n	40624a <__aeabi_ddiv+0x82>
  4062dc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4062e0:	bf04      	itt	eq
  4062e2:	4301      	orreq	r1, r0
  4062e4:	2000      	moveq	r0, #0
  4062e6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4062ea:	bf88      	it	hi
  4062ec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4062f0:	f63f aeaf 	bhi.w	406052 <__aeabi_dmul+0xde>
  4062f4:	ebb5 0c03 	subs.w	ip, r5, r3
  4062f8:	bf04      	itt	eq
  4062fa:	ebb6 0c02 	subseq.w	ip, r6, r2
  4062fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  406302:	f150 0000 	adcs.w	r0, r0, #0
  406306:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40630a:	bd70      	pop	{r4, r5, r6, pc}
  40630c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  406310:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  406314:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  406318:	bfc2      	ittt	gt
  40631a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40631e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406322:	bd70      	popgt	{r4, r5, r6, pc}
  406324:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  406328:	f04f 0e00 	mov.w	lr, #0
  40632c:	3c01      	subs	r4, #1
  40632e:	e690      	b.n	406052 <__aeabi_dmul+0xde>
  406330:	ea45 0e06 	orr.w	lr, r5, r6
  406334:	e68d      	b.n	406052 <__aeabi_dmul+0xde>
  406336:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40633a:	ea94 0f0c 	teq	r4, ip
  40633e:	bf08      	it	eq
  406340:	ea95 0f0c 	teqeq	r5, ip
  406344:	f43f af3b 	beq.w	4061be <__aeabi_dmul+0x24a>
  406348:	ea94 0f0c 	teq	r4, ip
  40634c:	d10a      	bne.n	406364 <__aeabi_ddiv+0x19c>
  40634e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406352:	f47f af34 	bne.w	4061be <__aeabi_dmul+0x24a>
  406356:	ea95 0f0c 	teq	r5, ip
  40635a:	f47f af25 	bne.w	4061a8 <__aeabi_dmul+0x234>
  40635e:	4610      	mov	r0, r2
  406360:	4619      	mov	r1, r3
  406362:	e72c      	b.n	4061be <__aeabi_dmul+0x24a>
  406364:	ea95 0f0c 	teq	r5, ip
  406368:	d106      	bne.n	406378 <__aeabi_ddiv+0x1b0>
  40636a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40636e:	f43f aefd 	beq.w	40616c <__aeabi_dmul+0x1f8>
  406372:	4610      	mov	r0, r2
  406374:	4619      	mov	r1, r3
  406376:	e722      	b.n	4061be <__aeabi_dmul+0x24a>
  406378:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40637c:	bf18      	it	ne
  40637e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406382:	f47f aec5 	bne.w	406110 <__aeabi_dmul+0x19c>
  406386:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40638a:	f47f af0d 	bne.w	4061a8 <__aeabi_dmul+0x234>
  40638e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  406392:	f47f aeeb 	bne.w	40616c <__aeabi_dmul+0x1f8>
  406396:	e712      	b.n	4061be <__aeabi_dmul+0x24a>

00406398 <__gedf2>:
  406398:	f04f 3cff 	mov.w	ip, #4294967295
  40639c:	e006      	b.n	4063ac <__cmpdf2+0x4>
  40639e:	bf00      	nop

004063a0 <__ledf2>:
  4063a0:	f04f 0c01 	mov.w	ip, #1
  4063a4:	e002      	b.n	4063ac <__cmpdf2+0x4>
  4063a6:	bf00      	nop

004063a8 <__cmpdf2>:
  4063a8:	f04f 0c01 	mov.w	ip, #1
  4063ac:	f84d cd04 	str.w	ip, [sp, #-4]!
  4063b0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4063b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4063b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4063bc:	bf18      	it	ne
  4063be:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4063c2:	d01b      	beq.n	4063fc <__cmpdf2+0x54>
  4063c4:	b001      	add	sp, #4
  4063c6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4063ca:	bf0c      	ite	eq
  4063cc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4063d0:	ea91 0f03 	teqne	r1, r3
  4063d4:	bf02      	ittt	eq
  4063d6:	ea90 0f02 	teqeq	r0, r2
  4063da:	2000      	moveq	r0, #0
  4063dc:	4770      	bxeq	lr
  4063de:	f110 0f00 	cmn.w	r0, #0
  4063e2:	ea91 0f03 	teq	r1, r3
  4063e6:	bf58      	it	pl
  4063e8:	4299      	cmppl	r1, r3
  4063ea:	bf08      	it	eq
  4063ec:	4290      	cmpeq	r0, r2
  4063ee:	bf2c      	ite	cs
  4063f0:	17d8      	asrcs	r0, r3, #31
  4063f2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4063f6:	f040 0001 	orr.w	r0, r0, #1
  4063fa:	4770      	bx	lr
  4063fc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406400:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406404:	d102      	bne.n	40640c <__cmpdf2+0x64>
  406406:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40640a:	d107      	bne.n	40641c <__cmpdf2+0x74>
  40640c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406410:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406414:	d1d6      	bne.n	4063c4 <__cmpdf2+0x1c>
  406416:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40641a:	d0d3      	beq.n	4063c4 <__cmpdf2+0x1c>
  40641c:	f85d 0b04 	ldr.w	r0, [sp], #4
  406420:	4770      	bx	lr
  406422:	bf00      	nop

00406424 <__aeabi_cdrcmple>:
  406424:	4684      	mov	ip, r0
  406426:	4610      	mov	r0, r2
  406428:	4662      	mov	r2, ip
  40642a:	468c      	mov	ip, r1
  40642c:	4619      	mov	r1, r3
  40642e:	4663      	mov	r3, ip
  406430:	e000      	b.n	406434 <__aeabi_cdcmpeq>
  406432:	bf00      	nop

00406434 <__aeabi_cdcmpeq>:
  406434:	b501      	push	{r0, lr}
  406436:	f7ff ffb7 	bl	4063a8 <__cmpdf2>
  40643a:	2800      	cmp	r0, #0
  40643c:	bf48      	it	mi
  40643e:	f110 0f00 	cmnmi.w	r0, #0
  406442:	bd01      	pop	{r0, pc}

00406444 <__aeabi_dcmpeq>:
  406444:	f84d ed08 	str.w	lr, [sp, #-8]!
  406448:	f7ff fff4 	bl	406434 <__aeabi_cdcmpeq>
  40644c:	bf0c      	ite	eq
  40644e:	2001      	moveq	r0, #1
  406450:	2000      	movne	r0, #0
  406452:	f85d fb08 	ldr.w	pc, [sp], #8
  406456:	bf00      	nop

00406458 <__aeabi_dcmplt>:
  406458:	f84d ed08 	str.w	lr, [sp, #-8]!
  40645c:	f7ff ffea 	bl	406434 <__aeabi_cdcmpeq>
  406460:	bf34      	ite	cc
  406462:	2001      	movcc	r0, #1
  406464:	2000      	movcs	r0, #0
  406466:	f85d fb08 	ldr.w	pc, [sp], #8
  40646a:	bf00      	nop

0040646c <__aeabi_dcmple>:
  40646c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406470:	f7ff ffe0 	bl	406434 <__aeabi_cdcmpeq>
  406474:	bf94      	ite	ls
  406476:	2001      	movls	r0, #1
  406478:	2000      	movhi	r0, #0
  40647a:	f85d fb08 	ldr.w	pc, [sp], #8
  40647e:	bf00      	nop

00406480 <__aeabi_dcmpge>:
  406480:	f84d ed08 	str.w	lr, [sp, #-8]!
  406484:	f7ff ffce 	bl	406424 <__aeabi_cdrcmple>
  406488:	bf94      	ite	ls
  40648a:	2001      	movls	r0, #1
  40648c:	2000      	movhi	r0, #0
  40648e:	f85d fb08 	ldr.w	pc, [sp], #8
  406492:	bf00      	nop

00406494 <__aeabi_dcmpgt>:
  406494:	f84d ed08 	str.w	lr, [sp, #-8]!
  406498:	f7ff ffc4 	bl	406424 <__aeabi_cdrcmple>
  40649c:	bf34      	ite	cc
  40649e:	2001      	movcc	r0, #1
  4064a0:	2000      	movcs	r0, #0
  4064a2:	f85d fb08 	ldr.w	pc, [sp], #8
  4064a6:	bf00      	nop

004064a8 <__aeabi_dcmpun>:
  4064a8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4064ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4064b0:	d102      	bne.n	4064b8 <__aeabi_dcmpun+0x10>
  4064b2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4064b6:	d10a      	bne.n	4064ce <__aeabi_dcmpun+0x26>
  4064b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4064bc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4064c0:	d102      	bne.n	4064c8 <__aeabi_dcmpun+0x20>
  4064c2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4064c6:	d102      	bne.n	4064ce <__aeabi_dcmpun+0x26>
  4064c8:	f04f 0000 	mov.w	r0, #0
  4064cc:	4770      	bx	lr
  4064ce:	f04f 0001 	mov.w	r0, #1
  4064d2:	4770      	bx	lr

004064d4 <__aeabi_d2iz>:
  4064d4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4064d8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4064dc:	d215      	bcs.n	40650a <__aeabi_d2iz+0x36>
  4064de:	d511      	bpl.n	406504 <__aeabi_d2iz+0x30>
  4064e0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4064e4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4064e8:	d912      	bls.n	406510 <__aeabi_d2iz+0x3c>
  4064ea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4064ee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4064f2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4064f6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4064fa:	fa23 f002 	lsr.w	r0, r3, r2
  4064fe:	bf18      	it	ne
  406500:	4240      	negne	r0, r0
  406502:	4770      	bx	lr
  406504:	f04f 0000 	mov.w	r0, #0
  406508:	4770      	bx	lr
  40650a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40650e:	d105      	bne.n	40651c <__aeabi_d2iz+0x48>
  406510:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406514:	bf08      	it	eq
  406516:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40651a:	4770      	bx	lr
  40651c:	f04f 0000 	mov.w	r0, #0
  406520:	4770      	bx	lr
  406522:	bf00      	nop

00406524 <__aeabi_uldivmod>:
  406524:	b953      	cbnz	r3, 40653c <__aeabi_uldivmod+0x18>
  406526:	b94a      	cbnz	r2, 40653c <__aeabi_uldivmod+0x18>
  406528:	2900      	cmp	r1, #0
  40652a:	bf08      	it	eq
  40652c:	2800      	cmpeq	r0, #0
  40652e:	bf1c      	itt	ne
  406530:	f04f 31ff 	movne.w	r1, #4294967295
  406534:	f04f 30ff 	movne.w	r0, #4294967295
  406538:	f000 b97a 	b.w	406830 <__aeabi_idiv0>
  40653c:	f1ad 0c08 	sub.w	ip, sp, #8
  406540:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406544:	f000 f806 	bl	406554 <__udivmoddi4>
  406548:	f8dd e004 	ldr.w	lr, [sp, #4]
  40654c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406550:	b004      	add	sp, #16
  406552:	4770      	bx	lr

00406554 <__udivmoddi4>:
  406554:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406558:	468c      	mov	ip, r1
  40655a:	460d      	mov	r5, r1
  40655c:	4604      	mov	r4, r0
  40655e:	9e08      	ldr	r6, [sp, #32]
  406560:	2b00      	cmp	r3, #0
  406562:	d151      	bne.n	406608 <__udivmoddi4+0xb4>
  406564:	428a      	cmp	r2, r1
  406566:	4617      	mov	r7, r2
  406568:	d96d      	bls.n	406646 <__udivmoddi4+0xf2>
  40656a:	fab2 fe82 	clz	lr, r2
  40656e:	f1be 0f00 	cmp.w	lr, #0
  406572:	d00b      	beq.n	40658c <__udivmoddi4+0x38>
  406574:	f1ce 0c20 	rsb	ip, lr, #32
  406578:	fa01 f50e 	lsl.w	r5, r1, lr
  40657c:	fa20 fc0c 	lsr.w	ip, r0, ip
  406580:	fa02 f70e 	lsl.w	r7, r2, lr
  406584:	ea4c 0c05 	orr.w	ip, ip, r5
  406588:	fa00 f40e 	lsl.w	r4, r0, lr
  40658c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406590:	0c25      	lsrs	r5, r4, #16
  406592:	fbbc f8fa 	udiv	r8, ip, sl
  406596:	fa1f f987 	uxth.w	r9, r7
  40659a:	fb0a cc18 	mls	ip, sl, r8, ip
  40659e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4065a2:	fb08 f309 	mul.w	r3, r8, r9
  4065a6:	42ab      	cmp	r3, r5
  4065a8:	d90a      	bls.n	4065c0 <__udivmoddi4+0x6c>
  4065aa:	19ed      	adds	r5, r5, r7
  4065ac:	f108 32ff 	add.w	r2, r8, #4294967295
  4065b0:	f080 8123 	bcs.w	4067fa <__udivmoddi4+0x2a6>
  4065b4:	42ab      	cmp	r3, r5
  4065b6:	f240 8120 	bls.w	4067fa <__udivmoddi4+0x2a6>
  4065ba:	f1a8 0802 	sub.w	r8, r8, #2
  4065be:	443d      	add	r5, r7
  4065c0:	1aed      	subs	r5, r5, r3
  4065c2:	b2a4      	uxth	r4, r4
  4065c4:	fbb5 f0fa 	udiv	r0, r5, sl
  4065c8:	fb0a 5510 	mls	r5, sl, r0, r5
  4065cc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4065d0:	fb00 f909 	mul.w	r9, r0, r9
  4065d4:	45a1      	cmp	r9, r4
  4065d6:	d909      	bls.n	4065ec <__udivmoddi4+0x98>
  4065d8:	19e4      	adds	r4, r4, r7
  4065da:	f100 33ff 	add.w	r3, r0, #4294967295
  4065de:	f080 810a 	bcs.w	4067f6 <__udivmoddi4+0x2a2>
  4065e2:	45a1      	cmp	r9, r4
  4065e4:	f240 8107 	bls.w	4067f6 <__udivmoddi4+0x2a2>
  4065e8:	3802      	subs	r0, #2
  4065ea:	443c      	add	r4, r7
  4065ec:	eba4 0409 	sub.w	r4, r4, r9
  4065f0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4065f4:	2100      	movs	r1, #0
  4065f6:	2e00      	cmp	r6, #0
  4065f8:	d061      	beq.n	4066be <__udivmoddi4+0x16a>
  4065fa:	fa24 f40e 	lsr.w	r4, r4, lr
  4065fe:	2300      	movs	r3, #0
  406600:	6034      	str	r4, [r6, #0]
  406602:	6073      	str	r3, [r6, #4]
  406604:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406608:	428b      	cmp	r3, r1
  40660a:	d907      	bls.n	40661c <__udivmoddi4+0xc8>
  40660c:	2e00      	cmp	r6, #0
  40660e:	d054      	beq.n	4066ba <__udivmoddi4+0x166>
  406610:	2100      	movs	r1, #0
  406612:	e886 0021 	stmia.w	r6, {r0, r5}
  406616:	4608      	mov	r0, r1
  406618:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40661c:	fab3 f183 	clz	r1, r3
  406620:	2900      	cmp	r1, #0
  406622:	f040 808e 	bne.w	406742 <__udivmoddi4+0x1ee>
  406626:	42ab      	cmp	r3, r5
  406628:	d302      	bcc.n	406630 <__udivmoddi4+0xdc>
  40662a:	4282      	cmp	r2, r0
  40662c:	f200 80fa 	bhi.w	406824 <__udivmoddi4+0x2d0>
  406630:	1a84      	subs	r4, r0, r2
  406632:	eb65 0503 	sbc.w	r5, r5, r3
  406636:	2001      	movs	r0, #1
  406638:	46ac      	mov	ip, r5
  40663a:	2e00      	cmp	r6, #0
  40663c:	d03f      	beq.n	4066be <__udivmoddi4+0x16a>
  40663e:	e886 1010 	stmia.w	r6, {r4, ip}
  406642:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406646:	b912      	cbnz	r2, 40664e <__udivmoddi4+0xfa>
  406648:	2701      	movs	r7, #1
  40664a:	fbb7 f7f2 	udiv	r7, r7, r2
  40664e:	fab7 fe87 	clz	lr, r7
  406652:	f1be 0f00 	cmp.w	lr, #0
  406656:	d134      	bne.n	4066c2 <__udivmoddi4+0x16e>
  406658:	1beb      	subs	r3, r5, r7
  40665a:	0c3a      	lsrs	r2, r7, #16
  40665c:	fa1f fc87 	uxth.w	ip, r7
  406660:	2101      	movs	r1, #1
  406662:	fbb3 f8f2 	udiv	r8, r3, r2
  406666:	0c25      	lsrs	r5, r4, #16
  406668:	fb02 3318 	mls	r3, r2, r8, r3
  40666c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406670:	fb0c f308 	mul.w	r3, ip, r8
  406674:	42ab      	cmp	r3, r5
  406676:	d907      	bls.n	406688 <__udivmoddi4+0x134>
  406678:	19ed      	adds	r5, r5, r7
  40667a:	f108 30ff 	add.w	r0, r8, #4294967295
  40667e:	d202      	bcs.n	406686 <__udivmoddi4+0x132>
  406680:	42ab      	cmp	r3, r5
  406682:	f200 80d1 	bhi.w	406828 <__udivmoddi4+0x2d4>
  406686:	4680      	mov	r8, r0
  406688:	1aed      	subs	r5, r5, r3
  40668a:	b2a3      	uxth	r3, r4
  40668c:	fbb5 f0f2 	udiv	r0, r5, r2
  406690:	fb02 5510 	mls	r5, r2, r0, r5
  406694:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406698:	fb0c fc00 	mul.w	ip, ip, r0
  40669c:	45a4      	cmp	ip, r4
  40669e:	d907      	bls.n	4066b0 <__udivmoddi4+0x15c>
  4066a0:	19e4      	adds	r4, r4, r7
  4066a2:	f100 33ff 	add.w	r3, r0, #4294967295
  4066a6:	d202      	bcs.n	4066ae <__udivmoddi4+0x15a>
  4066a8:	45a4      	cmp	ip, r4
  4066aa:	f200 80b8 	bhi.w	40681e <__udivmoddi4+0x2ca>
  4066ae:	4618      	mov	r0, r3
  4066b0:	eba4 040c 	sub.w	r4, r4, ip
  4066b4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4066b8:	e79d      	b.n	4065f6 <__udivmoddi4+0xa2>
  4066ba:	4631      	mov	r1, r6
  4066bc:	4630      	mov	r0, r6
  4066be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4066c2:	f1ce 0420 	rsb	r4, lr, #32
  4066c6:	fa05 f30e 	lsl.w	r3, r5, lr
  4066ca:	fa07 f70e 	lsl.w	r7, r7, lr
  4066ce:	fa20 f804 	lsr.w	r8, r0, r4
  4066d2:	0c3a      	lsrs	r2, r7, #16
  4066d4:	fa25 f404 	lsr.w	r4, r5, r4
  4066d8:	ea48 0803 	orr.w	r8, r8, r3
  4066dc:	fbb4 f1f2 	udiv	r1, r4, r2
  4066e0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4066e4:	fb02 4411 	mls	r4, r2, r1, r4
  4066e8:	fa1f fc87 	uxth.w	ip, r7
  4066ec:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4066f0:	fb01 f30c 	mul.w	r3, r1, ip
  4066f4:	42ab      	cmp	r3, r5
  4066f6:	fa00 f40e 	lsl.w	r4, r0, lr
  4066fa:	d909      	bls.n	406710 <__udivmoddi4+0x1bc>
  4066fc:	19ed      	adds	r5, r5, r7
  4066fe:	f101 30ff 	add.w	r0, r1, #4294967295
  406702:	f080 808a 	bcs.w	40681a <__udivmoddi4+0x2c6>
  406706:	42ab      	cmp	r3, r5
  406708:	f240 8087 	bls.w	40681a <__udivmoddi4+0x2c6>
  40670c:	3902      	subs	r1, #2
  40670e:	443d      	add	r5, r7
  406710:	1aeb      	subs	r3, r5, r3
  406712:	fa1f f588 	uxth.w	r5, r8
  406716:	fbb3 f0f2 	udiv	r0, r3, r2
  40671a:	fb02 3310 	mls	r3, r2, r0, r3
  40671e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406722:	fb00 f30c 	mul.w	r3, r0, ip
  406726:	42ab      	cmp	r3, r5
  406728:	d907      	bls.n	40673a <__udivmoddi4+0x1e6>
  40672a:	19ed      	adds	r5, r5, r7
  40672c:	f100 38ff 	add.w	r8, r0, #4294967295
  406730:	d26f      	bcs.n	406812 <__udivmoddi4+0x2be>
  406732:	42ab      	cmp	r3, r5
  406734:	d96d      	bls.n	406812 <__udivmoddi4+0x2be>
  406736:	3802      	subs	r0, #2
  406738:	443d      	add	r5, r7
  40673a:	1aeb      	subs	r3, r5, r3
  40673c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406740:	e78f      	b.n	406662 <__udivmoddi4+0x10e>
  406742:	f1c1 0720 	rsb	r7, r1, #32
  406746:	fa22 f807 	lsr.w	r8, r2, r7
  40674a:	408b      	lsls	r3, r1
  40674c:	fa05 f401 	lsl.w	r4, r5, r1
  406750:	ea48 0303 	orr.w	r3, r8, r3
  406754:	fa20 fe07 	lsr.w	lr, r0, r7
  406758:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40675c:	40fd      	lsrs	r5, r7
  40675e:	ea4e 0e04 	orr.w	lr, lr, r4
  406762:	fbb5 f9fc 	udiv	r9, r5, ip
  406766:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40676a:	fb0c 5519 	mls	r5, ip, r9, r5
  40676e:	fa1f f883 	uxth.w	r8, r3
  406772:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406776:	fb09 f408 	mul.w	r4, r9, r8
  40677a:	42ac      	cmp	r4, r5
  40677c:	fa02 f201 	lsl.w	r2, r2, r1
  406780:	fa00 fa01 	lsl.w	sl, r0, r1
  406784:	d908      	bls.n	406798 <__udivmoddi4+0x244>
  406786:	18ed      	adds	r5, r5, r3
  406788:	f109 30ff 	add.w	r0, r9, #4294967295
  40678c:	d243      	bcs.n	406816 <__udivmoddi4+0x2c2>
  40678e:	42ac      	cmp	r4, r5
  406790:	d941      	bls.n	406816 <__udivmoddi4+0x2c2>
  406792:	f1a9 0902 	sub.w	r9, r9, #2
  406796:	441d      	add	r5, r3
  406798:	1b2d      	subs	r5, r5, r4
  40679a:	fa1f fe8e 	uxth.w	lr, lr
  40679e:	fbb5 f0fc 	udiv	r0, r5, ip
  4067a2:	fb0c 5510 	mls	r5, ip, r0, r5
  4067a6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4067aa:	fb00 f808 	mul.w	r8, r0, r8
  4067ae:	45a0      	cmp	r8, r4
  4067b0:	d907      	bls.n	4067c2 <__udivmoddi4+0x26e>
  4067b2:	18e4      	adds	r4, r4, r3
  4067b4:	f100 35ff 	add.w	r5, r0, #4294967295
  4067b8:	d229      	bcs.n	40680e <__udivmoddi4+0x2ba>
  4067ba:	45a0      	cmp	r8, r4
  4067bc:	d927      	bls.n	40680e <__udivmoddi4+0x2ba>
  4067be:	3802      	subs	r0, #2
  4067c0:	441c      	add	r4, r3
  4067c2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4067c6:	eba4 0408 	sub.w	r4, r4, r8
  4067ca:	fba0 8902 	umull	r8, r9, r0, r2
  4067ce:	454c      	cmp	r4, r9
  4067d0:	46c6      	mov	lr, r8
  4067d2:	464d      	mov	r5, r9
  4067d4:	d315      	bcc.n	406802 <__udivmoddi4+0x2ae>
  4067d6:	d012      	beq.n	4067fe <__udivmoddi4+0x2aa>
  4067d8:	b156      	cbz	r6, 4067f0 <__udivmoddi4+0x29c>
  4067da:	ebba 030e 	subs.w	r3, sl, lr
  4067de:	eb64 0405 	sbc.w	r4, r4, r5
  4067e2:	fa04 f707 	lsl.w	r7, r4, r7
  4067e6:	40cb      	lsrs	r3, r1
  4067e8:	431f      	orrs	r7, r3
  4067ea:	40cc      	lsrs	r4, r1
  4067ec:	6037      	str	r7, [r6, #0]
  4067ee:	6074      	str	r4, [r6, #4]
  4067f0:	2100      	movs	r1, #0
  4067f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4067f6:	4618      	mov	r0, r3
  4067f8:	e6f8      	b.n	4065ec <__udivmoddi4+0x98>
  4067fa:	4690      	mov	r8, r2
  4067fc:	e6e0      	b.n	4065c0 <__udivmoddi4+0x6c>
  4067fe:	45c2      	cmp	sl, r8
  406800:	d2ea      	bcs.n	4067d8 <__udivmoddi4+0x284>
  406802:	ebb8 0e02 	subs.w	lr, r8, r2
  406806:	eb69 0503 	sbc.w	r5, r9, r3
  40680a:	3801      	subs	r0, #1
  40680c:	e7e4      	b.n	4067d8 <__udivmoddi4+0x284>
  40680e:	4628      	mov	r0, r5
  406810:	e7d7      	b.n	4067c2 <__udivmoddi4+0x26e>
  406812:	4640      	mov	r0, r8
  406814:	e791      	b.n	40673a <__udivmoddi4+0x1e6>
  406816:	4681      	mov	r9, r0
  406818:	e7be      	b.n	406798 <__udivmoddi4+0x244>
  40681a:	4601      	mov	r1, r0
  40681c:	e778      	b.n	406710 <__udivmoddi4+0x1bc>
  40681e:	3802      	subs	r0, #2
  406820:	443c      	add	r4, r7
  406822:	e745      	b.n	4066b0 <__udivmoddi4+0x15c>
  406824:	4608      	mov	r0, r1
  406826:	e708      	b.n	40663a <__udivmoddi4+0xe6>
  406828:	f1a8 0802 	sub.w	r8, r8, #2
  40682c:	443d      	add	r5, r7
  40682e:	e72b      	b.n	406688 <__udivmoddi4+0x134>

00406830 <__aeabi_idiv0>:
  406830:	4770      	bx	lr
  406832:	bf00      	nop

00406834 <OV2640_JPEG>:
  406834:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  406844:	ffff 0000                                   ....

00406848 <OV2640_JPEG_1024x768>:
  406848:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406858:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406868:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406878:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406888:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

00406898 <OV2640_JPEG_1280x1024>:
  406898:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4068a8:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4068b8:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4068c8:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4068d8:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  4068e8:	ffff 0000                                   ....

004068ec <OV2640_JPEG_1600x1200>:
  4068ec:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4068fc:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  40690c:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  40691c:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  40692c:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  40693c:	ffff 0000                                   ....

00406940 <OV2640_JPEG_320x240>:
  406940:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  406950:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  406960:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  406970:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  406980:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

00406990 <OV2640_JPEG_640x480>:
  406990:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4069a0:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4069b0:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4069c0:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  4069d0:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  4069e0:	ffff 0000                                   ....

004069e4 <OV2640_JPEG_800x600>:
  4069e4:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4069f4:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406a04:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406a14:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  406a24:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  406a34:	ffff 0000                                   ....

00406a38 <OV2640_JPEG_INIT>:
  406a38:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  406a48:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  406a58:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  406a68:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  406a78:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  406a88:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  406a98:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  406aa8:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  406ab8:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  406ac8:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  406ad8:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  406ae8:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  406af8:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  406b08:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  406b18:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  406b28:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  406b38:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  406b48:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  406b58:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  406b68:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  406b78:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  406b88:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  406b98:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  406ba8:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

00406bb8 <OV2640_QQVGA_RGB888>:
  406bb8:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406bc8:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406bd8:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406be8:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406bf8:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406c08:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406c18:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406c28:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406c38:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406c48:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406c58:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406c68:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406c78:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406c88:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  406c98:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406ca8:	0228 ffff                                   (...

00406cac <OV2640_QQVGA_YUV422>:
  406cac:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  406cbc:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  406ccc:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  406cdc:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  406cec:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  406cfc:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  406d0c:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  406d1c:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  406d2c:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  406d3c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406d4c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406d5c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406d6c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406d7c:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  406d8c:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  406d9c:	00d9 ffff                                   ....

00406da0 <OV2640_QVGA_RGB888>:
  406da0:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406db0:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406dc0:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406dd0:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406de0:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406df0:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406e00:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406e10:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406e20:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406e30:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406e40:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406e50:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406e60:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406e70:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  406e80:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406e90:	0228 ffff                                   (...

00406e94 <OV2640_QVGA_YUV422_10FPS>:
  406e94:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  406ea4:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406eb4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406ec4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406ed4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406ee4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406ef4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406f04:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406f14:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406f24:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406f34:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406f44:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406f54:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406f64:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406f74:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406f84 <OV2640_QVGA_YUV422_15FPS>:
  406f84:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  406f94:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406fa4:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406fb4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406fc4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406fd4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406fe4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406ff4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  407004:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407014:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407024:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407034:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407044:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407054:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407064:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407074 <OV2640_QVGA_YUV422_20FPS>:
  407074:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407084:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407094:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  4070a4:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  4070b4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4070c4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4070d4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4070e4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4070f4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407104:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407114:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407124:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407134:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407144:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407154:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407164 <OV2640_QVGA_YUV422_30FPS>:
  407164:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  407174:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407184:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407194:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  4071a4:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4071b4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4071c4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4071d4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4071e4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4071f4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407204:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407214:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407224:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407234:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407244:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407254 <OV2640_TEST_PATTERN>:
  407254:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407264:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407274:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407284:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407294:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4072a4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4072b4:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  4072c4:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  4072d4:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  4072e4:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  4072f4:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  407304:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  407314:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  407324:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  407334:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  407344:	0228 ffff                                   (...

00407348 <OV2640_VGA_YUV422_20FPS>:
  407348:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407358:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407368:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407378:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407388:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407398:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4073a8:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4073b8:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4073c8:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4073d8:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4073e8:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4073f8:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407408:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407418:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  407428:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407438 <OV2640_YUV422>:
  407438:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  407448:	0000 ffff c200 0001 00c0 0000 0800 0000     ................
	...
  407464:	6577 2062 6573 7574 2070 6f6d 6564 6920     web setup mode i
  407474:	696e 6974 7461 6465 0a0d 0000 7453 7261     nitiated....Star
  407484:	2074 7274 6e61 6673 7265 0000 6f4e 656e     t transfer..None
  407494:	0000 0000 6c43 6569 746e 6e20 746f 6320     ....Client not c
  4074a4:	6e6f 656e 7463 6465 0000 0000 6557 7362     onnected....Webs
  4074b4:	636f 656b 2074 6f63 6e6e 6365 6574 0064     ocket connected.
  4074c4:	6557 7362 636f 656b 2074 6964 6373 6e6f     Websocket discon
  4074d4:	656e 7463 6465 0000 6d69 6761 5f65 7274     nected..image_tr
  4074e4:	6e61 6673 7265 2520 0d64 000a 6573 7574     ansfer %d...setu
  4074f4:	2070 6577 0d62 000a 6573 2074 7973 6320     p web...set sy c
  407504:	7020 6f20 0d6e 000a 6573 2074 7973 6320      p on...set sy c
  407514:	6520 6f20 0d6e 000a 6567 2074 6c77 6e20      e on...get wl n
  407524:	7320 0a0d 0000 0000 6f70 6c6c 6120 6c6c      s......poll all
  407534:	0a0d 0000                                   ....

00407538 <_global_impure_ptr>:
  407538:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  407548:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  407558:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407568:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407578:	296c 0000 0030 0000                         l)..0...

00407580 <blanks.7223>:
  407580:	2020 2020 2020 2020 2020 2020 2020 2020                     

00407590 <zeroes.7224>:
  407590:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  4075a0:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

004075b0 <__mprec_bigtens>:
  4075b0:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  4075c0:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  4075d0:	bf3c 7f73 4fdd 7515                         <.s..O.u

004075d8 <__mprec_tens>:
  4075d8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4075e8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4075f8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  407608:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  407618:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  407628:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  407638:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407648:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407658:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407668:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407678:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407688:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407698:	9db4 79d9 7843 44ea                         ...yCx.D

004076a0 <p05.6055>:
  4076a0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  4076b0:	4f50 4953 0058 0000 002e 0000               POSIX.......

004076bc <_ctype_>:
  4076bc:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  4076cc:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4076dc:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4076ec:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4076fc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40770c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40771c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40772c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40773c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004077c0 <_init>:
  4077c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4077c2:	bf00      	nop
  4077c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4077c6:	bc08      	pop	{r3}
  4077c8:	469e      	mov	lr, r3
  4077ca:	4770      	bx	lr

004077cc <__init_array_start>:
  4077cc:	00403469 	.word	0x00403469

004077d0 <__frame_dummy_init_array_entry>:
  4077d0:	004000f1                                ..@.

004077d4 <_fini>:
  4077d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4077d6:	bf00      	nop
  4077d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4077da:	bc08      	pop	{r3}
  4077dc:	469e      	mov	lr, r3
  4077de:	4770      	bx	lr

004077e0 <__fini_array_start>:
  4077e0:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__atexit_recursive_mutex>:
20000440:	9550 2001                                   P.. 

20000444 <__malloc_av_>:
	...
2000044c:	0444 2000 0444 2000 044c 2000 044c 2000     D.. D.. L.. L.. 
2000045c:	0454 2000 0454 2000 045c 2000 045c 2000     T.. T.. \.. \.. 
2000046c:	0464 2000 0464 2000 046c 2000 046c 2000     d.. d.. l.. l.. 
2000047c:	0474 2000 0474 2000 047c 2000 047c 2000     t.. t.. |.. |.. 
2000048c:	0484 2000 0484 2000 048c 2000 048c 2000     ... ... ... ... 
2000049c:	0494 2000 0494 2000 049c 2000 049c 2000     ... ... ... ... 
200004ac:	04a4 2000 04a4 2000 04ac 2000 04ac 2000     ... ... ... ... 
200004bc:	04b4 2000 04b4 2000 04bc 2000 04bc 2000     ... ... ... ... 
200004cc:	04c4 2000 04c4 2000 04cc 2000 04cc 2000     ... ... ... ... 
200004dc:	04d4 2000 04d4 2000 04dc 2000 04dc 2000     ... ... ... ... 
200004ec:	04e4 2000 04e4 2000 04ec 2000 04ec 2000     ... ... ... ... 
200004fc:	04f4 2000 04f4 2000 04fc 2000 04fc 2000     ... ... ... ... 
2000050c:	0504 2000 0504 2000 050c 2000 050c 2000     ... ... ... ... 
2000051c:	0514 2000 0514 2000 051c 2000 051c 2000     ... ... ... ... 
2000052c:	0524 2000 0524 2000 052c 2000 052c 2000     $.. $.. ,.. ,.. 
2000053c:	0534 2000 0534 2000 053c 2000 053c 2000     4.. 4.. <.. <.. 
2000054c:	0544 2000 0544 2000 054c 2000 054c 2000     D.. D.. L.. L.. 
2000055c:	0554 2000 0554 2000 055c 2000 055c 2000     T.. T.. \.. \.. 
2000056c:	0564 2000 0564 2000 056c 2000 056c 2000     d.. d.. l.. l.. 
2000057c:	0574 2000 0574 2000 057c 2000 057c 2000     t.. t.. |.. |.. 
2000058c:	0584 2000 0584 2000 058c 2000 058c 2000     ... ... ... ... 
2000059c:	0594 2000 0594 2000 059c 2000 059c 2000     ... ... ... ... 
200005ac:	05a4 2000 05a4 2000 05ac 2000 05ac 2000     ... ... ... ... 
200005bc:	05b4 2000 05b4 2000 05bc 2000 05bc 2000     ... ... ... ... 
200005cc:	05c4 2000 05c4 2000 05cc 2000 05cc 2000     ... ... ... ... 
200005dc:	05d4 2000 05d4 2000 05dc 2000 05dc 2000     ... ... ... ... 
200005ec:	05e4 2000 05e4 2000 05ec 2000 05ec 2000     ... ... ... ... 
200005fc:	05f4 2000 05f4 2000 05fc 2000 05fc 2000     ... ... ... ... 
2000060c:	0604 2000 0604 2000 060c 2000 060c 2000     ... ... ... ... 
2000061c:	0614 2000 0614 2000 061c 2000 061c 2000     ... ... ... ... 
2000062c:	0624 2000 0624 2000 062c 2000 062c 2000     $.. $.. ,.. ,.. 
2000063c:	0634 2000 0634 2000 063c 2000 063c 2000     4.. 4.. <.. <.. 
2000064c:	0644 2000 0644 2000 064c 2000 064c 2000     D.. D.. L.. L.. 
2000065c:	0654 2000 0654 2000 065c 2000 065c 2000     T.. T.. \.. \.. 
2000066c:	0664 2000 0664 2000 066c 2000 066c 2000     d.. d.. l.. l.. 
2000067c:	0674 2000 0674 2000 067c 2000 067c 2000     t.. t.. |.. |.. 
2000068c:	0684 2000 0684 2000 068c 2000 068c 2000     ... ... ... ... 
2000069c:	0694 2000 0694 2000 069c 2000 069c 2000     ... ... ... ... 
200006ac:	06a4 2000 06a4 2000 06ac 2000 06ac 2000     ... ... ... ... 
200006bc:	06b4 2000 06b4 2000 06bc 2000 06bc 2000     ... ... ... ... 
200006cc:	06c4 2000 06c4 2000 06cc 2000 06cc 2000     ... ... ... ... 
200006dc:	06d4 2000 06d4 2000 06dc 2000 06dc 2000     ... ... ... ... 
200006ec:	06e4 2000 06e4 2000 06ec 2000 06ec 2000     ... ... ... ... 
200006fc:	06f4 2000 06f4 2000 06fc 2000 06fc 2000     ... ... ... ... 
2000070c:	0704 2000 0704 2000 070c 2000 070c 2000     ... ... ... ... 
2000071c:	0714 2000 0714 2000 071c 2000 071c 2000     ... ... ... ... 
2000072c:	0724 2000 0724 2000 072c 2000 072c 2000     $.. $.. ,.. ,.. 
2000073c:	0734 2000 0734 2000 073c 2000 073c 2000     4.. 4.. <.. <.. 
2000074c:	0744 2000 0744 2000 074c 2000 074c 2000     D.. D.. L.. L.. 
2000075c:	0754 2000 0754 2000 075c 2000 075c 2000     T.. T.. \.. \.. 
2000076c:	0764 2000 0764 2000 076c 2000 076c 2000     d.. d.. l.. l.. 
2000077c:	0774 2000 0774 2000 077c 2000 077c 2000     t.. t.. |.. |.. 
2000078c:	0784 2000 0784 2000 078c 2000 078c 2000     ... ... ... ... 
2000079c:	0794 2000 0794 2000 079c 2000 079c 2000     ... ... ... ... 
200007ac:	07a4 2000 07a4 2000 07ac 2000 07ac 2000     ... ... ... ... 
200007bc:	07b4 2000 07b4 2000 07bc 2000 07bc 2000     ... ... ... ... 
200007cc:	07c4 2000 07c4 2000 07cc 2000 07cc 2000     ... ... ... ... 
200007dc:	07d4 2000 07d4 2000 07dc 2000 07dc 2000     ... ... ... ... 
200007ec:	07e4 2000 07e4 2000 07ec 2000 07ec 2000     ... ... ... ... 
200007fc:	07f4 2000 07f4 2000 07fc 2000 07fc 2000     ... ... ... ... 
2000080c:	0804 2000 0804 2000 080c 2000 080c 2000     ... ... ... ... 
2000081c:	0814 2000 0814 2000 081c 2000 081c 2000     ... ... ... ... 
2000082c:	0824 2000 0824 2000 082c 2000 082c 2000     $.. $.. ,.. ,.. 
2000083c:	0834 2000 0834 2000 083c 2000 083c 2000     4.. 4.. <.. <.. 

2000084c <__malloc_sbrk_base>:
2000084c:	ffff ffff                                   ....

20000850 <__malloc_trim_threshold>:
20000850:	0000 0002                                   ....

20000854 <__global_locale>:
20000854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000934:	5be9 0040 57a9 0040 0000 0000 76bc 0040     .[@..W@......v@.
20000944:	76b8 0040 7528 0040 7528 0040 7528 0040     .v@.(u@.(u@.(u@.
20000954:	7528 0040 7528 0040 7528 0040 7528 0040     (u@.(u@.(u@.(u@.
20000964:	7528 0040 7528 0040 ffff ffff ffff ffff     (u@.(u@.........
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2000099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
