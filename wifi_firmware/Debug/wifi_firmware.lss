
wifi_firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007794  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00407794  00407794  00017794  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  0040779c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00018bb8  200009c0  0040815c  000209c0  2**2
                  ALLOC
  4 .stack        00003000  20019578  00420d14  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   00018387  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000035d0  00000000  00000000  00038dca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000052f2  00000000  00000000  0003c39a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ac8  00000000  00000000  0004168c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000009f0  00000000  00000000  00042154  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00015009  00000000  00000000  00042b44  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000edd3  00000000  00000000  00057b4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004fb1d  00000000  00000000  00066920  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002430  00000000  00000000  000b6440  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	78 c5 01 20 11 15 40 00 0d 15 40 00 0d 15 40 00     x.. ..@...@...@.
  400010:	0d 15 40 00 0d 15 40 00 0d 15 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	0d 15 40 00 0d 15 40 00 00 00 00 00 0d 15 40 00     ..@...@.......@.
  40003c:	0d 15 40 00 0d 15 40 00 0d 15 40 00 0d 15 40 00     ..@...@...@...@.
  40004c:	0d 15 40 00 0d 15 40 00 0d 15 40 00 0d 15 40 00     ..@...@...@...@.
  40005c:	00 00 00 00 0d 15 40 00 0d 15 40 00 00 00 00 00     ......@...@.....
  40006c:	21 05 40 00 35 05 40 00 00 00 00 00 19 11 40 00     !.@.5.@.......@.
  40007c:	0d 15 40 00 00 00 00 00 00 00 00 00 0d 15 40 00     ..@...........@.
  40008c:	0d 15 40 00 0d 15 40 00 0d 15 40 00 0d 15 40 00     ..@...@...@...@.
  40009c:	51 10 40 00 0d 15 40 00 0d 15 40 00 00 00 00 00     Q.@...@...@.....
	...
  4000b4:	0d 15 40 00 0d 15 40 00 0d 15 40 00 0d 15 40 00     ..@...@...@...@.
  4000c4:	0d 15 40 00 0d 15 40 00                             ..@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	0040779c 	.word	0x0040779c

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	0040779c 	.word	0x0040779c
  40012c:	200009c4 	.word	0x200009c4
  400130:	0040779c 	.word	0x0040779c
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	004016cd 	.word	0x004016cd
  40017c:	004005ad 	.word	0x004005ad
  400180:	00400601 	.word	0x00400601
  400184:	00400611 	.word	0x00400611
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	00400621 	.word	0x00400621
  400194:	00400549 	.word	0x00400549
  400198:	004015bd 	.word	0x004015bd

0040019c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  40019c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  40019e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4001a2:	d039      	beq.n	400218 <pio_set_peripheral+0x7c>
  4001a4:	d813      	bhi.n	4001ce <pio_set_peripheral+0x32>
  4001a6:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4001aa:	d025      	beq.n	4001f8 <pio_set_peripheral+0x5c>
  4001ac:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4001b0:	d10a      	bne.n	4001c8 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001b2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001b4:	4313      	orrs	r3, r2
  4001b6:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4001b8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4001ba:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4001bc:	400b      	ands	r3, r1
  4001be:	ea23 0302 	bic.w	r3, r3, r2
  4001c2:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4001c4:	6042      	str	r2, [r0, #4]
  4001c6:	4770      	bx	lr
	switch (ul_type) {
  4001c8:	2900      	cmp	r1, #0
  4001ca:	d1fb      	bne.n	4001c4 <pio_set_peripheral+0x28>
  4001cc:	4770      	bx	lr
  4001ce:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4001d2:	d020      	beq.n	400216 <pio_set_peripheral+0x7a>
  4001d4:	d809      	bhi.n	4001ea <pio_set_peripheral+0x4e>
  4001d6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4001da:	d1f3      	bne.n	4001c4 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001dc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001de:	4313      	orrs	r3, r2
  4001e0:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4001e2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4001e4:	4313      	orrs	r3, r2
  4001e6:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4001e8:	e7ec      	b.n	4001c4 <pio_set_peripheral+0x28>
	switch (ul_type) {
  4001ea:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4001ee:	d012      	beq.n	400216 <pio_set_peripheral+0x7a>
  4001f0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4001f4:	d00f      	beq.n	400216 <pio_set_peripheral+0x7a>
  4001f6:	e7e5      	b.n	4001c4 <pio_set_peripheral+0x28>
{
  4001f8:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001fa:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4001fc:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4001fe:	43d3      	mvns	r3, r2
  400200:	4021      	ands	r1, r4
  400202:	461c      	mov	r4, r3
  400204:	4019      	ands	r1, r3
  400206:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400208:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40020a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  40020c:	400b      	ands	r3, r1
  40020e:	4023      	ands	r3, r4
  400210:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400212:	6042      	str	r2, [r0, #4]
}
  400214:	bc10      	pop	{r4}
  400216:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400218:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40021a:	6f01      	ldr	r1, [r0, #112]	; 0x70
  40021c:	400b      	ands	r3, r1
  40021e:	ea23 0302 	bic.w	r3, r3, r2
  400222:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400224:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400226:	4313      	orrs	r3, r2
  400228:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40022a:	e7cb      	b.n	4001c4 <pio_set_peripheral+0x28>

0040022c <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40022c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40022e:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400232:	bf14      	ite	ne
  400234:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400236:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400238:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  40023c:	bf14      	ite	ne
  40023e:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  400240:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400242:	f012 0f02 	tst.w	r2, #2
  400246:	d107      	bne.n	400258 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400248:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  40024c:	bf18      	it	ne
  40024e:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  400252:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400254:	6001      	str	r1, [r0, #0]
  400256:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400258:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  40025c:	e7f9      	b.n	400252 <pio_set_input+0x26>

0040025e <pio_set_output>:
{
  40025e:	b410      	push	{r4}
  400260:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400262:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400264:	b944      	cbnz	r4, 400278 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400266:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400268:	b143      	cbz	r3, 40027c <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  40026a:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  40026c:	b942      	cbnz	r2, 400280 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  40026e:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400270:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400272:	6001      	str	r1, [r0, #0]
}
  400274:	bc10      	pop	{r4}
  400276:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400278:	6641      	str	r1, [r0, #100]	; 0x64
  40027a:	e7f5      	b.n	400268 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  40027c:	6541      	str	r1, [r0, #84]	; 0x54
  40027e:	e7f5      	b.n	40026c <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400280:	6301      	str	r1, [r0, #48]	; 0x30
  400282:	e7f5      	b.n	400270 <pio_set_output+0x12>

00400284 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400284:	f012 0f10 	tst.w	r2, #16
  400288:	d010      	beq.n	4002ac <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  40028a:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  40028e:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  400292:	bf14      	ite	ne
  400294:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  400298:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  40029c:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4002a0:	bf14      	ite	ne
  4002a2:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4002a6:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4002aa:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4002ac:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4002b0:	4770      	bx	lr

004002b2 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4002b2:	6401      	str	r1, [r0, #64]	; 0x40
  4002b4:	4770      	bx	lr

004002b6 <pio_disable_interrupt>:
	p_pio->PIO_IDR = ul_mask;
  4002b6:	6441      	str	r1, [r0, #68]	; 0x44
  4002b8:	4770      	bx	lr

004002ba <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4002ba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4002bc:	4770      	bx	lr

004002be <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4002be:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4002c0:	4770      	bx	lr

004002c2 <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002c2:	0943      	lsrs	r3, r0, #5
  4002c4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002c8:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4002cc:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  4002ce:	f000 001f 	and.w	r0, r0, #31
  4002d2:	2201      	movs	r2, #1
  4002d4:	fa02 f000 	lsl.w	r0, r2, r0
  4002d8:	6318      	str	r0, [r3, #48]	; 0x30
  4002da:	4770      	bx	lr

004002dc <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002dc:	0943      	lsrs	r3, r0, #5
  4002de:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002e2:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4002e6:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  4002e8:	f000 001f 	and.w	r0, r0, #31
  4002ec:	2201      	movs	r2, #1
  4002ee:	fa02 f000 	lsl.w	r0, r2, r0
  4002f2:	6358      	str	r0, [r3, #52]	; 0x34
  4002f4:	4770      	bx	lr
	...

004002f8 <pio_configure_pin>:
{
  4002f8:	b570      	push	{r4, r5, r6, lr}
  4002fa:	b082      	sub	sp, #8
  4002fc:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002fe:	0943      	lsrs	r3, r0, #5
  400300:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400304:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400308:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  40030a:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  40030e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400312:	d053      	beq.n	4003bc <pio_configure_pin+0xc4>
  400314:	d80a      	bhi.n	40032c <pio_configure_pin+0x34>
  400316:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  40031a:	d02d      	beq.n	400378 <pio_configure_pin+0x80>
  40031c:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400320:	d03b      	beq.n	40039a <pio_configure_pin+0xa2>
  400322:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400326:	d015      	beq.n	400354 <pio_configure_pin+0x5c>
		return 0;
  400328:	2000      	movs	r0, #0
  40032a:	e023      	b.n	400374 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  40032c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400330:	d055      	beq.n	4003de <pio_configure_pin+0xe6>
  400332:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400336:	d052      	beq.n	4003de <pio_configure_pin+0xe6>
  400338:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  40033c:	d1f4      	bne.n	400328 <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  40033e:	f000 011f 	and.w	r1, r0, #31
  400342:	2601      	movs	r6, #1
  400344:	462a      	mov	r2, r5
  400346:	fa06 f101 	lsl.w	r1, r6, r1
  40034a:	4620      	mov	r0, r4
  40034c:	4b2f      	ldr	r3, [pc, #188]	; (40040c <pio_configure_pin+0x114>)
  40034e:	4798      	blx	r3
	return 1;
  400350:	4630      	mov	r0, r6
		break;
  400352:	e00f      	b.n	400374 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400354:	f000 001f 	and.w	r0, r0, #31
  400358:	2601      	movs	r6, #1
  40035a:	4086      	lsls	r6, r0
  40035c:	4632      	mov	r2, r6
  40035e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400362:	4620      	mov	r0, r4
  400364:	4b2a      	ldr	r3, [pc, #168]	; (400410 <pio_configure_pin+0x118>)
  400366:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400368:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  40036c:	bf14      	ite	ne
  40036e:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400370:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400372:	2001      	movs	r0, #1
}
  400374:	b002      	add	sp, #8
  400376:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400378:	f000 001f 	and.w	r0, r0, #31
  40037c:	2601      	movs	r6, #1
  40037e:	4086      	lsls	r6, r0
  400380:	4632      	mov	r2, r6
  400382:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400386:	4620      	mov	r0, r4
  400388:	4b21      	ldr	r3, [pc, #132]	; (400410 <pio_configure_pin+0x118>)
  40038a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40038c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400390:	bf14      	ite	ne
  400392:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400394:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400396:	2001      	movs	r0, #1
  400398:	e7ec      	b.n	400374 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40039a:	f000 001f 	and.w	r0, r0, #31
  40039e:	2601      	movs	r6, #1
  4003a0:	4086      	lsls	r6, r0
  4003a2:	4632      	mov	r2, r6
  4003a4:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  4003a8:	4620      	mov	r0, r4
  4003aa:	4b19      	ldr	r3, [pc, #100]	; (400410 <pio_configure_pin+0x118>)
  4003ac:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4003ae:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003b2:	bf14      	ite	ne
  4003b4:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003b6:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003b8:	2001      	movs	r0, #1
  4003ba:	e7db      	b.n	400374 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4003bc:	f000 001f 	and.w	r0, r0, #31
  4003c0:	2601      	movs	r6, #1
  4003c2:	4086      	lsls	r6, r0
  4003c4:	4632      	mov	r2, r6
  4003c6:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4003ca:	4620      	mov	r0, r4
  4003cc:	4b10      	ldr	r3, [pc, #64]	; (400410 <pio_configure_pin+0x118>)
  4003ce:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4003d0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003d4:	bf14      	ite	ne
  4003d6:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003d8:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003da:	2001      	movs	r0, #1
  4003dc:	e7ca      	b.n	400374 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4003de:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4003e2:	f000 011f 	and.w	r1, r0, #31
  4003e6:	2601      	movs	r6, #1
  4003e8:	ea05 0306 	and.w	r3, r5, r6
  4003ec:	9300      	str	r3, [sp, #0]
  4003ee:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4003f2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4003f6:	bf14      	ite	ne
  4003f8:	2200      	movne	r2, #0
  4003fa:	2201      	moveq	r2, #1
  4003fc:	fa06 f101 	lsl.w	r1, r6, r1
  400400:	4620      	mov	r0, r4
  400402:	4c04      	ldr	r4, [pc, #16]	; (400414 <pio_configure_pin+0x11c>)
  400404:	47a0      	blx	r4
	return 1;
  400406:	4630      	mov	r0, r6
		break;
  400408:	e7b4      	b.n	400374 <pio_configure_pin+0x7c>
  40040a:	bf00      	nop
  40040c:	0040022d 	.word	0x0040022d
  400410:	0040019d 	.word	0x0040019d
  400414:	0040025f 	.word	0x0040025f

00400418 <pio_capture_enable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  400418:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  40041c:	f043 0301 	orr.w	r3, r3, #1
  400420:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  400424:	2201      	movs	r2, #1
  400426:	4b01      	ldr	r3, [pc, #4]	; (40042c <pio_capture_enable+0x14>)
  400428:	601a      	str	r2, [r3, #0]
  40042a:	4770      	bx	lr
  40042c:	20000ab0 	.word	0x20000ab0

00400430 <pio_capture_disable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  400430:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400434:	f023 0301 	bic.w	r3, r3, #1
  400438:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  40043c:	2200      	movs	r2, #0
  40043e:	4b01      	ldr	r3, [pc, #4]	; (400444 <pio_capture_disable+0x14>)
  400440:	601a      	str	r2, [r3, #0]
  400442:	4770      	bx	lr
  400444:	20000ab0 	.word	0x20000ab0

00400448 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400448:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40044c:	4681      	mov	r9, r0
  40044e:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400450:	4b12      	ldr	r3, [pc, #72]	; (40049c <pio_handler_process+0x54>)
  400452:	4798      	blx	r3
  400454:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400456:	4648      	mov	r0, r9
  400458:	4b11      	ldr	r3, [pc, #68]	; (4004a0 <pio_handler_process+0x58>)
  40045a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  40045c:	4005      	ands	r5, r0
  40045e:	d013      	beq.n	400488 <pio_handler_process+0x40>
  400460:	4c10      	ldr	r4, [pc, #64]	; (4004a4 <pio_handler_process+0x5c>)
  400462:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400466:	e003      	b.n	400470 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400468:	42b4      	cmp	r4, r6
  40046a:	d00d      	beq.n	400488 <pio_handler_process+0x40>
  40046c:	3410      	adds	r4, #16
		while (status != 0) {
  40046e:	b15d      	cbz	r5, 400488 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400470:	6820      	ldr	r0, [r4, #0]
  400472:	42b8      	cmp	r0, r7
  400474:	d1f8      	bne.n	400468 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400476:	6861      	ldr	r1, [r4, #4]
  400478:	4229      	tst	r1, r5
  40047a:	d0f5      	beq.n	400468 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  40047c:	68e3      	ldr	r3, [r4, #12]
  40047e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400480:	6863      	ldr	r3, [r4, #4]
  400482:	ea25 0503 	bic.w	r5, r5, r3
  400486:	e7ef      	b.n	400468 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  400488:	4b07      	ldr	r3, [pc, #28]	; (4004a8 <pio_handler_process+0x60>)
  40048a:	681b      	ldr	r3, [r3, #0]
  40048c:	b123      	cbz	r3, 400498 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  40048e:	4b07      	ldr	r3, [pc, #28]	; (4004ac <pio_handler_process+0x64>)
  400490:	681b      	ldr	r3, [r3, #0]
  400492:	b10b      	cbz	r3, 400498 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400494:	4648      	mov	r0, r9
  400496:	4798      	blx	r3
  400498:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40049c:	004002bb 	.word	0x004002bb
  4004a0:	004002bf 	.word	0x004002bf
  4004a4:	200009dc 	.word	0x200009dc
  4004a8:	20000ab0 	.word	0x20000ab0
  4004ac:	20000a50 	.word	0x20000a50

004004b0 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  4004b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  4004b2:	4c18      	ldr	r4, [pc, #96]	; (400514 <pio_handler_set+0x64>)
  4004b4:	6826      	ldr	r6, [r4, #0]
  4004b6:	2e06      	cmp	r6, #6
  4004b8:	d829      	bhi.n	40050e <pio_handler_set+0x5e>
  4004ba:	f04f 0c00 	mov.w	ip, #0
  4004be:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004c0:	4f15      	ldr	r7, [pc, #84]	; (400518 <pio_handler_set+0x68>)
  4004c2:	e004      	b.n	4004ce <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4004c4:	3401      	adds	r4, #1
  4004c6:	b2e4      	uxtb	r4, r4
  4004c8:	46a4      	mov	ip, r4
  4004ca:	42a6      	cmp	r6, r4
  4004cc:	d309      	bcc.n	4004e2 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  4004ce:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004d0:	0125      	lsls	r5, r4, #4
  4004d2:	597d      	ldr	r5, [r7, r5]
  4004d4:	428d      	cmp	r5, r1
  4004d6:	d1f5      	bne.n	4004c4 <pio_handler_set+0x14>
  4004d8:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4004dc:	686d      	ldr	r5, [r5, #4]
  4004de:	4295      	cmp	r5, r2
  4004e0:	d1f0      	bne.n	4004c4 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4004e2:	4d0d      	ldr	r5, [pc, #52]	; (400518 <pio_handler_set+0x68>)
  4004e4:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  4004e8:	eb05 040e 	add.w	r4, r5, lr
  4004ec:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4004f0:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4004f2:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4004f4:	9906      	ldr	r1, [sp, #24]
  4004f6:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4004f8:	3601      	adds	r6, #1
  4004fa:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  4004fc:	bf04      	itt	eq
  4004fe:	4905      	ldreq	r1, [pc, #20]	; (400514 <pio_handler_set+0x64>)
  400500:	600e      	streq	r6, [r1, #0]
  400502:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400504:	461a      	mov	r2, r3
  400506:	4b05      	ldr	r3, [pc, #20]	; (40051c <pio_handler_set+0x6c>)
  400508:	4798      	blx	r3

	return 0;
  40050a:	2000      	movs	r0, #0
  40050c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  40050e:	2001      	movs	r0, #1
}
  400510:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400512:	bf00      	nop
  400514:	20000a4c 	.word	0x20000a4c
  400518:	200009dc 	.word	0x200009dc
  40051c:	00400285 	.word	0x00400285

00400520 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400520:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400522:	210b      	movs	r1, #11
  400524:	4801      	ldr	r0, [pc, #4]	; (40052c <PIOA_Handler+0xc>)
  400526:	4b02      	ldr	r3, [pc, #8]	; (400530 <PIOA_Handler+0x10>)
  400528:	4798      	blx	r3
  40052a:	bd08      	pop	{r3, pc}
  40052c:	400e0e00 	.word	0x400e0e00
  400530:	00400449 	.word	0x00400449

00400534 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400534:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400536:	210c      	movs	r1, #12
  400538:	4801      	ldr	r0, [pc, #4]	; (400540 <PIOB_Handler+0xc>)
  40053a:	4b02      	ldr	r3, [pc, #8]	; (400544 <PIOB_Handler+0x10>)
  40053c:	4798      	blx	r3
  40053e:	bd08      	pop	{r3, pc}
  400540:	400e1000 	.word	0x400e1000
  400544:	00400449 	.word	0x00400449

00400548 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400548:	4a17      	ldr	r2, [pc, #92]	; (4005a8 <pmc_switch_mck_to_pllack+0x60>)
  40054a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40054c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400550:	4318      	orrs	r0, r3
  400552:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400554:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400556:	f013 0f08 	tst.w	r3, #8
  40055a:	d10a      	bne.n	400572 <pmc_switch_mck_to_pllack+0x2a>
  40055c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400560:	4911      	ldr	r1, [pc, #68]	; (4005a8 <pmc_switch_mck_to_pllack+0x60>)
  400562:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400564:	f012 0f08 	tst.w	r2, #8
  400568:	d103      	bne.n	400572 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40056a:	3b01      	subs	r3, #1
  40056c:	d1f9      	bne.n	400562 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40056e:	2001      	movs	r0, #1
  400570:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400572:	4a0d      	ldr	r2, [pc, #52]	; (4005a8 <pmc_switch_mck_to_pllack+0x60>)
  400574:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400576:	f023 0303 	bic.w	r3, r3, #3
  40057a:	f043 0302 	orr.w	r3, r3, #2
  40057e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400580:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400582:	f013 0f08 	tst.w	r3, #8
  400586:	d10a      	bne.n	40059e <pmc_switch_mck_to_pllack+0x56>
  400588:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40058c:	4906      	ldr	r1, [pc, #24]	; (4005a8 <pmc_switch_mck_to_pllack+0x60>)
  40058e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400590:	f012 0f08 	tst.w	r2, #8
  400594:	d105      	bne.n	4005a2 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400596:	3b01      	subs	r3, #1
  400598:	d1f9      	bne.n	40058e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40059a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40059c:	4770      	bx	lr
	return 0;
  40059e:	2000      	movs	r0, #0
  4005a0:	4770      	bx	lr
  4005a2:	2000      	movs	r0, #0
  4005a4:	4770      	bx	lr
  4005a6:	bf00      	nop
  4005a8:	400e0400 	.word	0x400e0400

004005ac <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4005ac:	b9c8      	cbnz	r0, 4005e2 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005ae:	4a11      	ldr	r2, [pc, #68]	; (4005f4 <pmc_switch_mainck_to_xtal+0x48>)
  4005b0:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4005b2:	0209      	lsls	r1, r1, #8
  4005b4:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4005b6:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4005ba:	f023 0303 	bic.w	r3, r3, #3
  4005be:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4005c2:	f043 0301 	orr.w	r3, r3, #1
  4005c6:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005c8:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4005ca:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4005cc:	f013 0f01 	tst.w	r3, #1
  4005d0:	d0fb      	beq.n	4005ca <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4005d2:	4a08      	ldr	r2, [pc, #32]	; (4005f4 <pmc_switch_mainck_to_xtal+0x48>)
  4005d4:	6a13      	ldr	r3, [r2, #32]
  4005d6:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4005da:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4005de:	6213      	str	r3, [r2, #32]
  4005e0:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005e2:	4904      	ldr	r1, [pc, #16]	; (4005f4 <pmc_switch_mainck_to_xtal+0x48>)
  4005e4:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005e6:	4a04      	ldr	r2, [pc, #16]	; (4005f8 <pmc_switch_mainck_to_xtal+0x4c>)
  4005e8:	401a      	ands	r2, r3
  4005ea:	4b04      	ldr	r3, [pc, #16]	; (4005fc <pmc_switch_mainck_to_xtal+0x50>)
  4005ec:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005ee:	620b      	str	r3, [r1, #32]
  4005f0:	4770      	bx	lr
  4005f2:	bf00      	nop
  4005f4:	400e0400 	.word	0x400e0400
  4005f8:	fec8fffc 	.word	0xfec8fffc
  4005fc:	01370002 	.word	0x01370002

00400600 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400600:	4b02      	ldr	r3, [pc, #8]	; (40060c <pmc_osc_is_ready_mainck+0xc>)
  400602:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400604:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400608:	4770      	bx	lr
  40060a:	bf00      	nop
  40060c:	400e0400 	.word	0x400e0400

00400610 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400610:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400614:	4b01      	ldr	r3, [pc, #4]	; (40061c <pmc_disable_pllack+0xc>)
  400616:	629a      	str	r2, [r3, #40]	; 0x28
  400618:	4770      	bx	lr
  40061a:	bf00      	nop
  40061c:	400e0400 	.word	0x400e0400

00400620 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400620:	4b02      	ldr	r3, [pc, #8]	; (40062c <pmc_is_locked_pllack+0xc>)
  400622:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400624:	f000 0002 	and.w	r0, r0, #2
  400628:	4770      	bx	lr
  40062a:	bf00      	nop
  40062c:	400e0400 	.word	0x400e0400

00400630 <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  400630:	b410      	push	{r4}
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  400632:	4c0a      	ldr	r4, [pc, #40]	; (40065c <pmc_enable_pllbck+0x2c>)
  400634:	2300      	movs	r3, #0
  400636:	62e3      	str	r3, [r4, #44]	; 0x2c
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  400638:	0209      	lsls	r1, r1, #8
  40063a:	f401 517c 	and.w	r1, r1, #16128	; 0x3f00
  40063e:	b2d2      	uxtb	r2, r2
  400640:	4311      	orrs	r1, r2
			| CKGR_PLLBR_MULB(mulb);
  400642:	4b07      	ldr	r3, [pc, #28]	; (400660 <pmc_enable_pllbck+0x30>)
  400644:	ea03 4000 	and.w	r0, r3, r0, lsl #16
  400648:	4301      	orrs	r1, r0
	PMC->CKGR_PLLBR =
  40064a:	62e1      	str	r1, [r4, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  40064c:	4622      	mov	r2, r4
  40064e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400650:	f013 0f04 	tst.w	r3, #4
  400654:	d0fb      	beq.n	40064e <pmc_enable_pllbck+0x1e>
}
  400656:	bc10      	pop	{r4}
  400658:	4770      	bx	lr
  40065a:	bf00      	nop
  40065c:	400e0400 	.word	0x400e0400
  400660:	07ff0000 	.word	0x07ff0000

00400664 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400664:	2822      	cmp	r0, #34	; 0x22
  400666:	d81e      	bhi.n	4006a6 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400668:	281f      	cmp	r0, #31
  40066a:	d80c      	bhi.n	400686 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40066c:	4b11      	ldr	r3, [pc, #68]	; (4006b4 <pmc_enable_periph_clk+0x50>)
  40066e:	699a      	ldr	r2, [r3, #24]
  400670:	2301      	movs	r3, #1
  400672:	4083      	lsls	r3, r0
  400674:	4393      	bics	r3, r2
  400676:	d018      	beq.n	4006aa <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400678:	2301      	movs	r3, #1
  40067a:	fa03 f000 	lsl.w	r0, r3, r0
  40067e:	4b0d      	ldr	r3, [pc, #52]	; (4006b4 <pmc_enable_periph_clk+0x50>)
  400680:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400682:	2000      	movs	r0, #0
  400684:	4770      	bx	lr
		ul_id -= 32;
  400686:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400688:	4b0a      	ldr	r3, [pc, #40]	; (4006b4 <pmc_enable_periph_clk+0x50>)
  40068a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40068e:	2301      	movs	r3, #1
  400690:	4083      	lsls	r3, r0
  400692:	4393      	bics	r3, r2
  400694:	d00b      	beq.n	4006ae <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400696:	2301      	movs	r3, #1
  400698:	fa03 f000 	lsl.w	r0, r3, r0
  40069c:	4b05      	ldr	r3, [pc, #20]	; (4006b4 <pmc_enable_periph_clk+0x50>)
  40069e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  4006a2:	2000      	movs	r0, #0
  4006a4:	4770      	bx	lr
		return 1;
  4006a6:	2001      	movs	r0, #1
  4006a8:	4770      	bx	lr
	return 0;
  4006aa:	2000      	movs	r0, #0
  4006ac:	4770      	bx	lr
  4006ae:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  4006b0:	4770      	bx	lr
  4006b2:	bf00      	nop
  4006b4:	400e0400 	.word	0x400e0400

004006b8 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4006b8:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006ba:	0189      	lsls	r1, r1, #6
  4006bc:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4006be:	2402      	movs	r4, #2
  4006c0:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4006c2:	f04f 31ff 	mov.w	r1, #4294967295
  4006c6:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  4006c8:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  4006ca:	605a      	str	r2, [r3, #4]
}
  4006cc:	bc10      	pop	{r4}
  4006ce:	4770      	bx	lr

004006d0 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  4006d0:	0189      	lsls	r1, r1, #6
  4006d2:	2305      	movs	r3, #5
  4006d4:	5043      	str	r3, [r0, r1]
  4006d6:	4770      	bx	lr

004006d8 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4006d8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4006dc:	61ca      	str	r2, [r1, #28]
  4006de:	4770      	bx	lr

004006e0 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006e0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  4006e4:	624a      	str	r2, [r1, #36]	; 0x24
  4006e6:	4770      	bx	lr

004006e8 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006e8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  4006ec:	6a08      	ldr	r0, [r1, #32]
}
  4006ee:	4770      	bx	lr

004006f0 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4006f0:	b4f0      	push	{r4, r5, r6, r7}
  4006f2:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4006f4:	2402      	movs	r4, #2
  4006f6:	9401      	str	r4, [sp, #4]
  4006f8:	2408      	movs	r4, #8
  4006fa:	9402      	str	r4, [sp, #8]
  4006fc:	2420      	movs	r4, #32
  4006fe:	9403      	str	r4, [sp, #12]
  400700:	2480      	movs	r4, #128	; 0x80
  400702:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400704:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400706:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400708:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  40070a:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  40070e:	d814      	bhi.n	40073a <tc_find_mck_divisor+0x4a>
  400710:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  400712:	42a0      	cmp	r0, r4
  400714:	d217      	bcs.n	400746 <tc_find_mck_divisor+0x56>
  400716:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400718:	af01      	add	r7, sp, #4
  40071a:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  40071e:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  400722:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400724:	4284      	cmp	r4, r0
  400726:	d30a      	bcc.n	40073e <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400728:	4286      	cmp	r6, r0
  40072a:	d90d      	bls.n	400748 <tc_find_mck_divisor+0x58>
			ul_index++) {
  40072c:	3501      	adds	r5, #1
	for (ul_index = 0;
  40072e:	2d05      	cmp	r5, #5
  400730:	d1f3      	bne.n	40071a <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  400732:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400734:	b006      	add	sp, #24
  400736:	bcf0      	pop	{r4, r5, r6, r7}
  400738:	4770      	bx	lr
			return 0;
  40073a:	2000      	movs	r0, #0
  40073c:	e7fa      	b.n	400734 <tc_find_mck_divisor+0x44>
  40073e:	2000      	movs	r0, #0
  400740:	e7f8      	b.n	400734 <tc_find_mck_divisor+0x44>
	return 1;
  400742:	2001      	movs	r0, #1
  400744:	e7f6      	b.n	400734 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400746:	2500      	movs	r5, #0
	if (p_uldiv) {
  400748:	b12a      	cbz	r2, 400756 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  40074a:	a906      	add	r1, sp, #24
  40074c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400750:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400754:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  400756:	2b00      	cmp	r3, #0
  400758:	d0f3      	beq.n	400742 <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  40075a:	601d      	str	r5, [r3, #0]
	return 1;
  40075c:	2001      	movs	r0, #1
  40075e:	e7e9      	b.n	400734 <tc_find_mck_divisor+0x44>

00400760 <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  400760:	4b2a      	ldr	r3, [pc, #168]	; (40080c <twi_set_speed+0xac>)
  400762:	4299      	cmp	r1, r3
  400764:	d849      	bhi.n	4007fa <twi_set_speed+0x9a>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  400766:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  40076a:	4299      	cmp	r1, r3
  40076c:	d92b      	bls.n	4007c6 <twi_set_speed+0x66>
{
  40076e:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400770:	4c27      	ldr	r4, [pc, #156]	; (400810 <twi_set_speed+0xb0>)
  400772:	fba4 3402 	umull	r3, r4, r4, r2
  400776:	0ba4      	lsrs	r4, r4, #14
  400778:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  40077a:	4b26      	ldr	r3, [pc, #152]	; (400814 <twi_set_speed+0xb4>)
  40077c:	440b      	add	r3, r1
  40077e:	009b      	lsls	r3, r3, #2
  400780:	fbb2 f2f3 	udiv	r2, r2, r3
  400784:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400786:	2cff      	cmp	r4, #255	; 0xff
  400788:	d939      	bls.n	4007fe <twi_set_speed+0x9e>
  40078a:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  40078c:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  40078e:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400790:	2cff      	cmp	r4, #255	; 0xff
  400792:	d90d      	bls.n	4007b0 <twi_set_speed+0x50>
  400794:	2907      	cmp	r1, #7
  400796:	d1f9      	bne.n	40078c <twi_set_speed+0x2c>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  400798:	0213      	lsls	r3, r2, #8
  40079a:	b29b      	uxth	r3, r3
				TWI_CWGR_CKDIV(ckdiv);		
  40079c:	0409      	lsls	r1, r1, #16
  40079e:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  4007a2:	430b      	orrs	r3, r1
  4007a4:	b2e4      	uxtb	r4, r4
  4007a6:	4323      	orrs	r3, r4
		p_twi->TWI_CWGR =
  4007a8:	6103      	str	r3, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  4007aa:	2000      	movs	r0, #0
}
  4007ac:	bc10      	pop	{r4}
  4007ae:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007b0:	2aff      	cmp	r2, #255	; 0xff
  4007b2:	d9f1      	bls.n	400798 <twi_set_speed+0x38>
  4007b4:	2906      	cmp	r1, #6
  4007b6:	d8ef      	bhi.n	400798 <twi_set_speed+0x38>
			ckdiv++;
  4007b8:	3101      	adds	r1, #1
			chdiv /= TWI_CLK_DIVIDER;
  4007ba:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007bc:	2aff      	cmp	r2, #255	; 0xff
  4007be:	d9eb      	bls.n	400798 <twi_set_speed+0x38>
  4007c0:	2906      	cmp	r1, #6
  4007c2:	d9f9      	bls.n	4007b8 <twi_set_speed+0x58>
  4007c4:	e7e8      	b.n	400798 <twi_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4007c6:	0049      	lsls	r1, r1, #1
  4007c8:	fbb2 f2f1 	udiv	r2, r2, r1
  4007cc:	3a04      	subs	r2, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007ce:	2aff      	cmp	r2, #255	; 0xff
  4007d0:	d911      	bls.n	4007f6 <twi_set_speed+0x96>
  4007d2:	2300      	movs	r3, #0
			ckdiv++;
  4007d4:	3301      	adds	r3, #1
			c_lh_div /= TWI_CLK_DIVIDER;
  4007d6:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007d8:	2aff      	cmp	r2, #255	; 0xff
  4007da:	d901      	bls.n	4007e0 <twi_set_speed+0x80>
  4007dc:	2b07      	cmp	r3, #7
  4007de:	d1f9      	bne.n	4007d4 <twi_set_speed+0x74>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4007e0:	0211      	lsls	r1, r2, #8
  4007e2:	b289      	uxth	r1, r1
				TWI_CWGR_CKDIV(ckdiv);
  4007e4:	041b      	lsls	r3, r3, #16
  4007e6:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4007ea:	430b      	orrs	r3, r1
  4007ec:	b2d2      	uxtb	r2, r2
  4007ee:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  4007f0:	6102      	str	r2, [r0, #16]
	return PASS;
  4007f2:	2000      	movs	r0, #0
  4007f4:	4770      	bx	lr
	uint32_t ckdiv = 0;
  4007f6:	2300      	movs	r3, #0
  4007f8:	e7f2      	b.n	4007e0 <twi_set_speed+0x80>
		return FAIL;
  4007fa:	2001      	movs	r0, #1
  4007fc:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007fe:	2aff      	cmp	r2, #255	; 0xff
	uint32_t ckdiv = 0;
  400800:	bf88      	it	hi
  400802:	2100      	movhi	r1, #0
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400804:	d8d8      	bhi.n	4007b8 <twi_set_speed+0x58>
	uint32_t ckdiv = 0;
  400806:	2100      	movs	r1, #0
  400808:	e7c6      	b.n	400798 <twi_set_speed+0x38>
  40080a:	bf00      	nop
  40080c:	00061a80 	.word	0x00061a80
  400810:	057619f1 	.word	0x057619f1
  400814:	3ffd1200 	.word	0x3ffd1200

00400818 <twi_master_init>:
{
  400818:	b538      	push	{r3, r4, r5, lr}
  40081a:	4604      	mov	r4, r0
  40081c:	460d      	mov	r5, r1
	p_twi->TWI_IDR = ~0UL;
  40081e:	f04f 33ff 	mov.w	r3, #4294967295
  400822:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  400824:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  400826:	2380      	movs	r3, #128	; 0x80
  400828:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  40082a:	6b03      	ldr	r3, [r0, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  40082c:	2308      	movs	r3, #8
  40082e:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  400830:	2320      	movs	r3, #32
  400832:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  400834:	2304      	movs	r3, #4
  400836:	6003      	str	r3, [r0, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  400838:	680a      	ldr	r2, [r1, #0]
  40083a:	6849      	ldr	r1, [r1, #4]
  40083c:	4b05      	ldr	r3, [pc, #20]	; (400854 <twi_master_init+0x3c>)
  40083e:	4798      	blx	r3
  400840:	2801      	cmp	r0, #1
  400842:	bf14      	ite	ne
  400844:	2000      	movne	r0, #0
  400846:	2001      	moveq	r0, #1
	if (p_opt->smbus == 1) {
  400848:	7a6b      	ldrb	r3, [r5, #9]
  40084a:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  40084c:	bf04      	itt	eq
  40084e:	2340      	moveq	r3, #64	; 0x40
  400850:	6023      	streq	r3, [r4, #0]
}
  400852:	bd38      	pop	{r3, r4, r5, pc}
  400854:	00400761 	.word	0x00400761

00400858 <twi_mk_addr>:
	if (len == 0)
  400858:	460a      	mov	r2, r1
  40085a:	b159      	cbz	r1, 400874 <twi_mk_addr+0x1c>
	val = addr[0];
  40085c:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  40085e:	2901      	cmp	r1, #1
		val |= addr[1];
  400860:	bfc4      	itt	gt
  400862:	7841      	ldrbgt	r1, [r0, #1]
  400864:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	if (len > 2) {
  400868:	2a02      	cmp	r2, #2
  40086a:	dd04      	ble.n	400876 <twi_mk_addr+0x1e>
		val |= addr[2];
  40086c:	7882      	ldrb	r2, [r0, #2]
  40086e:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  400872:	e000      	b.n	400876 <twi_mk_addr+0x1e>
		return 0;
  400874:	2300      	movs	r3, #0
}
  400876:	4618      	mov	r0, r3
  400878:	4770      	bx	lr
	...

0040087c <twi_master_read>:
{
  40087c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t cnt = p_packet->length;
  40087e:	68cc      	ldr	r4, [r1, #12]
	if (cnt == 0) {
  400880:	2c00      	cmp	r4, #0
  400882:	d04f      	beq.n	400924 <twi_master_read+0xa8>
  400884:	460b      	mov	r3, r1
  400886:	4605      	mov	r5, r0
	uint8_t *buffer = p_packet->buffer;
  400888:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  40088a:	2000      	movs	r0, #0
  40088c:	6068      	str	r0, [r5, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  40088e:	684a      	ldr	r2, [r1, #4]
  400890:	0212      	lsls	r2, r2, #8
  400892:	f402 7240 	and.w	r2, r2, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  400896:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  40089a:	7c09      	ldrb	r1, [r1, #16]
  40089c:	0409      	lsls	r1, r1, #16
  40089e:	f401 01fe 	and.w	r1, r1, #8323072	; 0x7f0000
  4008a2:	430a      	orrs	r2, r1
  4008a4:	606a      	str	r2, [r5, #4]
	p_twi->TWI_IADR = 0;
  4008a6:	60e8      	str	r0, [r5, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  4008a8:	6859      	ldr	r1, [r3, #4]
  4008aa:	4618      	mov	r0, r3
  4008ac:	4b22      	ldr	r3, [pc, #136]	; (400938 <twi_master_read+0xbc>)
  4008ae:	4798      	blx	r3
  4008b0:	60e8      	str	r0, [r5, #12]
	if (cnt == 1) {
  4008b2:	2c01      	cmp	r4, #1
  4008b4:	d00f      	beq.n	4008d6 <twi_master_read+0x5a>
		p_twi->TWI_CR = TWI_CR_START;
  4008b6:	2301      	movs	r3, #1
  4008b8:	602b      	str	r3, [r5, #0]
		stop_sent = 0;
  4008ba:	2000      	movs	r0, #0
		status = p_twi->TWI_SR;
  4008bc:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  4008be:	f413 7f80 	tst.w	r3, #256	; 0x100
  4008c2:	d136      	bne.n	400932 <twi_master_read+0xb6>
  4008c4:	f247 512f 	movw	r1, #29999	; 0x752f
		timeout = TWI_TIMEOUT;
  4008c8:	f247 5730 	movw	r7, #30000	; 0x7530
		if (!(status & TWI_SR_RXRDY)) {
  4008cc:	f04f 0e01 	mov.w	lr, #1
			p_twi->TWI_CR = TWI_CR_STOP;
  4008d0:	f04f 0c02 	mov.w	ip, #2
  4008d4:	e019      	b.n	40090a <twi_master_read+0x8e>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  4008d6:	2303      	movs	r3, #3
  4008d8:	602b      	str	r3, [r5, #0]
		stop_sent = 1;
  4008da:	2001      	movs	r0, #1
  4008dc:	e7ee      	b.n	4008bc <twi_master_read+0x40>
		if (!(status & TWI_SR_RXRDY)) {
  4008de:	460a      	mov	r2, r1
  4008e0:	4670      	mov	r0, lr
  4008e2:	e00c      	b.n	4008fe <twi_master_read+0x82>
		if (cnt == 1  && !stop_sent) {
  4008e4:	b908      	cbnz	r0, 4008ea <twi_master_read+0x6e>
			p_twi->TWI_CR = TWI_CR_STOP;
  4008e6:	f8c5 c000 	str.w	ip, [r5]
		if (!(status & TWI_SR_RXRDY)) {
  4008ea:	f013 0f02 	tst.w	r3, #2
  4008ee:	d0f6      	beq.n	4008de <twi_master_read+0x62>
  4008f0:	4670      	mov	r0, lr
		*buffer++ = p_twi->TWI_RHR;
  4008f2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4008f4:	7033      	strb	r3, [r6, #0]
		cnt--;
  4008f6:	3c01      	subs	r4, #1
		*buffer++ = p_twi->TWI_RHR;
  4008f8:	3601      	adds	r6, #1
		timeout = TWI_TIMEOUT;
  4008fa:	463a      	mov	r2, r7
	while (cnt > 0) {
  4008fc:	b164      	cbz	r4, 400918 <twi_master_read+0x9c>
		status = p_twi->TWI_SR;
  4008fe:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  400900:	f413 7f80 	tst.w	r3, #256	; 0x100
  400904:	d111      	bne.n	40092a <twi_master_read+0xae>
		if (!timeout--) {
  400906:	1e51      	subs	r1, r2, #1
  400908:	b18a      	cbz	r2, 40092e <twi_master_read+0xb2>
		if (cnt == 1  && !stop_sent) {
  40090a:	2c01      	cmp	r4, #1
  40090c:	d0ea      	beq.n	4008e4 <twi_master_read+0x68>
		if (!(status & TWI_SR_RXRDY)) {
  40090e:	f013 0f02 	tst.w	r3, #2
  400912:	d1ee      	bne.n	4008f2 <twi_master_read+0x76>
  400914:	460a      	mov	r2, r1
  400916:	e7f1      	b.n	4008fc <twi_master_read+0x80>
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400918:	6a2b      	ldr	r3, [r5, #32]
  40091a:	f013 0f01 	tst.w	r3, #1
  40091e:	d0fb      	beq.n	400918 <twi_master_read+0x9c>
	p_twi->TWI_SR;
  400920:	6a2b      	ldr	r3, [r5, #32]
	return TWI_SUCCESS;
  400922:	e000      	b.n	400926 <twi_master_read+0xaa>
		return TWI_INVALID_ARGUMENT;
  400924:	2401      	movs	r4, #1
}
  400926:	4620      	mov	r0, r4
  400928:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return TWI_RECEIVE_NACK;
  40092a:	2405      	movs	r4, #5
  40092c:	e7fb      	b.n	400926 <twi_master_read+0xaa>
			return TWI_ERROR_TIMEOUT;
  40092e:	2409      	movs	r4, #9
  400930:	e7f9      	b.n	400926 <twi_master_read+0xaa>
			return TWI_RECEIVE_NACK;
  400932:	2405      	movs	r4, #5
  400934:	e7f7      	b.n	400926 <twi_master_read+0xaa>
  400936:	bf00      	nop
  400938:	00400859 	.word	0x00400859

0040093c <twi_master_write>:
{
  40093c:	b570      	push	{r4, r5, r6, lr}
	uint32_t cnt = p_packet->length;
  40093e:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  400940:	2d00      	cmp	r5, #0
  400942:	d035      	beq.n	4009b0 <twi_master_write+0x74>
  400944:	460b      	mov	r3, r1
  400946:	4604      	mov	r4, r0
	uint8_t *buffer = p_packet->buffer;
  400948:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  40094a:	2000      	movs	r0, #0
  40094c:	6060      	str	r0, [r4, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  40094e:	7c0a      	ldrb	r2, [r1, #16]
  400950:	0412      	lsls	r2, r2, #16
  400952:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  400956:	6849      	ldr	r1, [r1, #4]
  400958:	0209      	lsls	r1, r1, #8
  40095a:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  40095e:	430a      	orrs	r2, r1
  400960:	6062      	str	r2, [r4, #4]
	p_twi->TWI_IADR = 0;
  400962:	60e0      	str	r0, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400964:	6859      	ldr	r1, [r3, #4]
  400966:	4618      	mov	r0, r3
  400968:	4b15      	ldr	r3, [pc, #84]	; (4009c0 <twi_master_write+0x84>)
  40096a:	4798      	blx	r3
  40096c:	60e0      	str	r0, [r4, #12]
		status = p_twi->TWI_SR;
  40096e:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  400970:	f413 7f80 	tst.w	r3, #256	; 0x100
  400974:	d006      	beq.n	400984 <twi_master_write+0x48>
			return TWI_RECEIVE_NACK;
  400976:	2505      	movs	r5, #5
  400978:	e01b      	b.n	4009b2 <twi_master_write+0x76>
	while (cnt > 0) {
  40097a:	b15d      	cbz	r5, 400994 <twi_master_write+0x58>
		status = p_twi->TWI_SR;
  40097c:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  40097e:	f413 7f80 	tst.w	r3, #256	; 0x100
  400982:	d118      	bne.n	4009b6 <twi_master_write+0x7a>
		if (!(status & TWI_SR_TXRDY)) {
  400984:	f013 0f04 	tst.w	r3, #4
  400988:	d0f7      	beq.n	40097a <twi_master_write+0x3e>
		p_twi->TWI_THR = *buffer++;
  40098a:	7833      	ldrb	r3, [r6, #0]
  40098c:	6363      	str	r3, [r4, #52]	; 0x34
		cnt--;
  40098e:	3d01      	subs	r5, #1
		p_twi->TWI_THR = *buffer++;
  400990:	3601      	adds	r6, #1
  400992:	e7f2      	b.n	40097a <twi_master_write+0x3e>
		status = p_twi->TWI_SR;
  400994:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  400996:	f413 7f80 	tst.w	r3, #256	; 0x100
  40099a:	d10e      	bne.n	4009ba <twi_master_write+0x7e>
		if (status & TWI_SR_TXRDY) {
  40099c:	f013 0f04 	tst.w	r3, #4
  4009a0:	d0f8      	beq.n	400994 <twi_master_write+0x58>
	p_twi->TWI_CR = TWI_CR_STOP;
  4009a2:	2302      	movs	r3, #2
  4009a4:	6023      	str	r3, [r4, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  4009a6:	6a23      	ldr	r3, [r4, #32]
  4009a8:	f013 0f01 	tst.w	r3, #1
  4009ac:	d0fb      	beq.n	4009a6 <twi_master_write+0x6a>
  4009ae:	e000      	b.n	4009b2 <twi_master_write+0x76>
		return TWI_INVALID_ARGUMENT;
  4009b0:	2501      	movs	r5, #1
}
  4009b2:	4628      	mov	r0, r5
  4009b4:	bd70      	pop	{r4, r5, r6, pc}
			return TWI_RECEIVE_NACK;
  4009b6:	2505      	movs	r5, #5
  4009b8:	e7fb      	b.n	4009b2 <twi_master_write+0x76>
			return TWI_RECEIVE_NACK;
  4009ba:	2505      	movs	r5, #5
  4009bc:	e7f9      	b.n	4009b2 <twi_master_write+0x76>
  4009be:	bf00      	nop
  4009c0:	00400859 	.word	0x00400859

004009c4 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4009c4:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4009c6:	010b      	lsls	r3, r1, #4
  4009c8:	4293      	cmp	r3, r2
  4009ca:	d914      	bls.n	4009f6 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4009cc:	00c9      	lsls	r1, r1, #3
  4009ce:	084b      	lsrs	r3, r1, #1
  4009d0:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  4009d4:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  4009d8:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4009da:	1e5c      	subs	r4, r3, #1
  4009dc:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4009e0:	428c      	cmp	r4, r1
  4009e2:	d901      	bls.n	4009e8 <usart_set_async_baudrate+0x24>
		return 1;
  4009e4:	2001      	movs	r0, #1
  4009e6:	e017      	b.n	400a18 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  4009e8:	6841      	ldr	r1, [r0, #4]
  4009ea:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  4009ee:	6041      	str	r1, [r0, #4]
  4009f0:	e00c      	b.n	400a0c <usart_set_async_baudrate+0x48>
		return 1;
  4009f2:	2001      	movs	r0, #1
  4009f4:	e010      	b.n	400a18 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4009f6:	0859      	lsrs	r1, r3, #1
  4009f8:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  4009fc:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  400a00:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400a02:	1e5c      	subs	r4, r3, #1
  400a04:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400a08:	428c      	cmp	r4, r1
  400a0a:	d8f2      	bhi.n	4009f2 <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400a0c:	0412      	lsls	r2, r2, #16
  400a0e:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400a12:	431a      	orrs	r2, r3
  400a14:	6202      	str	r2, [r0, #32]

	return 0;
  400a16:	2000      	movs	r0, #0
}
  400a18:	bc10      	pop	{r4}
  400a1a:	4770      	bx	lr

00400a1c <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400a1c:	4b0a      	ldr	r3, [pc, #40]	; (400a48 <usart_reset+0x2c>)
  400a1e:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400a22:	2300      	movs	r3, #0
  400a24:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400a26:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400a28:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400a2a:	2388      	movs	r3, #136	; 0x88
  400a2c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400a2e:	2324      	movs	r3, #36	; 0x24
  400a30:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400a32:	f44f 7380 	mov.w	r3, #256	; 0x100
  400a36:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400a38:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400a3c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
  400a3e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  400a42:	6003      	str	r3, [r0, #0]
  400a44:	4770      	bx	lr
  400a46:	bf00      	nop
  400a48:	55534100 	.word	0x55534100

00400a4c <usart_init_rs232>:
{
  400a4c:	b570      	push	{r4, r5, r6, lr}
  400a4e:	4605      	mov	r5, r0
  400a50:	460c      	mov	r4, r1
  400a52:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400a54:	4b0f      	ldr	r3, [pc, #60]	; (400a94 <usart_init_rs232+0x48>)
  400a56:	4798      	blx	r3
	ul_reg_val = 0;
  400a58:	2200      	movs	r2, #0
  400a5a:	4b0f      	ldr	r3, [pc, #60]	; (400a98 <usart_init_rs232+0x4c>)
  400a5c:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400a5e:	b1a4      	cbz	r4, 400a8a <usart_init_rs232+0x3e>
  400a60:	4632      	mov	r2, r6
  400a62:	6821      	ldr	r1, [r4, #0]
  400a64:	4628      	mov	r0, r5
  400a66:	4b0d      	ldr	r3, [pc, #52]	; (400a9c <usart_init_rs232+0x50>)
  400a68:	4798      	blx	r3
  400a6a:	4602      	mov	r2, r0
  400a6c:	b978      	cbnz	r0, 400a8e <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400a6e:	6863      	ldr	r3, [r4, #4]
  400a70:	68a1      	ldr	r1, [r4, #8]
  400a72:	430b      	orrs	r3, r1
  400a74:	6921      	ldr	r1, [r4, #16]
  400a76:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400a78:	68e1      	ldr	r1, [r4, #12]
  400a7a:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400a7c:	4906      	ldr	r1, [pc, #24]	; (400a98 <usart_init_rs232+0x4c>)
  400a7e:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400a80:	6869      	ldr	r1, [r5, #4]
  400a82:	430b      	orrs	r3, r1
  400a84:	606b      	str	r3, [r5, #4]
}
  400a86:	4610      	mov	r0, r2
  400a88:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400a8a:	2201      	movs	r2, #1
  400a8c:	e7fb      	b.n	400a86 <usart_init_rs232+0x3a>
  400a8e:	2201      	movs	r2, #1
  400a90:	e7f9      	b.n	400a86 <usart_init_rs232+0x3a>
  400a92:	bf00      	nop
  400a94:	00400a1d 	.word	0x00400a1d
  400a98:	20000a54 	.word	0x20000a54
  400a9c:	004009c5 	.word	0x004009c5

00400aa0 <usart_init_hw_handshaking>:
{
  400aa0:	b510      	push	{r4, lr}
  400aa2:	4604      	mov	r4, r0
	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
  400aa4:	4b06      	ldr	r3, [pc, #24]	; (400ac0 <usart_init_hw_handshaking+0x20>)
  400aa6:	4798      	blx	r3
  400aa8:	b940      	cbnz	r0, 400abc <usart_init_hw_handshaking+0x1c>
  400aaa:	4602      	mov	r2, r0
	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
  400aac:	6863      	ldr	r3, [r4, #4]
  400aae:	f023 030f 	bic.w	r3, r3, #15
  400ab2:	f043 0302 	orr.w	r3, r3, #2
  400ab6:	6063      	str	r3, [r4, #4]
}
  400ab8:	4610      	mov	r0, r2
  400aba:	bd10      	pop	{r4, pc}
		return 1;
  400abc:	2201      	movs	r2, #1
  400abe:	e7fb      	b.n	400ab8 <usart_init_hw_handshaking+0x18>
  400ac0:	00400a4d 	.word	0x00400a4d

00400ac4 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400ac4:	2340      	movs	r3, #64	; 0x40
  400ac6:	6003      	str	r3, [r0, #0]
  400ac8:	4770      	bx	lr

00400aca <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400aca:	2310      	movs	r3, #16
  400acc:	6003      	str	r3, [r0, #0]
  400ace:	4770      	bx	lr

00400ad0 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  400ad0:	6081      	str	r1, [r0, #8]
  400ad2:	4770      	bx	lr

00400ad4 <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
  400ad4:	60c1      	str	r1, [r0, #12]
  400ad6:	4770      	bx	lr

00400ad8 <usart_get_status>:
	return p_usart->US_CSR;
  400ad8:	6940      	ldr	r0, [r0, #20]
}
  400ada:	4770      	bx	lr

00400adc <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400adc:	6943      	ldr	r3, [r0, #20]
  400ade:	f013 0f02 	tst.w	r3, #2
  400ae2:	d0fb      	beq.n	400adc <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
  400ae4:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400ae8:	61c1      	str	r1, [r0, #28]
}
  400aea:	2000      	movs	r0, #0
  400aec:	4770      	bx	lr
	...

00400af0 <usart_write_line>:
{
  400af0:	b570      	push	{r4, r5, r6, lr}
  400af2:	460c      	mov	r4, r1
	while (*string != '\0') {
  400af4:	7809      	ldrb	r1, [r1, #0]
  400af6:	b139      	cbz	r1, 400b08 <usart_write_line+0x18>
  400af8:	4605      	mov	r5, r0
		usart_putchar(p_usart, *string++);
  400afa:	4e04      	ldr	r6, [pc, #16]	; (400b0c <usart_write_line+0x1c>)
  400afc:	4628      	mov	r0, r5
  400afe:	47b0      	blx	r6
	while (*string != '\0') {
  400b00:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  400b04:	2900      	cmp	r1, #0
  400b06:	d1f9      	bne.n	400afc <usart_write_line+0xc>
  400b08:	bd70      	pop	{r4, r5, r6, pc}
  400b0a:	bf00      	nop
  400b0c:	00400add 	.word	0x00400add

00400b10 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400b10:	6943      	ldr	r3, [r0, #20]
  400b12:	f013 0f01 	tst.w	r3, #1
  400b16:	d005      	beq.n	400b24 <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400b18:	6983      	ldr	r3, [r0, #24]
  400b1a:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400b1e:	600b      	str	r3, [r1, #0]
	return 0;
  400b20:	2000      	movs	r0, #0
  400b22:	4770      	bx	lr
		return 1;
  400b24:	2001      	movs	r0, #1
}
  400b26:	4770      	bx	lr

00400b28 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  400b28:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400b2c:	6043      	str	r3, [r0, #4]
  400b2e:	4770      	bx	lr

00400b30 <vsync_handler>:
void vsync_handler(uint32_t ul_id, uint32_t ul_mask)
{
	unused(ul_id);
	unused(ul_mask);

	g_ul_vsync_flag = 1;
  400b30:	2201      	movs	r2, #1
  400b32:	4b01      	ldr	r3, [pc, #4]	; (400b38 <vsync_handler+0x8>)
  400b34:	601a      	str	r2, [r3, #0]
  400b36:	4770      	bx	lr
  400b38:	20000a58 	.word	0x20000a58

00400b3c <init_vsync_interrupts>:



// brief Initialize Vsync_Handler. 
void init_vsync_interrupts(void)
{
  400b3c:	b510      	push	{r4, lr}
  400b3e:	b082      	sub	sp, #8
	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(OV2640_VSYNC_PIO, OV2640_VSYNC_ID, OV2640_VSYNC_MASK,
  400b40:	4b07      	ldr	r3, [pc, #28]	; (400b60 <init_vsync_interrupts+0x24>)
  400b42:	9300      	str	r3, [sp, #0]
  400b44:	2301      	movs	r3, #1
  400b46:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b4a:	210b      	movs	r1, #11
  400b4c:	4805      	ldr	r0, [pc, #20]	; (400b64 <init_vsync_interrupts+0x28>)
  400b4e:	4c06      	ldr	r4, [pc, #24]	; (400b68 <init_vsync_interrupts+0x2c>)
  400b50:	47a0      	blx	r4
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400b52:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400b56:	4b05      	ldr	r3, [pc, #20]	; (400b6c <init_vsync_interrupts+0x30>)
  400b58:	601a      	str	r2, [r3, #0]
	/* Enable PIO controller IRQs */
	NVIC_EnableIRQ((IRQn_Type)OV2640_VSYNC_ID);
	
	// necessary?
	// pio_enable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
}
  400b5a:	b002      	add	sp, #8
  400b5c:	bd10      	pop	{r4, pc}
  400b5e:	bf00      	nop
  400b60:	00400b31 	.word	0x00400b31
  400b64:	400e0e00 	.word	0x400e0e00
  400b68:	004004b1 	.word	0x004004b1
  400b6c:	e000e100 	.word	0xe000e100

00400b70 <configure_twi>:


void configure_twi(void)
{
  400b70:	b500      	push	{lr}
  400b72:	b085      	sub	sp, #20
	
	twi_options_t opt;

	
	/* Enable TWI peripheral */
	pmc_enable_periph_clk(ID_BOARD_TWI);
  400b74:	2013      	movs	r0, #19
  400b76:	4b0c      	ldr	r3, [pc, #48]	; (400ba8 <configure_twi+0x38>)
  400b78:	4798      	blx	r3

	/* Init TWI peripheral */
	opt.master_clk = sysclk_get_cpu_hz();
  400b7a:	4b0c      	ldr	r3, [pc, #48]	; (400bac <configure_twi+0x3c>)
  400b7c:	9301      	str	r3, [sp, #4]
	opt.speed      = TWI_CLK;
  400b7e:	4b0c      	ldr	r3, [pc, #48]	; (400bb0 <configure_twi+0x40>)
  400b80:	9302      	str	r3, [sp, #8]
	twi_master_init(BOARD_TWI, &opt);
  400b82:	a901      	add	r1, sp, #4
  400b84:	480b      	ldr	r0, [pc, #44]	; (400bb4 <configure_twi+0x44>)
  400b86:	4b0c      	ldr	r3, [pc, #48]	; (400bb8 <configure_twi+0x48>)
  400b88:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400b8a:	4b0c      	ldr	r3, [pc, #48]	; (400bbc <configure_twi+0x4c>)
  400b8c:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400b90:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400b94:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400b98:	2100      	movs	r1, #0
  400b9a:	f883 1313 	strb.w	r1, [r3, #787]	; 0x313
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400b9e:	601a      	str	r2, [r3, #0]
	NVIC_DisableIRQ(BOARD_TWI_IRQn);
	NVIC_ClearPendingIRQ(BOARD_TWI_IRQn);
	NVIC_SetPriority(BOARD_TWI_IRQn, 0);
	NVIC_EnableIRQ(BOARD_TWI_IRQn);
	
}
  400ba0:	b005      	add	sp, #20
  400ba2:	f85d fb04 	ldr.w	pc, [sp], #4
  400ba6:	bf00      	nop
  400ba8:	00400665 	.word	0x00400665
  400bac:	07270e00 	.word	0x07270e00
  400bb0:	00061a80 	.word	0x00061a80
  400bb4:	40018000 	.word	0x40018000
  400bb8:	00400819 	.word	0x00400819
  400bbc:	e000e100 	.word	0xe000e100

00400bc0 <pio_capture_init>:
 *
 * \param p_pio PIO instance to be configured in PIO capture mode.
 * \param ul_id Corresponding PIO ID.
 */
void pio_capture_init(Pio *p_pio, uint32_t ul_id)
{
  400bc0:	b510      	push	{r4, lr}
  400bc2:	4604      	mov	r4, r0
	/* Enable peripheral clock */
	pmc_enable_periph_clk(ul_id);
  400bc4:	4608      	mov	r0, r1
  400bc6:	4b13      	ldr	r3, [pc, #76]	; (400c14 <pio_capture_init+0x54>)
  400bc8:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400bca:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400bce:	f023 0301 	bic.w	r3, r3, #1
  400bd2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400bd6:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
  400bda:	f043 0308 	orr.w	r3, r3, #8
  400bde:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400be2:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400be6:	f023 0330 	bic.w	r3, r3, #48	; 0x30
  400bea:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  400bee:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400bf2:	f043 0320 	orr.w	r3, r3, #32
  400bf6:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  400bfa:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400bfe:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400c02:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400c06:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400c0a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  400c0e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
  400c12:	bd10      	pop	{r4, pc}
  400c14:	00400665 	.word	0x00400665

00400c18 <pio_capture_to_buffer>:
 * \param ul_size Data frame size.
 */
uint8_t pio_capture_to_buffer(Pio *p_pio, uint8_t *uc_buf, uint32_t ul_size)     
{
	/* Check if the first PDC bank is free */
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400c18:	f8d0 316c 	ldr.w	r3, [r0, #364]	; 0x16c
  400c1c:	b913      	cbnz	r3, 400c24 <pio_capture_to_buffer+0xc>
  400c1e:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400c22:	b143      	cbz	r3, 400c36 <pio_capture_to_buffer+0x1e>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
		p_pio->PIO_RCR = ul_size;
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
		return 1;
		} else if (p_pio->PIO_RNCR == 0) {
  400c24:	f8d0 317c 	ldr.w	r3, [r0, #380]	; 0x17c
  400c28:	b973      	cbnz	r3, 400c48 <pio_capture_to_buffer+0x30>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400c2a:	f8c0 1178 	str.w	r1, [r0, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  400c2e:	f8c0 217c 	str.w	r2, [r0, #380]	; 0x17c
		return 1;
  400c32:	2001      	movs	r0, #1
  400c34:	4770      	bx	lr
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400c36:	f8c0 1168 	str.w	r1, [r0, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  400c3a:	f8c0 216c 	str.w	r2, [r0, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400c3e:	2301      	movs	r3, #1
  400c40:	f8c0 3188 	str.w	r3, [r0, #392]	; 0x188
		return 1;
  400c44:	4618      	mov	r0, r3
  400c46:	4770      	bx	lr
		} else {
		return 0;
  400c48:	2000      	movs	r0, #0
	}
}
  400c4a:	4770      	bx	lr

00400c4c <init_camera>:



void init_camera(void)
{
  400c4c:	b508      	push	{r3, lr}
	//gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
	//gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
	
	
	
	pmc_enable_pllbck(7, 0x1, 1); /* PLLA work at 96 Mhz */
  400c4e:	2201      	movs	r2, #1
  400c50:	4611      	mov	r1, r2
  400c52:	2007      	movs	r0, #7
  400c54:	4b0d      	ldr	r3, [pc, #52]	; (400c8c <init_camera+0x40>)
  400c56:	4798      	blx	r3
	// configure clock pins
	
	
	/* Init Vsync handler*/
	init_vsync_interrupts();
  400c58:	4b0d      	ldr	r3, [pc, #52]	; (400c90 <init_camera+0x44>)
  400c5a:	4798      	blx	r3
	//	pio_disable_interrupt(VSYNC_PIO, VSYNC_MASK);    // try???
	g_ul_vsync_flag = 0;	// reset the flag
  400c5c:	2200      	movs	r2, #0
  400c5e:	4b0d      	ldr	r3, [pc, #52]	; (400c94 <init_camera+0x48>)
  400c60:	601a      	str	r2, [r3, #0]
	
	/* Init PIO capture*/
	pio_capture_init(OV_DATA_BUS_PIO, OV_DATA_BUS_ID);
  400c62:	210b      	movs	r1, #11
  400c64:	480c      	ldr	r0, [pc, #48]	; (400c98 <init_camera+0x4c>)
  400c66:	4b0d      	ldr	r3, [pc, #52]	; (400c9c <init_camera+0x50>)
  400c68:	4798      	blx	r3
	///* Turn on ov7740 image sensor using power pin */
	//ov_power(true, OV_POWER_PIO, OV_POWER_MASK);

	/* Init PCK0 to work at 24 Mhz */
	/* 96/4=24 Mhz */
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLB_CLK);				// changed from 0 to 1 since we are using PCK1, for address info, refer to page 529 of MCU data sheet
  400c6a:	4b0d      	ldr	r3, [pc, #52]	; (400ca0 <init_camera+0x54>)
  400c6c:	2223      	movs	r2, #35	; 0x23
  400c6e:	645a      	str	r2, [r3, #68]	; 0x44
	PMC->PMC_SCER = PMC_SCER_PCK1;												// changed from 0 to 1 since we are using PCK1
  400c70:	f44f 7200 	mov.w	r2, #512	; 0x200
  400c74:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {									// changed from 0 to 1 since we are using PCK1
  400c76:	461a      	mov	r2, r3
  400c78:	6893      	ldr	r3, [r2, #8]
  400c7a:	f413 7f00 	tst.w	r3, #512	; 0x200
  400c7e:	d0fb      	beq.n	400c78 <init_camera+0x2c>
	}
	
	
	configure_twi();              // initialize twi 
  400c80:	4b08      	ldr	r3, [pc, #32]	; (400ca4 <init_camera+0x58>)
  400c82:	4798      	blx	r3
	

	/* Wait 3 seconds to let the image sensor to adapt to environment */
	delay_ms(3000);	
  400c84:	4808      	ldr	r0, [pc, #32]	; (400ca8 <init_camera+0x5c>)
  400c86:	4b09      	ldr	r3, [pc, #36]	; (400cac <init_camera+0x60>)
  400c88:	4798      	blx	r3
  400c8a:	bd08      	pop	{r3, pc}
  400c8c:	00400631 	.word	0x00400631
  400c90:	00400b3d 	.word	0x00400b3d
  400c94:	20000a58 	.word	0x20000a58
  400c98:	400e0e00 	.word	0x400e0e00
  400c9c:	00400bc1 	.word	0x00400bc1
  400ca0:	400e0400 	.word	0x400e0400
  400ca4:	00400b71 	.word	0x00400b71
  400ca8:	01885e6e 	.word	0x01885e6e
  400cac:	20000001 	.word	0x20000001

00400cb0 <configure_camera>:

}

void configure_camera(void)
{
  400cb0:	b538      	push	{r3, r4, r5, lr}
		/* ov7740 Initialization */
	while (ov_init(BOARD_TWI) == 1) {
  400cb2:	4d0a      	ldr	r5, [pc, #40]	; (400cdc <configure_camera+0x2c>)
  400cb4:	4c0a      	ldr	r4, [pc, #40]	; (400ce0 <configure_camera+0x30>)
  400cb6:	4628      	mov	r0, r5
  400cb8:	47a0      	blx	r4
  400cba:	2801      	cmp	r0, #1
  400cbc:	d0fb      	beq.n	400cb6 <configure_camera+0x6>
	}

	/* ov7740 configuration */
	ov_configure(BOARD_TWI, JPEG_INIT);
  400cbe:	4d07      	ldr	r5, [pc, #28]	; (400cdc <configure_camera+0x2c>)
  400cc0:	2100      	movs	r1, #0
  400cc2:	4628      	mov	r0, r5
  400cc4:	4c07      	ldr	r4, [pc, #28]	; (400ce4 <configure_camera+0x34>)
  400cc6:	47a0      	blx	r4
	ov_configure(BOARD_TWI, YUV422);
  400cc8:	2101      	movs	r1, #1
  400cca:	4628      	mov	r0, r5
  400ccc:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG);
  400cce:	2102      	movs	r1, #2
  400cd0:	4628      	mov	r0, r5
  400cd2:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG_640x480);
  400cd4:	2104      	movs	r1, #4
  400cd6:	4628      	mov	r0, r5
  400cd8:	47a0      	blx	r4
  400cda:	bd38      	pop	{r3, r4, r5, pc}
  400cdc:	40018000 	.word	0x40018000
  400ce0:	00400e59 	.word	0x00400e59
  400ce4:	00400f95 	.word	0x00400f95

00400ce8 <find_image_len>:




uint8_t find_image_len (void)
{
  400ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	start_point = 0;
  400cec:	2600      	movs	r6, #0
  400cee:	4b1c      	ldr	r3, [pc, #112]	; (400d60 <find_image_len+0x78>)
  400cf0:	601e      	str	r6, [r3, #0]
	end_point = 0;
  400cf2:	4b1c      	ldr	r3, [pc, #112]	; (400d64 <find_image_len+0x7c>)
  400cf4:	601e      	str	r6, [r3, #0]
  400cf6:	4633      	mov	r3, r6
  400cf8:	46b6      	mov	lr, r6
  400cfa:	46b4      	mov	ip, r6
	bool no_error_flag = false;																					// This flag is used for checking error
	
	for (uint32_t i = 0; i+1 < sizeof(image_buffer); i++)
	{
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400cfc:	481a      	ldr	r0, [pc, #104]	; (400d68 <find_image_len+0x80>)
  400cfe:	2701      	movs	r7, #1
		{
			start_point = i;
			no_error_flag = true;																				// we've detected initial value for JPEG
  400d00:	46b8      	mov	r8, r7
	for (uint32_t i = 0; i+1 < sizeof(image_buffer); i++)
  400d02:	4d1a      	ldr	r5, [pc, #104]	; (400d6c <find_image_len+0x84>)
  400d04:	e00e      	b.n	400d24 <find_image_len+0x3c>
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400d06:	5c42      	ldrb	r2, [r0, r1]
  400d08:	b2d2      	uxtb	r2, r2
  400d0a:	2ad8      	cmp	r2, #216	; 0xd8
  400d0c:	d110      	bne.n	400d30 <find_image_len+0x48>
			start_point = i;
  400d0e:	469c      	mov	ip, r3
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400d10:	46be      	mov	lr, r7
			no_error_flag = true;																				// we've detected initial value for JPEG
  400d12:	4646      	mov	r6, r8
  400d14:	e00c      	b.n	400d30 <find_image_len+0x48>
  400d16:	4a12      	ldr	r2, [pc, #72]	; (400d60 <find_image_len+0x78>)
  400d18:	f8c2 c000 	str.w	ip, [r2]
  400d1c:	e015      	b.n	400d4a <find_image_len+0x62>
  400d1e:	460b      	mov	r3, r1
	for (uint32_t i = 0; i+1 < sizeof(image_buffer); i++)
  400d20:	42a9      	cmp	r1, r5
  400d22:	d018      	beq.n	400d56 <find_image_len+0x6e>
  400d24:	1c59      	adds	r1, r3, #1
  400d26:	461c      	mov	r4, r3
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400d28:	5cc2      	ldrb	r2, [r0, r3]
  400d2a:	b2d2      	uxtb	r2, r2
  400d2c:	2aff      	cmp	r2, #255	; 0xff
  400d2e:	d0ea      	beq.n	400d06 <find_image_len+0x1e>
		}
		
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd9 && no_error_flag == true) {
  400d30:	5d02      	ldrb	r2, [r0, r4]
  400d32:	b2d2      	uxtb	r2, r2
  400d34:	2aff      	cmp	r2, #255	; 0xff
  400d36:	d1f2      	bne.n	400d1e <find_image_len+0x36>
  400d38:	5c42      	ldrb	r2, [r0, r1]
  400d3a:	b2d2      	uxtb	r2, r2
  400d3c:	2ad9      	cmp	r2, #217	; 0xd9
  400d3e:	d1ee      	bne.n	400d1e <find_image_len+0x36>
  400d40:	2e00      	cmp	r6, #0
  400d42:	d0ec      	beq.n	400d1e <find_image_len+0x36>
  400d44:	f1be 0f00 	cmp.w	lr, #0
  400d48:	d1e5      	bne.n	400d16 <find_image_len+0x2e>
			end_point = i+2;
  400d4a:	3302      	adds	r3, #2
  400d4c:	4a05      	ldr	r2, [pc, #20]	; (400d64 <find_image_len+0x7c>)
  400d4e:	6013      	str	r3, [r2, #0]
			return 1;
  400d50:	2001      	movs	r0, #1
  400d52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		
	}
	
	
	// reset everything if not proper
	start_point = 0;																						
  400d56:	2000      	movs	r0, #0
  400d58:	4b01      	ldr	r3, [pc, #4]	; (400d60 <find_image_len+0x78>)
  400d5a:	6018      	str	r0, [r3, #0]
	end_point = 0;
	return 0;
}
  400d5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400d60:	20000ab4 	.word	0x20000ab4
  400d64:	20000ab8 	.word	0x20000ab8
  400d68:	20000abc 	.word	0x20000abc
  400d6c:	0001869f 	.word	0x0001869f

00400d70 <start_capture>:
{
  400d70:	b510      	push	{r4, lr}
	pio_enable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400d72:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400d76:	4812      	ldr	r0, [pc, #72]	; (400dc0 <start_capture+0x50>)
  400d78:	4b12      	ldr	r3, [pc, #72]	; (400dc4 <start_capture+0x54>)
  400d7a:	4798      	blx	r3
	while (!g_ul_vsync_flag) {
  400d7c:	4a12      	ldr	r2, [pc, #72]	; (400dc8 <start_capture+0x58>)
  400d7e:	6813      	ldr	r3, [r2, #0]
  400d80:	2b00      	cmp	r3, #0
  400d82:	d0fc      	beq.n	400d7e <start_capture+0xe>
	pio_disable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400d84:	4c0e      	ldr	r4, [pc, #56]	; (400dc0 <start_capture+0x50>)
  400d86:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400d8a:	4620      	mov	r0, r4
  400d8c:	4b0f      	ldr	r3, [pc, #60]	; (400dcc <start_capture+0x5c>)
  400d8e:	4798      	blx	r3
	pio_capture_enable(OV2640_DATA_BUS_PIO);
  400d90:	4620      	mov	r0, r4
  400d92:	4b0f      	ldr	r3, [pc, #60]	; (400dd0 <start_capture+0x60>)
  400d94:	4798      	blx	r3
	pio_capture_to_buffer(OV2640_DATA_BUS_PIO, image_buffer, 25000);
  400d96:	f246 12a8 	movw	r2, #25000	; 0x61a8
  400d9a:	490e      	ldr	r1, [pc, #56]	; (400dd4 <start_capture+0x64>)
  400d9c:	4620      	mov	r0, r4
  400d9e:	4b0e      	ldr	r3, [pc, #56]	; (400dd8 <start_capture+0x68>)
  400da0:	4798      	blx	r3
	while (!((OV2640_DATA_BUS_PIO->PIO_PCISR & PIO_PCIMR_RXBUFF) ==
  400da2:	4622      	mov	r2, r4
  400da4:	f8d2 3160 	ldr.w	r3, [r2, #352]	; 0x160
  400da8:	f013 0f08 	tst.w	r3, #8
  400dac:	d0fa      	beq.n	400da4 <start_capture+0x34>
	pio_capture_disable(OV2640_DATA_BUS_PIO);					
  400dae:	4804      	ldr	r0, [pc, #16]	; (400dc0 <start_capture+0x50>)
  400db0:	4b0a      	ldr	r3, [pc, #40]	; (400ddc <start_capture+0x6c>)
  400db2:	4798      	blx	r3
	g_ul_vsync_flag = 0;
  400db4:	2200      	movs	r2, #0
  400db6:	4b04      	ldr	r3, [pc, #16]	; (400dc8 <start_capture+0x58>)
  400db8:	601a      	str	r2, [r3, #0]
	uint8_t img_len = find_image_len();
  400dba:	4b09      	ldr	r3, [pc, #36]	; (400de0 <start_capture+0x70>)
  400dbc:	4798      	blx	r3
}
  400dbe:	bd10      	pop	{r4, pc}
  400dc0:	400e0e00 	.word	0x400e0e00
  400dc4:	004002b3 	.word	0x004002b3
  400dc8:	20000a58 	.word	0x20000a58
  400dcc:	004002b7 	.word	0x004002b7
  400dd0:	00400419 	.word	0x00400419
  400dd4:	20000abc 	.word	0x20000abc
  400dd8:	00400c19 	.word	0x00400c19
  400ddc:	00400431 	.word	0x00400431
  400de0:	00400ce9 	.word	0x00400ce9

00400de4 <ov_read_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_read_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400de4:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_read(p_twi, p_packet);
  400de6:	4b01      	ldr	r3, [pc, #4]	; (400dec <ov_read_reg+0x8>)
  400de8:	4798      	blx	r3

	return ul_status;
}
  400dea:	bd08      	pop	{r3, pc}
  400dec:	0040087d 	.word	0x0040087d

00400df0 <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400df0:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  400df2:	4b01      	ldr	r3, [pc, #4]	; (400df8 <ov_write_reg+0x8>)
  400df4:	4798      	blx	r3

	return ul_status;
}
  400df6:	bd08      	pop	{r3, pc}
  400df8:	0040093d 	.word	0x0040093d

00400dfc <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  400dfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e00:	b086      	sub	sp, #24
  400e02:	4607      	mov	r7, r0
  400e04:	1c4c      	adds	r4, r1, #1
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
			delay_ms(5);
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
			twi_packet_regs.addr_length = 1;
  400e06:	2501      	movs	r5, #1
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
			twi_packet_regs.length = 1;
			twi_packet_regs.buffer = &(p_next->val);

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400e08:	4e11      	ldr	r6, [pc, #68]	; (400e50 <ov_write_regs+0x54>)
			delay_ms(5);
  400e0a:	f8df 8048 	ldr.w	r8, [pc, #72]	; 400e54 <ov_write_regs+0x58>
	while (!((p_next->reg == OV_REG_TERM) &&
  400e0e:	e010      	b.n	400e32 <ov_write_regs+0x36>
  400e10:	7821      	ldrb	r1, [r4, #0]
  400e12:	29ff      	cmp	r1, #255	; 0xff
  400e14:	d018      	beq.n	400e48 <ov_write_regs+0x4c>
			twi_packet_regs.addr[0] = p_next->reg;
  400e16:	f88d 3004 	strb.w	r3, [sp, #4]
			twi_packet_regs.addr_length = 1;
  400e1a:	9502      	str	r5, [sp, #8]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  400e1c:	2330      	movs	r3, #48	; 0x30
  400e1e:	f88d 3014 	strb.w	r3, [sp, #20]
			twi_packet_regs.length = 1;
  400e22:	9504      	str	r5, [sp, #16]
			twi_packet_regs.buffer = &(p_next->val);
  400e24:	9203      	str	r2, [sp, #12]
			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400e26:	a901      	add	r1, sp, #4
  400e28:	4638      	mov	r0, r7
  400e2a:	47b0      	blx	r6
			ul_size++;

			if (ul_err == TWI_BUSY) {
  400e2c:	2808      	cmp	r0, #8
  400e2e:	d00c      	beq.n	400e4a <ov_write_regs+0x4e>
  400e30:	3402      	adds	r4, #2
  400e32:	4622      	mov	r2, r4
	while (!((p_next->reg == OV_REG_TERM) &&
  400e34:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  400e38:	2bff      	cmp	r3, #255	; 0xff
  400e3a:	d0e9      	beq.n	400e10 <ov_write_regs+0x14>
		if (p_next->reg == 0xFE) {
  400e3c:	2bfe      	cmp	r3, #254	; 0xfe
  400e3e:	d1ea      	bne.n	400e16 <ov_write_regs+0x1a>
			delay_ms(5);
  400e40:	f24a 706a 	movw	r0, #42858	; 0xa76a
  400e44:	47c0      	blx	r8
  400e46:	e7f3      	b.n	400e30 <ov_write_regs+0x34>
			}
		}

		p_next++;
	}
	return 0;
  400e48:	2000      	movs	r0, #0
}
  400e4a:	b006      	add	sp, #24
  400e4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e50:	00400df1 	.word	0x00400df1
  400e54:	20000001 	.word	0x20000001

00400e58 <ov_init>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_init(Twi* const p_twi)
{
  400e58:	b5f0      	push	{r4, r5, r6, r7, lr}
  400e5a:	b093      	sub	sp, #76	; 0x4c
  400e5c:	4607      	mov	r7, r0
	const uint8_t cont_reg_val = 1;
  400e5e:	2401      	movs	r4, #1
  400e60:	f88d 4047 	strb.w	r4, [sp, #71]	; 0x47
	twi_packet_t init_packet = {
  400e64:	2500      	movs	r5, #0
  400e66:	950c      	str	r5, [sp, #48]	; 0x30
  400e68:	9510      	str	r5, [sp, #64]	; 0x40
  400e6a:	23ff      	movs	r3, #255	; 0xff
  400e6c:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  400e70:	940d      	str	r4, [sp, #52]	; 0x34
  400e72:	f10d 0347 	add.w	r3, sp, #71	; 0x47
  400e76:	930e      	str	r3, [sp, #56]	; 0x38
  400e78:	940f      	str	r4, [sp, #60]	; 0x3c
  400e7a:	2630      	movs	r6, #48	; 0x30
  400e7c:	f88d 6040 	strb.w	r6, [sp, #64]	; 0x40
		.addr_length  = 1, //sizeof (uint16_t),    // TWI slave memory address data size
		.chip         = OV_I2C_SENSOR_ADDRESS,      // TWI slave bus address
		.buffer       = &cont_reg_val,        // transfer data destination buffer
		.length       = 1                    // transfer data size (bytes)
	};
	ov_write_reg(p_twi, &init_packet);
  400e80:	eb0d 0106 	add.w	r1, sp, r6
  400e84:	4b41      	ldr	r3, [pc, #260]	; (400f8c <ov_init+0x134>)
  400e86:	4798      	blx	r3
	uint32_t ul_id = 0;
  400e88:	9500      	str	r5, [sp, #0]
	uint32_t ul_ver = 0;
  400e8a:	9501      	str	r5, [sp, #4]
	packet_pid.chip = OV_I2C_SENSOR_ADDRESS;
  400e8c:	f88d 6018 	strb.w	r6, [sp, #24]
	packet_pid.addr[0] = OV2640_PIDH;
  400e90:	230a      	movs	r3, #10
  400e92:	f88d 3008 	strb.w	r3, [sp, #8]
	packet_pid.addr_length = 1;
  400e96:	9403      	str	r4, [sp, #12]
	packet_pid.buffer = &ul_id;
  400e98:	f8cd d010 	str.w	sp, [sp, #16]
	packet_pid.length = 1;
  400e9c:	9405      	str	r4, [sp, #20]
	ov_read_reg(p_twi, &packet_pid);
  400e9e:	a902      	add	r1, sp, #8
  400ea0:	4638      	mov	r0, r7
  400ea2:	4d3b      	ldr	r5, [pc, #236]	; (400f90 <ov_init+0x138>)
  400ea4:	47a8      	blx	r5
	packet_ver.chip = OV_I2C_SENSOR_ADDRESS;
  400ea6:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	packet_ver.addr[0] = OV2640_PIDL;
  400eaa:	230b      	movs	r3, #11
  400eac:	f88d 301c 	strb.w	r3, [sp, #28]
	packet_ver.addr_length = 1;
  400eb0:	9408      	str	r4, [sp, #32]
	packet_ver.buffer = &ul_ver;
  400eb2:	ab01      	add	r3, sp, #4
  400eb4:	9309      	str	r3, [sp, #36]	; 0x24
	packet_ver.length = 1;
  400eb6:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &packet_ver);
  400eb8:	a907      	add	r1, sp, #28
  400eba:	4638      	mov	r0, r7
  400ebc:	47a8      	blx	r5
	return ((uint32_t)(ul_id << 8) | ul_ver);
  400ebe:	9b01      	ldr	r3, [sp, #4]
  400ec0:	9a00      	ldr	r2, [sp, #0]
  400ec2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	
	uint32_t ul_id = 0;

	ul_id = ov_id( p_twi );

	if (((ul_id >> 8)&0xff)  == OV2640_PIDH_DEFAULT) {
  400ec6:	f3c3 2307 	ubfx	r3, r3, #8, #8
  400eca:	2b26      	cmp	r3, #38	; 0x26
  400ecc:	d002      	beq.n	400ed4 <ov_init+0x7c>
				return 0;
			}
		}
	}

	return 1;
  400ece:	2001      	movs	r0, #1
}
  400ed0:	b013      	add	sp, #76	; 0x4c
  400ed2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint32_t ul_midh = 0;
  400ed4:	2300      	movs	r3, #0
  400ed6:	9301      	str	r3, [sp, #4]
	uint32_t ul_midl = 0;
  400ed8:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = OV2640_MIDH;
  400eda:	231c      	movs	r3, #28
  400edc:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400ee0:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400ee2:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midh;
  400ee6:	ab01      	add	r3, sp, #4
  400ee8:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400eea:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400eec:	a907      	add	r1, sp, #28
  400eee:	4638      	mov	r0, r7
  400ef0:	47a8      	blx	r5
	twi_packet.addr[0] = OV2640_MIDL;
  400ef2:	231d      	movs	r3, #29
  400ef4:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400ef8:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400efa:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midl;
  400efe:	ab02      	add	r3, sp, #8
  400f00:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400f02:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400f04:	a907      	add	r1, sp, #28
  400f06:	4638      	mov	r0, r7
  400f08:	47a8      	blx	r5
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400f0a:	9b01      	ldr	r3, [sp, #4]
  400f0c:	2b7f      	cmp	r3, #127	; 0x7f
  400f0e:	d001      	beq.n	400f14 <ov_init+0xbc>
	return 1;
  400f10:	2001      	movs	r0, #1
  400f12:	e7dd      	b.n	400ed0 <ov_init+0x78>
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400f14:	9b02      	ldr	r3, [sp, #8]
  400f16:	2ba2      	cmp	r3, #162	; 0xa2
  400f18:	d1fa      	bne.n	400f10 <ov_init+0xb8>
	uint32_t ul_value = 0;
  400f1a:	2300      	movs	r3, #0
  400f1c:	9300      	str	r3, [sp, #0]
	uint32_t ul_oldvalue = 0;
  400f1e:	9301      	str	r3, [sp, #4]
	uint32_t ul_entervalue = 0;
  400f20:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = 0x01;
  400f22:	2301      	movs	r3, #1
  400f24:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400f28:	9308      	str	r3, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400f2a:	2230      	movs	r2, #48	; 0x30
  400f2c:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
	twi_packet.length = 1;
  400f30:	930a      	str	r3, [sp, #40]	; 0x28
	twi_packet.buffer = &ul_oldvalue;
  400f32:	ab01      	add	r3, sp, #4
  400f34:	9309      	str	r3, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f36:	a907      	add	r1, sp, #28
  400f38:	4638      	mov	r0, r7
  400f3a:	4c15      	ldr	r4, [pc, #84]	; (400f90 <ov_init+0x138>)
  400f3c:	47a0      	blx	r4
	ul_entervalue = 0xAD;
  400f3e:	ab12      	add	r3, sp, #72	; 0x48
  400f40:	22ad      	movs	r2, #173	; 0xad
  400f42:	f843 2d40 	str.w	r2, [r3, #-64]!
	twi_packet.buffer = &ul_entervalue;
  400f46:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  400f48:	a907      	add	r1, sp, #28
  400f4a:	4638      	mov	r0, r7
  400f4c:	4b0f      	ldr	r3, [pc, #60]	; (400f8c <ov_init+0x134>)
  400f4e:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  400f50:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f54:	a907      	add	r1, sp, #28
  400f56:	4638      	mov	r0, r7
  400f58:	47a0      	blx	r4
	if (ul_value != ul_entervalue) {
  400f5a:	9b02      	ldr	r3, [sp, #8]
  400f5c:	9a00      	ldr	r2, [sp, #0]
  400f5e:	429a      	cmp	r2, r3
  400f60:	d001      	beq.n	400f66 <ov_init+0x10e>
		return 1;
  400f62:	2001      	movs	r0, #1
  400f64:	e7b4      	b.n	400ed0 <ov_init+0x78>
	twi_packet.buffer = &ul_oldvalue;
  400f66:	ab01      	add	r3, sp, #4
  400f68:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  400f6a:	a907      	add	r1, sp, #28
  400f6c:	4638      	mov	r0, r7
  400f6e:	4b07      	ldr	r3, [pc, #28]	; (400f8c <ov_init+0x134>)
  400f70:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  400f72:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f76:	a907      	add	r1, sp, #28
  400f78:	4638      	mov	r0, r7
  400f7a:	4b05      	ldr	r3, [pc, #20]	; (400f90 <ov_init+0x138>)
  400f7c:	4798      	blx	r3
	if (ul_value != ul_oldvalue) {
  400f7e:	9b01      	ldr	r3, [sp, #4]
  400f80:	9800      	ldr	r0, [sp, #0]
  400f82:	1ac0      	subs	r0, r0, r3
  400f84:	bf18      	it	ne
  400f86:	2001      	movne	r0, #1
  400f88:	e7a2      	b.n	400ed0 <ov_init+0x78>
  400f8a:	bf00      	nop
  400f8c:	00400df1 	.word	0x00400df1
  400f90:	00400de5 	.word	0x00400de5

00400f94 <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  400f94:	b508      	push	{r3, lr}
	const ov_reg *p_regs_conf = NULL;

	/* Common register initialization */
	switch (format) {
  400f96:	2911      	cmp	r1, #17
  400f98:	d82a      	bhi.n	400ff0 <ov_configure+0x5c>
  400f9a:	e8df f001 	tbb	[pc, r1]
  400f9e:	092b      	.short	0x092b
  400fa0:	0f0d0b2d 	.word	0x0f0d0b2d
  400fa4:	17151311 	.word	0x17151311
  400fa8:	1f1d1b19 	.word	0x1f1d1b19
  400fac:	27252321 	.word	0x27252321
	case JPEG_INIT:
		p_regs_conf = OV2640_JPEG_INIT;
		break;
		
	case YUV422:
		p_regs_conf = OV2640_YUV422;
  400fb0:	4914      	ldr	r1, [pc, #80]	; (401004 <ov_configure+0x70>)
  400fb2:	e022      	b.n	400ffa <ov_configure+0x66>
	case JPEG:
		p_regs_conf = OV2640_JPEG;
		break;
		
	case JPEG_320x240:
		p_regs_conf = OV2640_JPEG_320x240;
  400fb4:	4914      	ldr	r1, [pc, #80]	; (401008 <ov_configure+0x74>)
		break;
  400fb6:	e020      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_640x480:
		p_regs_conf = OV2640_JPEG_640x480;
  400fb8:	4914      	ldr	r1, [pc, #80]	; (40100c <ov_configure+0x78>)
		break;
  400fba:	e01e      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_800x600:
		p_regs_conf = OV2640_JPEG_800x600;
  400fbc:	4914      	ldr	r1, [pc, #80]	; (401010 <ov_configure+0x7c>)
		break;
  400fbe:	e01c      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_1024x768:
		p_regs_conf = OV2640_JPEG_1024x768;
  400fc0:	4914      	ldr	r1, [pc, #80]	; (401014 <ov_configure+0x80>)
		break;
  400fc2:	e01a      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_1280x1024:
		p_regs_conf = OV2640_JPEG_1280x1024;
  400fc4:	4914      	ldr	r1, [pc, #80]	; (401018 <ov_configure+0x84>)
		break;
  400fc6:	e018      	b.n	400ffa <ov_configure+0x66>
		
	case JPEG_1600x1200:
		p_regs_conf = OV2640_JPEG_1600x1200;
  400fc8:	4914      	ldr	r1, [pc, #80]	; (40101c <ov_configure+0x88>)
		break;
  400fca:	e016      	b.n	400ffa <ov_configure+0x66>
		
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV2640_QVGA_YUV422_10FPS;
  400fcc:	4914      	ldr	r1, [pc, #80]	; (401020 <ov_configure+0x8c>)
		break;
  400fce:	e014      	b.n	400ffa <ov_configure+0x66>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV2640_QVGA_YUV422_15FPS;
  400fd0:	4914      	ldr	r1, [pc, #80]	; (401024 <ov_configure+0x90>)
		break;
  400fd2:	e012      	b.n	400ffa <ov_configure+0x66>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV2640_QVGA_YUV422_20FPS;
  400fd4:	4914      	ldr	r1, [pc, #80]	; (401028 <ov_configure+0x94>)
		break;
  400fd6:	e010      	b.n	400ffa <ov_configure+0x66>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV2640_QVGA_YUV422_30FPS;
  400fd8:	4914      	ldr	r1, [pc, #80]	; (40102c <ov_configure+0x98>)
		break;
  400fda:	e00e      	b.n	400ffa <ov_configure+0x66>

	case QVGA_RGB888:
		p_regs_conf = OV2640_QVGA_RGB888;
  400fdc:	4914      	ldr	r1, [pc, #80]	; (401030 <ov_configure+0x9c>)
		break;
  400fde:	e00c      	b.n	400ffa <ov_configure+0x66>

	case QQVGA_YUV422:
		p_regs_conf = OV2640_QQVGA_YUV422;
  400fe0:	4914      	ldr	r1, [pc, #80]	; (401034 <ov_configure+0xa0>)
		break;
  400fe2:	e00a      	b.n	400ffa <ov_configure+0x66>

	case QQVGA_RGB888:
		p_regs_conf = OV2640_QQVGA_RGB888;
  400fe4:	4914      	ldr	r1, [pc, #80]	; (401038 <ov_configure+0xa4>)
		break;
  400fe6:	e008      	b.n	400ffa <ov_configure+0x66>

	case TEST_PATTERN:
		p_regs_conf = OV2640_TEST_PATTERN;
  400fe8:	4914      	ldr	r1, [pc, #80]	; (40103c <ov_configure+0xa8>)
		break;
  400fea:	e006      	b.n	400ffa <ov_configure+0x66>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV2640_VGA_YUV422_20FPS;
  400fec:	4914      	ldr	r1, [pc, #80]	; (401040 <ov_configure+0xac>)
		break;
  400fee:	e004      	b.n	400ffa <ov_configure+0x66>
	if (p_regs_conf != NULL) {
		ov_write_regs( p_twi, p_regs_conf );
		return 0;
	}

	return 1;
  400ff0:	2001      	movs	r0, #1
  400ff2:	bd08      	pop	{r3, pc}
		p_regs_conf = OV2640_JPEG_INIT;
  400ff4:	4913      	ldr	r1, [pc, #76]	; (401044 <ov_configure+0xb0>)
  400ff6:	e000      	b.n	400ffa <ov_configure+0x66>
		p_regs_conf = OV2640_JPEG;
  400ff8:	4913      	ldr	r1, [pc, #76]	; (401048 <ov_configure+0xb4>)
		ov_write_regs( p_twi, p_regs_conf );
  400ffa:	4b14      	ldr	r3, [pc, #80]	; (40104c <ov_configure+0xb8>)
  400ffc:	4798      	blx	r3
		return 0;
  400ffe:	2000      	movs	r0, #0
}
  401000:	bd08      	pop	{r3, pc}
  401002:	bf00      	nop
  401004:	004073f8 	.word	0x004073f8
  401008:	00406900 	.word	0x00406900
  40100c:	00406950 	.word	0x00406950
  401010:	004069a4 	.word	0x004069a4
  401014:	00406808 	.word	0x00406808
  401018:	00406858 	.word	0x00406858
  40101c:	004068ac 	.word	0x004068ac
  401020:	00406e54 	.word	0x00406e54
  401024:	00406f44 	.word	0x00406f44
  401028:	00407034 	.word	0x00407034
  40102c:	00407124 	.word	0x00407124
  401030:	00406d60 	.word	0x00406d60
  401034:	00406c6c 	.word	0x00406c6c
  401038:	00406b78 	.word	0x00406b78
  40103c:	00407214 	.word	0x00407214
  401040:	00407308 	.word	0x00407308
  401044:	004069f8 	.word	0x004069f8
  401048:	004067f4 	.word	0x004067f4
  40104c:	00400dfd 	.word	0x00400dfd

00401050 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  401050:	b508      	push	{r3, lr}
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  401052:	2100      	movs	r1, #0
  401054:	4805      	ldr	r0, [pc, #20]	; (40106c <TC0_Handler+0x1c>)
  401056:	4b06      	ldr	r3, [pc, #24]	; (401070 <TC0_Handler+0x20>)
  401058:	4798      	blx	r3

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  40105a:	f010 0f10 	tst.w	r0, #16
  40105e:	d004      	beq.n	40106a <TC0_Handler+0x1a>
		counts++;
  401060:	4a04      	ldr	r2, [pc, #16]	; (401074 <TC0_Handler+0x24>)
  401062:	7813      	ldrb	r3, [r2, #0]
  401064:	3301      	adds	r3, #1
  401066:	b2db      	uxtb	r3, r3
  401068:	7013      	strb	r3, [r2, #0]
  40106a:	bd08      	pop	{r3, pc}
  40106c:	40010000 	.word	0x40010000
  401070:	004006e9 	.word	0x004006e9
  401074:	2001915c 	.word	0x2001915c

00401078 <configure_tc>:
	}
}

void configure_tc(void)
{
  401078:	b530      	push	{r4, r5, lr}
  40107a:	b085      	sub	sp, #20

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  40107c:	2017      	movs	r0, #23
  40107e:	4b14      	ldr	r3, [pc, #80]	; (4010d0 <configure_tc+0x58>)
  401080:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  401082:	4d14      	ldr	r5, [pc, #80]	; (4010d4 <configure_tc+0x5c>)
  401084:	9500      	str	r5, [sp, #0]
  401086:	ab02      	add	r3, sp, #8
  401088:	aa03      	add	r2, sp, #12
  40108a:	4629      	mov	r1, r5
  40108c:	2001      	movs	r0, #1
  40108e:	4c12      	ldr	r4, [pc, #72]	; (4010d8 <configure_tc+0x60>)
  401090:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  401092:	4c12      	ldr	r4, [pc, #72]	; (4010dc <configure_tc+0x64>)
  401094:	9a02      	ldr	r2, [sp, #8]
  401096:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  40109a:	2100      	movs	r1, #0
  40109c:	4620      	mov	r0, r4
  40109e:	4b10      	ldr	r3, [pc, #64]	; (4010e0 <configure_tc+0x68>)
  4010a0:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  4010a2:	9a03      	ldr	r2, [sp, #12]
  4010a4:	fbb5 f2f2 	udiv	r2, r5, r2
  4010a8:	2100      	movs	r1, #0
  4010aa:	4620      	mov	r0, r4
  4010ac:	4b0d      	ldr	r3, [pc, #52]	; (4010e4 <configure_tc+0x6c>)
  4010ae:	4798      	blx	r3
  4010b0:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  4010b4:	4b0c      	ldr	r3, [pc, #48]	; (4010e8 <configure_tc+0x70>)
  4010b6:	601a      	str	r2, [r3, #0]

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  4010b8:	2210      	movs	r2, #16
  4010ba:	2100      	movs	r1, #0
  4010bc:	4620      	mov	r0, r4
  4010be:	4b0b      	ldr	r3, [pc, #44]	; (4010ec <configure_tc+0x74>)
  4010c0:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  4010c2:	2100      	movs	r1, #0
  4010c4:	4620      	mov	r0, r4
  4010c6:	4b0a      	ldr	r3, [pc, #40]	; (4010f0 <configure_tc+0x78>)
  4010c8:	4798      	blx	r3
  4010ca:	b005      	add	sp, #20
  4010cc:	bd30      	pop	{r4, r5, pc}
  4010ce:	bf00      	nop
  4010d0:	00400665 	.word	0x00400665
  4010d4:	07270e00 	.word	0x07270e00
  4010d8:	004006f1 	.word	0x004006f1
  4010dc:	40010000 	.word	0x40010000
  4010e0:	004006b9 	.word	0x004006b9
  4010e4:	004006d9 	.word	0x004006d9
  4010e8:	e000e100 	.word	0xe000e100
  4010ec:	004006e1 	.word	0x004006e1
  4010f0:	004006d1 	.word	0x004006d1

004010f4 <wifi_web_setup_handler>:
void wifi_web_setup_handler(uint32_t ul_id, uint32_t ul_mask)
{
	unused(ul_id);
	unused(ul_mask);
	
	web_setup_flag = true;
  4010f4:	2201      	movs	r2, #1
  4010f6:	4b01      	ldr	r3, [pc, #4]	; (4010fc <wifi_web_setup_handler+0x8>)
  4010f8:	601a      	str	r2, [r3, #0]
  4010fa:	4770      	bx	lr
  4010fc:	20000a70 	.word	0x20000a70

00401100 <process_incoming_byte_wifi>:
	input_line_wifi[input_pos_wifi++] = in_byte;            // Saves the incoming byte into a next position, and increment
  401100:	4a03      	ldr	r2, [pc, #12]	; (401110 <process_incoming_byte_wifi+0x10>)
  401102:	6813      	ldr	r3, [r2, #0]
  401104:	1c59      	adds	r1, r3, #1
  401106:	6011      	str	r1, [r2, #0]
  401108:	4a02      	ldr	r2, [pc, #8]	; (401114 <process_incoming_byte_wifi+0x14>)
  40110a:	54d0      	strb	r0, [r2, r3]
  40110c:	4770      	bx	lr
  40110e:	bf00      	nop
  401110:	20000a60 	.word	0x20000a60
  401114:	20019160 	.word	0x20019160

00401118 <USART0_Handler>:
{
  401118:	b510      	push	{r4, lr}
	ul_status = usart_get_status(WIFI_USART);           // Gets Channel Status Register data 
  40111a:	480a      	ldr	r0, [pc, #40]	; (401144 <USART0_Handler+0x2c>)
  40111c:	4b0a      	ldr	r3, [pc, #40]	; (401148 <USART0_Handler+0x30>)
  40111e:	4798      	blx	r3
	if (ul_status & US_CSR_RXBUFF) {                    // Checking if we received a byte
  401120:	f410 5f80 	tst.w	r0, #4096	; 0x1000
  401124:	d100      	bne.n	401128 <USART0_Handler+0x10>
  401126:	bd10      	pop	{r4, pc}
		usart_read(WIFI_USART, &received_byte_wifi);
  401128:	4c08      	ldr	r4, [pc, #32]	; (40114c <USART0_Handler+0x34>)
  40112a:	4621      	mov	r1, r4
  40112c:	4805      	ldr	r0, [pc, #20]	; (401144 <USART0_Handler+0x2c>)
  40112e:	4b08      	ldr	r3, [pc, #32]	; (401150 <USART0_Handler+0x38>)
  401130:	4798      	blx	r3
		new_rx_wifi = true;
  401132:	2201      	movs	r2, #1
  401134:	4b07      	ldr	r3, [pc, #28]	; (401154 <USART0_Handler+0x3c>)
  401136:	701a      	strb	r2, [r3, #0]
		process_incoming_byte_wifi((uint8_t)received_byte_wifi);
  401138:	6820      	ldr	r0, [r4, #0]
  40113a:	b2c0      	uxtb	r0, r0
  40113c:	4b06      	ldr	r3, [pc, #24]	; (401158 <USART0_Handler+0x40>)
  40113e:	4798      	blx	r3
}
  401140:	e7f1      	b.n	401126 <USART0_Handler+0xe>
  401142:	bf00      	nop
  401144:	40024000 	.word	0x40024000
  401148:	00400ad9 	.word	0x00400ad9
  40114c:	20000a68 	.word	0x20000a68
  401150:	00400b11 	.word	0x00400b11
  401154:	20000a64 	.word	0x20000a64
  401158:	00401101 	.word	0x00401101

0040115c <process_data_wifi>:
{
  40115c:	b508      	push	{r3, lr}
		if (strstr(input_line_wifi, "Start transfer")){                 // string provided from the firmware design pdf
  40115e:	491d      	ldr	r1, [pc, #116]	; (4011d4 <process_data_wifi+0x78>)
  401160:	481d      	ldr	r0, [pc, #116]	; (4011d8 <process_data_wifi+0x7c>)
  401162:	4b1e      	ldr	r3, [pc, #120]	; (4011dc <process_data_wifi+0x80>)
  401164:	4798      	blx	r3
  401166:	b120      	cbz	r0, 401172 <process_data_wifi+0x16>
			image_transfer_flag = true;
  401168:	2301      	movs	r3, #1
  40116a:	4a1d      	ldr	r2, [pc, #116]	; (4011e0 <process_data_wifi+0x84>)
  40116c:	7013      	strb	r3, [r2, #0]
			wifi_status = true;
  40116e:	4a1d      	ldr	r2, [pc, #116]	; (4011e4 <process_data_wifi+0x88>)
  401170:	7013      	strb	r3, [r2, #0]
		if (strstr(input_line_wifi, "None"))
  401172:	491d      	ldr	r1, [pc, #116]	; (4011e8 <process_data_wifi+0x8c>)
  401174:	4818      	ldr	r0, [pc, #96]	; (4011d8 <process_data_wifi+0x7c>)
  401176:	4b19      	ldr	r3, [pc, #100]	; (4011dc <process_data_wifi+0x80>)
  401178:	4798      	blx	r3
  40117a:	b110      	cbz	r0, 401182 <process_data_wifi+0x26>
			wifi_websocket_flag = false;		
  40117c:	2200      	movs	r2, #0
  40117e:	4b1b      	ldr	r3, [pc, #108]	; (4011ec <process_data_wifi+0x90>)
  401180:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "Client not connected")) 
  401182:	491b      	ldr	r1, [pc, #108]	; (4011f0 <process_data_wifi+0x94>)
  401184:	4814      	ldr	r0, [pc, #80]	; (4011d8 <process_data_wifi+0x7c>)
  401186:	4b15      	ldr	r3, [pc, #84]	; (4011dc <process_data_wifi+0x80>)
  401188:	4798      	blx	r3
  40118a:	b110      	cbz	r0, 401192 <process_data_wifi+0x36>
			wifi_websocket_flag = false;
  40118c:	2200      	movs	r2, #0
  40118e:	4b17      	ldr	r3, [pc, #92]	; (4011ec <process_data_wifi+0x90>)
  401190:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "Websocket connected"))            
  401192:	4918      	ldr	r1, [pc, #96]	; (4011f4 <process_data_wifi+0x98>)
  401194:	4810      	ldr	r0, [pc, #64]	; (4011d8 <process_data_wifi+0x7c>)
  401196:	4b11      	ldr	r3, [pc, #68]	; (4011dc <process_data_wifi+0x80>)
  401198:	4798      	blx	r3
  40119a:	b110      	cbz	r0, 4011a2 <process_data_wifi+0x46>
			wifi_websocket_flag = true;
  40119c:	2201      	movs	r2, #1
  40119e:	4b13      	ldr	r3, [pc, #76]	; (4011ec <process_data_wifi+0x90>)
  4011a0:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "Websocket disconnected"))  
  4011a2:	4915      	ldr	r1, [pc, #84]	; (4011f8 <process_data_wifi+0x9c>)
  4011a4:	480c      	ldr	r0, [pc, #48]	; (4011d8 <process_data_wifi+0x7c>)
  4011a6:	4b0d      	ldr	r3, [pc, #52]	; (4011dc <process_data_wifi+0x80>)
  4011a8:	4798      	blx	r3
  4011aa:	b110      	cbz	r0, 4011b2 <process_data_wifi+0x56>
			wifi_websocket_flag = false;
  4011ac:	2200      	movs	r2, #0
  4011ae:	4b0f      	ldr	r3, [pc, #60]	; (4011ec <process_data_wifi+0x90>)
  4011b0:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, ","))             // not necessarily required
  4011b2:	212c      	movs	r1, #44	; 0x2c
  4011b4:	4808      	ldr	r0, [pc, #32]	; (4011d8 <process_data_wifi+0x7c>)
  4011b6:	4b11      	ldr	r3, [pc, #68]	; (4011fc <process_data_wifi+0xa0>)
  4011b8:	4798      	blx	r3
  4011ba:	b110      	cbz	r0, 4011c2 <process_data_wifi+0x66>
			wifi_websocket_flag = true;
  4011bc:	2201      	movs	r2, #1
  4011be:	4b0b      	ldr	r3, [pc, #44]	; (4011ec <process_data_wifi+0x90>)
  4011c0:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "2"))
  4011c2:	2132      	movs	r1, #50	; 0x32
  4011c4:	4804      	ldr	r0, [pc, #16]	; (4011d8 <process_data_wifi+0x7c>)
  4011c6:	4b0d      	ldr	r3, [pc, #52]	; (4011fc <process_data_wifi+0xa0>)
  4011c8:	4798      	blx	r3
  4011ca:	b110      	cbz	r0, 4011d2 <process_data_wifi+0x76>
			wifi_status = true;
  4011cc:	2201      	movs	r2, #1
  4011ce:	4b05      	ldr	r3, [pc, #20]	; (4011e4 <process_data_wifi+0x88>)
  4011d0:	701a      	strb	r2, [r3, #0]
  4011d2:	bd08      	pop	{r3, pc}
  4011d4:	00407424 	.word	0x00407424
  4011d8:	20019160 	.word	0x20019160
  4011dc:	00401da5 	.word	0x00401da5
  4011e0:	20000a5c 	.word	0x20000a5c
  4011e4:	20000a75 	.word	0x20000a75
  4011e8:	00407434 	.word	0x00407434
  4011ec:	20000a76 	.word	0x20000a76
  4011f0:	0040743c 	.word	0x0040743c
  4011f4:	00407454 	.word	0x00407454
  4011f8:	00407468 	.word	0x00407468
  4011fc:	00401a0d 	.word	0x00401a0d

00401200 <wifi_command_response_handler>:
{
  401200:	b508      	push	{r3, lr}
	wifi_comm_success = true;
  401202:	2201      	movs	r2, #1
  401204:	4b07      	ldr	r3, [pc, #28]	; (401224 <wifi_command_response_handler+0x24>)
  401206:	701a      	strb	r2, [r3, #0]
	process_data_wifi();
  401208:	4b07      	ldr	r3, [pc, #28]	; (401228 <wifi_command_response_handler+0x28>)
  40120a:	4798      	blx	r3
	for (int jj=0; jj<MAX_INPUT_WIFI; jj++) {input_line_wifi[jj] = 0; }                         // Once the data was processed, clear the buffer, but consider not using this loop
  40120c:	2300      	movs	r3, #0
  40120e:	4907      	ldr	r1, [pc, #28]	; (40122c <wifi_command_response_handler+0x2c>)
  401210:	461a      	mov	r2, r3
  401212:	54ca      	strb	r2, [r1, r3]
  401214:	3301      	adds	r3, #1
  401216:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  40121a:	d1fa      	bne.n	401212 <wifi_command_response_handler+0x12>
	input_pos_wifi = 0;
  40121c:	2200      	movs	r2, #0
  40121e:	4b04      	ldr	r3, [pc, #16]	; (401230 <wifi_command_response_handler+0x30>)
  401220:	601a      	str	r2, [r3, #0]
  401222:	bd08      	pop	{r3, pc}
  401224:	20000a74 	.word	0x20000a74
  401228:	0040115d 	.word	0x0040115d
  40122c:	20019160 	.word	0x20019160
  401230:	20000a60 	.word	0x20000a60

00401234 <configure_usart_wifi>:
}


// Configuration of USART port used to communicate with the AMW136.
void configure_usart_wifi(void)
{
  401234:	b530      	push	{r4, r5, lr}
  401236:	b087      	sub	sp, #28
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  401238:	4d19      	ldr	r5, [pc, #100]	; (4012a0 <configure_usart_wifi+0x6c>)
  40123a:	4629      	mov	r1, r5
  40123c:	2005      	movs	r0, #5
  40123e:	4c19      	ldr	r4, [pc, #100]	; (4012a4 <configure_usart_wifi+0x70>)
  401240:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  401242:	4629      	mov	r1, r5
  401244:	2006      	movs	r0, #6
  401246:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_CTS_IDX, PIN_USART0_CTS_FLAGS);
  401248:	4629      	mov	r1, r5
  40124a:	2008      	movs	r0, #8
  40124c:	47a0      	blx	r4
	
	static uint32_t ul_sysclk;
	const sam_usart_opt_t usart_console_settings = {
  40124e:	466c      	mov	r4, sp
  401250:	4d15      	ldr	r5, [pc, #84]	; (4012a8 <configure_usart_wifi+0x74>)
  401252:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  401254:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  401256:	e895 0003 	ldmia.w	r5, {r0, r1}
  40125a:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};

	/* Get peripheral clock. */
	ul_sysclk = sysclk_get_peripheral_hz();
  40125e:	4d13      	ldr	r5, [pc, #76]	; (4012ac <configure_usart_wifi+0x78>)
  401260:	4b13      	ldr	r3, [pc, #76]	; (4012b0 <configure_usart_wifi+0x7c>)
  401262:	602b      	str	r3, [r5, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  401264:	200e      	movs	r0, #14
  401266:	4b13      	ldr	r3, [pc, #76]	; (4012b4 <configure_usart_wifi+0x80>)
  401268:	4798      	blx	r3

	/* Enable peripheral clock. */
	sysclk_enable_peripheral_clock(WIFI_USART_ID);

	/* Configure USART. */
	usart_init_hw_handshaking(WIFI_USART, &usart_console_settings, ul_sysclk);
  40126a:	4c13      	ldr	r4, [pc, #76]	; (4012b8 <configure_usart_wifi+0x84>)
  40126c:	682a      	ldr	r2, [r5, #0]
  40126e:	4669      	mov	r1, sp
  401270:	4620      	mov	r0, r4
  401272:	4b12      	ldr	r3, [pc, #72]	; (4012bc <configure_usart_wifi+0x88>)
  401274:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  401276:	f04f 31ff 	mov.w	r1, #4294967295
  40127a:	4620      	mov	r0, r4
  40127c:	4b10      	ldr	r3, [pc, #64]	; (4012c0 <configure_usart_wifi+0x8c>)
  40127e:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  401280:	4620      	mov	r0, r4
  401282:	4b10      	ldr	r3, [pc, #64]	; (4012c4 <configure_usart_wifi+0x90>)
  401284:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  401286:	4620      	mov	r0, r4
  401288:	4b0f      	ldr	r3, [pc, #60]	; (4012c8 <configure_usart_wifi+0x94>)
  40128a:	4798      	blx	r3
	
	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  40128c:	2101      	movs	r1, #1
  40128e:	4620      	mov	r0, r4
  401290:	4b0e      	ldr	r3, [pc, #56]	; (4012cc <configure_usart_wifi+0x98>)
  401292:	4798      	blx	r3
  401294:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  401298:	4b0d      	ldr	r3, [pc, #52]	; (4012d0 <configure_usart_wifi+0x9c>)
  40129a:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(WIFI_USART_IRQn);
}
  40129c:	b007      	add	sp, #28
  40129e:	bd30      	pop	{r4, r5, pc}
  4012a0:	08000001 	.word	0x08000001
  4012a4:	004002f9 	.word	0x004002f9
  4012a8:	0040740c 	.word	0x0040740c
  4012ac:	20000a6c 	.word	0x20000a6c
  4012b0:	07270e00 	.word	0x07270e00
  4012b4:	00400665 	.word	0x00400665
  4012b8:	40024000 	.word	0x40024000
  4012bc:	00400aa1 	.word	0x00400aa1
  4012c0:	00400ad5 	.word	0x00400ad5
  4012c4:	00400ac5 	.word	0x00400ac5
  4012c8:	00400acb 	.word	0x00400acb
  4012cc:	00400ad1 	.word	0x00400ad1
  4012d0:	e000e100 	.word	0xe000e100

004012d4 <configure_wifi_comm_pin>:



// Configuration of "command complete" rising-edge interrupt.
void configure_wifi_comm_pin(void)
{
  4012d4:	b530      	push	{r4, r5, lr}
  4012d6:	b083      	sub	sp, #12
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  4012d8:	200c      	movs	r0, #12
  4012da:	4b0b      	ldr	r3, [pc, #44]	; (401308 <configure_wifi_comm_pin+0x34>)
  4012dc:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_NUM, WIFI_COMM_ATTR, wifi_command_response_handler);
  4012de:	4c0b      	ldr	r4, [pc, #44]	; (40130c <configure_wifi_comm_pin+0x38>)
  4012e0:	4b0b      	ldr	r3, [pc, #44]	; (401310 <configure_wifi_comm_pin+0x3c>)
  4012e2:	9300      	str	r3, [sp, #0]
  4012e4:	2371      	movs	r3, #113	; 0x71
  4012e6:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4012ea:	210c      	movs	r1, #12
  4012ec:	4620      	mov	r0, r4
  4012ee:	4d09      	ldr	r5, [pc, #36]	; (401314 <configure_wifi_comm_pin+0x40>)
  4012f0:	47a8      	blx	r5
  4012f2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  4012f6:	4b08      	ldr	r3, [pc, #32]	; (401318 <configure_wifi_comm_pin+0x44>)
  4012f8:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_NUM);
  4012fa:	f44f 6180 	mov.w	r1, #1024	; 0x400
  4012fe:	4620      	mov	r0, r4
  401300:	4b06      	ldr	r3, [pc, #24]	; (40131c <configure_wifi_comm_pin+0x48>)
  401302:	4798      	blx	r3
}
  401304:	b003      	add	sp, #12
  401306:	bd30      	pop	{r4, r5, pc}
  401308:	00400665 	.word	0x00400665
  40130c:	400e1000 	.word	0x400e1000
  401310:	00401201 	.word	0x00401201
  401314:	004004b1 	.word	0x004004b1
  401318:	e000e100 	.word	0xe000e100
  40131c:	004002b3 	.word	0x004002b3

00401320 <configure_wifi_web_setup_pin>:


// Configuration of button interrupt to initiate the web setup
void configure_wifi_web_setup_pin(void)
{
  401320:	b530      	push	{r4, r5, lr}
  401322:	b083      	sub	sp, #12
	
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_SETUP_ID);
  401324:	200c      	movs	r0, #12
  401326:	4b0a      	ldr	r3, [pc, #40]	; (401350 <configure_wifi_web_setup_pin+0x30>)
  401328:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_SETUP_PIO, WIFI_SETUP_ID, WIFI_SETUP_PIN_NUM, WIFI_SETUP_ATTR, wifi_web_setup_handler);
  40132a:	4c0a      	ldr	r4, [pc, #40]	; (401354 <configure_wifi_web_setup_pin+0x34>)
  40132c:	4b0a      	ldr	r3, [pc, #40]	; (401358 <configure_wifi_web_setup_pin+0x38>)
  40132e:	9300      	str	r3, [sp, #0]
  401330:	2371      	movs	r3, #113	; 0x71
  401332:	2210      	movs	r2, #16
  401334:	210c      	movs	r1, #12
  401336:	4620      	mov	r0, r4
  401338:	4d08      	ldr	r5, [pc, #32]	; (40135c <configure_wifi_web_setup_pin+0x3c>)
  40133a:	47a8      	blx	r5
  40133c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  401340:	4b07      	ldr	r3, [pc, #28]	; (401360 <configure_wifi_web_setup_pin+0x40>)
  401342:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_SETUP_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_SETUP_PIO, WIFI_SETUP_PIN_NUM);
  401344:	2110      	movs	r1, #16
  401346:	4620      	mov	r0, r4
  401348:	4b06      	ldr	r3, [pc, #24]	; (401364 <configure_wifi_web_setup_pin+0x44>)
  40134a:	4798      	blx	r3
	
}
  40134c:	b003      	add	sp, #12
  40134e:	bd30      	pop	{r4, r5, pc}
  401350:	00400665 	.word	0x00400665
  401354:	400e1000 	.word	0x400e1000
  401358:	004010f5 	.word	0x004010f5
  40135c:	004004b1 	.word	0x004004b1
  401360:	e000e100 	.word	0xe000e100
  401364:	004002b3 	.word	0x004002b3

00401368 <write_wifi_command>:


/* Writes a command (comm) to the AMW136, and waits either for an acknowledgment or a timeout. The timeout can be created by setting the global variable "counts" to zero, 
which will automatically increment every second, and waiting while counts < cnt */
void write_wifi_command(char* comm, uint8_t cnt)
{
  401368:	b510      	push	{r4, lr}
  40136a:	460c      	mov	r4, r1
	usart_write_line(WIFI_USART, comm);
  40136c:	4601      	mov	r1, r0
  40136e:	480a      	ldr	r0, [pc, #40]	; (401398 <write_wifi_command+0x30>)
  401370:	4b0a      	ldr	r3, [pc, #40]	; (40139c <write_wifi_command+0x34>)
  401372:	4798      	blx	r3
	counts = 0;
  401374:	2200      	movs	r2, #0
  401376:	4b0a      	ldr	r3, [pc, #40]	; (4013a0 <write_wifi_command+0x38>)
  401378:	701a      	strb	r2, [r3, #0]
	while (counts < cnt)
  40137a:	461a      	mov	r2, r3
	{
		if(wifi_comm_success)						// if wifi_comm_success is true
  40137c:	4909      	ldr	r1, [pc, #36]	; (4013a4 <write_wifi_command+0x3c>)
	while (counts < cnt)
  40137e:	7813      	ldrb	r3, [r2, #0]
  401380:	b2db      	uxtb	r3, r3
  401382:	42a3      	cmp	r3, r4
  401384:	d206      	bcs.n	401394 <write_wifi_command+0x2c>
		if(wifi_comm_success)						// if wifi_comm_success is true
  401386:	780b      	ldrb	r3, [r1, #0]
  401388:	2b00      	cmp	r3, #0
  40138a:	d0f8      	beq.n	40137e <write_wifi_command+0x16>
		{
			wifi_comm_success = false;				// reset the flag
  40138c:	2200      	movs	r2, #0
  40138e:	4b05      	ldr	r3, [pc, #20]	; (4013a4 <write_wifi_command+0x3c>)
  401390:	701a      	strb	r2, [r3, #0]
			break;									// get out of the loop
  401392:	bd10      	pop	{r4, pc}
  401394:	bd10      	pop	{r4, pc}
  401396:	bf00      	nop
  401398:	40024000 	.word	0x40024000
  40139c:	00400af1 	.word	0x00400af1
  4013a0:	2001915c 	.word	0x2001915c
  4013a4:	20000a74 	.word	0x20000a74

004013a8 <write_image_to_file>:
		


// Writes an image from SAM4s8B to the AMW136. If the length of the image is zero (i.e.. the image is not valid), return. Otherwise, follow the protocol
void write_image_to_file(void)
{
  4013a8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4013aa:	f5ad 7d7b 	sub.w	sp, sp, #1004	; 0x3ec
	image_available = find_image_len();
  4013ae:	4b1a      	ldr	r3, [pc, #104]	; (401418 <write_image_to_file+0x70>)
  4013b0:	4798      	blx	r3
  4013b2:	4b1a      	ldr	r3, [pc, #104]	; (40141c <write_image_to_file+0x74>)
  4013b4:	7018      	strb	r0, [r3, #0]
	img_length = end_point - start_point;
  4013b6:	4b1a      	ldr	r3, [pc, #104]	; (401420 <write_image_to_file+0x78>)
  4013b8:	681a      	ldr	r2, [r3, #0]
  4013ba:	4b1a      	ldr	r3, [pc, #104]	; (401424 <write_image_to_file+0x7c>)
  4013bc:	681b      	ldr	r3, [r3, #0]
  4013be:	1ad2      	subs	r2, r2, r3
  4013c0:	4b19      	ldr	r3, [pc, #100]	; (401428 <write_image_to_file+0x80>)
  4013c2:	601a      	str	r2, [r3, #0]
	
	if (image_available == 0) {
  4013c4:	b910      	cbnz	r0, 4013cc <write_image_to_file+0x24>
		}
		image_transfer_flag = false;						// reset the flag after data transfer
		delay_ms(50);										// slight delay according to the step
	}		
	
}
  4013c6:	f50d 7d7b 	add.w	sp, sp, #1004	; 0x3ec
  4013ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
		sprintf(img_array, "image_transfer %d\r\n", img_length);
  4013cc:	4917      	ldr	r1, [pc, #92]	; (40142c <write_image_to_file+0x84>)
  4013ce:	4668      	mov	r0, sp
  4013d0:	4b17      	ldr	r3, [pc, #92]	; (401430 <write_image_to_file+0x88>)
  4013d2:	4798      	blx	r3
		write_wifi_command(img_array, 3);				// write command to the AMW136
  4013d4:	2103      	movs	r1, #3
  4013d6:	4668      	mov	r0, sp
  4013d8:	4b16      	ldr	r3, [pc, #88]	; (401434 <write_image_to_file+0x8c>)
  4013da:	4798      	blx	r3
		if(!image_transfer_flag) {						// if image is not passed, don't finish it
  4013dc:	4b16      	ldr	r3, [pc, #88]	; (401438 <write_image_to_file+0x90>)
  4013de:	781b      	ldrb	r3, [r3, #0]
  4013e0:	2b00      	cmp	r3, #0
  4013e2:	d0f0      	beq.n	4013c6 <write_image_to_file+0x1e>
		for (uint32_t i = start_point; i <= end_point + 1; i++) {
  4013e4:	4b0f      	ldr	r3, [pc, #60]	; (401424 <write_image_to_file+0x7c>)
  4013e6:	681c      	ldr	r4, [r3, #0]
  4013e8:	4b0d      	ldr	r3, [pc, #52]	; (401420 <write_image_to_file+0x78>)
  4013ea:	681b      	ldr	r3, [r3, #0]
  4013ec:	3301      	adds	r3, #1
  4013ee:	429c      	cmp	r4, r3
  4013f0:	d80b      	bhi.n	40140a <write_image_to_file+0x62>
				usart_putchar(WIFI_USART, image_buffer[i]);
  4013f2:	4f12      	ldr	r7, [pc, #72]	; (40143c <write_image_to_file+0x94>)
  4013f4:	4e12      	ldr	r6, [pc, #72]	; (401440 <write_image_to_file+0x98>)
  4013f6:	4d13      	ldr	r5, [pc, #76]	; (401444 <write_image_to_file+0x9c>)
  4013f8:	5d39      	ldrb	r1, [r7, r4]
  4013fa:	4630      	mov	r0, r6
  4013fc:	47a8      	blx	r5
		for (uint32_t i = start_point; i <= end_point + 1; i++) {
  4013fe:	3401      	adds	r4, #1
  401400:	4b07      	ldr	r3, [pc, #28]	; (401420 <write_image_to_file+0x78>)
  401402:	681b      	ldr	r3, [r3, #0]
  401404:	3301      	adds	r3, #1
  401406:	42a3      	cmp	r3, r4
  401408:	d2f6      	bcs.n	4013f8 <write_image_to_file+0x50>
		image_transfer_flag = false;						// reset the flag after data transfer
  40140a:	2200      	movs	r2, #0
  40140c:	4b0a      	ldr	r3, [pc, #40]	; (401438 <write_image_to_file+0x90>)
  40140e:	701a      	strb	r2, [r3, #0]
		delay_ms(50);										// slight delay according to the step
  401410:	480d      	ldr	r0, [pc, #52]	; (401448 <write_image_to_file+0xa0>)
  401412:	4b0e      	ldr	r3, [pc, #56]	; (40144c <write_image_to_file+0xa4>)
  401414:	4798      	blx	r3
  401416:	e7d6      	b.n	4013c6 <write_image_to_file+0x1e>
  401418:	00400ce9 	.word	0x00400ce9
  40141c:	2001954c 	.word	0x2001954c
  401420:	20000ab8 	.word	0x20000ab8
  401424:	20000ab4 	.word	0x20000ab4
  401428:	20019548 	.word	0x20019548
  40142c:	00407480 	.word	0x00407480
  401430:	004019c1 	.word	0x004019c1
  401434:	00401369 	.word	0x00401369
  401438:	20000a5c 	.word	0x20000a5c
  40143c:	20000abc 	.word	0x20000abc
  401440:	40024000 	.word	0x40024000
  401444:	00400add 	.word	0x00400add
  401448:	00068a1c 	.word	0x00068a1c
  40144c:	20000001 	.word	0x20000001

00401450 <board_init>:
#include <board.h>
#include <conf_board.h>
#include "camera.h"

void board_init(void)
{
  401450:	b538      	push	{r3, r4, r5, lr}
  401452:	200b      	movs	r0, #11
  401454:	4c28      	ldr	r4, [pc, #160]	; (4014f8 <board_init+0xa8>)
  401456:	47a0      	blx	r4
  401458:	200c      	movs	r0, #12
  40145a:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40145c:	4a27      	ldr	r2, [pc, #156]	; (4014fc <board_init+0xac>)
  40145e:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  401462:	6113      	str	r3, [r2, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401464:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401468:	6313      	str	r3, [r2, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40146a:	4b25      	ldr	r3, [pc, #148]	; (401500 <board_init+0xb0>)
  40146c:	2108      	movs	r1, #8
  40146e:	6119      	str	r1, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401470:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401474:	6359      	str	r1, [r3, #52]	; 0x34
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401476:	f44f 6180 	mov.w	r1, #1024	; 0x400
  40147a:	6159      	str	r1, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40147c:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401480:	6319      	str	r1, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401482:	2510      	movs	r5, #16
  401484:	615d      	str	r5, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401486:	f8c3 50a0 	str.w	r5, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40148a:	631d      	str	r5, [r3, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40148c:	2380      	movs	r3, #128	; 0x80
  40148e:	6113      	str	r3, [r2, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401490:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401494:	6353      	str	r3, [r2, #52]	; 0x34
	ioport_set_pin_level(WIFI_CTS_PIN, false);
	
	
	
	
	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);				// configure TWI clock
  401496:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40149a:	2004      	movs	r0, #4
  40149c:	4c19      	ldr	r4, [pc, #100]	; (401504 <board_init+0xb4>)
  40149e:	47a0      	blx	r4
	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);			// configure TWI data pin
  4014a0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4014a4:	2003      	movs	r0, #3
  4014a6:	47a0      	blx	r4
	
	
	gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
  4014a8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4014ac:	2011      	movs	r0, #17
  4014ae:	47a0      	blx	r4
	
	
	// configure reset
	gpio_configure_pin(OV_RST_GPIO, OV_RST_FLAGS);
  4014b0:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4014b4:	2014      	movs	r0, #20
  4014b6:	47a0      	blx	r4
	
		
	// configure HSYNC and VSYNC
	gpio_configure_pin(HSYNC_GPIO, HSYNC_FLAGS);
  4014b8:	2171      	movs	r1, #113	; 0x71
  4014ba:	4628      	mov	r0, r5
  4014bc:	47a0      	blx	r4
	gpio_configure_pin(VSYNC_GPIO, VSYNC_FLAGS);
  4014be:	2171      	movs	r1, #113	; 0x71
  4014c0:	200f      	movs	r0, #15
  4014c2:	47a0      	blx	r4
	
	// configure DATA pins
	gpio_configure_pin(OV_DATA_BUS_D0, OV_DATA_BUS_FLAGS);
  4014c4:	4d10      	ldr	r5, [pc, #64]	; (401508 <board_init+0xb8>)
  4014c6:	4629      	mov	r1, r5
  4014c8:	2018      	movs	r0, #24
  4014ca:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D1, OV_DATA_BUS_FLAGS);
  4014cc:	4629      	mov	r1, r5
  4014ce:	2019      	movs	r0, #25
  4014d0:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D2, OV_DATA_BUS_FLAGS);
  4014d2:	4629      	mov	r1, r5
  4014d4:	201a      	movs	r0, #26
  4014d6:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D3, OV_DATA_BUS_FLAGS);
  4014d8:	4629      	mov	r1, r5
  4014da:	201b      	movs	r0, #27
  4014dc:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D4, OV_DATA_BUS_FLAGS);
  4014de:	4629      	mov	r1, r5
  4014e0:	201c      	movs	r0, #28
  4014e2:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D5, OV_DATA_BUS_FLAGS);
  4014e4:	4629      	mov	r1, r5
  4014e6:	201d      	movs	r0, #29
  4014e8:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
  4014ea:	4629      	mov	r1, r5
  4014ec:	201e      	movs	r0, #30
  4014ee:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
  4014f0:	4629      	mov	r1, r5
  4014f2:	201f      	movs	r0, #31
  4014f4:	47a0      	blx	r4
  4014f6:	bd38      	pop	{r3, r4, r5, pc}
  4014f8:	00400665 	.word	0x00400665
  4014fc:	400e0e00 	.word	0x400e0e00
  401500:	400e1000 	.word	0x400e1000
  401504:	004002f9 	.word	0x004002f9
  401508:	28000001 	.word	0x28000001

0040150c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  40150c:	e7fe      	b.n	40150c <Dummy_Handler>
	...

00401510 <Reset_Handler>:
{
  401510:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  401512:	4b21      	ldr	r3, [pc, #132]	; (401598 <Reset_Handler+0x88>)
  401514:	4a21      	ldr	r2, [pc, #132]	; (40159c <Reset_Handler+0x8c>)
  401516:	429a      	cmp	r2, r3
  401518:	d928      	bls.n	40156c <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  40151a:	4b21      	ldr	r3, [pc, #132]	; (4015a0 <Reset_Handler+0x90>)
  40151c:	4a1e      	ldr	r2, [pc, #120]	; (401598 <Reset_Handler+0x88>)
  40151e:	429a      	cmp	r2, r3
  401520:	d20c      	bcs.n	40153c <Reset_Handler+0x2c>
  401522:	3b01      	subs	r3, #1
  401524:	1a9b      	subs	r3, r3, r2
  401526:	f023 0303 	bic.w	r3, r3, #3
  40152a:	3304      	adds	r3, #4
  40152c:	4413      	add	r3, r2
  40152e:	491b      	ldr	r1, [pc, #108]	; (40159c <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  401530:	f851 0b04 	ldr.w	r0, [r1], #4
  401534:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  401538:	429a      	cmp	r2, r3
  40153a:	d1f9      	bne.n	401530 <Reset_Handler+0x20>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  40153c:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  40153e:	4b19      	ldr	r3, [pc, #100]	; (4015a4 <Reset_Handler+0x94>)
  401540:	4a19      	ldr	r2, [pc, #100]	; (4015a8 <Reset_Handler+0x98>)
  401542:	429a      	cmp	r2, r3
  401544:	d20a      	bcs.n	40155c <Reset_Handler+0x4c>
  401546:	3b01      	subs	r3, #1
  401548:	1a9b      	subs	r3, r3, r2
  40154a:	f023 0303 	bic.w	r3, r3, #3
  40154e:	3304      	adds	r3, #4
  401550:	4413      	add	r3, r2
		*pDest++ = 0;
  401552:	2100      	movs	r1, #0
  401554:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  401558:	429a      	cmp	r2, r3
  40155a:	d1fb      	bne.n	401554 <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  40155c:	4b13      	ldr	r3, [pc, #76]	; (4015ac <Reset_Handler+0x9c>)
  40155e:	4a14      	ldr	r2, [pc, #80]	; (4015b0 <Reset_Handler+0xa0>)
  401560:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  401562:	4b14      	ldr	r3, [pc, #80]	; (4015b4 <Reset_Handler+0xa4>)
  401564:	4798      	blx	r3
	main();
  401566:	4b14      	ldr	r3, [pc, #80]	; (4015b8 <Reset_Handler+0xa8>)
  401568:	4798      	blx	r3
  40156a:	e7fe      	b.n	40156a <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  40156c:	4b0a      	ldr	r3, [pc, #40]	; (401598 <Reset_Handler+0x88>)
  40156e:	4a0b      	ldr	r2, [pc, #44]	; (40159c <Reset_Handler+0x8c>)
  401570:	429a      	cmp	r2, r3
  401572:	d2e3      	bcs.n	40153c <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  401574:	4b0a      	ldr	r3, [pc, #40]	; (4015a0 <Reset_Handler+0x90>)
  401576:	4808      	ldr	r0, [pc, #32]	; (401598 <Reset_Handler+0x88>)
  401578:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  40157a:	4611      	mov	r1, r2
  40157c:	3a04      	subs	r2, #4
  40157e:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  401580:	2800      	cmp	r0, #0
  401582:	d0db      	beq.n	40153c <Reset_Handler+0x2c>
  401584:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  401588:	f852 0904 	ldr.w	r0, [r2], #-4
  40158c:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  401590:	42ca      	cmn	r2, r1
  401592:	d1f9      	bne.n	401588 <Reset_Handler+0x78>
  401594:	e7d2      	b.n	40153c <Reset_Handler+0x2c>
  401596:	bf00      	nop
  401598:	20000000 	.word	0x20000000
  40159c:	0040779c 	.word	0x0040779c
  4015a0:	200009c0 	.word	0x200009c0
  4015a4:	20019578 	.word	0x20019578
  4015a8:	200009c0 	.word	0x200009c0
  4015ac:	e000ed00 	.word	0xe000ed00
  4015b0:	00400000 	.word	0x00400000
  4015b4:	004018d5 	.word	0x004018d5
  4015b8:	00401779 	.word	0x00401779

004015bc <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4015bc:	4b3c      	ldr	r3, [pc, #240]	; (4016b0 <SystemCoreClockUpdate+0xf4>)
  4015be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4015c0:	f003 0303 	and.w	r3, r3, #3
  4015c4:	2b03      	cmp	r3, #3
  4015c6:	d80e      	bhi.n	4015e6 <SystemCoreClockUpdate+0x2a>
  4015c8:	e8df f003 	tbb	[pc, r3]
  4015cc:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  4015d0:	4b38      	ldr	r3, [pc, #224]	; (4016b4 <SystemCoreClockUpdate+0xf8>)
  4015d2:	695b      	ldr	r3, [r3, #20]
  4015d4:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4015d8:	bf14      	ite	ne
  4015da:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4015de:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4015e2:	4b35      	ldr	r3, [pc, #212]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  4015e4:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4015e6:	4b32      	ldr	r3, [pc, #200]	; (4016b0 <SystemCoreClockUpdate+0xf4>)
  4015e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4015ea:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4015ee:	2b70      	cmp	r3, #112	; 0x70
  4015f0:	d055      	beq.n	40169e <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4015f2:	4b2f      	ldr	r3, [pc, #188]	; (4016b0 <SystemCoreClockUpdate+0xf4>)
  4015f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  4015f6:	4930      	ldr	r1, [pc, #192]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4015f8:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  4015fc:	680b      	ldr	r3, [r1, #0]
  4015fe:	40d3      	lsrs	r3, r2
  401600:	600b      	str	r3, [r1, #0]
  401602:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401604:	4b2a      	ldr	r3, [pc, #168]	; (4016b0 <SystemCoreClockUpdate+0xf4>)
  401606:	6a1b      	ldr	r3, [r3, #32]
  401608:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40160c:	d003      	beq.n	401616 <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  40160e:	4a2b      	ldr	r2, [pc, #172]	; (4016bc <SystemCoreClockUpdate+0x100>)
  401610:	4b29      	ldr	r3, [pc, #164]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  401612:	601a      	str	r2, [r3, #0]
  401614:	e7e7      	b.n	4015e6 <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401616:	4a2a      	ldr	r2, [pc, #168]	; (4016c0 <SystemCoreClockUpdate+0x104>)
  401618:	4b27      	ldr	r3, [pc, #156]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  40161a:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  40161c:	4b24      	ldr	r3, [pc, #144]	; (4016b0 <SystemCoreClockUpdate+0xf4>)
  40161e:	6a1b      	ldr	r3, [r3, #32]
  401620:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401624:	2b10      	cmp	r3, #16
  401626:	d005      	beq.n	401634 <SystemCoreClockUpdate+0x78>
  401628:	2b20      	cmp	r3, #32
  40162a:	d1dc      	bne.n	4015e6 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40162c:	4a23      	ldr	r2, [pc, #140]	; (4016bc <SystemCoreClockUpdate+0x100>)
  40162e:	4b22      	ldr	r3, [pc, #136]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  401630:	601a      	str	r2, [r3, #0]
			break;
  401632:	e7d8      	b.n	4015e6 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  401634:	4a23      	ldr	r2, [pc, #140]	; (4016c4 <SystemCoreClockUpdate+0x108>)
  401636:	4b20      	ldr	r3, [pc, #128]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  401638:	601a      	str	r2, [r3, #0]
			break;
  40163a:	e7d4      	b.n	4015e6 <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  40163c:	4b1c      	ldr	r3, [pc, #112]	; (4016b0 <SystemCoreClockUpdate+0xf4>)
  40163e:	6a1b      	ldr	r3, [r3, #32]
  401640:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401644:	d018      	beq.n	401678 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  401646:	4a1d      	ldr	r2, [pc, #116]	; (4016bc <SystemCoreClockUpdate+0x100>)
  401648:	4b1b      	ldr	r3, [pc, #108]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  40164a:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  40164c:	4b18      	ldr	r3, [pc, #96]	; (4016b0 <SystemCoreClockUpdate+0xf4>)
  40164e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401650:	f003 0303 	and.w	r3, r3, #3
  401654:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  401656:	4a16      	ldr	r2, [pc, #88]	; (4016b0 <SystemCoreClockUpdate+0xf4>)
  401658:	bf07      	ittee	eq
  40165a:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  40165c:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  40165e:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401660:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  401662:	4815      	ldr	r0, [pc, #84]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  401664:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401668:	6803      	ldr	r3, [r0, #0]
  40166a:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  40166e:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401670:	fbb3 f3f2 	udiv	r3, r3, r2
  401674:	6003      	str	r3, [r0, #0]
  401676:	e7b6      	b.n	4015e6 <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401678:	4a11      	ldr	r2, [pc, #68]	; (4016c0 <SystemCoreClockUpdate+0x104>)
  40167a:	4b0f      	ldr	r3, [pc, #60]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  40167c:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  40167e:	4b0c      	ldr	r3, [pc, #48]	; (4016b0 <SystemCoreClockUpdate+0xf4>)
  401680:	6a1b      	ldr	r3, [r3, #32]
  401682:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401686:	2b10      	cmp	r3, #16
  401688:	d005      	beq.n	401696 <SystemCoreClockUpdate+0xda>
  40168a:	2b20      	cmp	r3, #32
  40168c:	d1de      	bne.n	40164c <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40168e:	4a0b      	ldr	r2, [pc, #44]	; (4016bc <SystemCoreClockUpdate+0x100>)
  401690:	4b09      	ldr	r3, [pc, #36]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  401692:	601a      	str	r2, [r3, #0]
					break;
  401694:	e7da      	b.n	40164c <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  401696:	4a0b      	ldr	r2, [pc, #44]	; (4016c4 <SystemCoreClockUpdate+0x108>)
  401698:	4b07      	ldr	r3, [pc, #28]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  40169a:	601a      	str	r2, [r3, #0]
					break;
  40169c:	e7d6      	b.n	40164c <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  40169e:	4a06      	ldr	r2, [pc, #24]	; (4016b8 <SystemCoreClockUpdate+0xfc>)
  4016a0:	6813      	ldr	r3, [r2, #0]
  4016a2:	4909      	ldr	r1, [pc, #36]	; (4016c8 <SystemCoreClockUpdate+0x10c>)
  4016a4:	fba1 1303 	umull	r1, r3, r1, r3
  4016a8:	085b      	lsrs	r3, r3, #1
  4016aa:	6013      	str	r3, [r2, #0]
  4016ac:	4770      	bx	lr
  4016ae:	bf00      	nop
  4016b0:	400e0400 	.word	0x400e0400
  4016b4:	400e1410 	.word	0x400e1410
  4016b8:	2000000c 	.word	0x2000000c
  4016bc:	00b71b00 	.word	0x00b71b00
  4016c0:	003d0900 	.word	0x003d0900
  4016c4:	007a1200 	.word	0x007a1200
  4016c8:	aaaaaaab 	.word	0xaaaaaaab

004016cc <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  4016cc:	4b12      	ldr	r3, [pc, #72]	; (401718 <system_init_flash+0x4c>)
  4016ce:	4298      	cmp	r0, r3
  4016d0:	d911      	bls.n	4016f6 <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  4016d2:	4b12      	ldr	r3, [pc, #72]	; (40171c <system_init_flash+0x50>)
  4016d4:	4298      	cmp	r0, r3
  4016d6:	d913      	bls.n	401700 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  4016d8:	4b11      	ldr	r3, [pc, #68]	; (401720 <system_init_flash+0x54>)
  4016da:	4298      	cmp	r0, r3
  4016dc:	d914      	bls.n	401708 <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  4016de:	4b11      	ldr	r3, [pc, #68]	; (401724 <system_init_flash+0x58>)
  4016e0:	4298      	cmp	r0, r3
  4016e2:	d915      	bls.n	401710 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  4016e4:	4b10      	ldr	r3, [pc, #64]	; (401728 <system_init_flash+0x5c>)
  4016e6:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4016e8:	bf94      	ite	ls
  4016ea:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4016ee:	4a0f      	ldrhi	r2, [pc, #60]	; (40172c <system_init_flash+0x60>)
  4016f0:	4b0f      	ldr	r3, [pc, #60]	; (401730 <system_init_flash+0x64>)
  4016f2:	601a      	str	r2, [r3, #0]
  4016f4:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4016f6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4016fa:	4b0d      	ldr	r3, [pc, #52]	; (401730 <system_init_flash+0x64>)
  4016fc:	601a      	str	r2, [r3, #0]
  4016fe:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401700:	4a0c      	ldr	r2, [pc, #48]	; (401734 <system_init_flash+0x68>)
  401702:	4b0b      	ldr	r3, [pc, #44]	; (401730 <system_init_flash+0x64>)
  401704:	601a      	str	r2, [r3, #0]
  401706:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401708:	4a0b      	ldr	r2, [pc, #44]	; (401738 <system_init_flash+0x6c>)
  40170a:	4b09      	ldr	r3, [pc, #36]	; (401730 <system_init_flash+0x64>)
  40170c:	601a      	str	r2, [r3, #0]
  40170e:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401710:	4a0a      	ldr	r2, [pc, #40]	; (40173c <system_init_flash+0x70>)
  401712:	4b07      	ldr	r3, [pc, #28]	; (401730 <system_init_flash+0x64>)
  401714:	601a      	str	r2, [r3, #0]
  401716:	4770      	bx	lr
  401718:	01312cff 	.word	0x01312cff
  40171c:	026259ff 	.word	0x026259ff
  401720:	039386ff 	.word	0x039386ff
  401724:	04c4b3ff 	.word	0x04c4b3ff
  401728:	05f5e0ff 	.word	0x05f5e0ff
  40172c:	04000500 	.word	0x04000500
  401730:	400e0a00 	.word	0x400e0a00
  401734:	04000100 	.word	0x04000100
  401738:	04000200 	.word	0x04000200
  40173c:	04000300 	.word	0x04000300

00401740 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401740:	4b0a      	ldr	r3, [pc, #40]	; (40176c <_sbrk+0x2c>)
  401742:	681b      	ldr	r3, [r3, #0]
  401744:	b153      	cbz	r3, 40175c <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401746:	4b09      	ldr	r3, [pc, #36]	; (40176c <_sbrk+0x2c>)
  401748:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  40174a:	181a      	adds	r2, r3, r0
  40174c:	4908      	ldr	r1, [pc, #32]	; (401770 <_sbrk+0x30>)
  40174e:	4291      	cmp	r1, r2
  401750:	db08      	blt.n	401764 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401752:	4610      	mov	r0, r2
  401754:	4a05      	ldr	r2, [pc, #20]	; (40176c <_sbrk+0x2c>)
  401756:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401758:	4618      	mov	r0, r3
  40175a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  40175c:	4a05      	ldr	r2, [pc, #20]	; (401774 <_sbrk+0x34>)
  40175e:	4b03      	ldr	r3, [pc, #12]	; (40176c <_sbrk+0x2c>)
  401760:	601a      	str	r2, [r3, #0]
  401762:	e7f0      	b.n	401746 <_sbrk+0x6>
		return (caddr_t) -1;	
  401764:	f04f 30ff 	mov.w	r0, #4294967295
}
  401768:	4770      	bx	lr
  40176a:	bf00      	nop
  40176c:	20000a78 	.word	0x20000a78
  401770:	2001fffc 	.word	0x2001fffc
  401774:	2001c578 	.word	0x2001c578

00401778 <main>:
#include "timer_interface.h"



int main (void)
{
  401778:	b580      	push	{r7, lr}
	/* Insert system clock initialization code here (sysclk_init()). */

	sysclk_init();
  40177a:	4b39      	ldr	r3, [pc, #228]	; (401860 <main+0xe8>)
  40177c:	4798      	blx	r3
	wdt_disable(WDT);
  40177e:	4839      	ldr	r0, [pc, #228]	; (401864 <main+0xec>)
  401780:	4b39      	ldr	r3, [pc, #228]	; (401868 <main+0xf0>)
  401782:	4798      	blx	r3
	board_init();
  401784:	4b39      	ldr	r3, [pc, #228]	; (40186c <main+0xf4>)
  401786:	4798      	blx	r3
	
	
	web_setup_flag = false;
  401788:	2200      	movs	r2, #0
  40178a:	4b39      	ldr	r3, [pc, #228]	; (401870 <main+0xf8>)
  40178c:	601a      	str	r2, [r3, #0]
	
	
	
	configure_tc();						// Configuring the timer from timer_interface
  40178e:	4b39      	ldr	r3, [pc, #228]	; (401874 <main+0xfc>)
  401790:	4798      	blx	r3
	
	configure_usart_wifi();				// Configuring WIFI USART
  401792:	4b39      	ldr	r3, [pc, #228]	; (401878 <main+0x100>)
  401794:	4798      	blx	r3
	configure_wifi_comm_pin();			// Configuring WIFI command pin
  401796:	4b39      	ldr	r3, [pc, #228]	; (40187c <main+0x104>)
  401798:	4798      	blx	r3
	configure_wifi_web_setup_pin();     // Configuring WIFI web setup pin
  40179a:	4b39      	ldr	r3, [pc, #228]	; (401880 <main+0x108>)
  40179c:	4798      	blx	r3
	
	// Hard reset the wifi chip. Free "connected-to-mcu" GPIOs are PB4, PB3, PA11, 
	gpio_set_pin_low(WIFI_RESET_PIN);   // Pulling the pin low, hard resetting
  40179e:	2023      	movs	r0, #35	; 0x23
  4017a0:	4b38      	ldr	r3, [pc, #224]	; (401884 <main+0x10c>)
  4017a2:	4798      	blx	r3
	delay_ms(100);                      // Delaying for 100 ms, as instructed
  4017a4:	4838      	ldr	r0, [pc, #224]	; (401888 <main+0x110>)
  4017a6:	4b39      	ldr	r3, [pc, #228]	; (40188c <main+0x114>)
  4017a8:	4798      	blx	r3
	gpio_set_pin_high(WIFI_RESET_PIN);  // Pulling the pin high
  4017aa:	2023      	movs	r0, #35	; 0x23
  4017ac:	4b38      	ldr	r3, [pc, #224]	; (401890 <main+0x118>)
  4017ae:	4798      	blx	r3
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  4017b0:	4d38      	ldr	r5, [pc, #224]	; (401894 <main+0x11c>)
// 		}
// 		
// 	}

	while(!ioport_get_pin_level(WIFI_STATUS_PIN)) {
		if (web_setup_flag == true)
  4017b2:	4c2f      	ldr	r4, [pc, #188]	; (401870 <main+0xf8>)
	while(!ioport_get_pin_level(WIFI_STATUS_PIN)) {
  4017b4:	e002      	b.n	4017bc <main+0x44>
		if (web_setup_flag == true)
  4017b6:	6823      	ldr	r3, [r4, #0]
  4017b8:	2b01      	cmp	r3, #1
  4017ba:	d013      	beq.n	4017e4 <main+0x6c>
  4017bc:	6beb      	ldr	r3, [r5, #60]	; 0x3c
	while(!ioport_get_pin_level(WIFI_STATUS_PIN)) {
  4017be:	f013 0f04 	tst.w	r3, #4
  4017c2:	d0f8      	beq.n	4017b6 <main+0x3e>
	}
	

	
	// Initialize the camera
	init_camera();
  4017c4:	4b34      	ldr	r3, [pc, #208]	; (401898 <main+0x120>)
  4017c6:	4798      	blx	r3
	
	
	// Configure the camera
	configure_camera();
  4017c8:	4b34      	ldr	r3, [pc, #208]	; (40189c <main+0x124>)
  4017ca:	4798      	blx	r3

	write_wifi_command("set sy c p off\r\n", 3);					// Telling the wifi chip to turn off the command prompt
  4017cc:	2103      	movs	r1, #3
  4017ce:	4834      	ldr	r0, [pc, #208]	; (4018a0 <main+0x128>)
  4017d0:	4c34      	ldr	r4, [pc, #208]	; (4018a4 <main+0x12c>)
  4017d2:	47a0      	blx	r4
	write_wifi_command("set sy c e off\r\n", 3);					// Telling the wifi chip to turn off the echo
  4017d4:	2103      	movs	r1, #3
  4017d6:	4834      	ldr	r0, [pc, #208]	; (4018a8 <main+0x130>)
  4017d8:	47a0      	blx	r4
	
	
	
	while(1)
	{
		if (web_setup_flag) {
  4017da:	4e25      	ldr	r6, [pc, #148]	; (401870 <main+0xf8>)
			while (!ioport_get_pin_level(WIFI_STATUS_PIN)) {
			}
		}
		
		else {
			if (wifi_status == false) {
  4017dc:	4c33      	ldr	r4, [pc, #204]	; (4018ac <main+0x134>)
			else 
			{
				if (wifi_websocket_flag == false)
				{
					write_wifi_command("poll all\r\n",3);
					delay_ms(1000);
  4017de:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 4018d0 <main+0x158>
  4017e2:	e013      	b.n	40180c <main+0x94>
			usart_write_line(WIFI_USART, "setup web\r\n");
  4017e4:	4932      	ldr	r1, [pc, #200]	; (4018b0 <main+0x138>)
  4017e6:	4833      	ldr	r0, [pc, #204]	; (4018b4 <main+0x13c>)
  4017e8:	4b33      	ldr	r3, [pc, #204]	; (4018b8 <main+0x140>)
  4017ea:	4798      	blx	r3
			web_setup_flag = false;
  4017ec:	2300      	movs	r3, #0
  4017ee:	6023      	str	r3, [r4, #0]
  4017f0:	e7e4      	b.n	4017bc <main+0x44>
			if (wifi_status == false) {
  4017f2:	7823      	ldrb	r3, [r4, #0]
  4017f4:	b1cb      	cbz	r3, 40182a <main+0xb2>
				if (wifi_websocket_flag == false)
  4017f6:	4b31      	ldr	r3, [pc, #196]	; (4018bc <main+0x144>)
  4017f8:	781b      	ldrb	r3, [r3, #0]
  4017fa:	2b00      	cmp	r3, #0
  4017fc:	d12a      	bne.n	401854 <main+0xdc>
					write_wifi_command("poll all\r\n",3);
  4017fe:	2103      	movs	r1, #3
  401800:	482f      	ldr	r0, [pc, #188]	; (4018c0 <main+0x148>)
  401802:	4b28      	ldr	r3, [pc, #160]	; (4018a4 <main+0x12c>)
  401804:	4798      	blx	r3
					delay_ms(1000);
  401806:	4640      	mov	r0, r8
  401808:	4b20      	ldr	r3, [pc, #128]	; (40188c <main+0x114>)
  40180a:	4798      	blx	r3
		if (web_setup_flag) {
  40180c:	6833      	ldr	r3, [r6, #0]
  40180e:	2b00      	cmp	r3, #0
  401810:	d0ef      	beq.n	4017f2 <main+0x7a>
			write_wifi_command("setup web\r\n", 3);
  401812:	2103      	movs	r1, #3
  401814:	4826      	ldr	r0, [pc, #152]	; (4018b0 <main+0x138>)
  401816:	4b23      	ldr	r3, [pc, #140]	; (4018a4 <main+0x12c>)
  401818:	4798      	blx	r3
			web_setup_flag = false;
  40181a:	2300      	movs	r3, #0
  40181c:	6033      	str	r3, [r6, #0]
  40181e:	4a1d      	ldr	r2, [pc, #116]	; (401894 <main+0x11c>)
  401820:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
			while (!ioport_get_pin_level(WIFI_STATUS_PIN)) {
  401822:	f013 0f04 	tst.w	r3, #4
  401826:	d0fb      	beq.n	401820 <main+0xa8>
  401828:	e7f0      	b.n	40180c <main+0x94>
 				gpio_set_pin_low(WIFI_RESET_PIN);   // Pulling the pin low, hard resetting
  40182a:	2023      	movs	r0, #35	; 0x23
  40182c:	4b15      	ldr	r3, [pc, #84]	; (401884 <main+0x10c>)
  40182e:	4798      	blx	r3
 				delay_ms(100);                      // Delaying for 100 ms, as instructed
  401830:	4815      	ldr	r0, [pc, #84]	; (401888 <main+0x110>)
  401832:	4b16      	ldr	r3, [pc, #88]	; (40188c <main+0x114>)
  401834:	4798      	blx	r3
 				gpio_set_pin_high(WIFI_RESET_PIN);  // Pulling the pin high
  401836:	2023      	movs	r0, #35	; 0x23
  401838:	4b15      	ldr	r3, [pc, #84]	; (401890 <main+0x118>)
  40183a:	4798      	blx	r3
				while (!wifi_status) {
  40183c:	7823      	ldrb	r3, [r4, #0]
  40183e:	2b00      	cmp	r3, #0
  401840:	d1e4      	bne.n	40180c <main+0x94>
					write_wifi_command("get wl n s\r\n",2);
  401842:	4f20      	ldr	r7, [pc, #128]	; (4018c4 <main+0x14c>)
  401844:	4d17      	ldr	r5, [pc, #92]	; (4018a4 <main+0x12c>)
  401846:	2102      	movs	r1, #2
  401848:	4638      	mov	r0, r7
  40184a:	47a8      	blx	r5
				while (!wifi_status) {
  40184c:	7823      	ldrb	r3, [r4, #0]
  40184e:	2b00      	cmp	r3, #0
  401850:	d0f9      	beq.n	401846 <main+0xce>
  401852:	e7db      	b.n	40180c <main+0x94>
				}
				else
				{
					start_capture();
  401854:	4b1c      	ldr	r3, [pc, #112]	; (4018c8 <main+0x150>)
  401856:	4798      	blx	r3
					write_image_to_file();
  401858:	4b1c      	ldr	r3, [pc, #112]	; (4018cc <main+0x154>)
  40185a:	4798      	blx	r3
  40185c:	e7d6      	b.n	40180c <main+0x94>
  40185e:	bf00      	nop
  401860:	00400139 	.word	0x00400139
  401864:	400e1450 	.word	0x400e1450
  401868:	00400b29 	.word	0x00400b29
  40186c:	00401451 	.word	0x00401451
  401870:	20000a70 	.word	0x20000a70
  401874:	00401079 	.word	0x00401079
  401878:	00401235 	.word	0x00401235
  40187c:	004012d5 	.word	0x004012d5
  401880:	00401321 	.word	0x00401321
  401884:	004002dd 	.word	0x004002dd
  401888:	000d1437 	.word	0x000d1437
  40188c:	20000001 	.word	0x20000001
  401890:	004002c3 	.word	0x004002c3
  401894:	400e1000 	.word	0x400e1000
  401898:	00400c4d 	.word	0x00400c4d
  40189c:	00400cb1 	.word	0x00400cb1
  4018a0:	004074a0 	.word	0x004074a0
  4018a4:	00401369 	.word	0x00401369
  4018a8:	004074b4 	.word	0x004074b4
  4018ac:	20000a75 	.word	0x20000a75
  4018b0:	00407494 	.word	0x00407494
  4018b4:	40024000 	.word	0x40024000
  4018b8:	00400af1 	.word	0x00400af1
  4018bc:	20000a76 	.word	0x20000a76
  4018c0:	004074d8 	.word	0x004074d8
  4018c4:	004074c8 	.word	0x004074c8
  4018c8:	00400d71 	.word	0x00400d71
  4018cc:	004013a9 	.word	0x004013a9
  4018d0:	0082ca25 	.word	0x0082ca25

004018d4 <__libc_init_array>:
  4018d4:	b570      	push	{r4, r5, r6, lr}
  4018d6:	4e0f      	ldr	r6, [pc, #60]	; (401914 <__libc_init_array+0x40>)
  4018d8:	4d0f      	ldr	r5, [pc, #60]	; (401918 <__libc_init_array+0x44>)
  4018da:	1b76      	subs	r6, r6, r5
  4018dc:	10b6      	asrs	r6, r6, #2
  4018de:	bf18      	it	ne
  4018e0:	2400      	movne	r4, #0
  4018e2:	d005      	beq.n	4018f0 <__libc_init_array+0x1c>
  4018e4:	3401      	adds	r4, #1
  4018e6:	f855 3b04 	ldr.w	r3, [r5], #4
  4018ea:	4798      	blx	r3
  4018ec:	42a6      	cmp	r6, r4
  4018ee:	d1f9      	bne.n	4018e4 <__libc_init_array+0x10>
  4018f0:	4e0a      	ldr	r6, [pc, #40]	; (40191c <__libc_init_array+0x48>)
  4018f2:	4d0b      	ldr	r5, [pc, #44]	; (401920 <__libc_init_array+0x4c>)
  4018f4:	1b76      	subs	r6, r6, r5
  4018f6:	f005 ff3b 	bl	407770 <_init>
  4018fa:	10b6      	asrs	r6, r6, #2
  4018fc:	bf18      	it	ne
  4018fe:	2400      	movne	r4, #0
  401900:	d006      	beq.n	401910 <__libc_init_array+0x3c>
  401902:	3401      	adds	r4, #1
  401904:	f855 3b04 	ldr.w	r3, [r5], #4
  401908:	4798      	blx	r3
  40190a:	42a6      	cmp	r6, r4
  40190c:	d1f9      	bne.n	401902 <__libc_init_array+0x2e>
  40190e:	bd70      	pop	{r4, r5, r6, pc}
  401910:	bd70      	pop	{r4, r5, r6, pc}
  401912:	bf00      	nop
  401914:	0040777c 	.word	0x0040777c
  401918:	0040777c 	.word	0x0040777c
  40191c:	00407784 	.word	0x00407784
  401920:	0040777c 	.word	0x0040777c

00401924 <memset>:
  401924:	b470      	push	{r4, r5, r6}
  401926:	0786      	lsls	r6, r0, #30
  401928:	d046      	beq.n	4019b8 <memset+0x94>
  40192a:	1e54      	subs	r4, r2, #1
  40192c:	2a00      	cmp	r2, #0
  40192e:	d041      	beq.n	4019b4 <memset+0x90>
  401930:	b2ca      	uxtb	r2, r1
  401932:	4603      	mov	r3, r0
  401934:	e002      	b.n	40193c <memset+0x18>
  401936:	f114 34ff 	adds.w	r4, r4, #4294967295
  40193a:	d33b      	bcc.n	4019b4 <memset+0x90>
  40193c:	f803 2b01 	strb.w	r2, [r3], #1
  401940:	079d      	lsls	r5, r3, #30
  401942:	d1f8      	bne.n	401936 <memset+0x12>
  401944:	2c03      	cmp	r4, #3
  401946:	d92e      	bls.n	4019a6 <memset+0x82>
  401948:	b2cd      	uxtb	r5, r1
  40194a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40194e:	2c0f      	cmp	r4, #15
  401950:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401954:	d919      	bls.n	40198a <memset+0x66>
  401956:	f103 0210 	add.w	r2, r3, #16
  40195a:	4626      	mov	r6, r4
  40195c:	3e10      	subs	r6, #16
  40195e:	2e0f      	cmp	r6, #15
  401960:	f842 5c10 	str.w	r5, [r2, #-16]
  401964:	f842 5c0c 	str.w	r5, [r2, #-12]
  401968:	f842 5c08 	str.w	r5, [r2, #-8]
  40196c:	f842 5c04 	str.w	r5, [r2, #-4]
  401970:	f102 0210 	add.w	r2, r2, #16
  401974:	d8f2      	bhi.n	40195c <memset+0x38>
  401976:	f1a4 0210 	sub.w	r2, r4, #16
  40197a:	f022 020f 	bic.w	r2, r2, #15
  40197e:	f004 040f 	and.w	r4, r4, #15
  401982:	3210      	adds	r2, #16
  401984:	2c03      	cmp	r4, #3
  401986:	4413      	add	r3, r2
  401988:	d90d      	bls.n	4019a6 <memset+0x82>
  40198a:	461e      	mov	r6, r3
  40198c:	4622      	mov	r2, r4
  40198e:	3a04      	subs	r2, #4
  401990:	2a03      	cmp	r2, #3
  401992:	f846 5b04 	str.w	r5, [r6], #4
  401996:	d8fa      	bhi.n	40198e <memset+0x6a>
  401998:	1f22      	subs	r2, r4, #4
  40199a:	f022 0203 	bic.w	r2, r2, #3
  40199e:	3204      	adds	r2, #4
  4019a0:	4413      	add	r3, r2
  4019a2:	f004 0403 	and.w	r4, r4, #3
  4019a6:	b12c      	cbz	r4, 4019b4 <memset+0x90>
  4019a8:	b2c9      	uxtb	r1, r1
  4019aa:	441c      	add	r4, r3
  4019ac:	f803 1b01 	strb.w	r1, [r3], #1
  4019b0:	429c      	cmp	r4, r3
  4019b2:	d1fb      	bne.n	4019ac <memset+0x88>
  4019b4:	bc70      	pop	{r4, r5, r6}
  4019b6:	4770      	bx	lr
  4019b8:	4614      	mov	r4, r2
  4019ba:	4603      	mov	r3, r0
  4019bc:	e7c2      	b.n	401944 <memset+0x20>
  4019be:	bf00      	nop

004019c0 <sprintf>:
  4019c0:	b40e      	push	{r1, r2, r3}
  4019c2:	b5f0      	push	{r4, r5, r6, r7, lr}
  4019c4:	b09c      	sub	sp, #112	; 0x70
  4019c6:	ab21      	add	r3, sp, #132	; 0x84
  4019c8:	490f      	ldr	r1, [pc, #60]	; (401a08 <sprintf+0x48>)
  4019ca:	f853 2b04 	ldr.w	r2, [r3], #4
  4019ce:	9301      	str	r3, [sp, #4]
  4019d0:	4605      	mov	r5, r0
  4019d2:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  4019d6:	6808      	ldr	r0, [r1, #0]
  4019d8:	9502      	str	r5, [sp, #8]
  4019da:	f44f 7702 	mov.w	r7, #520	; 0x208
  4019de:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4019e2:	a902      	add	r1, sp, #8
  4019e4:	9506      	str	r5, [sp, #24]
  4019e6:	f8ad 7014 	strh.w	r7, [sp, #20]
  4019ea:	9404      	str	r4, [sp, #16]
  4019ec:	9407      	str	r4, [sp, #28]
  4019ee:	f8ad 6016 	strh.w	r6, [sp, #22]
  4019f2:	f000 fae3 	bl	401fbc <_svfprintf_r>
  4019f6:	9b02      	ldr	r3, [sp, #8]
  4019f8:	2200      	movs	r2, #0
  4019fa:	701a      	strb	r2, [r3, #0]
  4019fc:	b01c      	add	sp, #112	; 0x70
  4019fe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401a02:	b003      	add	sp, #12
  401a04:	4770      	bx	lr
  401a06:	bf00      	nop
  401a08:	20000010 	.word	0x20000010

00401a0c <strchr>:
  401a0c:	b2c9      	uxtb	r1, r1
  401a0e:	2900      	cmp	r1, #0
  401a10:	d041      	beq.n	401a96 <strchr+0x8a>
  401a12:	0782      	lsls	r2, r0, #30
  401a14:	b4f0      	push	{r4, r5, r6, r7}
  401a16:	d067      	beq.n	401ae8 <strchr+0xdc>
  401a18:	7803      	ldrb	r3, [r0, #0]
  401a1a:	2b00      	cmp	r3, #0
  401a1c:	d068      	beq.n	401af0 <strchr+0xe4>
  401a1e:	4299      	cmp	r1, r3
  401a20:	d037      	beq.n	401a92 <strchr+0x86>
  401a22:	1c43      	adds	r3, r0, #1
  401a24:	e004      	b.n	401a30 <strchr+0x24>
  401a26:	f813 0b01 	ldrb.w	r0, [r3], #1
  401a2a:	b390      	cbz	r0, 401a92 <strchr+0x86>
  401a2c:	4281      	cmp	r1, r0
  401a2e:	d02f      	beq.n	401a90 <strchr+0x84>
  401a30:	079a      	lsls	r2, r3, #30
  401a32:	461c      	mov	r4, r3
  401a34:	d1f7      	bne.n	401a26 <strchr+0x1a>
  401a36:	6825      	ldr	r5, [r4, #0]
  401a38:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  401a3c:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  401a40:	ea83 0605 	eor.w	r6, r3, r5
  401a44:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  401a48:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  401a4c:	ea20 0006 	bic.w	r0, r0, r6
  401a50:	ea22 0205 	bic.w	r2, r2, r5
  401a54:	4302      	orrs	r2, r0
  401a56:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401a5a:	d111      	bne.n	401a80 <strchr+0x74>
  401a5c:	4620      	mov	r0, r4
  401a5e:	f850 6f04 	ldr.w	r6, [r0, #4]!
  401a62:	ea83 0706 	eor.w	r7, r3, r6
  401a66:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  401a6a:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  401a6e:	ea25 0507 	bic.w	r5, r5, r7
  401a72:	ea22 0206 	bic.w	r2, r2, r6
  401a76:	432a      	orrs	r2, r5
  401a78:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401a7c:	d0ef      	beq.n	401a5e <strchr+0x52>
  401a7e:	4604      	mov	r4, r0
  401a80:	7820      	ldrb	r0, [r4, #0]
  401a82:	b918      	cbnz	r0, 401a8c <strchr+0x80>
  401a84:	e005      	b.n	401a92 <strchr+0x86>
  401a86:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  401a8a:	b110      	cbz	r0, 401a92 <strchr+0x86>
  401a8c:	4281      	cmp	r1, r0
  401a8e:	d1fa      	bne.n	401a86 <strchr+0x7a>
  401a90:	4620      	mov	r0, r4
  401a92:	bcf0      	pop	{r4, r5, r6, r7}
  401a94:	4770      	bx	lr
  401a96:	0783      	lsls	r3, r0, #30
  401a98:	d024      	beq.n	401ae4 <strchr+0xd8>
  401a9a:	7803      	ldrb	r3, [r0, #0]
  401a9c:	2b00      	cmp	r3, #0
  401a9e:	d0f9      	beq.n	401a94 <strchr+0x88>
  401aa0:	1c43      	adds	r3, r0, #1
  401aa2:	e003      	b.n	401aac <strchr+0xa0>
  401aa4:	7802      	ldrb	r2, [r0, #0]
  401aa6:	3301      	adds	r3, #1
  401aa8:	2a00      	cmp	r2, #0
  401aaa:	d0f3      	beq.n	401a94 <strchr+0x88>
  401aac:	0799      	lsls	r1, r3, #30
  401aae:	4618      	mov	r0, r3
  401ab0:	d1f8      	bne.n	401aa4 <strchr+0x98>
  401ab2:	6819      	ldr	r1, [r3, #0]
  401ab4:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  401ab8:	ea22 0201 	bic.w	r2, r2, r1
  401abc:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401ac0:	d108      	bne.n	401ad4 <strchr+0xc8>
  401ac2:	f853 1f04 	ldr.w	r1, [r3, #4]!
  401ac6:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  401aca:	ea22 0201 	bic.w	r2, r2, r1
  401ace:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401ad2:	d0f6      	beq.n	401ac2 <strchr+0xb6>
  401ad4:	781a      	ldrb	r2, [r3, #0]
  401ad6:	4618      	mov	r0, r3
  401ad8:	b142      	cbz	r2, 401aec <strchr+0xe0>
  401ada:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  401ade:	2b00      	cmp	r3, #0
  401ae0:	d1fb      	bne.n	401ada <strchr+0xce>
  401ae2:	4770      	bx	lr
  401ae4:	4603      	mov	r3, r0
  401ae6:	e7e4      	b.n	401ab2 <strchr+0xa6>
  401ae8:	4604      	mov	r4, r0
  401aea:	e7a4      	b.n	401a36 <strchr+0x2a>
  401aec:	4618      	mov	r0, r3
  401aee:	4770      	bx	lr
  401af0:	4618      	mov	r0, r3
  401af2:	e7ce      	b.n	401a92 <strchr+0x86>

00401af4 <critical_factorization>:
  401af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401af8:	f04f 0e01 	mov.w	lr, #1
  401afc:	4674      	mov	r4, lr
  401afe:	2500      	movs	r5, #0
  401b00:	f04f 36ff 	mov.w	r6, #4294967295
  401b04:	192b      	adds	r3, r5, r4
  401b06:	428b      	cmp	r3, r1
  401b08:	eb00 0706 	add.w	r7, r0, r6
  401b0c:	d20d      	bcs.n	401b2a <critical_factorization+0x36>
  401b0e:	5d3f      	ldrb	r7, [r7, r4]
  401b10:	f810 c003 	ldrb.w	ip, [r0, r3]
  401b14:	45bc      	cmp	ip, r7
  401b16:	d22d      	bcs.n	401b74 <critical_factorization+0x80>
  401b18:	461d      	mov	r5, r3
  401b1a:	2401      	movs	r4, #1
  401b1c:	eba3 0e06 	sub.w	lr, r3, r6
  401b20:	192b      	adds	r3, r5, r4
  401b22:	428b      	cmp	r3, r1
  401b24:	eb00 0706 	add.w	r7, r0, r6
  401b28:	d3f1      	bcc.n	401b0e <critical_factorization+0x1a>
  401b2a:	f04f 0801 	mov.w	r8, #1
  401b2e:	f8c2 e000 	str.w	lr, [r2]
  401b32:	4644      	mov	r4, r8
  401b34:	2500      	movs	r5, #0
  401b36:	f04f 37ff 	mov.w	r7, #4294967295
  401b3a:	192b      	adds	r3, r5, r4
  401b3c:	4299      	cmp	r1, r3
  401b3e:	eb00 0e07 	add.w	lr, r0, r7
  401b42:	d90e      	bls.n	401b62 <critical_factorization+0x6e>
  401b44:	f81e e004 	ldrb.w	lr, [lr, r4]
  401b48:	f810 c003 	ldrb.w	ip, [r0, r3]
  401b4c:	45f4      	cmp	ip, lr
  401b4e:	d918      	bls.n	401b82 <critical_factorization+0x8e>
  401b50:	461d      	mov	r5, r3
  401b52:	2401      	movs	r4, #1
  401b54:	eba3 0807 	sub.w	r8, r3, r7
  401b58:	192b      	adds	r3, r5, r4
  401b5a:	4299      	cmp	r1, r3
  401b5c:	eb00 0e07 	add.w	lr, r0, r7
  401b60:	d8f0      	bhi.n	401b44 <critical_factorization+0x50>
  401b62:	3701      	adds	r7, #1
  401b64:	1c70      	adds	r0, r6, #1
  401b66:	4287      	cmp	r7, r0
  401b68:	bf24      	itt	cs
  401b6a:	f8c2 8000 	strcs.w	r8, [r2]
  401b6e:	4638      	movcs	r0, r7
  401b70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401b74:	d00c      	beq.n	401b90 <critical_factorization+0x9c>
  401b76:	f04f 0e01 	mov.w	lr, #1
  401b7a:	462e      	mov	r6, r5
  401b7c:	4674      	mov	r4, lr
  401b7e:	4475      	add	r5, lr
  401b80:	e7c0      	b.n	401b04 <critical_factorization+0x10>
  401b82:	d00b      	beq.n	401b9c <critical_factorization+0xa8>
  401b84:	f04f 0801 	mov.w	r8, #1
  401b88:	462f      	mov	r7, r5
  401b8a:	4644      	mov	r4, r8
  401b8c:	4445      	add	r5, r8
  401b8e:	e7d4      	b.n	401b3a <critical_factorization+0x46>
  401b90:	4574      	cmp	r4, lr
  401b92:	bf12      	itee	ne
  401b94:	3401      	addne	r4, #1
  401b96:	461d      	moveq	r5, r3
  401b98:	2401      	moveq	r4, #1
  401b9a:	e7b3      	b.n	401b04 <critical_factorization+0x10>
  401b9c:	4544      	cmp	r4, r8
  401b9e:	bf12      	itee	ne
  401ba0:	3401      	addne	r4, #1
  401ba2:	461d      	moveq	r5, r3
  401ba4:	2401      	moveq	r4, #1
  401ba6:	e7c8      	b.n	401b3a <critical_factorization+0x46>

00401ba8 <two_way_long_needle>:
  401ba8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401bac:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  401bb0:	4616      	mov	r6, r2
  401bb2:	4605      	mov	r5, r0
  401bb4:	468b      	mov	fp, r1
  401bb6:	4610      	mov	r0, r2
  401bb8:	4619      	mov	r1, r3
  401bba:	aa03      	add	r2, sp, #12
  401bbc:	461c      	mov	r4, r3
  401bbe:	f7ff ff99 	bl	401af4 <critical_factorization>
  401bc2:	ab03      	add	r3, sp, #12
  401bc4:	4681      	mov	r9, r0
  401bc6:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  401bca:	f843 4f04 	str.w	r4, [r3, #4]!
  401bce:	4293      	cmp	r3, r2
  401bd0:	d1fb      	bne.n	401bca <two_way_long_needle+0x22>
  401bd2:	b14c      	cbz	r4, 401be8 <two_way_long_needle+0x40>
  401bd4:	1e63      	subs	r3, r4, #1
  401bd6:	1e72      	subs	r2, r6, #1
  401bd8:	a804      	add	r0, sp, #16
  401bda:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401bde:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  401be2:	f113 33ff 	adds.w	r3, r3, #4294967295
  401be6:	d2f8      	bcs.n	401bda <two_way_long_needle+0x32>
  401be8:	9903      	ldr	r1, [sp, #12]
  401bea:	464a      	mov	r2, r9
  401bec:	4431      	add	r1, r6
  401bee:	4630      	mov	r0, r6
  401bf0:	f002 ff0e 	bl	404a10 <memcmp>
  401bf4:	2800      	cmp	r0, #0
  401bf6:	d16f      	bne.n	401cd8 <two_way_long_needle+0x130>
  401bf8:	f109 33ff 	add.w	r3, r9, #4294967295
  401bfc:	9300      	str	r3, [sp, #0]
  401bfe:	18f3      	adds	r3, r6, r3
  401c00:	4682      	mov	sl, r0
  401c02:	9301      	str	r3, [sp, #4]
  401c04:	4623      	mov	r3, r4
  401c06:	4680      	mov	r8, r0
  401c08:	4654      	mov	r4, sl
  401c0a:	4658      	mov	r0, fp
  401c0c:	469a      	mov	sl, r3
  401c0e:	eb08 070a 	add.w	r7, r8, sl
  401c12:	1a3a      	subs	r2, r7, r0
  401c14:	2100      	movs	r1, #0
  401c16:	4428      	add	r0, r5
  401c18:	f002 feaa 	bl	404970 <memchr>
  401c1c:	2800      	cmp	r0, #0
  401c1e:	d156      	bne.n	401cce <two_way_long_needle+0x126>
  401c20:	2f00      	cmp	r7, #0
  401c22:	d054      	beq.n	401cce <two_way_long_needle+0x126>
  401c24:	19eb      	adds	r3, r5, r7
  401c26:	aa04      	add	r2, sp, #16
  401c28:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401c2c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401c30:	b14b      	cbz	r3, 401c46 <two_way_long_needle+0x9e>
  401c32:	b124      	cbz	r4, 401c3e <two_way_long_needle+0x96>
  401c34:	9a03      	ldr	r2, [sp, #12]
  401c36:	4293      	cmp	r3, r2
  401c38:	d201      	bcs.n	401c3e <two_way_long_needle+0x96>
  401c3a:	ebaa 0302 	sub.w	r3, sl, r2
  401c3e:	4498      	add	r8, r3
  401c40:	2400      	movs	r4, #0
  401c42:	4638      	mov	r0, r7
  401c44:	e7e3      	b.n	401c0e <two_way_long_needle+0x66>
  401c46:	454c      	cmp	r4, r9
  401c48:	4623      	mov	r3, r4
  401c4a:	f10a 3eff 	add.w	lr, sl, #4294967295
  401c4e:	bf38      	it	cc
  401c50:	464b      	movcc	r3, r9
  401c52:	4573      	cmp	r3, lr
  401c54:	d213      	bcs.n	401c7e <two_way_long_needle+0xd6>
  401c56:	eb08 0203 	add.w	r2, r8, r3
  401c5a:	f816 c003 	ldrb.w	ip, [r6, r3]
  401c5e:	5ca8      	ldrb	r0, [r5, r2]
  401c60:	4584      	cmp	ip, r0
  401c62:	442a      	add	r2, r5
  401c64:	eb06 0103 	add.w	r1, r6, r3
  401c68:	d006      	beq.n	401c78 <two_way_long_needle+0xd0>
  401c6a:	e02c      	b.n	401cc6 <two_way_long_needle+0x11e>
  401c6c:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  401c70:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401c74:	4584      	cmp	ip, r0
  401c76:	d126      	bne.n	401cc6 <two_way_long_needle+0x11e>
  401c78:	3301      	adds	r3, #1
  401c7a:	4573      	cmp	r3, lr
  401c7c:	d3f6      	bcc.n	401c6c <two_way_long_needle+0xc4>
  401c7e:	454c      	cmp	r4, r9
  401c80:	9900      	ldr	r1, [sp, #0]
  401c82:	f080 8089 	bcs.w	401d98 <two_way_long_needle+0x1f0>
  401c86:	9b00      	ldr	r3, [sp, #0]
  401c88:	eb08 0203 	add.w	r2, r8, r3
  401c8c:	9b01      	ldr	r3, [sp, #4]
  401c8e:	5ca8      	ldrb	r0, [r5, r2]
  401c90:	781b      	ldrb	r3, [r3, #0]
  401c92:	4298      	cmp	r0, r3
  401c94:	442a      	add	r2, r5
  401c96:	d17f      	bne.n	401d98 <two_way_long_needle+0x1f0>
  401c98:	9801      	ldr	r0, [sp, #4]
  401c9a:	f104 3bff 	add.w	fp, r4, #4294967295
  401c9e:	e006      	b.n	401cae <two_way_long_needle+0x106>
  401ca0:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401ca4:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401ca8:	45f4      	cmp	ip, lr
  401caa:	d103      	bne.n	401cb4 <two_way_long_needle+0x10c>
  401cac:	4619      	mov	r1, r3
  401cae:	1e4b      	subs	r3, r1, #1
  401cb0:	459b      	cmp	fp, r3
  401cb2:	d1f5      	bne.n	401ca0 <two_way_long_needle+0xf8>
  401cb4:	3401      	adds	r4, #1
  401cb6:	428c      	cmp	r4, r1
  401cb8:	d870      	bhi.n	401d9c <two_way_long_needle+0x1f4>
  401cba:	9c03      	ldr	r4, [sp, #12]
  401cbc:	4638      	mov	r0, r7
  401cbe:	44a0      	add	r8, r4
  401cc0:	ebaa 0404 	sub.w	r4, sl, r4
  401cc4:	e7a3      	b.n	401c0e <two_way_long_needle+0x66>
  401cc6:	f1c9 0201 	rsb	r2, r9, #1
  401cca:	4490      	add	r8, r2
  401ccc:	e7b7      	b.n	401c3e <two_way_long_needle+0x96>
  401cce:	2000      	movs	r0, #0
  401cd0:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401cd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401cd8:	eba4 0309 	sub.w	r3, r4, r9
  401cdc:	454b      	cmp	r3, r9
  401cde:	bf38      	it	cc
  401ce0:	464b      	movcc	r3, r9
  401ce2:	3301      	adds	r3, #1
  401ce4:	f109 38ff 	add.w	r8, r9, #4294967295
  401ce8:	9303      	str	r3, [sp, #12]
  401cea:	eb06 0308 	add.w	r3, r6, r8
  401cee:	4658      	mov	r0, fp
  401cf0:	f04f 0a00 	mov.w	sl, #0
  401cf4:	46cb      	mov	fp, r9
  401cf6:	4699      	mov	r9, r3
  401cf8:	eb0a 0704 	add.w	r7, sl, r4
  401cfc:	1a3a      	subs	r2, r7, r0
  401cfe:	2100      	movs	r1, #0
  401d00:	4428      	add	r0, r5
  401d02:	f002 fe35 	bl	404970 <memchr>
  401d06:	2800      	cmp	r0, #0
  401d08:	d1e1      	bne.n	401cce <two_way_long_needle+0x126>
  401d0a:	2f00      	cmp	r7, #0
  401d0c:	d0df      	beq.n	401cce <two_way_long_needle+0x126>
  401d0e:	19eb      	adds	r3, r5, r7
  401d10:	aa04      	add	r2, sp, #16
  401d12:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401d16:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401d1a:	bba3      	cbnz	r3, 401d86 <two_way_long_needle+0x1de>
  401d1c:	1e61      	subs	r1, r4, #1
  401d1e:	458b      	cmp	fp, r1
  401d20:	d215      	bcs.n	401d4e <two_way_long_needle+0x1a6>
  401d22:	eb0a 020b 	add.w	r2, sl, fp
  401d26:	f816 300b 	ldrb.w	r3, [r6, fp]
  401d2a:	f815 e002 	ldrb.w	lr, [r5, r2]
  401d2e:	459e      	cmp	lr, r3
  401d30:	442a      	add	r2, r5
  401d32:	eb06 000b 	add.w	r0, r6, fp
  401d36:	465b      	mov	r3, fp
  401d38:	d006      	beq.n	401d48 <two_way_long_needle+0x1a0>
  401d3a:	e027      	b.n	401d8c <two_way_long_needle+0x1e4>
  401d3c:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  401d40:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  401d44:	45f4      	cmp	ip, lr
  401d46:	d121      	bne.n	401d8c <two_way_long_needle+0x1e4>
  401d48:	3301      	adds	r3, #1
  401d4a:	428b      	cmp	r3, r1
  401d4c:	d3f6      	bcc.n	401d3c <two_way_long_needle+0x194>
  401d4e:	f1b8 3fff 	cmp.w	r8, #4294967295
  401d52:	d011      	beq.n	401d78 <two_way_long_needle+0x1d0>
  401d54:	eb0a 0208 	add.w	r2, sl, r8
  401d58:	f899 1000 	ldrb.w	r1, [r9]
  401d5c:	5cab      	ldrb	r3, [r5, r2]
  401d5e:	4299      	cmp	r1, r3
  401d60:	442a      	add	r2, r5
  401d62:	d10f      	bne.n	401d84 <two_way_long_needle+0x1dc>
  401d64:	464b      	mov	r3, r9
  401d66:	e005      	b.n	401d74 <two_way_long_needle+0x1cc>
  401d68:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401d6c:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401d70:	4288      	cmp	r0, r1
  401d72:	d107      	bne.n	401d84 <two_way_long_needle+0x1dc>
  401d74:	42b3      	cmp	r3, r6
  401d76:	d1f7      	bne.n	401d68 <two_way_long_needle+0x1c0>
  401d78:	eb05 000a 	add.w	r0, r5, sl
  401d7c:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401d80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d84:	9b03      	ldr	r3, [sp, #12]
  401d86:	449a      	add	sl, r3
  401d88:	4638      	mov	r0, r7
  401d8a:	e7b5      	b.n	401cf8 <two_way_long_needle+0x150>
  401d8c:	f1cb 0201 	rsb	r2, fp, #1
  401d90:	4492      	add	sl, r2
  401d92:	449a      	add	sl, r3
  401d94:	4638      	mov	r0, r7
  401d96:	e7af      	b.n	401cf8 <two_way_long_needle+0x150>
  401d98:	4649      	mov	r1, r9
  401d9a:	e78b      	b.n	401cb4 <two_way_long_needle+0x10c>
  401d9c:	eb05 0008 	add.w	r0, r5, r8
  401da0:	e796      	b.n	401cd0 <two_way_long_needle+0x128>
  401da2:	bf00      	nop

00401da4 <strstr>:
  401da4:	7802      	ldrb	r2, [r0, #0]
  401da6:	2a00      	cmp	r2, #0
  401da8:	f000 8101 	beq.w	401fae <strstr+0x20a>
  401dac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401db0:	f891 8000 	ldrb.w	r8, [r1]
  401db4:	b085      	sub	sp, #20
  401db6:	4644      	mov	r4, r8
  401db8:	f1b8 0f00 	cmp.w	r8, #0
  401dbc:	d016      	beq.n	401dec <strstr+0x48>
  401dbe:	4686      	mov	lr, r0
  401dc0:	f101 0c01 	add.w	ip, r1, #1
  401dc4:	2701      	movs	r7, #1
  401dc6:	e003      	b.n	401dd0 <strstr+0x2c>
  401dc8:	f813 4b01 	ldrb.w	r4, [r3], #1
  401dcc:	b16c      	cbz	r4, 401dea <strstr+0x46>
  401dce:	469c      	mov	ip, r3
  401dd0:	42a2      	cmp	r2, r4
  401dd2:	bf14      	ite	ne
  401dd4:	2700      	movne	r7, #0
  401dd6:	f007 0701 	andeq.w	r7, r7, #1
  401dda:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  401dde:	4663      	mov	r3, ip
  401de0:	2a00      	cmp	r2, #0
  401de2:	d1f1      	bne.n	401dc8 <strstr+0x24>
  401de4:	f89c 3000 	ldrb.w	r3, [ip]
  401de8:	b9fb      	cbnz	r3, 401e2a <strstr+0x86>
  401dea:	b117      	cbz	r7, 401df2 <strstr+0x4e>
  401dec:	b005      	add	sp, #20
  401dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401df2:	460e      	mov	r6, r1
  401df4:	4605      	mov	r5, r0
  401df6:	4641      	mov	r1, r8
  401df8:	3001      	adds	r0, #1
  401dfa:	ebac 0406 	sub.w	r4, ip, r6
  401dfe:	f7ff fe05 	bl	401a0c <strchr>
  401e02:	4607      	mov	r7, r0
  401e04:	b188      	cbz	r0, 401e2a <strstr+0x86>
  401e06:	2c01      	cmp	r4, #1
  401e08:	d0f0      	beq.n	401dec <strstr+0x48>
  401e0a:	1928      	adds	r0, r5, r4
  401e0c:	4287      	cmp	r7, r0
  401e0e:	bf94      	ite	ls
  401e10:	1bc1      	subls	r1, r0, r7
  401e12:	2101      	movhi	r1, #1
  401e14:	2c1f      	cmp	r4, #31
  401e16:	468b      	mov	fp, r1
  401e18:	d90b      	bls.n	401e32 <strstr+0x8e>
  401e1a:	4623      	mov	r3, r4
  401e1c:	4632      	mov	r2, r6
  401e1e:	4638      	mov	r0, r7
  401e20:	f7ff fec2 	bl	401ba8 <two_way_long_needle>
  401e24:	b005      	add	sp, #20
  401e26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e2a:	2000      	movs	r0, #0
  401e2c:	b005      	add	sp, #20
  401e2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e32:	aa03      	add	r2, sp, #12
  401e34:	4621      	mov	r1, r4
  401e36:	4630      	mov	r0, r6
  401e38:	f7ff fe5c 	bl	401af4 <critical_factorization>
  401e3c:	9903      	ldr	r1, [sp, #12]
  401e3e:	4680      	mov	r8, r0
  401e40:	4602      	mov	r2, r0
  401e42:	4431      	add	r1, r6
  401e44:	4630      	mov	r0, r6
  401e46:	f002 fde3 	bl	404a10 <memcmp>
  401e4a:	2800      	cmp	r0, #0
  401e4c:	d157      	bne.n	401efe <strstr+0x15a>
  401e4e:	f108 33ff 	add.w	r3, r8, #4294967295
  401e52:	9300      	str	r3, [sp, #0]
  401e54:	18f3      	adds	r3, r6, r3
  401e56:	4681      	mov	r9, r0
  401e58:	4605      	mov	r5, r0
  401e5a:	9301      	str	r3, [sp, #4]
  401e5c:	4658      	mov	r0, fp
  401e5e:	46b2      	mov	sl, r6
  401e60:	1966      	adds	r6, r4, r5
  401e62:	1a32      	subs	r2, r6, r0
  401e64:	2100      	movs	r1, #0
  401e66:	4438      	add	r0, r7
  401e68:	f002 fd82 	bl	404970 <memchr>
  401e6c:	2800      	cmp	r0, #0
  401e6e:	d1dc      	bne.n	401e2a <strstr+0x86>
  401e70:	2e00      	cmp	r6, #0
  401e72:	d0da      	beq.n	401e2a <strstr+0x86>
  401e74:	45c8      	cmp	r8, r9
  401e76:	4643      	mov	r3, r8
  401e78:	bf38      	it	cc
  401e7a:	464b      	movcc	r3, r9
  401e7c:	429c      	cmp	r4, r3
  401e7e:	d912      	bls.n	401ea6 <strstr+0x102>
  401e80:	195a      	adds	r2, r3, r5
  401e82:	f81a 1003 	ldrb.w	r1, [sl, r3]
  401e86:	5cb8      	ldrb	r0, [r7, r2]
  401e88:	4281      	cmp	r1, r0
  401e8a:	443a      	add	r2, r7
  401e8c:	eb0a 0e03 	add.w	lr, sl, r3
  401e90:	d006      	beq.n	401ea0 <strstr+0xfc>
  401e92:	e02c      	b.n	401eee <strstr+0x14a>
  401e94:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  401e98:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401e9c:	4288      	cmp	r0, r1
  401e9e:	d126      	bne.n	401eee <strstr+0x14a>
  401ea0:	3301      	adds	r3, #1
  401ea2:	429c      	cmp	r4, r3
  401ea4:	d1f6      	bne.n	401e94 <strstr+0xf0>
  401ea6:	45c8      	cmp	r8, r9
  401ea8:	9900      	ldr	r1, [sp, #0]
  401eaa:	f240 8083 	bls.w	401fb4 <strstr+0x210>
  401eae:	9b00      	ldr	r3, [sp, #0]
  401eb0:	18ea      	adds	r2, r5, r3
  401eb2:	9b01      	ldr	r3, [sp, #4]
  401eb4:	5cb8      	ldrb	r0, [r7, r2]
  401eb6:	781b      	ldrb	r3, [r3, #0]
  401eb8:	4298      	cmp	r0, r3
  401eba:	443a      	add	r2, r7
  401ebc:	d17a      	bne.n	401fb4 <strstr+0x210>
  401ebe:	9801      	ldr	r0, [sp, #4]
  401ec0:	f109 3bff 	add.w	fp, r9, #4294967295
  401ec4:	e006      	b.n	401ed4 <strstr+0x130>
  401ec6:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401eca:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401ece:	45f4      	cmp	ip, lr
  401ed0:	d103      	bne.n	401eda <strstr+0x136>
  401ed2:	4619      	mov	r1, r3
  401ed4:	1e4b      	subs	r3, r1, #1
  401ed6:	455b      	cmp	r3, fp
  401ed8:	d1f5      	bne.n	401ec6 <strstr+0x122>
  401eda:	f109 0901 	add.w	r9, r9, #1
  401ede:	4589      	cmp	r9, r1
  401ee0:	d857      	bhi.n	401f92 <strstr+0x1ee>
  401ee2:	9b03      	ldr	r3, [sp, #12]
  401ee4:	4630      	mov	r0, r6
  401ee6:	441d      	add	r5, r3
  401ee8:	eba4 0903 	sub.w	r9, r4, r3
  401eec:	e7b8      	b.n	401e60 <strstr+0xbc>
  401eee:	f1c8 0201 	rsb	r2, r8, #1
  401ef2:	4415      	add	r5, r2
  401ef4:	441d      	add	r5, r3
  401ef6:	f04f 0900 	mov.w	r9, #0
  401efa:	4630      	mov	r0, r6
  401efc:	e7b0      	b.n	401e60 <strstr+0xbc>
  401efe:	eba4 0308 	sub.w	r3, r4, r8
  401f02:	4543      	cmp	r3, r8
  401f04:	bf38      	it	cc
  401f06:	4643      	movcc	r3, r8
  401f08:	3301      	adds	r3, #1
  401f0a:	f108 39ff 	add.w	r9, r8, #4294967295
  401f0e:	9303      	str	r3, [sp, #12]
  401f10:	eb06 0309 	add.w	r3, r6, r9
  401f14:	4658      	mov	r0, fp
  401f16:	2500      	movs	r5, #0
  401f18:	46bb      	mov	fp, r7
  401f1a:	469a      	mov	sl, r3
  401f1c:	1967      	adds	r7, r4, r5
  401f1e:	1a3a      	subs	r2, r7, r0
  401f20:	2100      	movs	r1, #0
  401f22:	4458      	add	r0, fp
  401f24:	f002 fd24 	bl	404970 <memchr>
  401f28:	2800      	cmp	r0, #0
  401f2a:	f47f af7e 	bne.w	401e2a <strstr+0x86>
  401f2e:	2f00      	cmp	r7, #0
  401f30:	f43f af7b 	beq.w	401e2a <strstr+0x86>
  401f34:	4544      	cmp	r4, r8
  401f36:	d915      	bls.n	401f64 <strstr+0x1c0>
  401f38:	eb08 0205 	add.w	r2, r8, r5
  401f3c:	f816 3008 	ldrb.w	r3, [r6, r8]
  401f40:	f81b 0002 	ldrb.w	r0, [fp, r2]
  401f44:	4298      	cmp	r0, r3
  401f46:	445a      	add	r2, fp
  401f48:	eb06 0108 	add.w	r1, r6, r8
  401f4c:	4643      	mov	r3, r8
  401f4e:	d006      	beq.n	401f5e <strstr+0x1ba>
  401f50:	e023      	b.n	401f9a <strstr+0x1f6>
  401f52:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  401f56:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401f5a:	4586      	cmp	lr, r0
  401f5c:	d11d      	bne.n	401f9a <strstr+0x1f6>
  401f5e:	3301      	adds	r3, #1
  401f60:	429c      	cmp	r4, r3
  401f62:	d1f6      	bne.n	401f52 <strstr+0x1ae>
  401f64:	f1b9 3fff 	cmp.w	r9, #4294967295
  401f68:	d012      	beq.n	401f90 <strstr+0x1ec>
  401f6a:	eb05 0209 	add.w	r2, r5, r9
  401f6e:	f89a 3000 	ldrb.w	r3, [sl]
  401f72:	f81b 1002 	ldrb.w	r1, [fp, r2]
  401f76:	4299      	cmp	r1, r3
  401f78:	445a      	add	r2, fp
  401f7a:	d114      	bne.n	401fa6 <strstr+0x202>
  401f7c:	4653      	mov	r3, sl
  401f7e:	e005      	b.n	401f8c <strstr+0x1e8>
  401f80:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401f84:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401f88:	4288      	cmp	r0, r1
  401f8a:	d10c      	bne.n	401fa6 <strstr+0x202>
  401f8c:	42b3      	cmp	r3, r6
  401f8e:	d1f7      	bne.n	401f80 <strstr+0x1dc>
  401f90:	465f      	mov	r7, fp
  401f92:	1978      	adds	r0, r7, r5
  401f94:	b005      	add	sp, #20
  401f96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f9a:	f1c8 0201 	rsb	r2, r8, #1
  401f9e:	4415      	add	r5, r2
  401fa0:	441d      	add	r5, r3
  401fa2:	4638      	mov	r0, r7
  401fa4:	e7ba      	b.n	401f1c <strstr+0x178>
  401fa6:	9b03      	ldr	r3, [sp, #12]
  401fa8:	4638      	mov	r0, r7
  401faa:	441d      	add	r5, r3
  401fac:	e7b6      	b.n	401f1c <strstr+0x178>
  401fae:	780b      	ldrb	r3, [r1, #0]
  401fb0:	b913      	cbnz	r3, 401fb8 <strstr+0x214>
  401fb2:	4770      	bx	lr
  401fb4:	4641      	mov	r1, r8
  401fb6:	e790      	b.n	401eda <strstr+0x136>
  401fb8:	2000      	movs	r0, #0
  401fba:	4770      	bx	lr

00401fbc <_svfprintf_r>:
  401fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401fc0:	b0c3      	sub	sp, #268	; 0x10c
  401fc2:	460c      	mov	r4, r1
  401fc4:	910b      	str	r1, [sp, #44]	; 0x2c
  401fc6:	4692      	mov	sl, r2
  401fc8:	930f      	str	r3, [sp, #60]	; 0x3c
  401fca:	900c      	str	r0, [sp, #48]	; 0x30
  401fcc:	f002 fa0c 	bl	4043e8 <_localeconv_r>
  401fd0:	6803      	ldr	r3, [r0, #0]
  401fd2:	931a      	str	r3, [sp, #104]	; 0x68
  401fd4:	4618      	mov	r0, r3
  401fd6:	f003 f913 	bl	405200 <strlen>
  401fda:	89a3      	ldrh	r3, [r4, #12]
  401fdc:	9019      	str	r0, [sp, #100]	; 0x64
  401fde:	0619      	lsls	r1, r3, #24
  401fe0:	d503      	bpl.n	401fea <_svfprintf_r+0x2e>
  401fe2:	6923      	ldr	r3, [r4, #16]
  401fe4:	2b00      	cmp	r3, #0
  401fe6:	f001 8003 	beq.w	402ff0 <_svfprintf_r+0x1034>
  401fea:	2300      	movs	r3, #0
  401fec:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401ff0:	9313      	str	r3, [sp, #76]	; 0x4c
  401ff2:	9315      	str	r3, [sp, #84]	; 0x54
  401ff4:	9314      	str	r3, [sp, #80]	; 0x50
  401ff6:	9327      	str	r3, [sp, #156]	; 0x9c
  401ff8:	9326      	str	r3, [sp, #152]	; 0x98
  401ffa:	9318      	str	r3, [sp, #96]	; 0x60
  401ffc:	931b      	str	r3, [sp, #108]	; 0x6c
  401ffe:	9309      	str	r3, [sp, #36]	; 0x24
  402000:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402004:	46c8      	mov	r8, r9
  402006:	9316      	str	r3, [sp, #88]	; 0x58
  402008:	9317      	str	r3, [sp, #92]	; 0x5c
  40200a:	f89a 3000 	ldrb.w	r3, [sl]
  40200e:	4654      	mov	r4, sl
  402010:	b1e3      	cbz	r3, 40204c <_svfprintf_r+0x90>
  402012:	2b25      	cmp	r3, #37	; 0x25
  402014:	d102      	bne.n	40201c <_svfprintf_r+0x60>
  402016:	e019      	b.n	40204c <_svfprintf_r+0x90>
  402018:	2b25      	cmp	r3, #37	; 0x25
  40201a:	d003      	beq.n	402024 <_svfprintf_r+0x68>
  40201c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402020:	2b00      	cmp	r3, #0
  402022:	d1f9      	bne.n	402018 <_svfprintf_r+0x5c>
  402024:	eba4 050a 	sub.w	r5, r4, sl
  402028:	b185      	cbz	r5, 40204c <_svfprintf_r+0x90>
  40202a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40202c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40202e:	f8c8 a000 	str.w	sl, [r8]
  402032:	3301      	adds	r3, #1
  402034:	442a      	add	r2, r5
  402036:	2b07      	cmp	r3, #7
  402038:	f8c8 5004 	str.w	r5, [r8, #4]
  40203c:	9227      	str	r2, [sp, #156]	; 0x9c
  40203e:	9326      	str	r3, [sp, #152]	; 0x98
  402040:	dc7f      	bgt.n	402142 <_svfprintf_r+0x186>
  402042:	f108 0808 	add.w	r8, r8, #8
  402046:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402048:	442b      	add	r3, r5
  40204a:	9309      	str	r3, [sp, #36]	; 0x24
  40204c:	7823      	ldrb	r3, [r4, #0]
  40204e:	2b00      	cmp	r3, #0
  402050:	d07f      	beq.n	402152 <_svfprintf_r+0x196>
  402052:	2300      	movs	r3, #0
  402054:	461a      	mov	r2, r3
  402056:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40205a:	4619      	mov	r1, r3
  40205c:	930d      	str	r3, [sp, #52]	; 0x34
  40205e:	469b      	mov	fp, r3
  402060:	f04f 30ff 	mov.w	r0, #4294967295
  402064:	7863      	ldrb	r3, [r4, #1]
  402066:	900a      	str	r0, [sp, #40]	; 0x28
  402068:	f104 0a01 	add.w	sl, r4, #1
  40206c:	f10a 0a01 	add.w	sl, sl, #1
  402070:	f1a3 0020 	sub.w	r0, r3, #32
  402074:	2858      	cmp	r0, #88	; 0x58
  402076:	f200 83c1 	bhi.w	4027fc <_svfprintf_r+0x840>
  40207a:	e8df f010 	tbh	[pc, r0, lsl #1]
  40207e:	0238      	.short	0x0238
  402080:	03bf03bf 	.word	0x03bf03bf
  402084:	03bf0240 	.word	0x03bf0240
  402088:	03bf03bf 	.word	0x03bf03bf
  40208c:	03bf03bf 	.word	0x03bf03bf
  402090:	024503bf 	.word	0x024503bf
  402094:	03bf0203 	.word	0x03bf0203
  402098:	026b005d 	.word	0x026b005d
  40209c:	028603bf 	.word	0x028603bf
  4020a0:	039d039d 	.word	0x039d039d
  4020a4:	039d039d 	.word	0x039d039d
  4020a8:	039d039d 	.word	0x039d039d
  4020ac:	039d039d 	.word	0x039d039d
  4020b0:	03bf039d 	.word	0x03bf039d
  4020b4:	03bf03bf 	.word	0x03bf03bf
  4020b8:	03bf03bf 	.word	0x03bf03bf
  4020bc:	03bf03bf 	.word	0x03bf03bf
  4020c0:	03bf03bf 	.word	0x03bf03bf
  4020c4:	033703bf 	.word	0x033703bf
  4020c8:	03bf0357 	.word	0x03bf0357
  4020cc:	03bf0357 	.word	0x03bf0357
  4020d0:	03bf03bf 	.word	0x03bf03bf
  4020d4:	039803bf 	.word	0x039803bf
  4020d8:	03bf03bf 	.word	0x03bf03bf
  4020dc:	03bf03ad 	.word	0x03bf03ad
  4020e0:	03bf03bf 	.word	0x03bf03bf
  4020e4:	03bf03bf 	.word	0x03bf03bf
  4020e8:	03bf0259 	.word	0x03bf0259
  4020ec:	031e03bf 	.word	0x031e03bf
  4020f0:	03bf03bf 	.word	0x03bf03bf
  4020f4:	03bf03bf 	.word	0x03bf03bf
  4020f8:	03bf03bf 	.word	0x03bf03bf
  4020fc:	03bf03bf 	.word	0x03bf03bf
  402100:	03bf03bf 	.word	0x03bf03bf
  402104:	02db02c6 	.word	0x02db02c6
  402108:	03570357 	.word	0x03570357
  40210c:	028b0357 	.word	0x028b0357
  402110:	03bf02db 	.word	0x03bf02db
  402114:	029003bf 	.word	0x029003bf
  402118:	029d03bf 	.word	0x029d03bf
  40211c:	02b401cc 	.word	0x02b401cc
  402120:	03bf0208 	.word	0x03bf0208
  402124:	03bf01e1 	.word	0x03bf01e1
  402128:	03bf007e 	.word	0x03bf007e
  40212c:	020d03bf 	.word	0x020d03bf
  402130:	980d      	ldr	r0, [sp, #52]	; 0x34
  402132:	930f      	str	r3, [sp, #60]	; 0x3c
  402134:	4240      	negs	r0, r0
  402136:	900d      	str	r0, [sp, #52]	; 0x34
  402138:	f04b 0b04 	orr.w	fp, fp, #4
  40213c:	f89a 3000 	ldrb.w	r3, [sl]
  402140:	e794      	b.n	40206c <_svfprintf_r+0xb0>
  402142:	aa25      	add	r2, sp, #148	; 0x94
  402144:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402146:	980c      	ldr	r0, [sp, #48]	; 0x30
  402148:	f003 f8c8 	bl	4052dc <__ssprint_r>
  40214c:	b940      	cbnz	r0, 402160 <_svfprintf_r+0x1a4>
  40214e:	46c8      	mov	r8, r9
  402150:	e779      	b.n	402046 <_svfprintf_r+0x8a>
  402152:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402154:	b123      	cbz	r3, 402160 <_svfprintf_r+0x1a4>
  402156:	980c      	ldr	r0, [sp, #48]	; 0x30
  402158:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40215a:	aa25      	add	r2, sp, #148	; 0x94
  40215c:	f003 f8be 	bl	4052dc <__ssprint_r>
  402160:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402162:	899b      	ldrh	r3, [r3, #12]
  402164:	f013 0f40 	tst.w	r3, #64	; 0x40
  402168:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40216a:	bf18      	it	ne
  40216c:	f04f 33ff 	movne.w	r3, #4294967295
  402170:	9309      	str	r3, [sp, #36]	; 0x24
  402172:	9809      	ldr	r0, [sp, #36]	; 0x24
  402174:	b043      	add	sp, #268	; 0x10c
  402176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40217a:	f01b 0f20 	tst.w	fp, #32
  40217e:	9311      	str	r3, [sp, #68]	; 0x44
  402180:	f040 81dd 	bne.w	40253e <_svfprintf_r+0x582>
  402184:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402186:	f01b 0f10 	tst.w	fp, #16
  40218a:	4613      	mov	r3, r2
  40218c:	f040 856e 	bne.w	402c6c <_svfprintf_r+0xcb0>
  402190:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402194:	f000 856a 	beq.w	402c6c <_svfprintf_r+0xcb0>
  402198:	8814      	ldrh	r4, [r2, #0]
  40219a:	3204      	adds	r2, #4
  40219c:	2500      	movs	r5, #0
  40219e:	2301      	movs	r3, #1
  4021a0:	920f      	str	r2, [sp, #60]	; 0x3c
  4021a2:	2700      	movs	r7, #0
  4021a4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4021a8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4021aa:	1c4a      	adds	r2, r1, #1
  4021ac:	f000 8265 	beq.w	40267a <_svfprintf_r+0x6be>
  4021b0:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  4021b4:	9207      	str	r2, [sp, #28]
  4021b6:	ea54 0205 	orrs.w	r2, r4, r5
  4021ba:	f040 8264 	bne.w	402686 <_svfprintf_r+0x6ca>
  4021be:	2900      	cmp	r1, #0
  4021c0:	f040 843c 	bne.w	402a3c <_svfprintf_r+0xa80>
  4021c4:	2b00      	cmp	r3, #0
  4021c6:	f040 84d7 	bne.w	402b78 <_svfprintf_r+0xbbc>
  4021ca:	f01b 0301 	ands.w	r3, fp, #1
  4021ce:	930e      	str	r3, [sp, #56]	; 0x38
  4021d0:	f000 8604 	beq.w	402ddc <_svfprintf_r+0xe20>
  4021d4:	ae42      	add	r6, sp, #264	; 0x108
  4021d6:	2330      	movs	r3, #48	; 0x30
  4021d8:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4021dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4021de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4021e0:	4293      	cmp	r3, r2
  4021e2:	bfb8      	it	lt
  4021e4:	4613      	movlt	r3, r2
  4021e6:	9308      	str	r3, [sp, #32]
  4021e8:	2300      	movs	r3, #0
  4021ea:	9312      	str	r3, [sp, #72]	; 0x48
  4021ec:	b117      	cbz	r7, 4021f4 <_svfprintf_r+0x238>
  4021ee:	9b08      	ldr	r3, [sp, #32]
  4021f0:	3301      	adds	r3, #1
  4021f2:	9308      	str	r3, [sp, #32]
  4021f4:	9b07      	ldr	r3, [sp, #28]
  4021f6:	f013 0302 	ands.w	r3, r3, #2
  4021fa:	9310      	str	r3, [sp, #64]	; 0x40
  4021fc:	d002      	beq.n	402204 <_svfprintf_r+0x248>
  4021fe:	9b08      	ldr	r3, [sp, #32]
  402200:	3302      	adds	r3, #2
  402202:	9308      	str	r3, [sp, #32]
  402204:	9b07      	ldr	r3, [sp, #28]
  402206:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  40220a:	f040 830e 	bne.w	40282a <_svfprintf_r+0x86e>
  40220e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402210:	9a08      	ldr	r2, [sp, #32]
  402212:	eba3 0b02 	sub.w	fp, r3, r2
  402216:	f1bb 0f00 	cmp.w	fp, #0
  40221a:	f340 8306 	ble.w	40282a <_svfprintf_r+0x86e>
  40221e:	f1bb 0f10 	cmp.w	fp, #16
  402222:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402224:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402226:	dd29      	ble.n	40227c <_svfprintf_r+0x2c0>
  402228:	4643      	mov	r3, r8
  40222a:	4621      	mov	r1, r4
  40222c:	46a8      	mov	r8, r5
  40222e:	2710      	movs	r7, #16
  402230:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402232:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402234:	e006      	b.n	402244 <_svfprintf_r+0x288>
  402236:	f1ab 0b10 	sub.w	fp, fp, #16
  40223a:	f1bb 0f10 	cmp.w	fp, #16
  40223e:	f103 0308 	add.w	r3, r3, #8
  402242:	dd18      	ble.n	402276 <_svfprintf_r+0x2ba>
  402244:	3201      	adds	r2, #1
  402246:	48b7      	ldr	r0, [pc, #732]	; (402524 <_svfprintf_r+0x568>)
  402248:	9226      	str	r2, [sp, #152]	; 0x98
  40224a:	3110      	adds	r1, #16
  40224c:	2a07      	cmp	r2, #7
  40224e:	9127      	str	r1, [sp, #156]	; 0x9c
  402250:	e883 0081 	stmia.w	r3, {r0, r7}
  402254:	ddef      	ble.n	402236 <_svfprintf_r+0x27a>
  402256:	aa25      	add	r2, sp, #148	; 0x94
  402258:	4629      	mov	r1, r5
  40225a:	4620      	mov	r0, r4
  40225c:	f003 f83e 	bl	4052dc <__ssprint_r>
  402260:	2800      	cmp	r0, #0
  402262:	f47f af7d 	bne.w	402160 <_svfprintf_r+0x1a4>
  402266:	f1ab 0b10 	sub.w	fp, fp, #16
  40226a:	f1bb 0f10 	cmp.w	fp, #16
  40226e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402270:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402272:	464b      	mov	r3, r9
  402274:	dce6      	bgt.n	402244 <_svfprintf_r+0x288>
  402276:	4645      	mov	r5, r8
  402278:	460c      	mov	r4, r1
  40227a:	4698      	mov	r8, r3
  40227c:	3201      	adds	r2, #1
  40227e:	4ba9      	ldr	r3, [pc, #676]	; (402524 <_svfprintf_r+0x568>)
  402280:	9226      	str	r2, [sp, #152]	; 0x98
  402282:	445c      	add	r4, fp
  402284:	2a07      	cmp	r2, #7
  402286:	9427      	str	r4, [sp, #156]	; 0x9c
  402288:	e888 0808 	stmia.w	r8, {r3, fp}
  40228c:	f300 8498 	bgt.w	402bc0 <_svfprintf_r+0xc04>
  402290:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402294:	f108 0808 	add.w	r8, r8, #8
  402298:	b177      	cbz	r7, 4022b8 <_svfprintf_r+0x2fc>
  40229a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40229c:	3301      	adds	r3, #1
  40229e:	3401      	adds	r4, #1
  4022a0:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  4022a4:	2201      	movs	r2, #1
  4022a6:	2b07      	cmp	r3, #7
  4022a8:	9427      	str	r4, [sp, #156]	; 0x9c
  4022aa:	9326      	str	r3, [sp, #152]	; 0x98
  4022ac:	e888 0006 	stmia.w	r8, {r1, r2}
  4022b0:	f300 83db 	bgt.w	402a6a <_svfprintf_r+0xaae>
  4022b4:	f108 0808 	add.w	r8, r8, #8
  4022b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4022ba:	b16b      	cbz	r3, 4022d8 <_svfprintf_r+0x31c>
  4022bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022be:	3301      	adds	r3, #1
  4022c0:	3402      	adds	r4, #2
  4022c2:	a91e      	add	r1, sp, #120	; 0x78
  4022c4:	2202      	movs	r2, #2
  4022c6:	2b07      	cmp	r3, #7
  4022c8:	9427      	str	r4, [sp, #156]	; 0x9c
  4022ca:	9326      	str	r3, [sp, #152]	; 0x98
  4022cc:	e888 0006 	stmia.w	r8, {r1, r2}
  4022d0:	f300 83d6 	bgt.w	402a80 <_svfprintf_r+0xac4>
  4022d4:	f108 0808 	add.w	r8, r8, #8
  4022d8:	2d80      	cmp	r5, #128	; 0x80
  4022da:	f000 8315 	beq.w	402908 <_svfprintf_r+0x94c>
  4022de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4022e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4022e2:	1a9f      	subs	r7, r3, r2
  4022e4:	2f00      	cmp	r7, #0
  4022e6:	dd36      	ble.n	402356 <_svfprintf_r+0x39a>
  4022e8:	2f10      	cmp	r7, #16
  4022ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022ec:	4d8e      	ldr	r5, [pc, #568]	; (402528 <_svfprintf_r+0x56c>)
  4022ee:	dd27      	ble.n	402340 <_svfprintf_r+0x384>
  4022f0:	4642      	mov	r2, r8
  4022f2:	4621      	mov	r1, r4
  4022f4:	46b0      	mov	r8, r6
  4022f6:	f04f 0b10 	mov.w	fp, #16
  4022fa:	462e      	mov	r6, r5
  4022fc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4022fe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402300:	e004      	b.n	40230c <_svfprintf_r+0x350>
  402302:	3f10      	subs	r7, #16
  402304:	2f10      	cmp	r7, #16
  402306:	f102 0208 	add.w	r2, r2, #8
  40230a:	dd15      	ble.n	402338 <_svfprintf_r+0x37c>
  40230c:	3301      	adds	r3, #1
  40230e:	3110      	adds	r1, #16
  402310:	2b07      	cmp	r3, #7
  402312:	9127      	str	r1, [sp, #156]	; 0x9c
  402314:	9326      	str	r3, [sp, #152]	; 0x98
  402316:	e882 0840 	stmia.w	r2, {r6, fp}
  40231a:	ddf2      	ble.n	402302 <_svfprintf_r+0x346>
  40231c:	aa25      	add	r2, sp, #148	; 0x94
  40231e:	4629      	mov	r1, r5
  402320:	4620      	mov	r0, r4
  402322:	f002 ffdb 	bl	4052dc <__ssprint_r>
  402326:	2800      	cmp	r0, #0
  402328:	f47f af1a 	bne.w	402160 <_svfprintf_r+0x1a4>
  40232c:	3f10      	subs	r7, #16
  40232e:	2f10      	cmp	r7, #16
  402330:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402332:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402334:	464a      	mov	r2, r9
  402336:	dce9      	bgt.n	40230c <_svfprintf_r+0x350>
  402338:	4635      	mov	r5, r6
  40233a:	460c      	mov	r4, r1
  40233c:	4646      	mov	r6, r8
  40233e:	4690      	mov	r8, r2
  402340:	3301      	adds	r3, #1
  402342:	443c      	add	r4, r7
  402344:	2b07      	cmp	r3, #7
  402346:	9427      	str	r4, [sp, #156]	; 0x9c
  402348:	9326      	str	r3, [sp, #152]	; 0x98
  40234a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40234e:	f300 8381 	bgt.w	402a54 <_svfprintf_r+0xa98>
  402352:	f108 0808 	add.w	r8, r8, #8
  402356:	9b07      	ldr	r3, [sp, #28]
  402358:	05df      	lsls	r7, r3, #23
  40235a:	f100 8268 	bmi.w	40282e <_svfprintf_r+0x872>
  40235e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402360:	990e      	ldr	r1, [sp, #56]	; 0x38
  402362:	f8c8 6000 	str.w	r6, [r8]
  402366:	3301      	adds	r3, #1
  402368:	440c      	add	r4, r1
  40236a:	2b07      	cmp	r3, #7
  40236c:	9427      	str	r4, [sp, #156]	; 0x9c
  40236e:	f8c8 1004 	str.w	r1, [r8, #4]
  402372:	9326      	str	r3, [sp, #152]	; 0x98
  402374:	f300 834d 	bgt.w	402a12 <_svfprintf_r+0xa56>
  402378:	f108 0808 	add.w	r8, r8, #8
  40237c:	9b07      	ldr	r3, [sp, #28]
  40237e:	075b      	lsls	r3, r3, #29
  402380:	d53a      	bpl.n	4023f8 <_svfprintf_r+0x43c>
  402382:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402384:	9a08      	ldr	r2, [sp, #32]
  402386:	1a9d      	subs	r5, r3, r2
  402388:	2d00      	cmp	r5, #0
  40238a:	dd35      	ble.n	4023f8 <_svfprintf_r+0x43c>
  40238c:	2d10      	cmp	r5, #16
  40238e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402390:	dd20      	ble.n	4023d4 <_svfprintf_r+0x418>
  402392:	2610      	movs	r6, #16
  402394:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402396:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40239a:	e004      	b.n	4023a6 <_svfprintf_r+0x3ea>
  40239c:	3d10      	subs	r5, #16
  40239e:	2d10      	cmp	r5, #16
  4023a0:	f108 0808 	add.w	r8, r8, #8
  4023a4:	dd16      	ble.n	4023d4 <_svfprintf_r+0x418>
  4023a6:	3301      	adds	r3, #1
  4023a8:	4a5e      	ldr	r2, [pc, #376]	; (402524 <_svfprintf_r+0x568>)
  4023aa:	9326      	str	r3, [sp, #152]	; 0x98
  4023ac:	3410      	adds	r4, #16
  4023ae:	2b07      	cmp	r3, #7
  4023b0:	9427      	str	r4, [sp, #156]	; 0x9c
  4023b2:	e888 0044 	stmia.w	r8, {r2, r6}
  4023b6:	ddf1      	ble.n	40239c <_svfprintf_r+0x3e0>
  4023b8:	aa25      	add	r2, sp, #148	; 0x94
  4023ba:	4659      	mov	r1, fp
  4023bc:	4638      	mov	r0, r7
  4023be:	f002 ff8d 	bl	4052dc <__ssprint_r>
  4023c2:	2800      	cmp	r0, #0
  4023c4:	f47f aecc 	bne.w	402160 <_svfprintf_r+0x1a4>
  4023c8:	3d10      	subs	r5, #16
  4023ca:	2d10      	cmp	r5, #16
  4023cc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4023ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023d0:	46c8      	mov	r8, r9
  4023d2:	dce8      	bgt.n	4023a6 <_svfprintf_r+0x3ea>
  4023d4:	3301      	adds	r3, #1
  4023d6:	4a53      	ldr	r2, [pc, #332]	; (402524 <_svfprintf_r+0x568>)
  4023d8:	9326      	str	r3, [sp, #152]	; 0x98
  4023da:	442c      	add	r4, r5
  4023dc:	2b07      	cmp	r3, #7
  4023de:	9427      	str	r4, [sp, #156]	; 0x9c
  4023e0:	e888 0024 	stmia.w	r8, {r2, r5}
  4023e4:	dd08      	ble.n	4023f8 <_svfprintf_r+0x43c>
  4023e6:	aa25      	add	r2, sp, #148	; 0x94
  4023e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4023ea:	980c      	ldr	r0, [sp, #48]	; 0x30
  4023ec:	f002 ff76 	bl	4052dc <__ssprint_r>
  4023f0:	2800      	cmp	r0, #0
  4023f2:	f47f aeb5 	bne.w	402160 <_svfprintf_r+0x1a4>
  4023f6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4023f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4023fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4023fc:	9908      	ldr	r1, [sp, #32]
  4023fe:	428a      	cmp	r2, r1
  402400:	bfac      	ite	ge
  402402:	189b      	addge	r3, r3, r2
  402404:	185b      	addlt	r3, r3, r1
  402406:	9309      	str	r3, [sp, #36]	; 0x24
  402408:	2c00      	cmp	r4, #0
  40240a:	f040 830d 	bne.w	402a28 <_svfprintf_r+0xa6c>
  40240e:	2300      	movs	r3, #0
  402410:	9326      	str	r3, [sp, #152]	; 0x98
  402412:	46c8      	mov	r8, r9
  402414:	e5f9      	b.n	40200a <_svfprintf_r+0x4e>
  402416:	9311      	str	r3, [sp, #68]	; 0x44
  402418:	f01b 0320 	ands.w	r3, fp, #32
  40241c:	f040 81e3 	bne.w	4027e6 <_svfprintf_r+0x82a>
  402420:	f01b 0210 	ands.w	r2, fp, #16
  402424:	f040 842e 	bne.w	402c84 <_svfprintf_r+0xcc8>
  402428:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  40242c:	f000 842a 	beq.w	402c84 <_svfprintf_r+0xcc8>
  402430:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402432:	4613      	mov	r3, r2
  402434:	460a      	mov	r2, r1
  402436:	3204      	adds	r2, #4
  402438:	880c      	ldrh	r4, [r1, #0]
  40243a:	920f      	str	r2, [sp, #60]	; 0x3c
  40243c:	2500      	movs	r5, #0
  40243e:	e6b0      	b.n	4021a2 <_svfprintf_r+0x1e6>
  402440:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402442:	9311      	str	r3, [sp, #68]	; 0x44
  402444:	6816      	ldr	r6, [r2, #0]
  402446:	2400      	movs	r4, #0
  402448:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  40244c:	1d15      	adds	r5, r2, #4
  40244e:	2e00      	cmp	r6, #0
  402450:	f000 86a7 	beq.w	4031a2 <_svfprintf_r+0x11e6>
  402454:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402456:	1c53      	adds	r3, r2, #1
  402458:	f000 8609 	beq.w	40306e <_svfprintf_r+0x10b2>
  40245c:	4621      	mov	r1, r4
  40245e:	4630      	mov	r0, r6
  402460:	f002 fa86 	bl	404970 <memchr>
  402464:	2800      	cmp	r0, #0
  402466:	f000 86e1 	beq.w	40322c <_svfprintf_r+0x1270>
  40246a:	1b83      	subs	r3, r0, r6
  40246c:	930e      	str	r3, [sp, #56]	; 0x38
  40246e:	940a      	str	r4, [sp, #40]	; 0x28
  402470:	950f      	str	r5, [sp, #60]	; 0x3c
  402472:	f8cd b01c 	str.w	fp, [sp, #28]
  402476:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40247a:	9308      	str	r3, [sp, #32]
  40247c:	9412      	str	r4, [sp, #72]	; 0x48
  40247e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402482:	e6b3      	b.n	4021ec <_svfprintf_r+0x230>
  402484:	f89a 3000 	ldrb.w	r3, [sl]
  402488:	2201      	movs	r2, #1
  40248a:	212b      	movs	r1, #43	; 0x2b
  40248c:	e5ee      	b.n	40206c <_svfprintf_r+0xb0>
  40248e:	f04b 0b20 	orr.w	fp, fp, #32
  402492:	f89a 3000 	ldrb.w	r3, [sl]
  402496:	e5e9      	b.n	40206c <_svfprintf_r+0xb0>
  402498:	9311      	str	r3, [sp, #68]	; 0x44
  40249a:	2a00      	cmp	r2, #0
  40249c:	f040 8795 	bne.w	4033ca <_svfprintf_r+0x140e>
  4024a0:	4b22      	ldr	r3, [pc, #136]	; (40252c <_svfprintf_r+0x570>)
  4024a2:	9318      	str	r3, [sp, #96]	; 0x60
  4024a4:	f01b 0f20 	tst.w	fp, #32
  4024a8:	f040 8111 	bne.w	4026ce <_svfprintf_r+0x712>
  4024ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4024ae:	f01b 0f10 	tst.w	fp, #16
  4024b2:	4613      	mov	r3, r2
  4024b4:	f040 83e1 	bne.w	402c7a <_svfprintf_r+0xcbe>
  4024b8:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4024bc:	f000 83dd 	beq.w	402c7a <_svfprintf_r+0xcbe>
  4024c0:	3304      	adds	r3, #4
  4024c2:	8814      	ldrh	r4, [r2, #0]
  4024c4:	930f      	str	r3, [sp, #60]	; 0x3c
  4024c6:	2500      	movs	r5, #0
  4024c8:	f01b 0f01 	tst.w	fp, #1
  4024cc:	f000 810c 	beq.w	4026e8 <_svfprintf_r+0x72c>
  4024d0:	ea54 0305 	orrs.w	r3, r4, r5
  4024d4:	f000 8108 	beq.w	4026e8 <_svfprintf_r+0x72c>
  4024d8:	2330      	movs	r3, #48	; 0x30
  4024da:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4024de:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4024e2:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4024e6:	f04b 0b02 	orr.w	fp, fp, #2
  4024ea:	2302      	movs	r3, #2
  4024ec:	e659      	b.n	4021a2 <_svfprintf_r+0x1e6>
  4024ee:	f89a 3000 	ldrb.w	r3, [sl]
  4024f2:	2900      	cmp	r1, #0
  4024f4:	f47f adba 	bne.w	40206c <_svfprintf_r+0xb0>
  4024f8:	2201      	movs	r2, #1
  4024fa:	2120      	movs	r1, #32
  4024fc:	e5b6      	b.n	40206c <_svfprintf_r+0xb0>
  4024fe:	f04b 0b01 	orr.w	fp, fp, #1
  402502:	f89a 3000 	ldrb.w	r3, [sl]
  402506:	e5b1      	b.n	40206c <_svfprintf_r+0xb0>
  402508:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40250a:	6823      	ldr	r3, [r4, #0]
  40250c:	930d      	str	r3, [sp, #52]	; 0x34
  40250e:	4618      	mov	r0, r3
  402510:	2800      	cmp	r0, #0
  402512:	4623      	mov	r3, r4
  402514:	f103 0304 	add.w	r3, r3, #4
  402518:	f6ff ae0a 	blt.w	402130 <_svfprintf_r+0x174>
  40251c:	930f      	str	r3, [sp, #60]	; 0x3c
  40251e:	f89a 3000 	ldrb.w	r3, [sl]
  402522:	e5a3      	b.n	40206c <_svfprintf_r+0xb0>
  402524:	0040752c 	.word	0x0040752c
  402528:	0040753c 	.word	0x0040753c
  40252c:	0040750c 	.word	0x0040750c
  402530:	f04b 0b10 	orr.w	fp, fp, #16
  402534:	f01b 0f20 	tst.w	fp, #32
  402538:	9311      	str	r3, [sp, #68]	; 0x44
  40253a:	f43f ae23 	beq.w	402184 <_svfprintf_r+0x1c8>
  40253e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402540:	3507      	adds	r5, #7
  402542:	f025 0307 	bic.w	r3, r5, #7
  402546:	f103 0208 	add.w	r2, r3, #8
  40254a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40254e:	920f      	str	r2, [sp, #60]	; 0x3c
  402550:	2301      	movs	r3, #1
  402552:	e626      	b.n	4021a2 <_svfprintf_r+0x1e6>
  402554:	f89a 3000 	ldrb.w	r3, [sl]
  402558:	2b2a      	cmp	r3, #42	; 0x2a
  40255a:	f10a 0401 	add.w	r4, sl, #1
  40255e:	f000 8727 	beq.w	4033b0 <_svfprintf_r+0x13f4>
  402562:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402566:	2809      	cmp	r0, #9
  402568:	46a2      	mov	sl, r4
  40256a:	f200 86ad 	bhi.w	4032c8 <_svfprintf_r+0x130c>
  40256e:	2300      	movs	r3, #0
  402570:	461c      	mov	r4, r3
  402572:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402576:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40257a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40257e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402582:	2809      	cmp	r0, #9
  402584:	d9f5      	bls.n	402572 <_svfprintf_r+0x5b6>
  402586:	940a      	str	r4, [sp, #40]	; 0x28
  402588:	e572      	b.n	402070 <_svfprintf_r+0xb4>
  40258a:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40258e:	f89a 3000 	ldrb.w	r3, [sl]
  402592:	e56b      	b.n	40206c <_svfprintf_r+0xb0>
  402594:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402598:	f89a 3000 	ldrb.w	r3, [sl]
  40259c:	e566      	b.n	40206c <_svfprintf_r+0xb0>
  40259e:	f89a 3000 	ldrb.w	r3, [sl]
  4025a2:	2b6c      	cmp	r3, #108	; 0x6c
  4025a4:	bf03      	ittte	eq
  4025a6:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4025aa:	f04b 0b20 	orreq.w	fp, fp, #32
  4025ae:	f10a 0a01 	addeq.w	sl, sl, #1
  4025b2:	f04b 0b10 	orrne.w	fp, fp, #16
  4025b6:	e559      	b.n	40206c <_svfprintf_r+0xb0>
  4025b8:	2a00      	cmp	r2, #0
  4025ba:	f040 8711 	bne.w	4033e0 <_svfprintf_r+0x1424>
  4025be:	f01b 0f20 	tst.w	fp, #32
  4025c2:	f040 84f9 	bne.w	402fb8 <_svfprintf_r+0xffc>
  4025c6:	f01b 0f10 	tst.w	fp, #16
  4025ca:	f040 84ac 	bne.w	402f26 <_svfprintf_r+0xf6a>
  4025ce:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4025d2:	f000 84a8 	beq.w	402f26 <_svfprintf_r+0xf6a>
  4025d6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4025d8:	6813      	ldr	r3, [r2, #0]
  4025da:	3204      	adds	r2, #4
  4025dc:	920f      	str	r2, [sp, #60]	; 0x3c
  4025de:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4025e2:	801a      	strh	r2, [r3, #0]
  4025e4:	e511      	b.n	40200a <_svfprintf_r+0x4e>
  4025e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4025e8:	4bb3      	ldr	r3, [pc, #716]	; (4028b8 <_svfprintf_r+0x8fc>)
  4025ea:	680c      	ldr	r4, [r1, #0]
  4025ec:	9318      	str	r3, [sp, #96]	; 0x60
  4025ee:	2230      	movs	r2, #48	; 0x30
  4025f0:	2378      	movs	r3, #120	; 0x78
  4025f2:	3104      	adds	r1, #4
  4025f4:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4025f8:	9311      	str	r3, [sp, #68]	; 0x44
  4025fa:	f04b 0b02 	orr.w	fp, fp, #2
  4025fe:	910f      	str	r1, [sp, #60]	; 0x3c
  402600:	2500      	movs	r5, #0
  402602:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402606:	2302      	movs	r3, #2
  402608:	e5cb      	b.n	4021a2 <_svfprintf_r+0x1e6>
  40260a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40260c:	9311      	str	r3, [sp, #68]	; 0x44
  40260e:	680a      	ldr	r2, [r1, #0]
  402610:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402614:	2300      	movs	r3, #0
  402616:	460a      	mov	r2, r1
  402618:	461f      	mov	r7, r3
  40261a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40261e:	3204      	adds	r2, #4
  402620:	2301      	movs	r3, #1
  402622:	9308      	str	r3, [sp, #32]
  402624:	f8cd b01c 	str.w	fp, [sp, #28]
  402628:	970a      	str	r7, [sp, #40]	; 0x28
  40262a:	9712      	str	r7, [sp, #72]	; 0x48
  40262c:	920f      	str	r2, [sp, #60]	; 0x3c
  40262e:	930e      	str	r3, [sp, #56]	; 0x38
  402630:	ae28      	add	r6, sp, #160	; 0xa0
  402632:	e5df      	b.n	4021f4 <_svfprintf_r+0x238>
  402634:	9311      	str	r3, [sp, #68]	; 0x44
  402636:	2a00      	cmp	r2, #0
  402638:	f040 86ea 	bne.w	403410 <_svfprintf_r+0x1454>
  40263c:	f01b 0f20 	tst.w	fp, #32
  402640:	d15d      	bne.n	4026fe <_svfprintf_r+0x742>
  402642:	f01b 0f10 	tst.w	fp, #16
  402646:	f040 8308 	bne.w	402c5a <_svfprintf_r+0xc9e>
  40264a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40264e:	f000 8304 	beq.w	402c5a <_svfprintf_r+0xc9e>
  402652:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402654:	f9b1 4000 	ldrsh.w	r4, [r1]
  402658:	3104      	adds	r1, #4
  40265a:	17e5      	asrs	r5, r4, #31
  40265c:	4622      	mov	r2, r4
  40265e:	462b      	mov	r3, r5
  402660:	910f      	str	r1, [sp, #60]	; 0x3c
  402662:	2a00      	cmp	r2, #0
  402664:	f173 0300 	sbcs.w	r3, r3, #0
  402668:	db58      	blt.n	40271c <_svfprintf_r+0x760>
  40266a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40266c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402670:	1c4a      	adds	r2, r1, #1
  402672:	f04f 0301 	mov.w	r3, #1
  402676:	f47f ad9b 	bne.w	4021b0 <_svfprintf_r+0x1f4>
  40267a:	ea54 0205 	orrs.w	r2, r4, r5
  40267e:	f000 81df 	beq.w	402a40 <_svfprintf_r+0xa84>
  402682:	f8cd b01c 	str.w	fp, [sp, #28]
  402686:	2b01      	cmp	r3, #1
  402688:	f000 827b 	beq.w	402b82 <_svfprintf_r+0xbc6>
  40268c:	2b02      	cmp	r3, #2
  40268e:	f040 8206 	bne.w	402a9e <_svfprintf_r+0xae2>
  402692:	9818      	ldr	r0, [sp, #96]	; 0x60
  402694:	464e      	mov	r6, r9
  402696:	0923      	lsrs	r3, r4, #4
  402698:	f004 010f 	and.w	r1, r4, #15
  40269c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  4026a0:	092a      	lsrs	r2, r5, #4
  4026a2:	461c      	mov	r4, r3
  4026a4:	4615      	mov	r5, r2
  4026a6:	5c43      	ldrb	r3, [r0, r1]
  4026a8:	f806 3d01 	strb.w	r3, [r6, #-1]!
  4026ac:	ea54 0305 	orrs.w	r3, r4, r5
  4026b0:	d1f1      	bne.n	402696 <_svfprintf_r+0x6da>
  4026b2:	eba9 0306 	sub.w	r3, r9, r6
  4026b6:	930e      	str	r3, [sp, #56]	; 0x38
  4026b8:	e590      	b.n	4021dc <_svfprintf_r+0x220>
  4026ba:	9311      	str	r3, [sp, #68]	; 0x44
  4026bc:	2a00      	cmp	r2, #0
  4026be:	f040 86a3 	bne.w	403408 <_svfprintf_r+0x144c>
  4026c2:	4b7e      	ldr	r3, [pc, #504]	; (4028bc <_svfprintf_r+0x900>)
  4026c4:	9318      	str	r3, [sp, #96]	; 0x60
  4026c6:	f01b 0f20 	tst.w	fp, #32
  4026ca:	f43f aeef 	beq.w	4024ac <_svfprintf_r+0x4f0>
  4026ce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4026d0:	3507      	adds	r5, #7
  4026d2:	f025 0307 	bic.w	r3, r5, #7
  4026d6:	f103 0208 	add.w	r2, r3, #8
  4026da:	f01b 0f01 	tst.w	fp, #1
  4026de:	920f      	str	r2, [sp, #60]	; 0x3c
  4026e0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4026e4:	f47f aef4 	bne.w	4024d0 <_svfprintf_r+0x514>
  4026e8:	2302      	movs	r3, #2
  4026ea:	e55a      	b.n	4021a2 <_svfprintf_r+0x1e6>
  4026ec:	9311      	str	r3, [sp, #68]	; 0x44
  4026ee:	2a00      	cmp	r2, #0
  4026f0:	f040 8686 	bne.w	403400 <_svfprintf_r+0x1444>
  4026f4:	f04b 0b10 	orr.w	fp, fp, #16
  4026f8:	f01b 0f20 	tst.w	fp, #32
  4026fc:	d0a1      	beq.n	402642 <_svfprintf_r+0x686>
  4026fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402700:	3507      	adds	r5, #7
  402702:	f025 0507 	bic.w	r5, r5, #7
  402706:	e9d5 2300 	ldrd	r2, r3, [r5]
  40270a:	2a00      	cmp	r2, #0
  40270c:	f105 0108 	add.w	r1, r5, #8
  402710:	461d      	mov	r5, r3
  402712:	f173 0300 	sbcs.w	r3, r3, #0
  402716:	910f      	str	r1, [sp, #60]	; 0x3c
  402718:	4614      	mov	r4, r2
  40271a:	daa6      	bge.n	40266a <_svfprintf_r+0x6ae>
  40271c:	272d      	movs	r7, #45	; 0x2d
  40271e:	4264      	negs	r4, r4
  402720:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402724:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402728:	2301      	movs	r3, #1
  40272a:	e53d      	b.n	4021a8 <_svfprintf_r+0x1ec>
  40272c:	9311      	str	r3, [sp, #68]	; 0x44
  40272e:	2a00      	cmp	r2, #0
  402730:	f040 8662 	bne.w	4033f8 <_svfprintf_r+0x143c>
  402734:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402736:	3507      	adds	r5, #7
  402738:	f025 0307 	bic.w	r3, r5, #7
  40273c:	f103 0208 	add.w	r2, r3, #8
  402740:	920f      	str	r2, [sp, #60]	; 0x3c
  402742:	681a      	ldr	r2, [r3, #0]
  402744:	9215      	str	r2, [sp, #84]	; 0x54
  402746:	685b      	ldr	r3, [r3, #4]
  402748:	9314      	str	r3, [sp, #80]	; 0x50
  40274a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40274c:	9d15      	ldr	r5, [sp, #84]	; 0x54
  40274e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402752:	4628      	mov	r0, r5
  402754:	4621      	mov	r1, r4
  402756:	f04f 32ff 	mov.w	r2, #4294967295
  40275a:	4b59      	ldr	r3, [pc, #356]	; (4028c0 <_svfprintf_r+0x904>)
  40275c:	f003 fe84 	bl	406468 <__aeabi_dcmpun>
  402760:	2800      	cmp	r0, #0
  402762:	f040 834a 	bne.w	402dfa <_svfprintf_r+0xe3e>
  402766:	4628      	mov	r0, r5
  402768:	4621      	mov	r1, r4
  40276a:	f04f 32ff 	mov.w	r2, #4294967295
  40276e:	4b54      	ldr	r3, [pc, #336]	; (4028c0 <_svfprintf_r+0x904>)
  402770:	f003 fe5c 	bl	40642c <__aeabi_dcmple>
  402774:	2800      	cmp	r0, #0
  402776:	f040 8340 	bne.w	402dfa <_svfprintf_r+0xe3e>
  40277a:	a815      	add	r0, sp, #84	; 0x54
  40277c:	c80d      	ldmia	r0, {r0, r2, r3}
  40277e:	9914      	ldr	r1, [sp, #80]	; 0x50
  402780:	f003 fe4a 	bl	406418 <__aeabi_dcmplt>
  402784:	2800      	cmp	r0, #0
  402786:	f040 8530 	bne.w	4031ea <_svfprintf_r+0x122e>
  40278a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40278e:	4e4d      	ldr	r6, [pc, #308]	; (4028c4 <_svfprintf_r+0x908>)
  402790:	4b4d      	ldr	r3, [pc, #308]	; (4028c8 <_svfprintf_r+0x90c>)
  402792:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402796:	9007      	str	r0, [sp, #28]
  402798:	9811      	ldr	r0, [sp, #68]	; 0x44
  40279a:	2203      	movs	r2, #3
  40279c:	2100      	movs	r1, #0
  40279e:	9208      	str	r2, [sp, #32]
  4027a0:	910a      	str	r1, [sp, #40]	; 0x28
  4027a2:	2847      	cmp	r0, #71	; 0x47
  4027a4:	bfd8      	it	le
  4027a6:	461e      	movle	r6, r3
  4027a8:	920e      	str	r2, [sp, #56]	; 0x38
  4027aa:	9112      	str	r1, [sp, #72]	; 0x48
  4027ac:	e51e      	b.n	4021ec <_svfprintf_r+0x230>
  4027ae:	f04b 0b08 	orr.w	fp, fp, #8
  4027b2:	f89a 3000 	ldrb.w	r3, [sl]
  4027b6:	e459      	b.n	40206c <_svfprintf_r+0xb0>
  4027b8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4027bc:	2300      	movs	r3, #0
  4027be:	461c      	mov	r4, r3
  4027c0:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4027c4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4027c8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4027cc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4027d0:	2809      	cmp	r0, #9
  4027d2:	d9f5      	bls.n	4027c0 <_svfprintf_r+0x804>
  4027d4:	940d      	str	r4, [sp, #52]	; 0x34
  4027d6:	e44b      	b.n	402070 <_svfprintf_r+0xb4>
  4027d8:	f04b 0b10 	orr.w	fp, fp, #16
  4027dc:	9311      	str	r3, [sp, #68]	; 0x44
  4027de:	f01b 0320 	ands.w	r3, fp, #32
  4027e2:	f43f ae1d 	beq.w	402420 <_svfprintf_r+0x464>
  4027e6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4027e8:	3507      	adds	r5, #7
  4027ea:	f025 0307 	bic.w	r3, r5, #7
  4027ee:	f103 0208 	add.w	r2, r3, #8
  4027f2:	e9d3 4500 	ldrd	r4, r5, [r3]
  4027f6:	920f      	str	r2, [sp, #60]	; 0x3c
  4027f8:	2300      	movs	r3, #0
  4027fa:	e4d2      	b.n	4021a2 <_svfprintf_r+0x1e6>
  4027fc:	9311      	str	r3, [sp, #68]	; 0x44
  4027fe:	2a00      	cmp	r2, #0
  402800:	f040 85e7 	bne.w	4033d2 <_svfprintf_r+0x1416>
  402804:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402806:	2a00      	cmp	r2, #0
  402808:	f43f aca3 	beq.w	402152 <_svfprintf_r+0x196>
  40280c:	2300      	movs	r3, #0
  40280e:	2101      	movs	r1, #1
  402810:	461f      	mov	r7, r3
  402812:	9108      	str	r1, [sp, #32]
  402814:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402818:	f8cd b01c 	str.w	fp, [sp, #28]
  40281c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402820:	930a      	str	r3, [sp, #40]	; 0x28
  402822:	9312      	str	r3, [sp, #72]	; 0x48
  402824:	910e      	str	r1, [sp, #56]	; 0x38
  402826:	ae28      	add	r6, sp, #160	; 0xa0
  402828:	e4e4      	b.n	4021f4 <_svfprintf_r+0x238>
  40282a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40282c:	e534      	b.n	402298 <_svfprintf_r+0x2dc>
  40282e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402830:	2b65      	cmp	r3, #101	; 0x65
  402832:	f340 80a7 	ble.w	402984 <_svfprintf_r+0x9c8>
  402836:	a815      	add	r0, sp, #84	; 0x54
  402838:	c80d      	ldmia	r0, {r0, r2, r3}
  40283a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40283c:	f003 fde2 	bl	406404 <__aeabi_dcmpeq>
  402840:	2800      	cmp	r0, #0
  402842:	f000 8150 	beq.w	402ae6 <_svfprintf_r+0xb2a>
  402846:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402848:	4a20      	ldr	r2, [pc, #128]	; (4028cc <_svfprintf_r+0x910>)
  40284a:	f8c8 2000 	str.w	r2, [r8]
  40284e:	3301      	adds	r3, #1
  402850:	3401      	adds	r4, #1
  402852:	2201      	movs	r2, #1
  402854:	2b07      	cmp	r3, #7
  402856:	9427      	str	r4, [sp, #156]	; 0x9c
  402858:	9326      	str	r3, [sp, #152]	; 0x98
  40285a:	f8c8 2004 	str.w	r2, [r8, #4]
  40285e:	f300 836a 	bgt.w	402f36 <_svfprintf_r+0xf7a>
  402862:	f108 0808 	add.w	r8, r8, #8
  402866:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402868:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40286a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40286c:	4293      	cmp	r3, r2
  40286e:	db03      	blt.n	402878 <_svfprintf_r+0x8bc>
  402870:	9b07      	ldr	r3, [sp, #28]
  402872:	07dd      	lsls	r5, r3, #31
  402874:	f57f ad82 	bpl.w	40237c <_svfprintf_r+0x3c0>
  402878:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40287a:	9919      	ldr	r1, [sp, #100]	; 0x64
  40287c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40287e:	f8c8 2000 	str.w	r2, [r8]
  402882:	3301      	adds	r3, #1
  402884:	440c      	add	r4, r1
  402886:	2b07      	cmp	r3, #7
  402888:	f8c8 1004 	str.w	r1, [r8, #4]
  40288c:	9427      	str	r4, [sp, #156]	; 0x9c
  40288e:	9326      	str	r3, [sp, #152]	; 0x98
  402890:	f300 839e 	bgt.w	402fd0 <_svfprintf_r+0x1014>
  402894:	f108 0808 	add.w	r8, r8, #8
  402898:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40289a:	1e5e      	subs	r6, r3, #1
  40289c:	2e00      	cmp	r6, #0
  40289e:	f77f ad6d 	ble.w	40237c <_svfprintf_r+0x3c0>
  4028a2:	2e10      	cmp	r6, #16
  4028a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028a6:	4d0a      	ldr	r5, [pc, #40]	; (4028d0 <_svfprintf_r+0x914>)
  4028a8:	f340 81f5 	ble.w	402c96 <_svfprintf_r+0xcda>
  4028ac:	4622      	mov	r2, r4
  4028ae:	2710      	movs	r7, #16
  4028b0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4028b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4028b6:	e013      	b.n	4028e0 <_svfprintf_r+0x924>
  4028b8:	0040750c 	.word	0x0040750c
  4028bc:	004074f8 	.word	0x004074f8
  4028c0:	7fefffff 	.word	0x7fefffff
  4028c4:	004074ec 	.word	0x004074ec
  4028c8:	004074e8 	.word	0x004074e8
  4028cc:	00407528 	.word	0x00407528
  4028d0:	0040753c 	.word	0x0040753c
  4028d4:	f108 0808 	add.w	r8, r8, #8
  4028d8:	3e10      	subs	r6, #16
  4028da:	2e10      	cmp	r6, #16
  4028dc:	f340 81da 	ble.w	402c94 <_svfprintf_r+0xcd8>
  4028e0:	3301      	adds	r3, #1
  4028e2:	3210      	adds	r2, #16
  4028e4:	2b07      	cmp	r3, #7
  4028e6:	9227      	str	r2, [sp, #156]	; 0x9c
  4028e8:	9326      	str	r3, [sp, #152]	; 0x98
  4028ea:	e888 00a0 	stmia.w	r8, {r5, r7}
  4028ee:	ddf1      	ble.n	4028d4 <_svfprintf_r+0x918>
  4028f0:	aa25      	add	r2, sp, #148	; 0x94
  4028f2:	4621      	mov	r1, r4
  4028f4:	4658      	mov	r0, fp
  4028f6:	f002 fcf1 	bl	4052dc <__ssprint_r>
  4028fa:	2800      	cmp	r0, #0
  4028fc:	f47f ac30 	bne.w	402160 <_svfprintf_r+0x1a4>
  402900:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402902:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402904:	46c8      	mov	r8, r9
  402906:	e7e7      	b.n	4028d8 <_svfprintf_r+0x91c>
  402908:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40290a:	9a08      	ldr	r2, [sp, #32]
  40290c:	1a9f      	subs	r7, r3, r2
  40290e:	2f00      	cmp	r7, #0
  402910:	f77f ace5 	ble.w	4022de <_svfprintf_r+0x322>
  402914:	2f10      	cmp	r7, #16
  402916:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402918:	4db6      	ldr	r5, [pc, #728]	; (402bf4 <_svfprintf_r+0xc38>)
  40291a:	dd27      	ble.n	40296c <_svfprintf_r+0x9b0>
  40291c:	4642      	mov	r2, r8
  40291e:	4621      	mov	r1, r4
  402920:	46b0      	mov	r8, r6
  402922:	f04f 0b10 	mov.w	fp, #16
  402926:	462e      	mov	r6, r5
  402928:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40292a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40292c:	e004      	b.n	402938 <_svfprintf_r+0x97c>
  40292e:	3f10      	subs	r7, #16
  402930:	2f10      	cmp	r7, #16
  402932:	f102 0208 	add.w	r2, r2, #8
  402936:	dd15      	ble.n	402964 <_svfprintf_r+0x9a8>
  402938:	3301      	adds	r3, #1
  40293a:	3110      	adds	r1, #16
  40293c:	2b07      	cmp	r3, #7
  40293e:	9127      	str	r1, [sp, #156]	; 0x9c
  402940:	9326      	str	r3, [sp, #152]	; 0x98
  402942:	e882 0840 	stmia.w	r2, {r6, fp}
  402946:	ddf2      	ble.n	40292e <_svfprintf_r+0x972>
  402948:	aa25      	add	r2, sp, #148	; 0x94
  40294a:	4629      	mov	r1, r5
  40294c:	4620      	mov	r0, r4
  40294e:	f002 fcc5 	bl	4052dc <__ssprint_r>
  402952:	2800      	cmp	r0, #0
  402954:	f47f ac04 	bne.w	402160 <_svfprintf_r+0x1a4>
  402958:	3f10      	subs	r7, #16
  40295a:	2f10      	cmp	r7, #16
  40295c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40295e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402960:	464a      	mov	r2, r9
  402962:	dce9      	bgt.n	402938 <_svfprintf_r+0x97c>
  402964:	4635      	mov	r5, r6
  402966:	460c      	mov	r4, r1
  402968:	4646      	mov	r6, r8
  40296a:	4690      	mov	r8, r2
  40296c:	3301      	adds	r3, #1
  40296e:	443c      	add	r4, r7
  402970:	2b07      	cmp	r3, #7
  402972:	9427      	str	r4, [sp, #156]	; 0x9c
  402974:	9326      	str	r3, [sp, #152]	; 0x98
  402976:	e888 00a0 	stmia.w	r8, {r5, r7}
  40297a:	f300 8232 	bgt.w	402de2 <_svfprintf_r+0xe26>
  40297e:	f108 0808 	add.w	r8, r8, #8
  402982:	e4ac      	b.n	4022de <_svfprintf_r+0x322>
  402984:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402986:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402988:	2b01      	cmp	r3, #1
  40298a:	f340 81fe 	ble.w	402d8a <_svfprintf_r+0xdce>
  40298e:	3701      	adds	r7, #1
  402990:	3401      	adds	r4, #1
  402992:	2301      	movs	r3, #1
  402994:	2f07      	cmp	r7, #7
  402996:	9427      	str	r4, [sp, #156]	; 0x9c
  402998:	9726      	str	r7, [sp, #152]	; 0x98
  40299a:	f8c8 6000 	str.w	r6, [r8]
  40299e:	f8c8 3004 	str.w	r3, [r8, #4]
  4029a2:	f300 8203 	bgt.w	402dac <_svfprintf_r+0xdf0>
  4029a6:	f108 0808 	add.w	r8, r8, #8
  4029aa:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4029ac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  4029ae:	f8c8 3000 	str.w	r3, [r8]
  4029b2:	3701      	adds	r7, #1
  4029b4:	4414      	add	r4, r2
  4029b6:	2f07      	cmp	r7, #7
  4029b8:	9427      	str	r4, [sp, #156]	; 0x9c
  4029ba:	9726      	str	r7, [sp, #152]	; 0x98
  4029bc:	f8c8 2004 	str.w	r2, [r8, #4]
  4029c0:	f300 8200 	bgt.w	402dc4 <_svfprintf_r+0xe08>
  4029c4:	f108 0808 	add.w	r8, r8, #8
  4029c8:	a815      	add	r0, sp, #84	; 0x54
  4029ca:	c80d      	ldmia	r0, {r0, r2, r3}
  4029cc:	9914      	ldr	r1, [sp, #80]	; 0x50
  4029ce:	f003 fd19 	bl	406404 <__aeabi_dcmpeq>
  4029d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4029d4:	2800      	cmp	r0, #0
  4029d6:	f040 8101 	bne.w	402bdc <_svfprintf_r+0xc20>
  4029da:	3b01      	subs	r3, #1
  4029dc:	3701      	adds	r7, #1
  4029de:	3601      	adds	r6, #1
  4029e0:	441c      	add	r4, r3
  4029e2:	2f07      	cmp	r7, #7
  4029e4:	9726      	str	r7, [sp, #152]	; 0x98
  4029e6:	9427      	str	r4, [sp, #156]	; 0x9c
  4029e8:	f8c8 6000 	str.w	r6, [r8]
  4029ec:	f8c8 3004 	str.w	r3, [r8, #4]
  4029f0:	f300 8127 	bgt.w	402c42 <_svfprintf_r+0xc86>
  4029f4:	f108 0808 	add.w	r8, r8, #8
  4029f8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4029fa:	f8c8 2004 	str.w	r2, [r8, #4]
  4029fe:	3701      	adds	r7, #1
  402a00:	4414      	add	r4, r2
  402a02:	ab21      	add	r3, sp, #132	; 0x84
  402a04:	2f07      	cmp	r7, #7
  402a06:	9427      	str	r4, [sp, #156]	; 0x9c
  402a08:	9726      	str	r7, [sp, #152]	; 0x98
  402a0a:	f8c8 3000 	str.w	r3, [r8]
  402a0e:	f77f acb3 	ble.w	402378 <_svfprintf_r+0x3bc>
  402a12:	aa25      	add	r2, sp, #148	; 0x94
  402a14:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a16:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a18:	f002 fc60 	bl	4052dc <__ssprint_r>
  402a1c:	2800      	cmp	r0, #0
  402a1e:	f47f ab9f 	bne.w	402160 <_svfprintf_r+0x1a4>
  402a22:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a24:	46c8      	mov	r8, r9
  402a26:	e4a9      	b.n	40237c <_svfprintf_r+0x3c0>
  402a28:	aa25      	add	r2, sp, #148	; 0x94
  402a2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a2c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a2e:	f002 fc55 	bl	4052dc <__ssprint_r>
  402a32:	2800      	cmp	r0, #0
  402a34:	f43f aceb 	beq.w	40240e <_svfprintf_r+0x452>
  402a38:	f7ff bb92 	b.w	402160 <_svfprintf_r+0x1a4>
  402a3c:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402a40:	2b01      	cmp	r3, #1
  402a42:	f000 8134 	beq.w	402cae <_svfprintf_r+0xcf2>
  402a46:	2b02      	cmp	r3, #2
  402a48:	d125      	bne.n	402a96 <_svfprintf_r+0xada>
  402a4a:	f8cd b01c 	str.w	fp, [sp, #28]
  402a4e:	2400      	movs	r4, #0
  402a50:	2500      	movs	r5, #0
  402a52:	e61e      	b.n	402692 <_svfprintf_r+0x6d6>
  402a54:	aa25      	add	r2, sp, #148	; 0x94
  402a56:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a58:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a5a:	f002 fc3f 	bl	4052dc <__ssprint_r>
  402a5e:	2800      	cmp	r0, #0
  402a60:	f47f ab7e 	bne.w	402160 <_svfprintf_r+0x1a4>
  402a64:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a66:	46c8      	mov	r8, r9
  402a68:	e475      	b.n	402356 <_svfprintf_r+0x39a>
  402a6a:	aa25      	add	r2, sp, #148	; 0x94
  402a6c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a6e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a70:	f002 fc34 	bl	4052dc <__ssprint_r>
  402a74:	2800      	cmp	r0, #0
  402a76:	f47f ab73 	bne.w	402160 <_svfprintf_r+0x1a4>
  402a7a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a7c:	46c8      	mov	r8, r9
  402a7e:	e41b      	b.n	4022b8 <_svfprintf_r+0x2fc>
  402a80:	aa25      	add	r2, sp, #148	; 0x94
  402a82:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a84:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a86:	f002 fc29 	bl	4052dc <__ssprint_r>
  402a8a:	2800      	cmp	r0, #0
  402a8c:	f47f ab68 	bne.w	402160 <_svfprintf_r+0x1a4>
  402a90:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a92:	46c8      	mov	r8, r9
  402a94:	e420      	b.n	4022d8 <_svfprintf_r+0x31c>
  402a96:	f8cd b01c 	str.w	fp, [sp, #28]
  402a9a:	2400      	movs	r4, #0
  402a9c:	2500      	movs	r5, #0
  402a9e:	4649      	mov	r1, r9
  402aa0:	e000      	b.n	402aa4 <_svfprintf_r+0xae8>
  402aa2:	4631      	mov	r1, r6
  402aa4:	08e2      	lsrs	r2, r4, #3
  402aa6:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402aaa:	08e8      	lsrs	r0, r5, #3
  402aac:	f004 0307 	and.w	r3, r4, #7
  402ab0:	4605      	mov	r5, r0
  402ab2:	4614      	mov	r4, r2
  402ab4:	3330      	adds	r3, #48	; 0x30
  402ab6:	ea54 0205 	orrs.w	r2, r4, r5
  402aba:	f801 3c01 	strb.w	r3, [r1, #-1]
  402abe:	f101 36ff 	add.w	r6, r1, #4294967295
  402ac2:	d1ee      	bne.n	402aa2 <_svfprintf_r+0xae6>
  402ac4:	9a07      	ldr	r2, [sp, #28]
  402ac6:	07d2      	lsls	r2, r2, #31
  402ac8:	f57f adf3 	bpl.w	4026b2 <_svfprintf_r+0x6f6>
  402acc:	2b30      	cmp	r3, #48	; 0x30
  402ace:	f43f adf0 	beq.w	4026b2 <_svfprintf_r+0x6f6>
  402ad2:	3902      	subs	r1, #2
  402ad4:	2330      	movs	r3, #48	; 0x30
  402ad6:	f806 3c01 	strb.w	r3, [r6, #-1]
  402ada:	eba9 0301 	sub.w	r3, r9, r1
  402ade:	930e      	str	r3, [sp, #56]	; 0x38
  402ae0:	460e      	mov	r6, r1
  402ae2:	f7ff bb7b 	b.w	4021dc <_svfprintf_r+0x220>
  402ae6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402ae8:	2900      	cmp	r1, #0
  402aea:	f340 822e 	ble.w	402f4a <_svfprintf_r+0xf8e>
  402aee:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402af0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402af2:	4293      	cmp	r3, r2
  402af4:	bfa8      	it	ge
  402af6:	4613      	movge	r3, r2
  402af8:	2b00      	cmp	r3, #0
  402afa:	461f      	mov	r7, r3
  402afc:	dd0d      	ble.n	402b1a <_svfprintf_r+0xb5e>
  402afe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b00:	f8c8 6000 	str.w	r6, [r8]
  402b04:	3301      	adds	r3, #1
  402b06:	443c      	add	r4, r7
  402b08:	2b07      	cmp	r3, #7
  402b0a:	9427      	str	r4, [sp, #156]	; 0x9c
  402b0c:	f8c8 7004 	str.w	r7, [r8, #4]
  402b10:	9326      	str	r3, [sp, #152]	; 0x98
  402b12:	f300 831f 	bgt.w	403154 <_svfprintf_r+0x1198>
  402b16:	f108 0808 	add.w	r8, r8, #8
  402b1a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402b1c:	2f00      	cmp	r7, #0
  402b1e:	bfa8      	it	ge
  402b20:	1bdb      	subge	r3, r3, r7
  402b22:	2b00      	cmp	r3, #0
  402b24:	461f      	mov	r7, r3
  402b26:	f340 80d6 	ble.w	402cd6 <_svfprintf_r+0xd1a>
  402b2a:	2f10      	cmp	r7, #16
  402b2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b2e:	4d31      	ldr	r5, [pc, #196]	; (402bf4 <_svfprintf_r+0xc38>)
  402b30:	f340 81ed 	ble.w	402f0e <_svfprintf_r+0xf52>
  402b34:	4642      	mov	r2, r8
  402b36:	4621      	mov	r1, r4
  402b38:	46b0      	mov	r8, r6
  402b3a:	f04f 0b10 	mov.w	fp, #16
  402b3e:	462e      	mov	r6, r5
  402b40:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402b42:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402b44:	e004      	b.n	402b50 <_svfprintf_r+0xb94>
  402b46:	3208      	adds	r2, #8
  402b48:	3f10      	subs	r7, #16
  402b4a:	2f10      	cmp	r7, #16
  402b4c:	f340 81db 	ble.w	402f06 <_svfprintf_r+0xf4a>
  402b50:	3301      	adds	r3, #1
  402b52:	3110      	adds	r1, #16
  402b54:	2b07      	cmp	r3, #7
  402b56:	9127      	str	r1, [sp, #156]	; 0x9c
  402b58:	9326      	str	r3, [sp, #152]	; 0x98
  402b5a:	e882 0840 	stmia.w	r2, {r6, fp}
  402b5e:	ddf2      	ble.n	402b46 <_svfprintf_r+0xb8a>
  402b60:	aa25      	add	r2, sp, #148	; 0x94
  402b62:	4629      	mov	r1, r5
  402b64:	4620      	mov	r0, r4
  402b66:	f002 fbb9 	bl	4052dc <__ssprint_r>
  402b6a:	2800      	cmp	r0, #0
  402b6c:	f47f aaf8 	bne.w	402160 <_svfprintf_r+0x1a4>
  402b70:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402b72:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b74:	464a      	mov	r2, r9
  402b76:	e7e7      	b.n	402b48 <_svfprintf_r+0xb8c>
  402b78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402b7a:	930e      	str	r3, [sp, #56]	; 0x38
  402b7c:	464e      	mov	r6, r9
  402b7e:	f7ff bb2d 	b.w	4021dc <_svfprintf_r+0x220>
  402b82:	2d00      	cmp	r5, #0
  402b84:	bf08      	it	eq
  402b86:	2c0a      	cmpeq	r4, #10
  402b88:	f0c0 808f 	bcc.w	402caa <_svfprintf_r+0xcee>
  402b8c:	464e      	mov	r6, r9
  402b8e:	4620      	mov	r0, r4
  402b90:	4629      	mov	r1, r5
  402b92:	220a      	movs	r2, #10
  402b94:	2300      	movs	r3, #0
  402b96:	f003 fca5 	bl	4064e4 <__aeabi_uldivmod>
  402b9a:	3230      	adds	r2, #48	; 0x30
  402b9c:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402ba0:	4620      	mov	r0, r4
  402ba2:	4629      	mov	r1, r5
  402ba4:	2300      	movs	r3, #0
  402ba6:	220a      	movs	r2, #10
  402ba8:	f003 fc9c 	bl	4064e4 <__aeabi_uldivmod>
  402bac:	4604      	mov	r4, r0
  402bae:	460d      	mov	r5, r1
  402bb0:	ea54 0305 	orrs.w	r3, r4, r5
  402bb4:	d1eb      	bne.n	402b8e <_svfprintf_r+0xbd2>
  402bb6:	eba9 0306 	sub.w	r3, r9, r6
  402bba:	930e      	str	r3, [sp, #56]	; 0x38
  402bbc:	f7ff bb0e 	b.w	4021dc <_svfprintf_r+0x220>
  402bc0:	aa25      	add	r2, sp, #148	; 0x94
  402bc2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bc4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bc6:	f002 fb89 	bl	4052dc <__ssprint_r>
  402bca:	2800      	cmp	r0, #0
  402bcc:	f47f aac8 	bne.w	402160 <_svfprintf_r+0x1a4>
  402bd0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402bd4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bd6:	46c8      	mov	r8, r9
  402bd8:	f7ff bb5e 	b.w	402298 <_svfprintf_r+0x2dc>
  402bdc:	1e5e      	subs	r6, r3, #1
  402bde:	2e00      	cmp	r6, #0
  402be0:	f77f af0a 	ble.w	4029f8 <_svfprintf_r+0xa3c>
  402be4:	2e10      	cmp	r6, #16
  402be6:	4d03      	ldr	r5, [pc, #12]	; (402bf4 <_svfprintf_r+0xc38>)
  402be8:	dd22      	ble.n	402c30 <_svfprintf_r+0xc74>
  402bea:	4622      	mov	r2, r4
  402bec:	f04f 0b10 	mov.w	fp, #16
  402bf0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402bf2:	e006      	b.n	402c02 <_svfprintf_r+0xc46>
  402bf4:	0040753c 	.word	0x0040753c
  402bf8:	3e10      	subs	r6, #16
  402bfa:	2e10      	cmp	r6, #16
  402bfc:	f108 0808 	add.w	r8, r8, #8
  402c00:	dd15      	ble.n	402c2e <_svfprintf_r+0xc72>
  402c02:	3701      	adds	r7, #1
  402c04:	3210      	adds	r2, #16
  402c06:	2f07      	cmp	r7, #7
  402c08:	9227      	str	r2, [sp, #156]	; 0x9c
  402c0a:	9726      	str	r7, [sp, #152]	; 0x98
  402c0c:	e888 0820 	stmia.w	r8, {r5, fp}
  402c10:	ddf2      	ble.n	402bf8 <_svfprintf_r+0xc3c>
  402c12:	aa25      	add	r2, sp, #148	; 0x94
  402c14:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c16:	4620      	mov	r0, r4
  402c18:	f002 fb60 	bl	4052dc <__ssprint_r>
  402c1c:	2800      	cmp	r0, #0
  402c1e:	f47f aa9f 	bne.w	402160 <_svfprintf_r+0x1a4>
  402c22:	3e10      	subs	r6, #16
  402c24:	2e10      	cmp	r6, #16
  402c26:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402c28:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c2a:	46c8      	mov	r8, r9
  402c2c:	dce9      	bgt.n	402c02 <_svfprintf_r+0xc46>
  402c2e:	4614      	mov	r4, r2
  402c30:	3701      	adds	r7, #1
  402c32:	4434      	add	r4, r6
  402c34:	2f07      	cmp	r7, #7
  402c36:	9427      	str	r4, [sp, #156]	; 0x9c
  402c38:	9726      	str	r7, [sp, #152]	; 0x98
  402c3a:	e888 0060 	stmia.w	r8, {r5, r6}
  402c3e:	f77f aed9 	ble.w	4029f4 <_svfprintf_r+0xa38>
  402c42:	aa25      	add	r2, sp, #148	; 0x94
  402c44:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c46:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c48:	f002 fb48 	bl	4052dc <__ssprint_r>
  402c4c:	2800      	cmp	r0, #0
  402c4e:	f47f aa87 	bne.w	402160 <_svfprintf_r+0x1a4>
  402c52:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c54:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c56:	46c8      	mov	r8, r9
  402c58:	e6ce      	b.n	4029f8 <_svfprintf_r+0xa3c>
  402c5a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402c5c:	6814      	ldr	r4, [r2, #0]
  402c5e:	4613      	mov	r3, r2
  402c60:	3304      	adds	r3, #4
  402c62:	17e5      	asrs	r5, r4, #31
  402c64:	930f      	str	r3, [sp, #60]	; 0x3c
  402c66:	4622      	mov	r2, r4
  402c68:	462b      	mov	r3, r5
  402c6a:	e4fa      	b.n	402662 <_svfprintf_r+0x6a6>
  402c6c:	3204      	adds	r2, #4
  402c6e:	681c      	ldr	r4, [r3, #0]
  402c70:	920f      	str	r2, [sp, #60]	; 0x3c
  402c72:	2301      	movs	r3, #1
  402c74:	2500      	movs	r5, #0
  402c76:	f7ff ba94 	b.w	4021a2 <_svfprintf_r+0x1e6>
  402c7a:	681c      	ldr	r4, [r3, #0]
  402c7c:	3304      	adds	r3, #4
  402c7e:	930f      	str	r3, [sp, #60]	; 0x3c
  402c80:	2500      	movs	r5, #0
  402c82:	e421      	b.n	4024c8 <_svfprintf_r+0x50c>
  402c84:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402c86:	460a      	mov	r2, r1
  402c88:	3204      	adds	r2, #4
  402c8a:	680c      	ldr	r4, [r1, #0]
  402c8c:	920f      	str	r2, [sp, #60]	; 0x3c
  402c8e:	2500      	movs	r5, #0
  402c90:	f7ff ba87 	b.w	4021a2 <_svfprintf_r+0x1e6>
  402c94:	4614      	mov	r4, r2
  402c96:	3301      	adds	r3, #1
  402c98:	4434      	add	r4, r6
  402c9a:	2b07      	cmp	r3, #7
  402c9c:	9427      	str	r4, [sp, #156]	; 0x9c
  402c9e:	9326      	str	r3, [sp, #152]	; 0x98
  402ca0:	e888 0060 	stmia.w	r8, {r5, r6}
  402ca4:	f77f ab68 	ble.w	402378 <_svfprintf_r+0x3bc>
  402ca8:	e6b3      	b.n	402a12 <_svfprintf_r+0xa56>
  402caa:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402cae:	f8cd b01c 	str.w	fp, [sp, #28]
  402cb2:	ae42      	add	r6, sp, #264	; 0x108
  402cb4:	3430      	adds	r4, #48	; 0x30
  402cb6:	2301      	movs	r3, #1
  402cb8:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402cbc:	930e      	str	r3, [sp, #56]	; 0x38
  402cbe:	f7ff ba8d 	b.w	4021dc <_svfprintf_r+0x220>
  402cc2:	aa25      	add	r2, sp, #148	; 0x94
  402cc4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cc6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cc8:	f002 fb08 	bl	4052dc <__ssprint_r>
  402ccc:	2800      	cmp	r0, #0
  402cce:	f47f aa47 	bne.w	402160 <_svfprintf_r+0x1a4>
  402cd2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cd4:	46c8      	mov	r8, r9
  402cd6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402cd8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402cda:	429a      	cmp	r2, r3
  402cdc:	db44      	blt.n	402d68 <_svfprintf_r+0xdac>
  402cde:	9b07      	ldr	r3, [sp, #28]
  402ce0:	07d9      	lsls	r1, r3, #31
  402ce2:	d441      	bmi.n	402d68 <_svfprintf_r+0xdac>
  402ce4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402ce6:	9812      	ldr	r0, [sp, #72]	; 0x48
  402ce8:	1a9a      	subs	r2, r3, r2
  402cea:	1a1d      	subs	r5, r3, r0
  402cec:	4295      	cmp	r5, r2
  402cee:	bfa8      	it	ge
  402cf0:	4615      	movge	r5, r2
  402cf2:	2d00      	cmp	r5, #0
  402cf4:	dd0e      	ble.n	402d14 <_svfprintf_r+0xd58>
  402cf6:	9926      	ldr	r1, [sp, #152]	; 0x98
  402cf8:	f8c8 5004 	str.w	r5, [r8, #4]
  402cfc:	3101      	adds	r1, #1
  402cfe:	4406      	add	r6, r0
  402d00:	442c      	add	r4, r5
  402d02:	2907      	cmp	r1, #7
  402d04:	f8c8 6000 	str.w	r6, [r8]
  402d08:	9427      	str	r4, [sp, #156]	; 0x9c
  402d0a:	9126      	str	r1, [sp, #152]	; 0x98
  402d0c:	f300 823b 	bgt.w	403186 <_svfprintf_r+0x11ca>
  402d10:	f108 0808 	add.w	r8, r8, #8
  402d14:	2d00      	cmp	r5, #0
  402d16:	bfac      	ite	ge
  402d18:	1b56      	subge	r6, r2, r5
  402d1a:	4616      	movlt	r6, r2
  402d1c:	2e00      	cmp	r6, #0
  402d1e:	f77f ab2d 	ble.w	40237c <_svfprintf_r+0x3c0>
  402d22:	2e10      	cmp	r6, #16
  402d24:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d26:	4db0      	ldr	r5, [pc, #704]	; (402fe8 <_svfprintf_r+0x102c>)
  402d28:	ddb5      	ble.n	402c96 <_svfprintf_r+0xcda>
  402d2a:	4622      	mov	r2, r4
  402d2c:	2710      	movs	r7, #16
  402d2e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402d32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402d34:	e004      	b.n	402d40 <_svfprintf_r+0xd84>
  402d36:	f108 0808 	add.w	r8, r8, #8
  402d3a:	3e10      	subs	r6, #16
  402d3c:	2e10      	cmp	r6, #16
  402d3e:	dda9      	ble.n	402c94 <_svfprintf_r+0xcd8>
  402d40:	3301      	adds	r3, #1
  402d42:	3210      	adds	r2, #16
  402d44:	2b07      	cmp	r3, #7
  402d46:	9227      	str	r2, [sp, #156]	; 0x9c
  402d48:	9326      	str	r3, [sp, #152]	; 0x98
  402d4a:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d4e:	ddf2      	ble.n	402d36 <_svfprintf_r+0xd7a>
  402d50:	aa25      	add	r2, sp, #148	; 0x94
  402d52:	4621      	mov	r1, r4
  402d54:	4658      	mov	r0, fp
  402d56:	f002 fac1 	bl	4052dc <__ssprint_r>
  402d5a:	2800      	cmp	r0, #0
  402d5c:	f47f aa00 	bne.w	402160 <_svfprintf_r+0x1a4>
  402d60:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d62:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d64:	46c8      	mov	r8, r9
  402d66:	e7e8      	b.n	402d3a <_svfprintf_r+0xd7e>
  402d68:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d6a:	9819      	ldr	r0, [sp, #100]	; 0x64
  402d6c:	991a      	ldr	r1, [sp, #104]	; 0x68
  402d6e:	f8c8 1000 	str.w	r1, [r8]
  402d72:	3301      	adds	r3, #1
  402d74:	4404      	add	r4, r0
  402d76:	2b07      	cmp	r3, #7
  402d78:	9427      	str	r4, [sp, #156]	; 0x9c
  402d7a:	f8c8 0004 	str.w	r0, [r8, #4]
  402d7e:	9326      	str	r3, [sp, #152]	; 0x98
  402d80:	f300 81f5 	bgt.w	40316e <_svfprintf_r+0x11b2>
  402d84:	f108 0808 	add.w	r8, r8, #8
  402d88:	e7ac      	b.n	402ce4 <_svfprintf_r+0xd28>
  402d8a:	9b07      	ldr	r3, [sp, #28]
  402d8c:	07da      	lsls	r2, r3, #31
  402d8e:	f53f adfe 	bmi.w	40298e <_svfprintf_r+0x9d2>
  402d92:	3701      	adds	r7, #1
  402d94:	3401      	adds	r4, #1
  402d96:	2301      	movs	r3, #1
  402d98:	2f07      	cmp	r7, #7
  402d9a:	9427      	str	r4, [sp, #156]	; 0x9c
  402d9c:	9726      	str	r7, [sp, #152]	; 0x98
  402d9e:	f8c8 6000 	str.w	r6, [r8]
  402da2:	f8c8 3004 	str.w	r3, [r8, #4]
  402da6:	f77f ae25 	ble.w	4029f4 <_svfprintf_r+0xa38>
  402daa:	e74a      	b.n	402c42 <_svfprintf_r+0xc86>
  402dac:	aa25      	add	r2, sp, #148	; 0x94
  402dae:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402db0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402db2:	f002 fa93 	bl	4052dc <__ssprint_r>
  402db6:	2800      	cmp	r0, #0
  402db8:	f47f a9d2 	bne.w	402160 <_svfprintf_r+0x1a4>
  402dbc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dbe:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402dc0:	46c8      	mov	r8, r9
  402dc2:	e5f2      	b.n	4029aa <_svfprintf_r+0x9ee>
  402dc4:	aa25      	add	r2, sp, #148	; 0x94
  402dc6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dc8:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dca:	f002 fa87 	bl	4052dc <__ssprint_r>
  402dce:	2800      	cmp	r0, #0
  402dd0:	f47f a9c6 	bne.w	402160 <_svfprintf_r+0x1a4>
  402dd4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dd6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402dd8:	46c8      	mov	r8, r9
  402dda:	e5f5      	b.n	4029c8 <_svfprintf_r+0xa0c>
  402ddc:	464e      	mov	r6, r9
  402dde:	f7ff b9fd 	b.w	4021dc <_svfprintf_r+0x220>
  402de2:	aa25      	add	r2, sp, #148	; 0x94
  402de4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402de6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402de8:	f002 fa78 	bl	4052dc <__ssprint_r>
  402dec:	2800      	cmp	r0, #0
  402dee:	f47f a9b7 	bne.w	402160 <_svfprintf_r+0x1a4>
  402df2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402df4:	46c8      	mov	r8, r9
  402df6:	f7ff ba72 	b.w	4022de <_svfprintf_r+0x322>
  402dfa:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402dfc:	4622      	mov	r2, r4
  402dfe:	4620      	mov	r0, r4
  402e00:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402e02:	4623      	mov	r3, r4
  402e04:	4621      	mov	r1, r4
  402e06:	f003 fb2f 	bl	406468 <__aeabi_dcmpun>
  402e0a:	2800      	cmp	r0, #0
  402e0c:	f040 8286 	bne.w	40331c <_svfprintf_r+0x1360>
  402e10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e12:	3301      	adds	r3, #1
  402e14:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e16:	f023 0320 	bic.w	r3, r3, #32
  402e1a:	930e      	str	r3, [sp, #56]	; 0x38
  402e1c:	f000 81e2 	beq.w	4031e4 <_svfprintf_r+0x1228>
  402e20:	2b47      	cmp	r3, #71	; 0x47
  402e22:	f000 811e 	beq.w	403062 <_svfprintf_r+0x10a6>
  402e26:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402e2a:	9307      	str	r3, [sp, #28]
  402e2c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402e2e:	1e1f      	subs	r7, r3, #0
  402e30:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402e32:	9308      	str	r3, [sp, #32]
  402e34:	bfbb      	ittet	lt
  402e36:	463b      	movlt	r3, r7
  402e38:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402e3c:	2300      	movge	r3, #0
  402e3e:	232d      	movlt	r3, #45	; 0x2d
  402e40:	9310      	str	r3, [sp, #64]	; 0x40
  402e42:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e44:	2b66      	cmp	r3, #102	; 0x66
  402e46:	f000 81bb 	beq.w	4031c0 <_svfprintf_r+0x1204>
  402e4a:	2b46      	cmp	r3, #70	; 0x46
  402e4c:	f000 80df 	beq.w	40300e <_svfprintf_r+0x1052>
  402e50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402e52:	9a08      	ldr	r2, [sp, #32]
  402e54:	2b45      	cmp	r3, #69	; 0x45
  402e56:	bf0c      	ite	eq
  402e58:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402e5a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402e5c:	a823      	add	r0, sp, #140	; 0x8c
  402e5e:	a920      	add	r1, sp, #128	; 0x80
  402e60:	bf08      	it	eq
  402e62:	1c5d      	addeq	r5, r3, #1
  402e64:	9004      	str	r0, [sp, #16]
  402e66:	9103      	str	r1, [sp, #12]
  402e68:	a81f      	add	r0, sp, #124	; 0x7c
  402e6a:	2102      	movs	r1, #2
  402e6c:	463b      	mov	r3, r7
  402e6e:	9002      	str	r0, [sp, #8]
  402e70:	9501      	str	r5, [sp, #4]
  402e72:	9100      	str	r1, [sp, #0]
  402e74:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e76:	f000 fb73 	bl	403560 <_dtoa_r>
  402e7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e7c:	2b67      	cmp	r3, #103	; 0x67
  402e7e:	4606      	mov	r6, r0
  402e80:	f040 81e0 	bne.w	403244 <_svfprintf_r+0x1288>
  402e84:	f01b 0f01 	tst.w	fp, #1
  402e88:	f000 8246 	beq.w	403318 <_svfprintf_r+0x135c>
  402e8c:	1974      	adds	r4, r6, r5
  402e8e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402e90:	9808      	ldr	r0, [sp, #32]
  402e92:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402e94:	4639      	mov	r1, r7
  402e96:	f003 fab5 	bl	406404 <__aeabi_dcmpeq>
  402e9a:	2800      	cmp	r0, #0
  402e9c:	f040 8165 	bne.w	40316a <_svfprintf_r+0x11ae>
  402ea0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402ea2:	42a3      	cmp	r3, r4
  402ea4:	d206      	bcs.n	402eb4 <_svfprintf_r+0xef8>
  402ea6:	2130      	movs	r1, #48	; 0x30
  402ea8:	1c5a      	adds	r2, r3, #1
  402eaa:	9223      	str	r2, [sp, #140]	; 0x8c
  402eac:	7019      	strb	r1, [r3, #0]
  402eae:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402eb0:	429c      	cmp	r4, r3
  402eb2:	d8f9      	bhi.n	402ea8 <_svfprintf_r+0xeec>
  402eb4:	1b9b      	subs	r3, r3, r6
  402eb6:	9313      	str	r3, [sp, #76]	; 0x4c
  402eb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402eba:	2b47      	cmp	r3, #71	; 0x47
  402ebc:	f000 80e9 	beq.w	403092 <_svfprintf_r+0x10d6>
  402ec0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ec2:	2b65      	cmp	r3, #101	; 0x65
  402ec4:	f340 81cd 	ble.w	403262 <_svfprintf_r+0x12a6>
  402ec8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402eca:	2b66      	cmp	r3, #102	; 0x66
  402ecc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402ece:	9312      	str	r3, [sp, #72]	; 0x48
  402ed0:	f000 819e 	beq.w	403210 <_svfprintf_r+0x1254>
  402ed4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402ed6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402ed8:	4619      	mov	r1, r3
  402eda:	4291      	cmp	r1, r2
  402edc:	f300 818a 	bgt.w	4031f4 <_svfprintf_r+0x1238>
  402ee0:	f01b 0f01 	tst.w	fp, #1
  402ee4:	f040 8213 	bne.w	40330e <_svfprintf_r+0x1352>
  402ee8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402eec:	9308      	str	r3, [sp, #32]
  402eee:	2367      	movs	r3, #103	; 0x67
  402ef0:	920e      	str	r2, [sp, #56]	; 0x38
  402ef2:	9311      	str	r3, [sp, #68]	; 0x44
  402ef4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402ef6:	2b00      	cmp	r3, #0
  402ef8:	f040 80c4 	bne.w	403084 <_svfprintf_r+0x10c8>
  402efc:	930a      	str	r3, [sp, #40]	; 0x28
  402efe:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402f02:	f7ff b973 	b.w	4021ec <_svfprintf_r+0x230>
  402f06:	4635      	mov	r5, r6
  402f08:	460c      	mov	r4, r1
  402f0a:	4646      	mov	r6, r8
  402f0c:	4690      	mov	r8, r2
  402f0e:	3301      	adds	r3, #1
  402f10:	443c      	add	r4, r7
  402f12:	2b07      	cmp	r3, #7
  402f14:	9427      	str	r4, [sp, #156]	; 0x9c
  402f16:	9326      	str	r3, [sp, #152]	; 0x98
  402f18:	e888 00a0 	stmia.w	r8, {r5, r7}
  402f1c:	f73f aed1 	bgt.w	402cc2 <_svfprintf_r+0xd06>
  402f20:	f108 0808 	add.w	r8, r8, #8
  402f24:	e6d7      	b.n	402cd6 <_svfprintf_r+0xd1a>
  402f26:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402f28:	6813      	ldr	r3, [r2, #0]
  402f2a:	3204      	adds	r2, #4
  402f2c:	920f      	str	r2, [sp, #60]	; 0x3c
  402f2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402f30:	601a      	str	r2, [r3, #0]
  402f32:	f7ff b86a 	b.w	40200a <_svfprintf_r+0x4e>
  402f36:	aa25      	add	r2, sp, #148	; 0x94
  402f38:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f3a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f3c:	f002 f9ce 	bl	4052dc <__ssprint_r>
  402f40:	2800      	cmp	r0, #0
  402f42:	f47f a90d 	bne.w	402160 <_svfprintf_r+0x1a4>
  402f46:	46c8      	mov	r8, r9
  402f48:	e48d      	b.n	402866 <_svfprintf_r+0x8aa>
  402f4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f4c:	4a27      	ldr	r2, [pc, #156]	; (402fec <_svfprintf_r+0x1030>)
  402f4e:	f8c8 2000 	str.w	r2, [r8]
  402f52:	3301      	adds	r3, #1
  402f54:	3401      	adds	r4, #1
  402f56:	2201      	movs	r2, #1
  402f58:	2b07      	cmp	r3, #7
  402f5a:	9427      	str	r4, [sp, #156]	; 0x9c
  402f5c:	9326      	str	r3, [sp, #152]	; 0x98
  402f5e:	f8c8 2004 	str.w	r2, [r8, #4]
  402f62:	dc72      	bgt.n	40304a <_svfprintf_r+0x108e>
  402f64:	f108 0808 	add.w	r8, r8, #8
  402f68:	b929      	cbnz	r1, 402f76 <_svfprintf_r+0xfba>
  402f6a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f6c:	b91b      	cbnz	r3, 402f76 <_svfprintf_r+0xfba>
  402f6e:	9b07      	ldr	r3, [sp, #28]
  402f70:	07d8      	lsls	r0, r3, #31
  402f72:	f57f aa03 	bpl.w	40237c <_svfprintf_r+0x3c0>
  402f76:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f78:	9819      	ldr	r0, [sp, #100]	; 0x64
  402f7a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402f7c:	f8c8 2000 	str.w	r2, [r8]
  402f80:	3301      	adds	r3, #1
  402f82:	4602      	mov	r2, r0
  402f84:	4422      	add	r2, r4
  402f86:	2b07      	cmp	r3, #7
  402f88:	9227      	str	r2, [sp, #156]	; 0x9c
  402f8a:	f8c8 0004 	str.w	r0, [r8, #4]
  402f8e:	9326      	str	r3, [sp, #152]	; 0x98
  402f90:	f300 818d 	bgt.w	4032ae <_svfprintf_r+0x12f2>
  402f94:	f108 0808 	add.w	r8, r8, #8
  402f98:	2900      	cmp	r1, #0
  402f9a:	f2c0 8165 	blt.w	403268 <_svfprintf_r+0x12ac>
  402f9e:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402fa0:	f8c8 6000 	str.w	r6, [r8]
  402fa4:	3301      	adds	r3, #1
  402fa6:	188c      	adds	r4, r1, r2
  402fa8:	2b07      	cmp	r3, #7
  402faa:	9427      	str	r4, [sp, #156]	; 0x9c
  402fac:	9326      	str	r3, [sp, #152]	; 0x98
  402fae:	f8c8 1004 	str.w	r1, [r8, #4]
  402fb2:	f77f a9e1 	ble.w	402378 <_svfprintf_r+0x3bc>
  402fb6:	e52c      	b.n	402a12 <_svfprintf_r+0xa56>
  402fb8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402fba:	9909      	ldr	r1, [sp, #36]	; 0x24
  402fbc:	6813      	ldr	r3, [r2, #0]
  402fbe:	17cd      	asrs	r5, r1, #31
  402fc0:	4608      	mov	r0, r1
  402fc2:	3204      	adds	r2, #4
  402fc4:	4629      	mov	r1, r5
  402fc6:	920f      	str	r2, [sp, #60]	; 0x3c
  402fc8:	e9c3 0100 	strd	r0, r1, [r3]
  402fcc:	f7ff b81d 	b.w	40200a <_svfprintf_r+0x4e>
  402fd0:	aa25      	add	r2, sp, #148	; 0x94
  402fd2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402fd4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fd6:	f002 f981 	bl	4052dc <__ssprint_r>
  402fda:	2800      	cmp	r0, #0
  402fdc:	f47f a8c0 	bne.w	402160 <_svfprintf_r+0x1a4>
  402fe0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402fe2:	46c8      	mov	r8, r9
  402fe4:	e458      	b.n	402898 <_svfprintf_r+0x8dc>
  402fe6:	bf00      	nop
  402fe8:	0040753c 	.word	0x0040753c
  402fec:	00407528 	.word	0x00407528
  402ff0:	2140      	movs	r1, #64	; 0x40
  402ff2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ff4:	f001 fa0a 	bl	40440c <_malloc_r>
  402ff8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402ffa:	6010      	str	r0, [r2, #0]
  402ffc:	6110      	str	r0, [r2, #16]
  402ffe:	2800      	cmp	r0, #0
  403000:	f000 81f2 	beq.w	4033e8 <_svfprintf_r+0x142c>
  403004:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403006:	2340      	movs	r3, #64	; 0x40
  403008:	6153      	str	r3, [r2, #20]
  40300a:	f7fe bfee 	b.w	401fea <_svfprintf_r+0x2e>
  40300e:	a823      	add	r0, sp, #140	; 0x8c
  403010:	a920      	add	r1, sp, #128	; 0x80
  403012:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403014:	9004      	str	r0, [sp, #16]
  403016:	9103      	str	r1, [sp, #12]
  403018:	a81f      	add	r0, sp, #124	; 0x7c
  40301a:	2103      	movs	r1, #3
  40301c:	9002      	str	r0, [sp, #8]
  40301e:	9a08      	ldr	r2, [sp, #32]
  403020:	9401      	str	r4, [sp, #4]
  403022:	463b      	mov	r3, r7
  403024:	9100      	str	r1, [sp, #0]
  403026:	980c      	ldr	r0, [sp, #48]	; 0x30
  403028:	f000 fa9a 	bl	403560 <_dtoa_r>
  40302c:	4625      	mov	r5, r4
  40302e:	4606      	mov	r6, r0
  403030:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403032:	2b46      	cmp	r3, #70	; 0x46
  403034:	eb06 0405 	add.w	r4, r6, r5
  403038:	f47f af29 	bne.w	402e8e <_svfprintf_r+0xed2>
  40303c:	7833      	ldrb	r3, [r6, #0]
  40303e:	2b30      	cmp	r3, #48	; 0x30
  403040:	f000 8178 	beq.w	403334 <_svfprintf_r+0x1378>
  403044:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403046:	442c      	add	r4, r5
  403048:	e721      	b.n	402e8e <_svfprintf_r+0xed2>
  40304a:	aa25      	add	r2, sp, #148	; 0x94
  40304c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40304e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403050:	f002 f944 	bl	4052dc <__ssprint_r>
  403054:	2800      	cmp	r0, #0
  403056:	f47f a883 	bne.w	402160 <_svfprintf_r+0x1a4>
  40305a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40305c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40305e:	46c8      	mov	r8, r9
  403060:	e782      	b.n	402f68 <_svfprintf_r+0xfac>
  403062:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403064:	2b00      	cmp	r3, #0
  403066:	bf08      	it	eq
  403068:	2301      	moveq	r3, #1
  40306a:	930a      	str	r3, [sp, #40]	; 0x28
  40306c:	e6db      	b.n	402e26 <_svfprintf_r+0xe6a>
  40306e:	4630      	mov	r0, r6
  403070:	940a      	str	r4, [sp, #40]	; 0x28
  403072:	f002 f8c5 	bl	405200 <strlen>
  403076:	950f      	str	r5, [sp, #60]	; 0x3c
  403078:	900e      	str	r0, [sp, #56]	; 0x38
  40307a:	f8cd b01c 	str.w	fp, [sp, #28]
  40307e:	4603      	mov	r3, r0
  403080:	f7ff b9f9 	b.w	402476 <_svfprintf_r+0x4ba>
  403084:	272d      	movs	r7, #45	; 0x2d
  403086:	2300      	movs	r3, #0
  403088:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40308c:	930a      	str	r3, [sp, #40]	; 0x28
  40308e:	f7ff b8ae 	b.w	4021ee <_svfprintf_r+0x232>
  403092:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403094:	9312      	str	r3, [sp, #72]	; 0x48
  403096:	461a      	mov	r2, r3
  403098:	3303      	adds	r3, #3
  40309a:	db04      	blt.n	4030a6 <_svfprintf_r+0x10ea>
  40309c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40309e:	4619      	mov	r1, r3
  4030a0:	4291      	cmp	r1, r2
  4030a2:	f6bf af17 	bge.w	402ed4 <_svfprintf_r+0xf18>
  4030a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4030a8:	3b02      	subs	r3, #2
  4030aa:	9311      	str	r3, [sp, #68]	; 0x44
  4030ac:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  4030b0:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  4030b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4030b6:	3b01      	subs	r3, #1
  4030b8:	2b00      	cmp	r3, #0
  4030ba:	931f      	str	r3, [sp, #124]	; 0x7c
  4030bc:	bfbd      	ittte	lt
  4030be:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  4030c0:	f1c3 0301 	rsblt	r3, r3, #1
  4030c4:	222d      	movlt	r2, #45	; 0x2d
  4030c6:	222b      	movge	r2, #43	; 0x2b
  4030c8:	2b09      	cmp	r3, #9
  4030ca:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  4030ce:	f340 8116 	ble.w	4032fe <_svfprintf_r+0x1342>
  4030d2:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  4030d6:	4620      	mov	r0, r4
  4030d8:	4dab      	ldr	r5, [pc, #684]	; (403388 <_svfprintf_r+0x13cc>)
  4030da:	e000      	b.n	4030de <_svfprintf_r+0x1122>
  4030dc:	4610      	mov	r0, r2
  4030de:	fb85 1203 	smull	r1, r2, r5, r3
  4030e2:	17d9      	asrs	r1, r3, #31
  4030e4:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4030e8:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4030ec:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4030f0:	3230      	adds	r2, #48	; 0x30
  4030f2:	2909      	cmp	r1, #9
  4030f4:	f800 2c01 	strb.w	r2, [r0, #-1]
  4030f8:	460b      	mov	r3, r1
  4030fa:	f100 32ff 	add.w	r2, r0, #4294967295
  4030fe:	dced      	bgt.n	4030dc <_svfprintf_r+0x1120>
  403100:	3330      	adds	r3, #48	; 0x30
  403102:	3802      	subs	r0, #2
  403104:	b2d9      	uxtb	r1, r3
  403106:	4284      	cmp	r4, r0
  403108:	f802 1c01 	strb.w	r1, [r2, #-1]
  40310c:	f240 8165 	bls.w	4033da <_svfprintf_r+0x141e>
  403110:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403114:	4613      	mov	r3, r2
  403116:	e001      	b.n	40311c <_svfprintf_r+0x1160>
  403118:	f813 1b01 	ldrb.w	r1, [r3], #1
  40311c:	f800 1b01 	strb.w	r1, [r0], #1
  403120:	42a3      	cmp	r3, r4
  403122:	d1f9      	bne.n	403118 <_svfprintf_r+0x115c>
  403124:	3301      	adds	r3, #1
  403126:	1a9b      	subs	r3, r3, r2
  403128:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  40312c:	4413      	add	r3, r2
  40312e:	aa21      	add	r2, sp, #132	; 0x84
  403130:	1a9b      	subs	r3, r3, r2
  403132:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403134:	931b      	str	r3, [sp, #108]	; 0x6c
  403136:	2a01      	cmp	r2, #1
  403138:	4413      	add	r3, r2
  40313a:	930e      	str	r3, [sp, #56]	; 0x38
  40313c:	f340 8119 	ble.w	403372 <_svfprintf_r+0x13b6>
  403140:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403142:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403144:	4413      	add	r3, r2
  403146:	930e      	str	r3, [sp, #56]	; 0x38
  403148:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40314c:	9308      	str	r3, [sp, #32]
  40314e:	2300      	movs	r3, #0
  403150:	9312      	str	r3, [sp, #72]	; 0x48
  403152:	e6cf      	b.n	402ef4 <_svfprintf_r+0xf38>
  403154:	aa25      	add	r2, sp, #148	; 0x94
  403156:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403158:	980c      	ldr	r0, [sp, #48]	; 0x30
  40315a:	f002 f8bf 	bl	4052dc <__ssprint_r>
  40315e:	2800      	cmp	r0, #0
  403160:	f47e affe 	bne.w	402160 <_svfprintf_r+0x1a4>
  403164:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403166:	46c8      	mov	r8, r9
  403168:	e4d7      	b.n	402b1a <_svfprintf_r+0xb5e>
  40316a:	4623      	mov	r3, r4
  40316c:	e6a2      	b.n	402eb4 <_svfprintf_r+0xef8>
  40316e:	aa25      	add	r2, sp, #148	; 0x94
  403170:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403172:	980c      	ldr	r0, [sp, #48]	; 0x30
  403174:	f002 f8b2 	bl	4052dc <__ssprint_r>
  403178:	2800      	cmp	r0, #0
  40317a:	f47e aff1 	bne.w	402160 <_svfprintf_r+0x1a4>
  40317e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403180:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403182:	46c8      	mov	r8, r9
  403184:	e5ae      	b.n	402ce4 <_svfprintf_r+0xd28>
  403186:	aa25      	add	r2, sp, #148	; 0x94
  403188:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40318a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40318c:	f002 f8a6 	bl	4052dc <__ssprint_r>
  403190:	2800      	cmp	r0, #0
  403192:	f47e afe5 	bne.w	402160 <_svfprintf_r+0x1a4>
  403196:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403198:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40319a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40319c:	1a9a      	subs	r2, r3, r2
  40319e:	46c8      	mov	r8, r9
  4031a0:	e5b8      	b.n	402d14 <_svfprintf_r+0xd58>
  4031a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4031a4:	9612      	str	r6, [sp, #72]	; 0x48
  4031a6:	2b06      	cmp	r3, #6
  4031a8:	bf28      	it	cs
  4031aa:	2306      	movcs	r3, #6
  4031ac:	960a      	str	r6, [sp, #40]	; 0x28
  4031ae:	4637      	mov	r7, r6
  4031b0:	9308      	str	r3, [sp, #32]
  4031b2:	950f      	str	r5, [sp, #60]	; 0x3c
  4031b4:	f8cd b01c 	str.w	fp, [sp, #28]
  4031b8:	930e      	str	r3, [sp, #56]	; 0x38
  4031ba:	4e74      	ldr	r6, [pc, #464]	; (40338c <_svfprintf_r+0x13d0>)
  4031bc:	f7ff b816 	b.w	4021ec <_svfprintf_r+0x230>
  4031c0:	a823      	add	r0, sp, #140	; 0x8c
  4031c2:	a920      	add	r1, sp, #128	; 0x80
  4031c4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4031c6:	9004      	str	r0, [sp, #16]
  4031c8:	9103      	str	r1, [sp, #12]
  4031ca:	a81f      	add	r0, sp, #124	; 0x7c
  4031cc:	2103      	movs	r1, #3
  4031ce:	9002      	str	r0, [sp, #8]
  4031d0:	9a08      	ldr	r2, [sp, #32]
  4031d2:	9501      	str	r5, [sp, #4]
  4031d4:	463b      	mov	r3, r7
  4031d6:	9100      	str	r1, [sp, #0]
  4031d8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031da:	f000 f9c1 	bl	403560 <_dtoa_r>
  4031de:	4606      	mov	r6, r0
  4031e0:	1944      	adds	r4, r0, r5
  4031e2:	e72b      	b.n	40303c <_svfprintf_r+0x1080>
  4031e4:	2306      	movs	r3, #6
  4031e6:	930a      	str	r3, [sp, #40]	; 0x28
  4031e8:	e61d      	b.n	402e26 <_svfprintf_r+0xe6a>
  4031ea:	272d      	movs	r7, #45	; 0x2d
  4031ec:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4031f0:	f7ff bacd 	b.w	40278e <_svfprintf_r+0x7d2>
  4031f4:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4031f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4031f8:	4413      	add	r3, r2
  4031fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4031fc:	930e      	str	r3, [sp, #56]	; 0x38
  4031fe:	2a00      	cmp	r2, #0
  403200:	f340 80b0 	ble.w	403364 <_svfprintf_r+0x13a8>
  403204:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403208:	9308      	str	r3, [sp, #32]
  40320a:	2367      	movs	r3, #103	; 0x67
  40320c:	9311      	str	r3, [sp, #68]	; 0x44
  40320e:	e671      	b.n	402ef4 <_svfprintf_r+0xf38>
  403210:	2b00      	cmp	r3, #0
  403212:	f340 80c3 	ble.w	40339c <_svfprintf_r+0x13e0>
  403216:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403218:	2a00      	cmp	r2, #0
  40321a:	f040 8099 	bne.w	403350 <_svfprintf_r+0x1394>
  40321e:	f01b 0f01 	tst.w	fp, #1
  403222:	f040 8095 	bne.w	403350 <_svfprintf_r+0x1394>
  403226:	9308      	str	r3, [sp, #32]
  403228:	930e      	str	r3, [sp, #56]	; 0x38
  40322a:	e663      	b.n	402ef4 <_svfprintf_r+0xf38>
  40322c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40322e:	9308      	str	r3, [sp, #32]
  403230:	930e      	str	r3, [sp, #56]	; 0x38
  403232:	900a      	str	r0, [sp, #40]	; 0x28
  403234:	950f      	str	r5, [sp, #60]	; 0x3c
  403236:	f8cd b01c 	str.w	fp, [sp, #28]
  40323a:	9012      	str	r0, [sp, #72]	; 0x48
  40323c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403240:	f7fe bfd4 	b.w	4021ec <_svfprintf_r+0x230>
  403244:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403246:	2b47      	cmp	r3, #71	; 0x47
  403248:	f47f ae20 	bne.w	402e8c <_svfprintf_r+0xed0>
  40324c:	f01b 0f01 	tst.w	fp, #1
  403250:	f47f aeee 	bne.w	403030 <_svfprintf_r+0x1074>
  403254:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403256:	1b9b      	subs	r3, r3, r6
  403258:	9313      	str	r3, [sp, #76]	; 0x4c
  40325a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40325c:	2b47      	cmp	r3, #71	; 0x47
  40325e:	f43f af18 	beq.w	403092 <_svfprintf_r+0x10d6>
  403262:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403264:	9312      	str	r3, [sp, #72]	; 0x48
  403266:	e721      	b.n	4030ac <_svfprintf_r+0x10f0>
  403268:	424f      	negs	r7, r1
  40326a:	3110      	adds	r1, #16
  40326c:	4d48      	ldr	r5, [pc, #288]	; (403390 <_svfprintf_r+0x13d4>)
  40326e:	da2f      	bge.n	4032d0 <_svfprintf_r+0x1314>
  403270:	2410      	movs	r4, #16
  403272:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403276:	e004      	b.n	403282 <_svfprintf_r+0x12c6>
  403278:	f108 0808 	add.w	r8, r8, #8
  40327c:	3f10      	subs	r7, #16
  40327e:	2f10      	cmp	r7, #16
  403280:	dd26      	ble.n	4032d0 <_svfprintf_r+0x1314>
  403282:	3301      	adds	r3, #1
  403284:	3210      	adds	r2, #16
  403286:	2b07      	cmp	r3, #7
  403288:	9227      	str	r2, [sp, #156]	; 0x9c
  40328a:	9326      	str	r3, [sp, #152]	; 0x98
  40328c:	f8c8 5000 	str.w	r5, [r8]
  403290:	f8c8 4004 	str.w	r4, [r8, #4]
  403294:	ddf0      	ble.n	403278 <_svfprintf_r+0x12bc>
  403296:	aa25      	add	r2, sp, #148	; 0x94
  403298:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40329a:	4658      	mov	r0, fp
  40329c:	f002 f81e 	bl	4052dc <__ssprint_r>
  4032a0:	2800      	cmp	r0, #0
  4032a2:	f47e af5d 	bne.w	402160 <_svfprintf_r+0x1a4>
  4032a6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4032a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4032aa:	46c8      	mov	r8, r9
  4032ac:	e7e6      	b.n	40327c <_svfprintf_r+0x12c0>
  4032ae:	aa25      	add	r2, sp, #148	; 0x94
  4032b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032b2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032b4:	f002 f812 	bl	4052dc <__ssprint_r>
  4032b8:	2800      	cmp	r0, #0
  4032ba:	f47e af51 	bne.w	402160 <_svfprintf_r+0x1a4>
  4032be:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4032c0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4032c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4032c4:	46c8      	mov	r8, r9
  4032c6:	e667      	b.n	402f98 <_svfprintf_r+0xfdc>
  4032c8:	2000      	movs	r0, #0
  4032ca:	900a      	str	r0, [sp, #40]	; 0x28
  4032cc:	f7fe bed0 	b.w	402070 <_svfprintf_r+0xb4>
  4032d0:	3301      	adds	r3, #1
  4032d2:	443a      	add	r2, r7
  4032d4:	2b07      	cmp	r3, #7
  4032d6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4032da:	9227      	str	r2, [sp, #156]	; 0x9c
  4032dc:	9326      	str	r3, [sp, #152]	; 0x98
  4032de:	f108 0808 	add.w	r8, r8, #8
  4032e2:	f77f ae5c 	ble.w	402f9e <_svfprintf_r+0xfe2>
  4032e6:	aa25      	add	r2, sp, #148	; 0x94
  4032e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032ea:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032ec:	f001 fff6 	bl	4052dc <__ssprint_r>
  4032f0:	2800      	cmp	r0, #0
  4032f2:	f47e af35 	bne.w	402160 <_svfprintf_r+0x1a4>
  4032f6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4032f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4032fa:	46c8      	mov	r8, r9
  4032fc:	e64f      	b.n	402f9e <_svfprintf_r+0xfe2>
  4032fe:	3330      	adds	r3, #48	; 0x30
  403300:	2230      	movs	r2, #48	; 0x30
  403302:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  403306:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  40330a:	ab22      	add	r3, sp, #136	; 0x88
  40330c:	e70f      	b.n	40312e <_svfprintf_r+0x1172>
  40330e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403310:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403312:	4413      	add	r3, r2
  403314:	930e      	str	r3, [sp, #56]	; 0x38
  403316:	e775      	b.n	403204 <_svfprintf_r+0x1248>
  403318:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40331a:	e5cb      	b.n	402eb4 <_svfprintf_r+0xef8>
  40331c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40331e:	4e1d      	ldr	r6, [pc, #116]	; (403394 <_svfprintf_r+0x13d8>)
  403320:	2b00      	cmp	r3, #0
  403322:	bfb6      	itet	lt
  403324:	272d      	movlt	r7, #45	; 0x2d
  403326:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  40332a:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40332e:	4b1a      	ldr	r3, [pc, #104]	; (403398 <_svfprintf_r+0x13dc>)
  403330:	f7ff ba2f 	b.w	402792 <_svfprintf_r+0x7d6>
  403334:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403336:	9808      	ldr	r0, [sp, #32]
  403338:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40333a:	4639      	mov	r1, r7
  40333c:	f003 f862 	bl	406404 <__aeabi_dcmpeq>
  403340:	2800      	cmp	r0, #0
  403342:	f47f ae7f 	bne.w	403044 <_svfprintf_r+0x1088>
  403346:	f1c5 0501 	rsb	r5, r5, #1
  40334a:	951f      	str	r5, [sp, #124]	; 0x7c
  40334c:	442c      	add	r4, r5
  40334e:	e59e      	b.n	402e8e <_svfprintf_r+0xed2>
  403350:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403352:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403354:	4413      	add	r3, r2
  403356:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403358:	441a      	add	r2, r3
  40335a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40335e:	920e      	str	r2, [sp, #56]	; 0x38
  403360:	9308      	str	r3, [sp, #32]
  403362:	e5c7      	b.n	402ef4 <_svfprintf_r+0xf38>
  403364:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403366:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403368:	f1c3 0301 	rsb	r3, r3, #1
  40336c:	441a      	add	r2, r3
  40336e:	4613      	mov	r3, r2
  403370:	e7d0      	b.n	403314 <_svfprintf_r+0x1358>
  403372:	f01b 0301 	ands.w	r3, fp, #1
  403376:	9312      	str	r3, [sp, #72]	; 0x48
  403378:	f47f aee2 	bne.w	403140 <_svfprintf_r+0x1184>
  40337c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40337e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403382:	9308      	str	r3, [sp, #32]
  403384:	e5b6      	b.n	402ef4 <_svfprintf_r+0xf38>
  403386:	bf00      	nop
  403388:	66666667 	.word	0x66666667
  40338c:	00407520 	.word	0x00407520
  403390:	0040753c 	.word	0x0040753c
  403394:	004074f4 	.word	0x004074f4
  403398:	004074f0 	.word	0x004074f0
  40339c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40339e:	b913      	cbnz	r3, 4033a6 <_svfprintf_r+0x13ea>
  4033a0:	f01b 0f01 	tst.w	fp, #1
  4033a4:	d002      	beq.n	4033ac <_svfprintf_r+0x13f0>
  4033a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4033a8:	3301      	adds	r3, #1
  4033aa:	e7d4      	b.n	403356 <_svfprintf_r+0x139a>
  4033ac:	2301      	movs	r3, #1
  4033ae:	e73a      	b.n	403226 <_svfprintf_r+0x126a>
  4033b0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4033b2:	f89a 3001 	ldrb.w	r3, [sl, #1]
  4033b6:	6828      	ldr	r0, [r5, #0]
  4033b8:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  4033bc:	900a      	str	r0, [sp, #40]	; 0x28
  4033be:	4628      	mov	r0, r5
  4033c0:	3004      	adds	r0, #4
  4033c2:	46a2      	mov	sl, r4
  4033c4:	900f      	str	r0, [sp, #60]	; 0x3c
  4033c6:	f7fe be51 	b.w	40206c <_svfprintf_r+0xb0>
  4033ca:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4033ce:	f7ff b867 	b.w	4024a0 <_svfprintf_r+0x4e4>
  4033d2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4033d6:	f7ff ba15 	b.w	402804 <_svfprintf_r+0x848>
  4033da:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4033de:	e6a6      	b.n	40312e <_svfprintf_r+0x1172>
  4033e0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4033e4:	f7ff b8eb 	b.w	4025be <_svfprintf_r+0x602>
  4033e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4033ea:	230c      	movs	r3, #12
  4033ec:	6013      	str	r3, [r2, #0]
  4033ee:	f04f 33ff 	mov.w	r3, #4294967295
  4033f2:	9309      	str	r3, [sp, #36]	; 0x24
  4033f4:	f7fe bebd 	b.w	402172 <_svfprintf_r+0x1b6>
  4033f8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4033fc:	f7ff b99a 	b.w	402734 <_svfprintf_r+0x778>
  403400:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403404:	f7ff b976 	b.w	4026f4 <_svfprintf_r+0x738>
  403408:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40340c:	f7ff b959 	b.w	4026c2 <_svfprintf_r+0x706>
  403410:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403414:	f7ff b912 	b.w	40263c <_svfprintf_r+0x680>

00403418 <register_fini>:
  403418:	4b02      	ldr	r3, [pc, #8]	; (403424 <register_fini+0xc>)
  40341a:	b113      	cbz	r3, 403422 <register_fini+0xa>
  40341c:	4802      	ldr	r0, [pc, #8]	; (403428 <register_fini+0x10>)
  40341e:	f000 b805 	b.w	40342c <atexit>
  403422:	4770      	bx	lr
  403424:	00000000 	.word	0x00000000
  403428:	004043b5 	.word	0x004043b5

0040342c <atexit>:
  40342c:	2300      	movs	r3, #0
  40342e:	4601      	mov	r1, r0
  403430:	461a      	mov	r2, r3
  403432:	4618      	mov	r0, r3
  403434:	f001 bfd0 	b.w	4053d8 <__register_exitproc>

00403438 <quorem>:
  403438:	6902      	ldr	r2, [r0, #16]
  40343a:	690b      	ldr	r3, [r1, #16]
  40343c:	4293      	cmp	r3, r2
  40343e:	f300 808d 	bgt.w	40355c <quorem+0x124>
  403442:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403446:	f103 38ff 	add.w	r8, r3, #4294967295
  40344a:	f101 0714 	add.w	r7, r1, #20
  40344e:	f100 0b14 	add.w	fp, r0, #20
  403452:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403456:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40345a:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40345e:	b083      	sub	sp, #12
  403460:	3201      	adds	r2, #1
  403462:	fbb3 f9f2 	udiv	r9, r3, r2
  403466:	eb0b 0304 	add.w	r3, fp, r4
  40346a:	9400      	str	r4, [sp, #0]
  40346c:	eb07 0a04 	add.w	sl, r7, r4
  403470:	9301      	str	r3, [sp, #4]
  403472:	f1b9 0f00 	cmp.w	r9, #0
  403476:	d039      	beq.n	4034ec <quorem+0xb4>
  403478:	2500      	movs	r5, #0
  40347a:	462e      	mov	r6, r5
  40347c:	46bc      	mov	ip, r7
  40347e:	46de      	mov	lr, fp
  403480:	f85c 4b04 	ldr.w	r4, [ip], #4
  403484:	f8de 3000 	ldr.w	r3, [lr]
  403488:	b2a2      	uxth	r2, r4
  40348a:	fb09 5502 	mla	r5, r9, r2, r5
  40348e:	0c22      	lsrs	r2, r4, #16
  403490:	0c2c      	lsrs	r4, r5, #16
  403492:	fb09 4202 	mla	r2, r9, r2, r4
  403496:	b2ad      	uxth	r5, r5
  403498:	1b75      	subs	r5, r6, r5
  40349a:	b296      	uxth	r6, r2
  40349c:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  4034a0:	fa15 f383 	uxtah	r3, r5, r3
  4034a4:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4034a8:	b29b      	uxth	r3, r3
  4034aa:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4034ae:	45e2      	cmp	sl, ip
  4034b0:	ea4f 4512 	mov.w	r5, r2, lsr #16
  4034b4:	f84e 3b04 	str.w	r3, [lr], #4
  4034b8:	ea4f 4626 	mov.w	r6, r6, asr #16
  4034bc:	d2e0      	bcs.n	403480 <quorem+0x48>
  4034be:	9b00      	ldr	r3, [sp, #0]
  4034c0:	f85b 3003 	ldr.w	r3, [fp, r3]
  4034c4:	b993      	cbnz	r3, 4034ec <quorem+0xb4>
  4034c6:	9c01      	ldr	r4, [sp, #4]
  4034c8:	1f23      	subs	r3, r4, #4
  4034ca:	459b      	cmp	fp, r3
  4034cc:	d20c      	bcs.n	4034e8 <quorem+0xb0>
  4034ce:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4034d2:	b94b      	cbnz	r3, 4034e8 <quorem+0xb0>
  4034d4:	f1a4 0308 	sub.w	r3, r4, #8
  4034d8:	e002      	b.n	4034e0 <quorem+0xa8>
  4034da:	681a      	ldr	r2, [r3, #0]
  4034dc:	3b04      	subs	r3, #4
  4034de:	b91a      	cbnz	r2, 4034e8 <quorem+0xb0>
  4034e0:	459b      	cmp	fp, r3
  4034e2:	f108 38ff 	add.w	r8, r8, #4294967295
  4034e6:	d3f8      	bcc.n	4034da <quorem+0xa2>
  4034e8:	f8c0 8010 	str.w	r8, [r0, #16]
  4034ec:	4604      	mov	r4, r0
  4034ee:	f001 fd63 	bl	404fb8 <__mcmp>
  4034f2:	2800      	cmp	r0, #0
  4034f4:	db2e      	blt.n	403554 <quorem+0x11c>
  4034f6:	f109 0901 	add.w	r9, r9, #1
  4034fa:	465d      	mov	r5, fp
  4034fc:	2300      	movs	r3, #0
  4034fe:	f857 1b04 	ldr.w	r1, [r7], #4
  403502:	6828      	ldr	r0, [r5, #0]
  403504:	b28a      	uxth	r2, r1
  403506:	1a9a      	subs	r2, r3, r2
  403508:	0c0b      	lsrs	r3, r1, #16
  40350a:	fa12 f280 	uxtah	r2, r2, r0
  40350e:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403512:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403516:	b292      	uxth	r2, r2
  403518:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40351c:	45ba      	cmp	sl, r7
  40351e:	f845 2b04 	str.w	r2, [r5], #4
  403522:	ea4f 4323 	mov.w	r3, r3, asr #16
  403526:	d2ea      	bcs.n	4034fe <quorem+0xc6>
  403528:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40352c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403530:	b982      	cbnz	r2, 403554 <quorem+0x11c>
  403532:	1f1a      	subs	r2, r3, #4
  403534:	4593      	cmp	fp, r2
  403536:	d20b      	bcs.n	403550 <quorem+0x118>
  403538:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40353c:	b942      	cbnz	r2, 403550 <quorem+0x118>
  40353e:	3b08      	subs	r3, #8
  403540:	e002      	b.n	403548 <quorem+0x110>
  403542:	681a      	ldr	r2, [r3, #0]
  403544:	3b04      	subs	r3, #4
  403546:	b91a      	cbnz	r2, 403550 <quorem+0x118>
  403548:	459b      	cmp	fp, r3
  40354a:	f108 38ff 	add.w	r8, r8, #4294967295
  40354e:	d3f8      	bcc.n	403542 <quorem+0x10a>
  403550:	f8c4 8010 	str.w	r8, [r4, #16]
  403554:	4648      	mov	r0, r9
  403556:	b003      	add	sp, #12
  403558:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40355c:	2000      	movs	r0, #0
  40355e:	4770      	bx	lr

00403560 <_dtoa_r>:
  403560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403564:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403566:	b09b      	sub	sp, #108	; 0x6c
  403568:	4604      	mov	r4, r0
  40356a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40356c:	4692      	mov	sl, r2
  40356e:	469b      	mov	fp, r3
  403570:	b141      	cbz	r1, 403584 <_dtoa_r+0x24>
  403572:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403574:	604a      	str	r2, [r1, #4]
  403576:	2301      	movs	r3, #1
  403578:	4093      	lsls	r3, r2
  40357a:	608b      	str	r3, [r1, #8]
  40357c:	f001 fb44 	bl	404c08 <_Bfree>
  403580:	2300      	movs	r3, #0
  403582:	6423      	str	r3, [r4, #64]	; 0x40
  403584:	f1bb 0f00 	cmp.w	fp, #0
  403588:	465d      	mov	r5, fp
  40358a:	db35      	blt.n	4035f8 <_dtoa_r+0x98>
  40358c:	2300      	movs	r3, #0
  40358e:	6033      	str	r3, [r6, #0]
  403590:	4b9d      	ldr	r3, [pc, #628]	; (403808 <_dtoa_r+0x2a8>)
  403592:	43ab      	bics	r3, r5
  403594:	d015      	beq.n	4035c2 <_dtoa_r+0x62>
  403596:	4650      	mov	r0, sl
  403598:	4659      	mov	r1, fp
  40359a:	2200      	movs	r2, #0
  40359c:	2300      	movs	r3, #0
  40359e:	f002 ff31 	bl	406404 <__aeabi_dcmpeq>
  4035a2:	4680      	mov	r8, r0
  4035a4:	2800      	cmp	r0, #0
  4035a6:	d02d      	beq.n	403604 <_dtoa_r+0xa4>
  4035a8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4035aa:	2301      	movs	r3, #1
  4035ac:	6013      	str	r3, [r2, #0]
  4035ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4035b0:	2b00      	cmp	r3, #0
  4035b2:	f000 80bd 	beq.w	403730 <_dtoa_r+0x1d0>
  4035b6:	4895      	ldr	r0, [pc, #596]	; (40380c <_dtoa_r+0x2ac>)
  4035b8:	6018      	str	r0, [r3, #0]
  4035ba:	3801      	subs	r0, #1
  4035bc:	b01b      	add	sp, #108	; 0x6c
  4035be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4035c2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4035c4:	f242 730f 	movw	r3, #9999	; 0x270f
  4035c8:	6013      	str	r3, [r2, #0]
  4035ca:	f1ba 0f00 	cmp.w	sl, #0
  4035ce:	d10d      	bne.n	4035ec <_dtoa_r+0x8c>
  4035d0:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4035d4:	b955      	cbnz	r5, 4035ec <_dtoa_r+0x8c>
  4035d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4035d8:	488d      	ldr	r0, [pc, #564]	; (403810 <_dtoa_r+0x2b0>)
  4035da:	2b00      	cmp	r3, #0
  4035dc:	d0ee      	beq.n	4035bc <_dtoa_r+0x5c>
  4035de:	f100 0308 	add.w	r3, r0, #8
  4035e2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4035e4:	6013      	str	r3, [r2, #0]
  4035e6:	b01b      	add	sp, #108	; 0x6c
  4035e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4035ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4035ee:	4889      	ldr	r0, [pc, #548]	; (403814 <_dtoa_r+0x2b4>)
  4035f0:	2b00      	cmp	r3, #0
  4035f2:	d0e3      	beq.n	4035bc <_dtoa_r+0x5c>
  4035f4:	1cc3      	adds	r3, r0, #3
  4035f6:	e7f4      	b.n	4035e2 <_dtoa_r+0x82>
  4035f8:	2301      	movs	r3, #1
  4035fa:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4035fe:	6033      	str	r3, [r6, #0]
  403600:	46ab      	mov	fp, r5
  403602:	e7c5      	b.n	403590 <_dtoa_r+0x30>
  403604:	aa18      	add	r2, sp, #96	; 0x60
  403606:	ab19      	add	r3, sp, #100	; 0x64
  403608:	9201      	str	r2, [sp, #4]
  40360a:	9300      	str	r3, [sp, #0]
  40360c:	4652      	mov	r2, sl
  40360e:	465b      	mov	r3, fp
  403610:	4620      	mov	r0, r4
  403612:	f001 fd71 	bl	4050f8 <__d2b>
  403616:	0d2b      	lsrs	r3, r5, #20
  403618:	4681      	mov	r9, r0
  40361a:	d071      	beq.n	403700 <_dtoa_r+0x1a0>
  40361c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403620:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403624:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403626:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40362a:	4650      	mov	r0, sl
  40362c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403630:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403634:	2200      	movs	r2, #0
  403636:	4b78      	ldr	r3, [pc, #480]	; (403818 <_dtoa_r+0x2b8>)
  403638:	f002 fac8 	bl	405bcc <__aeabi_dsub>
  40363c:	a36c      	add	r3, pc, #432	; (adr r3, 4037f0 <_dtoa_r+0x290>)
  40363e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403642:	f002 fc77 	bl	405f34 <__aeabi_dmul>
  403646:	a36c      	add	r3, pc, #432	; (adr r3, 4037f8 <_dtoa_r+0x298>)
  403648:	e9d3 2300 	ldrd	r2, r3, [r3]
  40364c:	f002 fac0 	bl	405bd0 <__adddf3>
  403650:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403654:	4630      	mov	r0, r6
  403656:	f002 fc07 	bl	405e68 <__aeabi_i2d>
  40365a:	a369      	add	r3, pc, #420	; (adr r3, 403800 <_dtoa_r+0x2a0>)
  40365c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403660:	f002 fc68 	bl	405f34 <__aeabi_dmul>
  403664:	4602      	mov	r2, r0
  403666:	460b      	mov	r3, r1
  403668:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40366c:	f002 fab0 	bl	405bd0 <__adddf3>
  403670:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403674:	f002 ff0e 	bl	406494 <__aeabi_d2iz>
  403678:	2200      	movs	r2, #0
  40367a:	9002      	str	r0, [sp, #8]
  40367c:	2300      	movs	r3, #0
  40367e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403682:	f002 fec9 	bl	406418 <__aeabi_dcmplt>
  403686:	2800      	cmp	r0, #0
  403688:	f040 8173 	bne.w	403972 <_dtoa_r+0x412>
  40368c:	9d02      	ldr	r5, [sp, #8]
  40368e:	2d16      	cmp	r5, #22
  403690:	f200 815d 	bhi.w	40394e <_dtoa_r+0x3ee>
  403694:	4b61      	ldr	r3, [pc, #388]	; (40381c <_dtoa_r+0x2bc>)
  403696:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40369a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40369e:	4652      	mov	r2, sl
  4036a0:	465b      	mov	r3, fp
  4036a2:	f002 fed7 	bl	406454 <__aeabi_dcmpgt>
  4036a6:	2800      	cmp	r0, #0
  4036a8:	f000 81c5 	beq.w	403a36 <_dtoa_r+0x4d6>
  4036ac:	1e6b      	subs	r3, r5, #1
  4036ae:	9302      	str	r3, [sp, #8]
  4036b0:	2300      	movs	r3, #0
  4036b2:	930e      	str	r3, [sp, #56]	; 0x38
  4036b4:	1bbf      	subs	r7, r7, r6
  4036b6:	1e7b      	subs	r3, r7, #1
  4036b8:	9306      	str	r3, [sp, #24]
  4036ba:	f100 8154 	bmi.w	403966 <_dtoa_r+0x406>
  4036be:	2300      	movs	r3, #0
  4036c0:	9308      	str	r3, [sp, #32]
  4036c2:	9b02      	ldr	r3, [sp, #8]
  4036c4:	2b00      	cmp	r3, #0
  4036c6:	f2c0 8145 	blt.w	403954 <_dtoa_r+0x3f4>
  4036ca:	9a06      	ldr	r2, [sp, #24]
  4036cc:	930d      	str	r3, [sp, #52]	; 0x34
  4036ce:	4611      	mov	r1, r2
  4036d0:	4419      	add	r1, r3
  4036d2:	2300      	movs	r3, #0
  4036d4:	9106      	str	r1, [sp, #24]
  4036d6:	930c      	str	r3, [sp, #48]	; 0x30
  4036d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4036da:	2b09      	cmp	r3, #9
  4036dc:	d82a      	bhi.n	403734 <_dtoa_r+0x1d4>
  4036de:	2b05      	cmp	r3, #5
  4036e0:	f340 865b 	ble.w	40439a <_dtoa_r+0xe3a>
  4036e4:	3b04      	subs	r3, #4
  4036e6:	9324      	str	r3, [sp, #144]	; 0x90
  4036e8:	2500      	movs	r5, #0
  4036ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4036ec:	3b02      	subs	r3, #2
  4036ee:	2b03      	cmp	r3, #3
  4036f0:	f200 8642 	bhi.w	404378 <_dtoa_r+0xe18>
  4036f4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4036f8:	02c903d4 	.word	0x02c903d4
  4036fc:	046103df 	.word	0x046103df
  403700:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403702:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403704:	443e      	add	r6, r7
  403706:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40370a:	2b20      	cmp	r3, #32
  40370c:	f340 818e 	ble.w	403a2c <_dtoa_r+0x4cc>
  403710:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403714:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403718:	409d      	lsls	r5, r3
  40371a:	fa2a f000 	lsr.w	r0, sl, r0
  40371e:	4328      	orrs	r0, r5
  403720:	f002 fb92 	bl	405e48 <__aeabi_ui2d>
  403724:	2301      	movs	r3, #1
  403726:	3e01      	subs	r6, #1
  403728:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40372c:	9314      	str	r3, [sp, #80]	; 0x50
  40372e:	e781      	b.n	403634 <_dtoa_r+0xd4>
  403730:	483b      	ldr	r0, [pc, #236]	; (403820 <_dtoa_r+0x2c0>)
  403732:	e743      	b.n	4035bc <_dtoa_r+0x5c>
  403734:	2100      	movs	r1, #0
  403736:	6461      	str	r1, [r4, #68]	; 0x44
  403738:	4620      	mov	r0, r4
  40373a:	9125      	str	r1, [sp, #148]	; 0x94
  40373c:	f001 fa3e 	bl	404bbc <_Balloc>
  403740:	f04f 33ff 	mov.w	r3, #4294967295
  403744:	930a      	str	r3, [sp, #40]	; 0x28
  403746:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403748:	930f      	str	r3, [sp, #60]	; 0x3c
  40374a:	2301      	movs	r3, #1
  40374c:	9004      	str	r0, [sp, #16]
  40374e:	6420      	str	r0, [r4, #64]	; 0x40
  403750:	9224      	str	r2, [sp, #144]	; 0x90
  403752:	930b      	str	r3, [sp, #44]	; 0x2c
  403754:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403756:	2b00      	cmp	r3, #0
  403758:	f2c0 80d9 	blt.w	40390e <_dtoa_r+0x3ae>
  40375c:	9a02      	ldr	r2, [sp, #8]
  40375e:	2a0e      	cmp	r2, #14
  403760:	f300 80d5 	bgt.w	40390e <_dtoa_r+0x3ae>
  403764:	4b2d      	ldr	r3, [pc, #180]	; (40381c <_dtoa_r+0x2bc>)
  403766:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40376a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40376e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403772:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403774:	2b00      	cmp	r3, #0
  403776:	f2c0 83ba 	blt.w	403eee <_dtoa_r+0x98e>
  40377a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40377e:	4650      	mov	r0, sl
  403780:	462a      	mov	r2, r5
  403782:	4633      	mov	r3, r6
  403784:	4659      	mov	r1, fp
  403786:	f002 fcff 	bl	406188 <__aeabi_ddiv>
  40378a:	f002 fe83 	bl	406494 <__aeabi_d2iz>
  40378e:	4680      	mov	r8, r0
  403790:	f002 fb6a 	bl	405e68 <__aeabi_i2d>
  403794:	462a      	mov	r2, r5
  403796:	4633      	mov	r3, r6
  403798:	f002 fbcc 	bl	405f34 <__aeabi_dmul>
  40379c:	460b      	mov	r3, r1
  40379e:	4602      	mov	r2, r0
  4037a0:	4659      	mov	r1, fp
  4037a2:	4650      	mov	r0, sl
  4037a4:	f002 fa12 	bl	405bcc <__aeabi_dsub>
  4037a8:	9d04      	ldr	r5, [sp, #16]
  4037aa:	f108 0330 	add.w	r3, r8, #48	; 0x30
  4037ae:	702b      	strb	r3, [r5, #0]
  4037b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037b2:	2b01      	cmp	r3, #1
  4037b4:	4606      	mov	r6, r0
  4037b6:	460f      	mov	r7, r1
  4037b8:	f105 0501 	add.w	r5, r5, #1
  4037bc:	d068      	beq.n	403890 <_dtoa_r+0x330>
  4037be:	2200      	movs	r2, #0
  4037c0:	4b18      	ldr	r3, [pc, #96]	; (403824 <_dtoa_r+0x2c4>)
  4037c2:	f002 fbb7 	bl	405f34 <__aeabi_dmul>
  4037c6:	2200      	movs	r2, #0
  4037c8:	2300      	movs	r3, #0
  4037ca:	4606      	mov	r6, r0
  4037cc:	460f      	mov	r7, r1
  4037ce:	f002 fe19 	bl	406404 <__aeabi_dcmpeq>
  4037d2:	2800      	cmp	r0, #0
  4037d4:	f040 8088 	bne.w	4038e8 <_dtoa_r+0x388>
  4037d8:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  4037dc:	f04f 0a00 	mov.w	sl, #0
  4037e0:	f8df b040 	ldr.w	fp, [pc, #64]	; 403824 <_dtoa_r+0x2c4>
  4037e4:	940c      	str	r4, [sp, #48]	; 0x30
  4037e6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4037ea:	e028      	b.n	40383e <_dtoa_r+0x2de>
  4037ec:	f3af 8000 	nop.w
  4037f0:	636f4361 	.word	0x636f4361
  4037f4:	3fd287a7 	.word	0x3fd287a7
  4037f8:	8b60c8b3 	.word	0x8b60c8b3
  4037fc:	3fc68a28 	.word	0x3fc68a28
  403800:	509f79fb 	.word	0x509f79fb
  403804:	3fd34413 	.word	0x3fd34413
  403808:	7ff00000 	.word	0x7ff00000
  40380c:	00407529 	.word	0x00407529
  403810:	0040754c 	.word	0x0040754c
  403814:	00407558 	.word	0x00407558
  403818:	3ff80000 	.word	0x3ff80000
  40381c:	00407588 	.word	0x00407588
  403820:	00407528 	.word	0x00407528
  403824:	40240000 	.word	0x40240000
  403828:	f002 fb84 	bl	405f34 <__aeabi_dmul>
  40382c:	2200      	movs	r2, #0
  40382e:	2300      	movs	r3, #0
  403830:	4606      	mov	r6, r0
  403832:	460f      	mov	r7, r1
  403834:	f002 fde6 	bl	406404 <__aeabi_dcmpeq>
  403838:	2800      	cmp	r0, #0
  40383a:	f040 83c1 	bne.w	403fc0 <_dtoa_r+0xa60>
  40383e:	4642      	mov	r2, r8
  403840:	464b      	mov	r3, r9
  403842:	4630      	mov	r0, r6
  403844:	4639      	mov	r1, r7
  403846:	f002 fc9f 	bl	406188 <__aeabi_ddiv>
  40384a:	f002 fe23 	bl	406494 <__aeabi_d2iz>
  40384e:	4604      	mov	r4, r0
  403850:	f002 fb0a 	bl	405e68 <__aeabi_i2d>
  403854:	4642      	mov	r2, r8
  403856:	464b      	mov	r3, r9
  403858:	f002 fb6c 	bl	405f34 <__aeabi_dmul>
  40385c:	4602      	mov	r2, r0
  40385e:	460b      	mov	r3, r1
  403860:	4630      	mov	r0, r6
  403862:	4639      	mov	r1, r7
  403864:	f002 f9b2 	bl	405bcc <__aeabi_dsub>
  403868:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40386c:	9e04      	ldr	r6, [sp, #16]
  40386e:	f805 eb01 	strb.w	lr, [r5], #1
  403872:	eba5 0e06 	sub.w	lr, r5, r6
  403876:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403878:	45b6      	cmp	lr, r6
  40387a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40387e:	4652      	mov	r2, sl
  403880:	465b      	mov	r3, fp
  403882:	d1d1      	bne.n	403828 <_dtoa_r+0x2c8>
  403884:	46a0      	mov	r8, r4
  403886:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40388a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40388c:	4606      	mov	r6, r0
  40388e:	460f      	mov	r7, r1
  403890:	4632      	mov	r2, r6
  403892:	463b      	mov	r3, r7
  403894:	4630      	mov	r0, r6
  403896:	4639      	mov	r1, r7
  403898:	f002 f99a 	bl	405bd0 <__adddf3>
  40389c:	4606      	mov	r6, r0
  40389e:	460f      	mov	r7, r1
  4038a0:	4602      	mov	r2, r0
  4038a2:	460b      	mov	r3, r1
  4038a4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4038a8:	f002 fdb6 	bl	406418 <__aeabi_dcmplt>
  4038ac:	b948      	cbnz	r0, 4038c2 <_dtoa_r+0x362>
  4038ae:	4632      	mov	r2, r6
  4038b0:	463b      	mov	r3, r7
  4038b2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4038b6:	f002 fda5 	bl	406404 <__aeabi_dcmpeq>
  4038ba:	b1a8      	cbz	r0, 4038e8 <_dtoa_r+0x388>
  4038bc:	f018 0f01 	tst.w	r8, #1
  4038c0:	d012      	beq.n	4038e8 <_dtoa_r+0x388>
  4038c2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4038c6:	9a04      	ldr	r2, [sp, #16]
  4038c8:	1e6b      	subs	r3, r5, #1
  4038ca:	e004      	b.n	4038d6 <_dtoa_r+0x376>
  4038cc:	429a      	cmp	r2, r3
  4038ce:	f000 8401 	beq.w	4040d4 <_dtoa_r+0xb74>
  4038d2:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4038d6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4038da:	f103 0501 	add.w	r5, r3, #1
  4038de:	d0f5      	beq.n	4038cc <_dtoa_r+0x36c>
  4038e0:	f108 0801 	add.w	r8, r8, #1
  4038e4:	f883 8000 	strb.w	r8, [r3]
  4038e8:	4649      	mov	r1, r9
  4038ea:	4620      	mov	r0, r4
  4038ec:	f001 f98c 	bl	404c08 <_Bfree>
  4038f0:	2200      	movs	r2, #0
  4038f2:	9b02      	ldr	r3, [sp, #8]
  4038f4:	702a      	strb	r2, [r5, #0]
  4038f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4038f8:	3301      	adds	r3, #1
  4038fa:	6013      	str	r3, [r2, #0]
  4038fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4038fe:	2b00      	cmp	r3, #0
  403900:	f000 839e 	beq.w	404040 <_dtoa_r+0xae0>
  403904:	9804      	ldr	r0, [sp, #16]
  403906:	601d      	str	r5, [r3, #0]
  403908:	b01b      	add	sp, #108	; 0x6c
  40390a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40390e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403910:	2a00      	cmp	r2, #0
  403912:	d03e      	beq.n	403992 <_dtoa_r+0x432>
  403914:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403916:	2a01      	cmp	r2, #1
  403918:	f340 8311 	ble.w	403f3e <_dtoa_r+0x9de>
  40391c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40391e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403920:	1e5f      	subs	r7, r3, #1
  403922:	42ba      	cmp	r2, r7
  403924:	f2c0 838f 	blt.w	404046 <_dtoa_r+0xae6>
  403928:	1bd7      	subs	r7, r2, r7
  40392a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40392c:	2b00      	cmp	r3, #0
  40392e:	f2c0 848b 	blt.w	404248 <_dtoa_r+0xce8>
  403932:	9d08      	ldr	r5, [sp, #32]
  403934:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403936:	9a08      	ldr	r2, [sp, #32]
  403938:	441a      	add	r2, r3
  40393a:	9208      	str	r2, [sp, #32]
  40393c:	9a06      	ldr	r2, [sp, #24]
  40393e:	2101      	movs	r1, #1
  403940:	441a      	add	r2, r3
  403942:	4620      	mov	r0, r4
  403944:	9206      	str	r2, [sp, #24]
  403946:	f001 f9f9 	bl	404d3c <__i2b>
  40394a:	4606      	mov	r6, r0
  40394c:	e024      	b.n	403998 <_dtoa_r+0x438>
  40394e:	2301      	movs	r3, #1
  403950:	930e      	str	r3, [sp, #56]	; 0x38
  403952:	e6af      	b.n	4036b4 <_dtoa_r+0x154>
  403954:	9a08      	ldr	r2, [sp, #32]
  403956:	9b02      	ldr	r3, [sp, #8]
  403958:	1ad2      	subs	r2, r2, r3
  40395a:	425b      	negs	r3, r3
  40395c:	930c      	str	r3, [sp, #48]	; 0x30
  40395e:	2300      	movs	r3, #0
  403960:	9208      	str	r2, [sp, #32]
  403962:	930d      	str	r3, [sp, #52]	; 0x34
  403964:	e6b8      	b.n	4036d8 <_dtoa_r+0x178>
  403966:	f1c7 0301 	rsb	r3, r7, #1
  40396a:	9308      	str	r3, [sp, #32]
  40396c:	2300      	movs	r3, #0
  40396e:	9306      	str	r3, [sp, #24]
  403970:	e6a7      	b.n	4036c2 <_dtoa_r+0x162>
  403972:	9d02      	ldr	r5, [sp, #8]
  403974:	4628      	mov	r0, r5
  403976:	f002 fa77 	bl	405e68 <__aeabi_i2d>
  40397a:	4602      	mov	r2, r0
  40397c:	460b      	mov	r3, r1
  40397e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403982:	f002 fd3f 	bl	406404 <__aeabi_dcmpeq>
  403986:	2800      	cmp	r0, #0
  403988:	f47f ae80 	bne.w	40368c <_dtoa_r+0x12c>
  40398c:	1e6b      	subs	r3, r5, #1
  40398e:	9302      	str	r3, [sp, #8]
  403990:	e67c      	b.n	40368c <_dtoa_r+0x12c>
  403992:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403994:	9d08      	ldr	r5, [sp, #32]
  403996:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403998:	2d00      	cmp	r5, #0
  40399a:	dd0c      	ble.n	4039b6 <_dtoa_r+0x456>
  40399c:	9906      	ldr	r1, [sp, #24]
  40399e:	2900      	cmp	r1, #0
  4039a0:	460b      	mov	r3, r1
  4039a2:	dd08      	ble.n	4039b6 <_dtoa_r+0x456>
  4039a4:	42a9      	cmp	r1, r5
  4039a6:	9a08      	ldr	r2, [sp, #32]
  4039a8:	bfa8      	it	ge
  4039aa:	462b      	movge	r3, r5
  4039ac:	1ad2      	subs	r2, r2, r3
  4039ae:	1aed      	subs	r5, r5, r3
  4039b0:	1acb      	subs	r3, r1, r3
  4039b2:	9208      	str	r2, [sp, #32]
  4039b4:	9306      	str	r3, [sp, #24]
  4039b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4039b8:	b1d3      	cbz	r3, 4039f0 <_dtoa_r+0x490>
  4039ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4039bc:	2b00      	cmp	r3, #0
  4039be:	f000 82b7 	beq.w	403f30 <_dtoa_r+0x9d0>
  4039c2:	2f00      	cmp	r7, #0
  4039c4:	dd10      	ble.n	4039e8 <_dtoa_r+0x488>
  4039c6:	4631      	mov	r1, r6
  4039c8:	463a      	mov	r2, r7
  4039ca:	4620      	mov	r0, r4
  4039cc:	f001 fa52 	bl	404e74 <__pow5mult>
  4039d0:	464a      	mov	r2, r9
  4039d2:	4601      	mov	r1, r0
  4039d4:	4606      	mov	r6, r0
  4039d6:	4620      	mov	r0, r4
  4039d8:	f001 f9ba 	bl	404d50 <__multiply>
  4039dc:	4649      	mov	r1, r9
  4039de:	4680      	mov	r8, r0
  4039e0:	4620      	mov	r0, r4
  4039e2:	f001 f911 	bl	404c08 <_Bfree>
  4039e6:	46c1      	mov	r9, r8
  4039e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4039ea:	1bda      	subs	r2, r3, r7
  4039ec:	f040 82a1 	bne.w	403f32 <_dtoa_r+0x9d2>
  4039f0:	2101      	movs	r1, #1
  4039f2:	4620      	mov	r0, r4
  4039f4:	f001 f9a2 	bl	404d3c <__i2b>
  4039f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4039fa:	2b00      	cmp	r3, #0
  4039fc:	4680      	mov	r8, r0
  4039fe:	dd1c      	ble.n	403a3a <_dtoa_r+0x4da>
  403a00:	4601      	mov	r1, r0
  403a02:	461a      	mov	r2, r3
  403a04:	4620      	mov	r0, r4
  403a06:	f001 fa35 	bl	404e74 <__pow5mult>
  403a0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403a0c:	2b01      	cmp	r3, #1
  403a0e:	4680      	mov	r8, r0
  403a10:	f340 8254 	ble.w	403ebc <_dtoa_r+0x95c>
  403a14:	2300      	movs	r3, #0
  403a16:	930c      	str	r3, [sp, #48]	; 0x30
  403a18:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403a1c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403a20:	6918      	ldr	r0, [r3, #16]
  403a22:	f001 f93b 	bl	404c9c <__hi0bits>
  403a26:	f1c0 0020 	rsb	r0, r0, #32
  403a2a:	e010      	b.n	403a4e <_dtoa_r+0x4ee>
  403a2c:	f1c3 0520 	rsb	r5, r3, #32
  403a30:	fa0a f005 	lsl.w	r0, sl, r5
  403a34:	e674      	b.n	403720 <_dtoa_r+0x1c0>
  403a36:	900e      	str	r0, [sp, #56]	; 0x38
  403a38:	e63c      	b.n	4036b4 <_dtoa_r+0x154>
  403a3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403a3c:	2b01      	cmp	r3, #1
  403a3e:	f340 8287 	ble.w	403f50 <_dtoa_r+0x9f0>
  403a42:	2300      	movs	r3, #0
  403a44:	930c      	str	r3, [sp, #48]	; 0x30
  403a46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a48:	2001      	movs	r0, #1
  403a4a:	2b00      	cmp	r3, #0
  403a4c:	d1e4      	bne.n	403a18 <_dtoa_r+0x4b8>
  403a4e:	9a06      	ldr	r2, [sp, #24]
  403a50:	4410      	add	r0, r2
  403a52:	f010 001f 	ands.w	r0, r0, #31
  403a56:	f000 80a1 	beq.w	403b9c <_dtoa_r+0x63c>
  403a5a:	f1c0 0320 	rsb	r3, r0, #32
  403a5e:	2b04      	cmp	r3, #4
  403a60:	f340 849e 	ble.w	4043a0 <_dtoa_r+0xe40>
  403a64:	9b08      	ldr	r3, [sp, #32]
  403a66:	f1c0 001c 	rsb	r0, r0, #28
  403a6a:	4403      	add	r3, r0
  403a6c:	9308      	str	r3, [sp, #32]
  403a6e:	4613      	mov	r3, r2
  403a70:	4403      	add	r3, r0
  403a72:	4405      	add	r5, r0
  403a74:	9306      	str	r3, [sp, #24]
  403a76:	9b08      	ldr	r3, [sp, #32]
  403a78:	2b00      	cmp	r3, #0
  403a7a:	dd05      	ble.n	403a88 <_dtoa_r+0x528>
  403a7c:	4649      	mov	r1, r9
  403a7e:	461a      	mov	r2, r3
  403a80:	4620      	mov	r0, r4
  403a82:	f001 fa47 	bl	404f14 <__lshift>
  403a86:	4681      	mov	r9, r0
  403a88:	9b06      	ldr	r3, [sp, #24]
  403a8a:	2b00      	cmp	r3, #0
  403a8c:	dd05      	ble.n	403a9a <_dtoa_r+0x53a>
  403a8e:	4641      	mov	r1, r8
  403a90:	461a      	mov	r2, r3
  403a92:	4620      	mov	r0, r4
  403a94:	f001 fa3e 	bl	404f14 <__lshift>
  403a98:	4680      	mov	r8, r0
  403a9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403a9c:	2b00      	cmp	r3, #0
  403a9e:	f040 8086 	bne.w	403bae <_dtoa_r+0x64e>
  403aa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403aa4:	2b00      	cmp	r3, #0
  403aa6:	f340 8266 	ble.w	403f76 <_dtoa_r+0xa16>
  403aaa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403aac:	2b00      	cmp	r3, #0
  403aae:	f000 8098 	beq.w	403be2 <_dtoa_r+0x682>
  403ab2:	2d00      	cmp	r5, #0
  403ab4:	dd05      	ble.n	403ac2 <_dtoa_r+0x562>
  403ab6:	4631      	mov	r1, r6
  403ab8:	462a      	mov	r2, r5
  403aba:	4620      	mov	r0, r4
  403abc:	f001 fa2a 	bl	404f14 <__lshift>
  403ac0:	4606      	mov	r6, r0
  403ac2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ac4:	2b00      	cmp	r3, #0
  403ac6:	f040 8337 	bne.w	404138 <_dtoa_r+0xbd8>
  403aca:	9606      	str	r6, [sp, #24]
  403acc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ace:	9a04      	ldr	r2, [sp, #16]
  403ad0:	f8dd b018 	ldr.w	fp, [sp, #24]
  403ad4:	3b01      	subs	r3, #1
  403ad6:	18d3      	adds	r3, r2, r3
  403ad8:	930b      	str	r3, [sp, #44]	; 0x2c
  403ada:	f00a 0301 	and.w	r3, sl, #1
  403ade:	930c      	str	r3, [sp, #48]	; 0x30
  403ae0:	4617      	mov	r7, r2
  403ae2:	46c2      	mov	sl, r8
  403ae4:	4651      	mov	r1, sl
  403ae6:	4648      	mov	r0, r9
  403ae8:	f7ff fca6 	bl	403438 <quorem>
  403aec:	4631      	mov	r1, r6
  403aee:	4605      	mov	r5, r0
  403af0:	4648      	mov	r0, r9
  403af2:	f001 fa61 	bl	404fb8 <__mcmp>
  403af6:	465a      	mov	r2, fp
  403af8:	900a      	str	r0, [sp, #40]	; 0x28
  403afa:	4651      	mov	r1, sl
  403afc:	4620      	mov	r0, r4
  403afe:	f001 fa77 	bl	404ff0 <__mdiff>
  403b02:	68c2      	ldr	r2, [r0, #12]
  403b04:	4680      	mov	r8, r0
  403b06:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403b0a:	2a00      	cmp	r2, #0
  403b0c:	f040 822b 	bne.w	403f66 <_dtoa_r+0xa06>
  403b10:	4601      	mov	r1, r0
  403b12:	4648      	mov	r0, r9
  403b14:	9308      	str	r3, [sp, #32]
  403b16:	f001 fa4f 	bl	404fb8 <__mcmp>
  403b1a:	4641      	mov	r1, r8
  403b1c:	9006      	str	r0, [sp, #24]
  403b1e:	4620      	mov	r0, r4
  403b20:	f001 f872 	bl	404c08 <_Bfree>
  403b24:	9a06      	ldr	r2, [sp, #24]
  403b26:	9b08      	ldr	r3, [sp, #32]
  403b28:	b932      	cbnz	r2, 403b38 <_dtoa_r+0x5d8>
  403b2a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403b2c:	b921      	cbnz	r1, 403b38 <_dtoa_r+0x5d8>
  403b2e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403b30:	2a00      	cmp	r2, #0
  403b32:	f000 83ef 	beq.w	404314 <_dtoa_r+0xdb4>
  403b36:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403b38:	990a      	ldr	r1, [sp, #40]	; 0x28
  403b3a:	2900      	cmp	r1, #0
  403b3c:	f2c0 829f 	blt.w	40407e <_dtoa_r+0xb1e>
  403b40:	d105      	bne.n	403b4e <_dtoa_r+0x5ee>
  403b42:	9924      	ldr	r1, [sp, #144]	; 0x90
  403b44:	b919      	cbnz	r1, 403b4e <_dtoa_r+0x5ee>
  403b46:	990c      	ldr	r1, [sp, #48]	; 0x30
  403b48:	2900      	cmp	r1, #0
  403b4a:	f000 8298 	beq.w	40407e <_dtoa_r+0xb1e>
  403b4e:	2a00      	cmp	r2, #0
  403b50:	f300 8306 	bgt.w	404160 <_dtoa_r+0xc00>
  403b54:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403b56:	703b      	strb	r3, [r7, #0]
  403b58:	f107 0801 	add.w	r8, r7, #1
  403b5c:	4297      	cmp	r7, r2
  403b5e:	4645      	mov	r5, r8
  403b60:	f000 830c 	beq.w	40417c <_dtoa_r+0xc1c>
  403b64:	4649      	mov	r1, r9
  403b66:	2300      	movs	r3, #0
  403b68:	220a      	movs	r2, #10
  403b6a:	4620      	mov	r0, r4
  403b6c:	f001 f856 	bl	404c1c <__multadd>
  403b70:	455e      	cmp	r6, fp
  403b72:	4681      	mov	r9, r0
  403b74:	4631      	mov	r1, r6
  403b76:	f04f 0300 	mov.w	r3, #0
  403b7a:	f04f 020a 	mov.w	r2, #10
  403b7e:	4620      	mov	r0, r4
  403b80:	f000 81eb 	beq.w	403f5a <_dtoa_r+0x9fa>
  403b84:	f001 f84a 	bl	404c1c <__multadd>
  403b88:	4659      	mov	r1, fp
  403b8a:	4606      	mov	r6, r0
  403b8c:	2300      	movs	r3, #0
  403b8e:	220a      	movs	r2, #10
  403b90:	4620      	mov	r0, r4
  403b92:	f001 f843 	bl	404c1c <__multadd>
  403b96:	4647      	mov	r7, r8
  403b98:	4683      	mov	fp, r0
  403b9a:	e7a3      	b.n	403ae4 <_dtoa_r+0x584>
  403b9c:	201c      	movs	r0, #28
  403b9e:	9b08      	ldr	r3, [sp, #32]
  403ba0:	4403      	add	r3, r0
  403ba2:	9308      	str	r3, [sp, #32]
  403ba4:	9b06      	ldr	r3, [sp, #24]
  403ba6:	4403      	add	r3, r0
  403ba8:	4405      	add	r5, r0
  403baa:	9306      	str	r3, [sp, #24]
  403bac:	e763      	b.n	403a76 <_dtoa_r+0x516>
  403bae:	4641      	mov	r1, r8
  403bb0:	4648      	mov	r0, r9
  403bb2:	f001 fa01 	bl	404fb8 <__mcmp>
  403bb6:	2800      	cmp	r0, #0
  403bb8:	f6bf af73 	bge.w	403aa2 <_dtoa_r+0x542>
  403bbc:	9f02      	ldr	r7, [sp, #8]
  403bbe:	4649      	mov	r1, r9
  403bc0:	2300      	movs	r3, #0
  403bc2:	220a      	movs	r2, #10
  403bc4:	4620      	mov	r0, r4
  403bc6:	3f01      	subs	r7, #1
  403bc8:	9702      	str	r7, [sp, #8]
  403bca:	f001 f827 	bl	404c1c <__multadd>
  403bce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403bd0:	4681      	mov	r9, r0
  403bd2:	2b00      	cmp	r3, #0
  403bd4:	f040 83b6 	bne.w	404344 <_dtoa_r+0xde4>
  403bd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403bda:	2b00      	cmp	r3, #0
  403bdc:	f340 83bf 	ble.w	40435e <_dtoa_r+0xdfe>
  403be0:	930a      	str	r3, [sp, #40]	; 0x28
  403be2:	f8dd b010 	ldr.w	fp, [sp, #16]
  403be6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403be8:	465d      	mov	r5, fp
  403bea:	e002      	b.n	403bf2 <_dtoa_r+0x692>
  403bec:	f001 f816 	bl	404c1c <__multadd>
  403bf0:	4681      	mov	r9, r0
  403bf2:	4641      	mov	r1, r8
  403bf4:	4648      	mov	r0, r9
  403bf6:	f7ff fc1f 	bl	403438 <quorem>
  403bfa:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403bfe:	f805 ab01 	strb.w	sl, [r5], #1
  403c02:	eba5 030b 	sub.w	r3, r5, fp
  403c06:	42bb      	cmp	r3, r7
  403c08:	f04f 020a 	mov.w	r2, #10
  403c0c:	f04f 0300 	mov.w	r3, #0
  403c10:	4649      	mov	r1, r9
  403c12:	4620      	mov	r0, r4
  403c14:	dbea      	blt.n	403bec <_dtoa_r+0x68c>
  403c16:	9b04      	ldr	r3, [sp, #16]
  403c18:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403c1a:	2a01      	cmp	r2, #1
  403c1c:	bfac      	ite	ge
  403c1e:	189b      	addge	r3, r3, r2
  403c20:	3301      	addlt	r3, #1
  403c22:	461d      	mov	r5, r3
  403c24:	f04f 0b00 	mov.w	fp, #0
  403c28:	4649      	mov	r1, r9
  403c2a:	2201      	movs	r2, #1
  403c2c:	4620      	mov	r0, r4
  403c2e:	f001 f971 	bl	404f14 <__lshift>
  403c32:	4641      	mov	r1, r8
  403c34:	4681      	mov	r9, r0
  403c36:	f001 f9bf 	bl	404fb8 <__mcmp>
  403c3a:	2800      	cmp	r0, #0
  403c3c:	f340 823d 	ble.w	4040ba <_dtoa_r+0xb5a>
  403c40:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403c44:	9904      	ldr	r1, [sp, #16]
  403c46:	1e6b      	subs	r3, r5, #1
  403c48:	e004      	b.n	403c54 <_dtoa_r+0x6f4>
  403c4a:	428b      	cmp	r3, r1
  403c4c:	f000 81ae 	beq.w	403fac <_dtoa_r+0xa4c>
  403c50:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403c54:	2a39      	cmp	r2, #57	; 0x39
  403c56:	f103 0501 	add.w	r5, r3, #1
  403c5a:	d0f6      	beq.n	403c4a <_dtoa_r+0x6ea>
  403c5c:	3201      	adds	r2, #1
  403c5e:	701a      	strb	r2, [r3, #0]
  403c60:	4641      	mov	r1, r8
  403c62:	4620      	mov	r0, r4
  403c64:	f000 ffd0 	bl	404c08 <_Bfree>
  403c68:	2e00      	cmp	r6, #0
  403c6a:	f43f ae3d 	beq.w	4038e8 <_dtoa_r+0x388>
  403c6e:	f1bb 0f00 	cmp.w	fp, #0
  403c72:	d005      	beq.n	403c80 <_dtoa_r+0x720>
  403c74:	45b3      	cmp	fp, r6
  403c76:	d003      	beq.n	403c80 <_dtoa_r+0x720>
  403c78:	4659      	mov	r1, fp
  403c7a:	4620      	mov	r0, r4
  403c7c:	f000 ffc4 	bl	404c08 <_Bfree>
  403c80:	4631      	mov	r1, r6
  403c82:	4620      	mov	r0, r4
  403c84:	f000 ffc0 	bl	404c08 <_Bfree>
  403c88:	e62e      	b.n	4038e8 <_dtoa_r+0x388>
  403c8a:	2300      	movs	r3, #0
  403c8c:	930b      	str	r3, [sp, #44]	; 0x2c
  403c8e:	9b02      	ldr	r3, [sp, #8]
  403c90:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403c92:	4413      	add	r3, r2
  403c94:	930f      	str	r3, [sp, #60]	; 0x3c
  403c96:	3301      	adds	r3, #1
  403c98:	2b01      	cmp	r3, #1
  403c9a:	461f      	mov	r7, r3
  403c9c:	461e      	mov	r6, r3
  403c9e:	930a      	str	r3, [sp, #40]	; 0x28
  403ca0:	bfb8      	it	lt
  403ca2:	2701      	movlt	r7, #1
  403ca4:	2100      	movs	r1, #0
  403ca6:	2f17      	cmp	r7, #23
  403ca8:	6461      	str	r1, [r4, #68]	; 0x44
  403caa:	d90a      	bls.n	403cc2 <_dtoa_r+0x762>
  403cac:	2201      	movs	r2, #1
  403cae:	2304      	movs	r3, #4
  403cb0:	005b      	lsls	r3, r3, #1
  403cb2:	f103 0014 	add.w	r0, r3, #20
  403cb6:	4287      	cmp	r7, r0
  403cb8:	4611      	mov	r1, r2
  403cba:	f102 0201 	add.w	r2, r2, #1
  403cbe:	d2f7      	bcs.n	403cb0 <_dtoa_r+0x750>
  403cc0:	6461      	str	r1, [r4, #68]	; 0x44
  403cc2:	4620      	mov	r0, r4
  403cc4:	f000 ff7a 	bl	404bbc <_Balloc>
  403cc8:	2e0e      	cmp	r6, #14
  403cca:	9004      	str	r0, [sp, #16]
  403ccc:	6420      	str	r0, [r4, #64]	; 0x40
  403cce:	f63f ad41 	bhi.w	403754 <_dtoa_r+0x1f4>
  403cd2:	2d00      	cmp	r5, #0
  403cd4:	f43f ad3e 	beq.w	403754 <_dtoa_r+0x1f4>
  403cd8:	9902      	ldr	r1, [sp, #8]
  403cda:	2900      	cmp	r1, #0
  403cdc:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403ce0:	f340 8202 	ble.w	4040e8 <_dtoa_r+0xb88>
  403ce4:	4bb8      	ldr	r3, [pc, #736]	; (403fc8 <_dtoa_r+0xa68>)
  403ce6:	f001 020f 	and.w	r2, r1, #15
  403cea:	110d      	asrs	r5, r1, #4
  403cec:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403cf0:	06e9      	lsls	r1, r5, #27
  403cf2:	e9d3 6700 	ldrd	r6, r7, [r3]
  403cf6:	f140 81ae 	bpl.w	404056 <_dtoa_r+0xaf6>
  403cfa:	4bb4      	ldr	r3, [pc, #720]	; (403fcc <_dtoa_r+0xa6c>)
  403cfc:	4650      	mov	r0, sl
  403cfe:	4659      	mov	r1, fp
  403d00:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403d04:	f002 fa40 	bl	406188 <__aeabi_ddiv>
  403d08:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403d0c:	f005 050f 	and.w	r5, r5, #15
  403d10:	f04f 0a03 	mov.w	sl, #3
  403d14:	b18d      	cbz	r5, 403d3a <_dtoa_r+0x7da>
  403d16:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403fcc <_dtoa_r+0xa6c>
  403d1a:	07ea      	lsls	r2, r5, #31
  403d1c:	d509      	bpl.n	403d32 <_dtoa_r+0x7d2>
  403d1e:	4630      	mov	r0, r6
  403d20:	4639      	mov	r1, r7
  403d22:	e9d8 2300 	ldrd	r2, r3, [r8]
  403d26:	f002 f905 	bl	405f34 <__aeabi_dmul>
  403d2a:	f10a 0a01 	add.w	sl, sl, #1
  403d2e:	4606      	mov	r6, r0
  403d30:	460f      	mov	r7, r1
  403d32:	106d      	asrs	r5, r5, #1
  403d34:	f108 0808 	add.w	r8, r8, #8
  403d38:	d1ef      	bne.n	403d1a <_dtoa_r+0x7ba>
  403d3a:	463b      	mov	r3, r7
  403d3c:	4632      	mov	r2, r6
  403d3e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403d42:	f002 fa21 	bl	406188 <__aeabi_ddiv>
  403d46:	4607      	mov	r7, r0
  403d48:	4688      	mov	r8, r1
  403d4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403d4c:	b143      	cbz	r3, 403d60 <_dtoa_r+0x800>
  403d4e:	2200      	movs	r2, #0
  403d50:	4b9f      	ldr	r3, [pc, #636]	; (403fd0 <_dtoa_r+0xa70>)
  403d52:	4638      	mov	r0, r7
  403d54:	4641      	mov	r1, r8
  403d56:	f002 fb5f 	bl	406418 <__aeabi_dcmplt>
  403d5a:	2800      	cmp	r0, #0
  403d5c:	f040 8286 	bne.w	40426c <_dtoa_r+0xd0c>
  403d60:	4650      	mov	r0, sl
  403d62:	f002 f881 	bl	405e68 <__aeabi_i2d>
  403d66:	463a      	mov	r2, r7
  403d68:	4643      	mov	r3, r8
  403d6a:	f002 f8e3 	bl	405f34 <__aeabi_dmul>
  403d6e:	4b99      	ldr	r3, [pc, #612]	; (403fd4 <_dtoa_r+0xa74>)
  403d70:	2200      	movs	r2, #0
  403d72:	f001 ff2d 	bl	405bd0 <__adddf3>
  403d76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d78:	4605      	mov	r5, r0
  403d7a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403d7e:	2b00      	cmp	r3, #0
  403d80:	f000 813e 	beq.w	404000 <_dtoa_r+0xaa0>
  403d84:	9b02      	ldr	r3, [sp, #8]
  403d86:	9315      	str	r3, [sp, #84]	; 0x54
  403d88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d8a:	9312      	str	r3, [sp, #72]	; 0x48
  403d8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403d8e:	2b00      	cmp	r3, #0
  403d90:	f000 81fa 	beq.w	404188 <_dtoa_r+0xc28>
  403d94:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403d96:	4b8c      	ldr	r3, [pc, #560]	; (403fc8 <_dtoa_r+0xa68>)
  403d98:	498f      	ldr	r1, [pc, #572]	; (403fd8 <_dtoa_r+0xa78>)
  403d9a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403d9e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403da2:	2000      	movs	r0, #0
  403da4:	f002 f9f0 	bl	406188 <__aeabi_ddiv>
  403da8:	462a      	mov	r2, r5
  403daa:	4633      	mov	r3, r6
  403dac:	f001 ff0e 	bl	405bcc <__aeabi_dsub>
  403db0:	4682      	mov	sl, r0
  403db2:	468b      	mov	fp, r1
  403db4:	4638      	mov	r0, r7
  403db6:	4641      	mov	r1, r8
  403db8:	f002 fb6c 	bl	406494 <__aeabi_d2iz>
  403dbc:	4605      	mov	r5, r0
  403dbe:	f002 f853 	bl	405e68 <__aeabi_i2d>
  403dc2:	4602      	mov	r2, r0
  403dc4:	460b      	mov	r3, r1
  403dc6:	4638      	mov	r0, r7
  403dc8:	4641      	mov	r1, r8
  403dca:	f001 feff 	bl	405bcc <__aeabi_dsub>
  403dce:	3530      	adds	r5, #48	; 0x30
  403dd0:	fa5f f885 	uxtb.w	r8, r5
  403dd4:	9d04      	ldr	r5, [sp, #16]
  403dd6:	4606      	mov	r6, r0
  403dd8:	460f      	mov	r7, r1
  403dda:	f885 8000 	strb.w	r8, [r5]
  403dde:	4602      	mov	r2, r0
  403de0:	460b      	mov	r3, r1
  403de2:	4650      	mov	r0, sl
  403de4:	4659      	mov	r1, fp
  403de6:	3501      	adds	r5, #1
  403de8:	f002 fb34 	bl	406454 <__aeabi_dcmpgt>
  403dec:	2800      	cmp	r0, #0
  403dee:	d154      	bne.n	403e9a <_dtoa_r+0x93a>
  403df0:	4632      	mov	r2, r6
  403df2:	463b      	mov	r3, r7
  403df4:	2000      	movs	r0, #0
  403df6:	4976      	ldr	r1, [pc, #472]	; (403fd0 <_dtoa_r+0xa70>)
  403df8:	f001 fee8 	bl	405bcc <__aeabi_dsub>
  403dfc:	4602      	mov	r2, r0
  403dfe:	460b      	mov	r3, r1
  403e00:	4650      	mov	r0, sl
  403e02:	4659      	mov	r1, fp
  403e04:	f002 fb26 	bl	406454 <__aeabi_dcmpgt>
  403e08:	2800      	cmp	r0, #0
  403e0a:	f040 8270 	bne.w	4042ee <_dtoa_r+0xd8e>
  403e0e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403e10:	2a01      	cmp	r2, #1
  403e12:	f000 8111 	beq.w	404038 <_dtoa_r+0xad8>
  403e16:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403e18:	9a04      	ldr	r2, [sp, #16]
  403e1a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403e1e:	4413      	add	r3, r2
  403e20:	4699      	mov	r9, r3
  403e22:	e00d      	b.n	403e40 <_dtoa_r+0x8e0>
  403e24:	2000      	movs	r0, #0
  403e26:	496a      	ldr	r1, [pc, #424]	; (403fd0 <_dtoa_r+0xa70>)
  403e28:	f001 fed0 	bl	405bcc <__aeabi_dsub>
  403e2c:	4652      	mov	r2, sl
  403e2e:	465b      	mov	r3, fp
  403e30:	f002 faf2 	bl	406418 <__aeabi_dcmplt>
  403e34:	2800      	cmp	r0, #0
  403e36:	f040 8258 	bne.w	4042ea <_dtoa_r+0xd8a>
  403e3a:	454d      	cmp	r5, r9
  403e3c:	f000 80fa 	beq.w	404034 <_dtoa_r+0xad4>
  403e40:	4650      	mov	r0, sl
  403e42:	4659      	mov	r1, fp
  403e44:	2200      	movs	r2, #0
  403e46:	4b65      	ldr	r3, [pc, #404]	; (403fdc <_dtoa_r+0xa7c>)
  403e48:	f002 f874 	bl	405f34 <__aeabi_dmul>
  403e4c:	2200      	movs	r2, #0
  403e4e:	4b63      	ldr	r3, [pc, #396]	; (403fdc <_dtoa_r+0xa7c>)
  403e50:	4682      	mov	sl, r0
  403e52:	468b      	mov	fp, r1
  403e54:	4630      	mov	r0, r6
  403e56:	4639      	mov	r1, r7
  403e58:	f002 f86c 	bl	405f34 <__aeabi_dmul>
  403e5c:	460f      	mov	r7, r1
  403e5e:	4606      	mov	r6, r0
  403e60:	f002 fb18 	bl	406494 <__aeabi_d2iz>
  403e64:	4680      	mov	r8, r0
  403e66:	f001 ffff 	bl	405e68 <__aeabi_i2d>
  403e6a:	4602      	mov	r2, r0
  403e6c:	460b      	mov	r3, r1
  403e6e:	4630      	mov	r0, r6
  403e70:	4639      	mov	r1, r7
  403e72:	f001 feab 	bl	405bcc <__aeabi_dsub>
  403e76:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403e7a:	fa5f f888 	uxtb.w	r8, r8
  403e7e:	4652      	mov	r2, sl
  403e80:	465b      	mov	r3, fp
  403e82:	f805 8b01 	strb.w	r8, [r5], #1
  403e86:	4606      	mov	r6, r0
  403e88:	460f      	mov	r7, r1
  403e8a:	f002 fac5 	bl	406418 <__aeabi_dcmplt>
  403e8e:	4632      	mov	r2, r6
  403e90:	463b      	mov	r3, r7
  403e92:	2800      	cmp	r0, #0
  403e94:	d0c6      	beq.n	403e24 <_dtoa_r+0x8c4>
  403e96:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403e9a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403e9c:	9302      	str	r3, [sp, #8]
  403e9e:	e523      	b.n	4038e8 <_dtoa_r+0x388>
  403ea0:	2300      	movs	r3, #0
  403ea2:	930b      	str	r3, [sp, #44]	; 0x2c
  403ea4:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403ea6:	2b00      	cmp	r3, #0
  403ea8:	f340 80dc 	ble.w	404064 <_dtoa_r+0xb04>
  403eac:	461f      	mov	r7, r3
  403eae:	461e      	mov	r6, r3
  403eb0:	930f      	str	r3, [sp, #60]	; 0x3c
  403eb2:	930a      	str	r3, [sp, #40]	; 0x28
  403eb4:	e6f6      	b.n	403ca4 <_dtoa_r+0x744>
  403eb6:	2301      	movs	r3, #1
  403eb8:	930b      	str	r3, [sp, #44]	; 0x2c
  403eba:	e7f3      	b.n	403ea4 <_dtoa_r+0x944>
  403ebc:	f1ba 0f00 	cmp.w	sl, #0
  403ec0:	f47f ada8 	bne.w	403a14 <_dtoa_r+0x4b4>
  403ec4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403ec8:	2b00      	cmp	r3, #0
  403eca:	f47f adba 	bne.w	403a42 <_dtoa_r+0x4e2>
  403ece:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403ed2:	0d3f      	lsrs	r7, r7, #20
  403ed4:	053f      	lsls	r7, r7, #20
  403ed6:	2f00      	cmp	r7, #0
  403ed8:	f000 820d 	beq.w	4042f6 <_dtoa_r+0xd96>
  403edc:	9b08      	ldr	r3, [sp, #32]
  403ede:	3301      	adds	r3, #1
  403ee0:	9308      	str	r3, [sp, #32]
  403ee2:	9b06      	ldr	r3, [sp, #24]
  403ee4:	3301      	adds	r3, #1
  403ee6:	9306      	str	r3, [sp, #24]
  403ee8:	2301      	movs	r3, #1
  403eea:	930c      	str	r3, [sp, #48]	; 0x30
  403eec:	e5ab      	b.n	403a46 <_dtoa_r+0x4e6>
  403eee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ef0:	2b00      	cmp	r3, #0
  403ef2:	f73f ac42 	bgt.w	40377a <_dtoa_r+0x21a>
  403ef6:	f040 8221 	bne.w	40433c <_dtoa_r+0xddc>
  403efa:	2200      	movs	r2, #0
  403efc:	4b38      	ldr	r3, [pc, #224]	; (403fe0 <_dtoa_r+0xa80>)
  403efe:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403f02:	f002 f817 	bl	405f34 <__aeabi_dmul>
  403f06:	4652      	mov	r2, sl
  403f08:	465b      	mov	r3, fp
  403f0a:	f002 fa99 	bl	406440 <__aeabi_dcmpge>
  403f0e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403f12:	4646      	mov	r6, r8
  403f14:	2800      	cmp	r0, #0
  403f16:	d041      	beq.n	403f9c <_dtoa_r+0xa3c>
  403f18:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403f1a:	9d04      	ldr	r5, [sp, #16]
  403f1c:	43db      	mvns	r3, r3
  403f1e:	9302      	str	r3, [sp, #8]
  403f20:	4641      	mov	r1, r8
  403f22:	4620      	mov	r0, r4
  403f24:	f000 fe70 	bl	404c08 <_Bfree>
  403f28:	2e00      	cmp	r6, #0
  403f2a:	f43f acdd 	beq.w	4038e8 <_dtoa_r+0x388>
  403f2e:	e6a7      	b.n	403c80 <_dtoa_r+0x720>
  403f30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403f32:	4649      	mov	r1, r9
  403f34:	4620      	mov	r0, r4
  403f36:	f000 ff9d 	bl	404e74 <__pow5mult>
  403f3a:	4681      	mov	r9, r0
  403f3c:	e558      	b.n	4039f0 <_dtoa_r+0x490>
  403f3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403f40:	2a00      	cmp	r2, #0
  403f42:	f000 8187 	beq.w	404254 <_dtoa_r+0xcf4>
  403f46:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403f4a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403f4c:	9d08      	ldr	r5, [sp, #32]
  403f4e:	e4f2      	b.n	403936 <_dtoa_r+0x3d6>
  403f50:	f1ba 0f00 	cmp.w	sl, #0
  403f54:	f47f ad75 	bne.w	403a42 <_dtoa_r+0x4e2>
  403f58:	e7b4      	b.n	403ec4 <_dtoa_r+0x964>
  403f5a:	f000 fe5f 	bl	404c1c <__multadd>
  403f5e:	4647      	mov	r7, r8
  403f60:	4606      	mov	r6, r0
  403f62:	4683      	mov	fp, r0
  403f64:	e5be      	b.n	403ae4 <_dtoa_r+0x584>
  403f66:	4601      	mov	r1, r0
  403f68:	4620      	mov	r0, r4
  403f6a:	9306      	str	r3, [sp, #24]
  403f6c:	f000 fe4c 	bl	404c08 <_Bfree>
  403f70:	2201      	movs	r2, #1
  403f72:	9b06      	ldr	r3, [sp, #24]
  403f74:	e5e0      	b.n	403b38 <_dtoa_r+0x5d8>
  403f76:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403f78:	2b02      	cmp	r3, #2
  403f7a:	f77f ad96 	ble.w	403aaa <_dtoa_r+0x54a>
  403f7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f80:	2b00      	cmp	r3, #0
  403f82:	d1c9      	bne.n	403f18 <_dtoa_r+0x9b8>
  403f84:	4641      	mov	r1, r8
  403f86:	2205      	movs	r2, #5
  403f88:	4620      	mov	r0, r4
  403f8a:	f000 fe47 	bl	404c1c <__multadd>
  403f8e:	4601      	mov	r1, r0
  403f90:	4680      	mov	r8, r0
  403f92:	4648      	mov	r0, r9
  403f94:	f001 f810 	bl	404fb8 <__mcmp>
  403f98:	2800      	cmp	r0, #0
  403f9a:	ddbd      	ble.n	403f18 <_dtoa_r+0x9b8>
  403f9c:	9a02      	ldr	r2, [sp, #8]
  403f9e:	9904      	ldr	r1, [sp, #16]
  403fa0:	2331      	movs	r3, #49	; 0x31
  403fa2:	3201      	adds	r2, #1
  403fa4:	9202      	str	r2, [sp, #8]
  403fa6:	700b      	strb	r3, [r1, #0]
  403fa8:	1c4d      	adds	r5, r1, #1
  403faa:	e7b9      	b.n	403f20 <_dtoa_r+0x9c0>
  403fac:	9a02      	ldr	r2, [sp, #8]
  403fae:	3201      	adds	r2, #1
  403fb0:	9202      	str	r2, [sp, #8]
  403fb2:	9a04      	ldr	r2, [sp, #16]
  403fb4:	2331      	movs	r3, #49	; 0x31
  403fb6:	7013      	strb	r3, [r2, #0]
  403fb8:	e652      	b.n	403c60 <_dtoa_r+0x700>
  403fba:	2301      	movs	r3, #1
  403fbc:	930b      	str	r3, [sp, #44]	; 0x2c
  403fbe:	e666      	b.n	403c8e <_dtoa_r+0x72e>
  403fc0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403fc4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403fc6:	e48f      	b.n	4038e8 <_dtoa_r+0x388>
  403fc8:	00407588 	.word	0x00407588
  403fcc:	00407560 	.word	0x00407560
  403fd0:	3ff00000 	.word	0x3ff00000
  403fd4:	401c0000 	.word	0x401c0000
  403fd8:	3fe00000 	.word	0x3fe00000
  403fdc:	40240000 	.word	0x40240000
  403fe0:	40140000 	.word	0x40140000
  403fe4:	4650      	mov	r0, sl
  403fe6:	f001 ff3f 	bl	405e68 <__aeabi_i2d>
  403fea:	463a      	mov	r2, r7
  403fec:	4643      	mov	r3, r8
  403fee:	f001 ffa1 	bl	405f34 <__aeabi_dmul>
  403ff2:	2200      	movs	r2, #0
  403ff4:	4bc1      	ldr	r3, [pc, #772]	; (4042fc <_dtoa_r+0xd9c>)
  403ff6:	f001 fdeb 	bl	405bd0 <__adddf3>
  403ffa:	4605      	mov	r5, r0
  403ffc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404000:	4641      	mov	r1, r8
  404002:	2200      	movs	r2, #0
  404004:	4bbe      	ldr	r3, [pc, #760]	; (404300 <_dtoa_r+0xda0>)
  404006:	4638      	mov	r0, r7
  404008:	f001 fde0 	bl	405bcc <__aeabi_dsub>
  40400c:	462a      	mov	r2, r5
  40400e:	4633      	mov	r3, r6
  404010:	4682      	mov	sl, r0
  404012:	468b      	mov	fp, r1
  404014:	f002 fa1e 	bl	406454 <__aeabi_dcmpgt>
  404018:	4680      	mov	r8, r0
  40401a:	2800      	cmp	r0, #0
  40401c:	f040 8110 	bne.w	404240 <_dtoa_r+0xce0>
  404020:	462a      	mov	r2, r5
  404022:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  404026:	4650      	mov	r0, sl
  404028:	4659      	mov	r1, fp
  40402a:	f002 f9f5 	bl	406418 <__aeabi_dcmplt>
  40402e:	b118      	cbz	r0, 404038 <_dtoa_r+0xad8>
  404030:	4646      	mov	r6, r8
  404032:	e771      	b.n	403f18 <_dtoa_r+0x9b8>
  404034:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404038:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  40403c:	f7ff bb8a 	b.w	403754 <_dtoa_r+0x1f4>
  404040:	9804      	ldr	r0, [sp, #16]
  404042:	f7ff babb 	b.w	4035bc <_dtoa_r+0x5c>
  404046:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404048:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40404a:	970c      	str	r7, [sp, #48]	; 0x30
  40404c:	1afb      	subs	r3, r7, r3
  40404e:	441a      	add	r2, r3
  404050:	920d      	str	r2, [sp, #52]	; 0x34
  404052:	2700      	movs	r7, #0
  404054:	e469      	b.n	40392a <_dtoa_r+0x3ca>
  404056:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  40405a:	f04f 0a02 	mov.w	sl, #2
  40405e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  404062:	e657      	b.n	403d14 <_dtoa_r+0x7b4>
  404064:	2100      	movs	r1, #0
  404066:	2301      	movs	r3, #1
  404068:	6461      	str	r1, [r4, #68]	; 0x44
  40406a:	4620      	mov	r0, r4
  40406c:	9325      	str	r3, [sp, #148]	; 0x94
  40406e:	f000 fda5 	bl	404bbc <_Balloc>
  404072:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404074:	9004      	str	r0, [sp, #16]
  404076:	6420      	str	r0, [r4, #64]	; 0x40
  404078:	930a      	str	r3, [sp, #40]	; 0x28
  40407a:	930f      	str	r3, [sp, #60]	; 0x3c
  40407c:	e629      	b.n	403cd2 <_dtoa_r+0x772>
  40407e:	2a00      	cmp	r2, #0
  404080:	46d0      	mov	r8, sl
  404082:	f8cd b018 	str.w	fp, [sp, #24]
  404086:	469a      	mov	sl, r3
  404088:	dd11      	ble.n	4040ae <_dtoa_r+0xb4e>
  40408a:	4649      	mov	r1, r9
  40408c:	2201      	movs	r2, #1
  40408e:	4620      	mov	r0, r4
  404090:	f000 ff40 	bl	404f14 <__lshift>
  404094:	4641      	mov	r1, r8
  404096:	4681      	mov	r9, r0
  404098:	f000 ff8e 	bl	404fb8 <__mcmp>
  40409c:	2800      	cmp	r0, #0
  40409e:	f340 8146 	ble.w	40432e <_dtoa_r+0xdce>
  4040a2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  4040a6:	f000 8106 	beq.w	4042b6 <_dtoa_r+0xd56>
  4040aa:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  4040ae:	46b3      	mov	fp, r6
  4040b0:	f887 a000 	strb.w	sl, [r7]
  4040b4:	1c7d      	adds	r5, r7, #1
  4040b6:	9e06      	ldr	r6, [sp, #24]
  4040b8:	e5d2      	b.n	403c60 <_dtoa_r+0x700>
  4040ba:	d104      	bne.n	4040c6 <_dtoa_r+0xb66>
  4040bc:	f01a 0f01 	tst.w	sl, #1
  4040c0:	d001      	beq.n	4040c6 <_dtoa_r+0xb66>
  4040c2:	e5bd      	b.n	403c40 <_dtoa_r+0x6e0>
  4040c4:	4615      	mov	r5, r2
  4040c6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4040ca:	2b30      	cmp	r3, #48	; 0x30
  4040cc:	f105 32ff 	add.w	r2, r5, #4294967295
  4040d0:	d0f8      	beq.n	4040c4 <_dtoa_r+0xb64>
  4040d2:	e5c5      	b.n	403c60 <_dtoa_r+0x700>
  4040d4:	9904      	ldr	r1, [sp, #16]
  4040d6:	2230      	movs	r2, #48	; 0x30
  4040d8:	700a      	strb	r2, [r1, #0]
  4040da:	9a02      	ldr	r2, [sp, #8]
  4040dc:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4040e0:	3201      	adds	r2, #1
  4040e2:	9202      	str	r2, [sp, #8]
  4040e4:	f7ff bbfc 	b.w	4038e0 <_dtoa_r+0x380>
  4040e8:	f000 80bb 	beq.w	404262 <_dtoa_r+0xd02>
  4040ec:	9b02      	ldr	r3, [sp, #8]
  4040ee:	425d      	negs	r5, r3
  4040f0:	4b84      	ldr	r3, [pc, #528]	; (404304 <_dtoa_r+0xda4>)
  4040f2:	f005 020f 	and.w	r2, r5, #15
  4040f6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4040fa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4040fe:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404102:	f001 ff17 	bl	405f34 <__aeabi_dmul>
  404106:	112d      	asrs	r5, r5, #4
  404108:	4607      	mov	r7, r0
  40410a:	4688      	mov	r8, r1
  40410c:	f000 812c 	beq.w	404368 <_dtoa_r+0xe08>
  404110:	4e7d      	ldr	r6, [pc, #500]	; (404308 <_dtoa_r+0xda8>)
  404112:	f04f 0a02 	mov.w	sl, #2
  404116:	07eb      	lsls	r3, r5, #31
  404118:	d509      	bpl.n	40412e <_dtoa_r+0xbce>
  40411a:	4638      	mov	r0, r7
  40411c:	4641      	mov	r1, r8
  40411e:	e9d6 2300 	ldrd	r2, r3, [r6]
  404122:	f001 ff07 	bl	405f34 <__aeabi_dmul>
  404126:	f10a 0a01 	add.w	sl, sl, #1
  40412a:	4607      	mov	r7, r0
  40412c:	4688      	mov	r8, r1
  40412e:	106d      	asrs	r5, r5, #1
  404130:	f106 0608 	add.w	r6, r6, #8
  404134:	d1ef      	bne.n	404116 <_dtoa_r+0xbb6>
  404136:	e608      	b.n	403d4a <_dtoa_r+0x7ea>
  404138:	6871      	ldr	r1, [r6, #4]
  40413a:	4620      	mov	r0, r4
  40413c:	f000 fd3e 	bl	404bbc <_Balloc>
  404140:	6933      	ldr	r3, [r6, #16]
  404142:	3302      	adds	r3, #2
  404144:	009a      	lsls	r2, r3, #2
  404146:	4605      	mov	r5, r0
  404148:	f106 010c 	add.w	r1, r6, #12
  40414c:	300c      	adds	r0, #12
  40414e:	f000 fc8f 	bl	404a70 <memcpy>
  404152:	4629      	mov	r1, r5
  404154:	2201      	movs	r2, #1
  404156:	4620      	mov	r0, r4
  404158:	f000 fedc 	bl	404f14 <__lshift>
  40415c:	9006      	str	r0, [sp, #24]
  40415e:	e4b5      	b.n	403acc <_dtoa_r+0x56c>
  404160:	2b39      	cmp	r3, #57	; 0x39
  404162:	f8cd b018 	str.w	fp, [sp, #24]
  404166:	46d0      	mov	r8, sl
  404168:	f000 80a5 	beq.w	4042b6 <_dtoa_r+0xd56>
  40416c:	f103 0a01 	add.w	sl, r3, #1
  404170:	46b3      	mov	fp, r6
  404172:	f887 a000 	strb.w	sl, [r7]
  404176:	1c7d      	adds	r5, r7, #1
  404178:	9e06      	ldr	r6, [sp, #24]
  40417a:	e571      	b.n	403c60 <_dtoa_r+0x700>
  40417c:	465a      	mov	r2, fp
  40417e:	46d0      	mov	r8, sl
  404180:	46b3      	mov	fp, r6
  404182:	469a      	mov	sl, r3
  404184:	4616      	mov	r6, r2
  404186:	e54f      	b.n	403c28 <_dtoa_r+0x6c8>
  404188:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40418a:	495e      	ldr	r1, [pc, #376]	; (404304 <_dtoa_r+0xda4>)
  40418c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404190:	462a      	mov	r2, r5
  404192:	4633      	mov	r3, r6
  404194:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404198:	f001 fecc 	bl	405f34 <__aeabi_dmul>
  40419c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  4041a0:	4638      	mov	r0, r7
  4041a2:	4641      	mov	r1, r8
  4041a4:	f002 f976 	bl	406494 <__aeabi_d2iz>
  4041a8:	4605      	mov	r5, r0
  4041aa:	f001 fe5d 	bl	405e68 <__aeabi_i2d>
  4041ae:	460b      	mov	r3, r1
  4041b0:	4602      	mov	r2, r0
  4041b2:	4641      	mov	r1, r8
  4041b4:	4638      	mov	r0, r7
  4041b6:	f001 fd09 	bl	405bcc <__aeabi_dsub>
  4041ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041bc:	460f      	mov	r7, r1
  4041be:	9904      	ldr	r1, [sp, #16]
  4041c0:	3530      	adds	r5, #48	; 0x30
  4041c2:	2b01      	cmp	r3, #1
  4041c4:	700d      	strb	r5, [r1, #0]
  4041c6:	4606      	mov	r6, r0
  4041c8:	f101 0501 	add.w	r5, r1, #1
  4041cc:	d026      	beq.n	40421c <_dtoa_r+0xcbc>
  4041ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041d0:	9a04      	ldr	r2, [sp, #16]
  4041d2:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404310 <_dtoa_r+0xdb0>
  4041d6:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4041da:	4413      	add	r3, r2
  4041dc:	f04f 0a00 	mov.w	sl, #0
  4041e0:	4699      	mov	r9, r3
  4041e2:	4652      	mov	r2, sl
  4041e4:	465b      	mov	r3, fp
  4041e6:	4630      	mov	r0, r6
  4041e8:	4639      	mov	r1, r7
  4041ea:	f001 fea3 	bl	405f34 <__aeabi_dmul>
  4041ee:	460f      	mov	r7, r1
  4041f0:	4606      	mov	r6, r0
  4041f2:	f002 f94f 	bl	406494 <__aeabi_d2iz>
  4041f6:	4680      	mov	r8, r0
  4041f8:	f001 fe36 	bl	405e68 <__aeabi_i2d>
  4041fc:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404200:	4602      	mov	r2, r0
  404202:	460b      	mov	r3, r1
  404204:	4630      	mov	r0, r6
  404206:	4639      	mov	r1, r7
  404208:	f001 fce0 	bl	405bcc <__aeabi_dsub>
  40420c:	f805 8b01 	strb.w	r8, [r5], #1
  404210:	454d      	cmp	r5, r9
  404212:	4606      	mov	r6, r0
  404214:	460f      	mov	r7, r1
  404216:	d1e4      	bne.n	4041e2 <_dtoa_r+0xc82>
  404218:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40421c:	4b3b      	ldr	r3, [pc, #236]	; (40430c <_dtoa_r+0xdac>)
  40421e:	2200      	movs	r2, #0
  404220:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404224:	f001 fcd4 	bl	405bd0 <__adddf3>
  404228:	4632      	mov	r2, r6
  40422a:	463b      	mov	r3, r7
  40422c:	f002 f8f4 	bl	406418 <__aeabi_dcmplt>
  404230:	2800      	cmp	r0, #0
  404232:	d046      	beq.n	4042c2 <_dtoa_r+0xd62>
  404234:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404236:	9302      	str	r3, [sp, #8]
  404238:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40423c:	f7ff bb43 	b.w	4038c6 <_dtoa_r+0x366>
  404240:	f04f 0800 	mov.w	r8, #0
  404244:	4646      	mov	r6, r8
  404246:	e6a9      	b.n	403f9c <_dtoa_r+0xa3c>
  404248:	9b08      	ldr	r3, [sp, #32]
  40424a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40424c:	1a9d      	subs	r5, r3, r2
  40424e:	2300      	movs	r3, #0
  404250:	f7ff bb71 	b.w	403936 <_dtoa_r+0x3d6>
  404254:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404256:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404258:	9d08      	ldr	r5, [sp, #32]
  40425a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40425e:	f7ff bb6a 	b.w	403936 <_dtoa_r+0x3d6>
  404262:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404266:	f04f 0a02 	mov.w	sl, #2
  40426a:	e56e      	b.n	403d4a <_dtoa_r+0x7ea>
  40426c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40426e:	2b00      	cmp	r3, #0
  404270:	f43f aeb8 	beq.w	403fe4 <_dtoa_r+0xa84>
  404274:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404276:	2b00      	cmp	r3, #0
  404278:	f77f aede 	ble.w	404038 <_dtoa_r+0xad8>
  40427c:	2200      	movs	r2, #0
  40427e:	4b24      	ldr	r3, [pc, #144]	; (404310 <_dtoa_r+0xdb0>)
  404280:	4638      	mov	r0, r7
  404282:	4641      	mov	r1, r8
  404284:	f001 fe56 	bl	405f34 <__aeabi_dmul>
  404288:	4607      	mov	r7, r0
  40428a:	4688      	mov	r8, r1
  40428c:	f10a 0001 	add.w	r0, sl, #1
  404290:	f001 fdea 	bl	405e68 <__aeabi_i2d>
  404294:	463a      	mov	r2, r7
  404296:	4643      	mov	r3, r8
  404298:	f001 fe4c 	bl	405f34 <__aeabi_dmul>
  40429c:	2200      	movs	r2, #0
  40429e:	4b17      	ldr	r3, [pc, #92]	; (4042fc <_dtoa_r+0xd9c>)
  4042a0:	f001 fc96 	bl	405bd0 <__adddf3>
  4042a4:	9a02      	ldr	r2, [sp, #8]
  4042a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4042a8:	9312      	str	r3, [sp, #72]	; 0x48
  4042aa:	3a01      	subs	r2, #1
  4042ac:	4605      	mov	r5, r0
  4042ae:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4042b2:	9215      	str	r2, [sp, #84]	; 0x54
  4042b4:	e56a      	b.n	403d8c <_dtoa_r+0x82c>
  4042b6:	2239      	movs	r2, #57	; 0x39
  4042b8:	46b3      	mov	fp, r6
  4042ba:	703a      	strb	r2, [r7, #0]
  4042bc:	9e06      	ldr	r6, [sp, #24]
  4042be:	1c7d      	adds	r5, r7, #1
  4042c0:	e4c0      	b.n	403c44 <_dtoa_r+0x6e4>
  4042c2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4042c6:	2000      	movs	r0, #0
  4042c8:	4910      	ldr	r1, [pc, #64]	; (40430c <_dtoa_r+0xdac>)
  4042ca:	f001 fc7f 	bl	405bcc <__aeabi_dsub>
  4042ce:	4632      	mov	r2, r6
  4042d0:	463b      	mov	r3, r7
  4042d2:	f002 f8bf 	bl	406454 <__aeabi_dcmpgt>
  4042d6:	b908      	cbnz	r0, 4042dc <_dtoa_r+0xd7c>
  4042d8:	e6ae      	b.n	404038 <_dtoa_r+0xad8>
  4042da:	4615      	mov	r5, r2
  4042dc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4042e0:	2b30      	cmp	r3, #48	; 0x30
  4042e2:	f105 32ff 	add.w	r2, r5, #4294967295
  4042e6:	d0f8      	beq.n	4042da <_dtoa_r+0xd7a>
  4042e8:	e5d7      	b.n	403e9a <_dtoa_r+0x93a>
  4042ea:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4042ee:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4042f0:	9302      	str	r3, [sp, #8]
  4042f2:	f7ff bae8 	b.w	4038c6 <_dtoa_r+0x366>
  4042f6:	970c      	str	r7, [sp, #48]	; 0x30
  4042f8:	f7ff bba5 	b.w	403a46 <_dtoa_r+0x4e6>
  4042fc:	401c0000 	.word	0x401c0000
  404300:	40140000 	.word	0x40140000
  404304:	00407588 	.word	0x00407588
  404308:	00407560 	.word	0x00407560
  40430c:	3fe00000 	.word	0x3fe00000
  404310:	40240000 	.word	0x40240000
  404314:	2b39      	cmp	r3, #57	; 0x39
  404316:	f8cd b018 	str.w	fp, [sp, #24]
  40431a:	46d0      	mov	r8, sl
  40431c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404320:	469a      	mov	sl, r3
  404322:	d0c8      	beq.n	4042b6 <_dtoa_r+0xd56>
  404324:	f1bb 0f00 	cmp.w	fp, #0
  404328:	f73f aebf 	bgt.w	4040aa <_dtoa_r+0xb4a>
  40432c:	e6bf      	b.n	4040ae <_dtoa_r+0xb4e>
  40432e:	f47f aebe 	bne.w	4040ae <_dtoa_r+0xb4e>
  404332:	f01a 0f01 	tst.w	sl, #1
  404336:	f43f aeba 	beq.w	4040ae <_dtoa_r+0xb4e>
  40433a:	e6b2      	b.n	4040a2 <_dtoa_r+0xb42>
  40433c:	f04f 0800 	mov.w	r8, #0
  404340:	4646      	mov	r6, r8
  404342:	e5e9      	b.n	403f18 <_dtoa_r+0x9b8>
  404344:	4631      	mov	r1, r6
  404346:	2300      	movs	r3, #0
  404348:	220a      	movs	r2, #10
  40434a:	4620      	mov	r0, r4
  40434c:	f000 fc66 	bl	404c1c <__multadd>
  404350:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404352:	2b00      	cmp	r3, #0
  404354:	4606      	mov	r6, r0
  404356:	dd0a      	ble.n	40436e <_dtoa_r+0xe0e>
  404358:	930a      	str	r3, [sp, #40]	; 0x28
  40435a:	f7ff bbaa 	b.w	403ab2 <_dtoa_r+0x552>
  40435e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404360:	2b02      	cmp	r3, #2
  404362:	dc23      	bgt.n	4043ac <_dtoa_r+0xe4c>
  404364:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404366:	e43b      	b.n	403be0 <_dtoa_r+0x680>
  404368:	f04f 0a02 	mov.w	sl, #2
  40436c:	e4ed      	b.n	403d4a <_dtoa_r+0x7ea>
  40436e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404370:	2b02      	cmp	r3, #2
  404372:	dc1b      	bgt.n	4043ac <_dtoa_r+0xe4c>
  404374:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404376:	e7ef      	b.n	404358 <_dtoa_r+0xdf8>
  404378:	2500      	movs	r5, #0
  40437a:	6465      	str	r5, [r4, #68]	; 0x44
  40437c:	4629      	mov	r1, r5
  40437e:	4620      	mov	r0, r4
  404380:	f000 fc1c 	bl	404bbc <_Balloc>
  404384:	f04f 33ff 	mov.w	r3, #4294967295
  404388:	930a      	str	r3, [sp, #40]	; 0x28
  40438a:	930f      	str	r3, [sp, #60]	; 0x3c
  40438c:	2301      	movs	r3, #1
  40438e:	9004      	str	r0, [sp, #16]
  404390:	9525      	str	r5, [sp, #148]	; 0x94
  404392:	6420      	str	r0, [r4, #64]	; 0x40
  404394:	930b      	str	r3, [sp, #44]	; 0x2c
  404396:	f7ff b9dd 	b.w	403754 <_dtoa_r+0x1f4>
  40439a:	2501      	movs	r5, #1
  40439c:	f7ff b9a5 	b.w	4036ea <_dtoa_r+0x18a>
  4043a0:	f43f ab69 	beq.w	403a76 <_dtoa_r+0x516>
  4043a4:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4043a8:	f7ff bbf9 	b.w	403b9e <_dtoa_r+0x63e>
  4043ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4043ae:	930a      	str	r3, [sp, #40]	; 0x28
  4043b0:	e5e5      	b.n	403f7e <_dtoa_r+0xa1e>
  4043b2:	bf00      	nop

004043b4 <__libc_fini_array>:
  4043b4:	b538      	push	{r3, r4, r5, lr}
  4043b6:	4c0a      	ldr	r4, [pc, #40]	; (4043e0 <__libc_fini_array+0x2c>)
  4043b8:	4d0a      	ldr	r5, [pc, #40]	; (4043e4 <__libc_fini_array+0x30>)
  4043ba:	1b64      	subs	r4, r4, r5
  4043bc:	10a4      	asrs	r4, r4, #2
  4043be:	d00a      	beq.n	4043d6 <__libc_fini_array+0x22>
  4043c0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4043c4:	3b01      	subs	r3, #1
  4043c6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4043ca:	3c01      	subs	r4, #1
  4043cc:	f855 3904 	ldr.w	r3, [r5], #-4
  4043d0:	4798      	blx	r3
  4043d2:	2c00      	cmp	r4, #0
  4043d4:	d1f9      	bne.n	4043ca <__libc_fini_array+0x16>
  4043d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4043da:	f003 b9d3 	b.w	407784 <_fini>
  4043de:	bf00      	nop
  4043e0:	00407794 	.word	0x00407794
  4043e4:	00407790 	.word	0x00407790

004043e8 <_localeconv_r>:
  4043e8:	4a04      	ldr	r2, [pc, #16]	; (4043fc <_localeconv_r+0x14>)
  4043ea:	4b05      	ldr	r3, [pc, #20]	; (404400 <_localeconv_r+0x18>)
  4043ec:	6812      	ldr	r2, [r2, #0]
  4043ee:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4043f0:	2800      	cmp	r0, #0
  4043f2:	bf08      	it	eq
  4043f4:	4618      	moveq	r0, r3
  4043f6:	30f0      	adds	r0, #240	; 0xf0
  4043f8:	4770      	bx	lr
  4043fa:	bf00      	nop
  4043fc:	20000010 	.word	0x20000010
  404400:	20000854 	.word	0x20000854

00404404 <__retarget_lock_acquire_recursive>:
  404404:	4770      	bx	lr
  404406:	bf00      	nop

00404408 <__retarget_lock_release_recursive>:
  404408:	4770      	bx	lr
  40440a:	bf00      	nop

0040440c <_malloc_r>:
  40440c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404410:	f101 060b 	add.w	r6, r1, #11
  404414:	2e16      	cmp	r6, #22
  404416:	b083      	sub	sp, #12
  404418:	4605      	mov	r5, r0
  40441a:	f240 809e 	bls.w	40455a <_malloc_r+0x14e>
  40441e:	f036 0607 	bics.w	r6, r6, #7
  404422:	f100 80bd 	bmi.w	4045a0 <_malloc_r+0x194>
  404426:	42b1      	cmp	r1, r6
  404428:	f200 80ba 	bhi.w	4045a0 <_malloc_r+0x194>
  40442c:	f000 fbba 	bl	404ba4 <__malloc_lock>
  404430:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404434:	f0c0 8293 	bcc.w	40495e <_malloc_r+0x552>
  404438:	0a73      	lsrs	r3, r6, #9
  40443a:	f000 80b8 	beq.w	4045ae <_malloc_r+0x1a2>
  40443e:	2b04      	cmp	r3, #4
  404440:	f200 8179 	bhi.w	404736 <_malloc_r+0x32a>
  404444:	09b3      	lsrs	r3, r6, #6
  404446:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40444a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40444e:	00c3      	lsls	r3, r0, #3
  404450:	4fbf      	ldr	r7, [pc, #764]	; (404750 <_malloc_r+0x344>)
  404452:	443b      	add	r3, r7
  404454:	f1a3 0108 	sub.w	r1, r3, #8
  404458:	685c      	ldr	r4, [r3, #4]
  40445a:	42a1      	cmp	r1, r4
  40445c:	d106      	bne.n	40446c <_malloc_r+0x60>
  40445e:	e00c      	b.n	40447a <_malloc_r+0x6e>
  404460:	2a00      	cmp	r2, #0
  404462:	f280 80aa 	bge.w	4045ba <_malloc_r+0x1ae>
  404466:	68e4      	ldr	r4, [r4, #12]
  404468:	42a1      	cmp	r1, r4
  40446a:	d006      	beq.n	40447a <_malloc_r+0x6e>
  40446c:	6863      	ldr	r3, [r4, #4]
  40446e:	f023 0303 	bic.w	r3, r3, #3
  404472:	1b9a      	subs	r2, r3, r6
  404474:	2a0f      	cmp	r2, #15
  404476:	ddf3      	ble.n	404460 <_malloc_r+0x54>
  404478:	4670      	mov	r0, lr
  40447a:	693c      	ldr	r4, [r7, #16]
  40447c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404764 <_malloc_r+0x358>
  404480:	4574      	cmp	r4, lr
  404482:	f000 81ab 	beq.w	4047dc <_malloc_r+0x3d0>
  404486:	6863      	ldr	r3, [r4, #4]
  404488:	f023 0303 	bic.w	r3, r3, #3
  40448c:	1b9a      	subs	r2, r3, r6
  40448e:	2a0f      	cmp	r2, #15
  404490:	f300 8190 	bgt.w	4047b4 <_malloc_r+0x3a8>
  404494:	2a00      	cmp	r2, #0
  404496:	f8c7 e014 	str.w	lr, [r7, #20]
  40449a:	f8c7 e010 	str.w	lr, [r7, #16]
  40449e:	f280 809d 	bge.w	4045dc <_malloc_r+0x1d0>
  4044a2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4044a6:	f080 8161 	bcs.w	40476c <_malloc_r+0x360>
  4044aa:	08db      	lsrs	r3, r3, #3
  4044ac:	f103 0c01 	add.w	ip, r3, #1
  4044b0:	1099      	asrs	r1, r3, #2
  4044b2:	687a      	ldr	r2, [r7, #4]
  4044b4:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4044b8:	f8c4 8008 	str.w	r8, [r4, #8]
  4044bc:	2301      	movs	r3, #1
  4044be:	408b      	lsls	r3, r1
  4044c0:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4044c4:	4313      	orrs	r3, r2
  4044c6:	3908      	subs	r1, #8
  4044c8:	60e1      	str	r1, [r4, #12]
  4044ca:	607b      	str	r3, [r7, #4]
  4044cc:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4044d0:	f8c8 400c 	str.w	r4, [r8, #12]
  4044d4:	1082      	asrs	r2, r0, #2
  4044d6:	2401      	movs	r4, #1
  4044d8:	4094      	lsls	r4, r2
  4044da:	429c      	cmp	r4, r3
  4044dc:	f200 808b 	bhi.w	4045f6 <_malloc_r+0x1ea>
  4044e0:	421c      	tst	r4, r3
  4044e2:	d106      	bne.n	4044f2 <_malloc_r+0xe6>
  4044e4:	f020 0003 	bic.w	r0, r0, #3
  4044e8:	0064      	lsls	r4, r4, #1
  4044ea:	421c      	tst	r4, r3
  4044ec:	f100 0004 	add.w	r0, r0, #4
  4044f0:	d0fa      	beq.n	4044e8 <_malloc_r+0xdc>
  4044f2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4044f6:	46cc      	mov	ip, r9
  4044f8:	4680      	mov	r8, r0
  4044fa:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4044fe:	459c      	cmp	ip, r3
  404500:	d107      	bne.n	404512 <_malloc_r+0x106>
  404502:	e16d      	b.n	4047e0 <_malloc_r+0x3d4>
  404504:	2a00      	cmp	r2, #0
  404506:	f280 817b 	bge.w	404800 <_malloc_r+0x3f4>
  40450a:	68db      	ldr	r3, [r3, #12]
  40450c:	459c      	cmp	ip, r3
  40450e:	f000 8167 	beq.w	4047e0 <_malloc_r+0x3d4>
  404512:	6859      	ldr	r1, [r3, #4]
  404514:	f021 0103 	bic.w	r1, r1, #3
  404518:	1b8a      	subs	r2, r1, r6
  40451a:	2a0f      	cmp	r2, #15
  40451c:	ddf2      	ble.n	404504 <_malloc_r+0xf8>
  40451e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404522:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404526:	9300      	str	r3, [sp, #0]
  404528:	199c      	adds	r4, r3, r6
  40452a:	4628      	mov	r0, r5
  40452c:	f046 0601 	orr.w	r6, r6, #1
  404530:	f042 0501 	orr.w	r5, r2, #1
  404534:	605e      	str	r6, [r3, #4]
  404536:	f8c8 c00c 	str.w	ip, [r8, #12]
  40453a:	f8cc 8008 	str.w	r8, [ip, #8]
  40453e:	617c      	str	r4, [r7, #20]
  404540:	613c      	str	r4, [r7, #16]
  404542:	f8c4 e00c 	str.w	lr, [r4, #12]
  404546:	f8c4 e008 	str.w	lr, [r4, #8]
  40454a:	6065      	str	r5, [r4, #4]
  40454c:	505a      	str	r2, [r3, r1]
  40454e:	f000 fb2f 	bl	404bb0 <__malloc_unlock>
  404552:	9b00      	ldr	r3, [sp, #0]
  404554:	f103 0408 	add.w	r4, r3, #8
  404558:	e01e      	b.n	404598 <_malloc_r+0x18c>
  40455a:	2910      	cmp	r1, #16
  40455c:	d820      	bhi.n	4045a0 <_malloc_r+0x194>
  40455e:	f000 fb21 	bl	404ba4 <__malloc_lock>
  404562:	2610      	movs	r6, #16
  404564:	2318      	movs	r3, #24
  404566:	2002      	movs	r0, #2
  404568:	4f79      	ldr	r7, [pc, #484]	; (404750 <_malloc_r+0x344>)
  40456a:	443b      	add	r3, r7
  40456c:	f1a3 0208 	sub.w	r2, r3, #8
  404570:	685c      	ldr	r4, [r3, #4]
  404572:	4294      	cmp	r4, r2
  404574:	f000 813d 	beq.w	4047f2 <_malloc_r+0x3e6>
  404578:	6863      	ldr	r3, [r4, #4]
  40457a:	68e1      	ldr	r1, [r4, #12]
  40457c:	68a6      	ldr	r6, [r4, #8]
  40457e:	f023 0303 	bic.w	r3, r3, #3
  404582:	4423      	add	r3, r4
  404584:	4628      	mov	r0, r5
  404586:	685a      	ldr	r2, [r3, #4]
  404588:	60f1      	str	r1, [r6, #12]
  40458a:	f042 0201 	orr.w	r2, r2, #1
  40458e:	608e      	str	r6, [r1, #8]
  404590:	605a      	str	r2, [r3, #4]
  404592:	f000 fb0d 	bl	404bb0 <__malloc_unlock>
  404596:	3408      	adds	r4, #8
  404598:	4620      	mov	r0, r4
  40459a:	b003      	add	sp, #12
  40459c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045a0:	2400      	movs	r4, #0
  4045a2:	230c      	movs	r3, #12
  4045a4:	4620      	mov	r0, r4
  4045a6:	602b      	str	r3, [r5, #0]
  4045a8:	b003      	add	sp, #12
  4045aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045ae:	2040      	movs	r0, #64	; 0x40
  4045b0:	f44f 7300 	mov.w	r3, #512	; 0x200
  4045b4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4045b8:	e74a      	b.n	404450 <_malloc_r+0x44>
  4045ba:	4423      	add	r3, r4
  4045bc:	68e1      	ldr	r1, [r4, #12]
  4045be:	685a      	ldr	r2, [r3, #4]
  4045c0:	68a6      	ldr	r6, [r4, #8]
  4045c2:	f042 0201 	orr.w	r2, r2, #1
  4045c6:	60f1      	str	r1, [r6, #12]
  4045c8:	4628      	mov	r0, r5
  4045ca:	608e      	str	r6, [r1, #8]
  4045cc:	605a      	str	r2, [r3, #4]
  4045ce:	f000 faef 	bl	404bb0 <__malloc_unlock>
  4045d2:	3408      	adds	r4, #8
  4045d4:	4620      	mov	r0, r4
  4045d6:	b003      	add	sp, #12
  4045d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045dc:	4423      	add	r3, r4
  4045de:	4628      	mov	r0, r5
  4045e0:	685a      	ldr	r2, [r3, #4]
  4045e2:	f042 0201 	orr.w	r2, r2, #1
  4045e6:	605a      	str	r2, [r3, #4]
  4045e8:	f000 fae2 	bl	404bb0 <__malloc_unlock>
  4045ec:	3408      	adds	r4, #8
  4045ee:	4620      	mov	r0, r4
  4045f0:	b003      	add	sp, #12
  4045f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045f6:	68bc      	ldr	r4, [r7, #8]
  4045f8:	6863      	ldr	r3, [r4, #4]
  4045fa:	f023 0803 	bic.w	r8, r3, #3
  4045fe:	45b0      	cmp	r8, r6
  404600:	d304      	bcc.n	40460c <_malloc_r+0x200>
  404602:	eba8 0306 	sub.w	r3, r8, r6
  404606:	2b0f      	cmp	r3, #15
  404608:	f300 8085 	bgt.w	404716 <_malloc_r+0x30a>
  40460c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404768 <_malloc_r+0x35c>
  404610:	4b50      	ldr	r3, [pc, #320]	; (404754 <_malloc_r+0x348>)
  404612:	f8d9 2000 	ldr.w	r2, [r9]
  404616:	681b      	ldr	r3, [r3, #0]
  404618:	3201      	adds	r2, #1
  40461a:	4433      	add	r3, r6
  40461c:	eb04 0a08 	add.w	sl, r4, r8
  404620:	f000 8155 	beq.w	4048ce <_malloc_r+0x4c2>
  404624:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404628:	330f      	adds	r3, #15
  40462a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40462e:	f02b 0b0f 	bic.w	fp, fp, #15
  404632:	4659      	mov	r1, fp
  404634:	4628      	mov	r0, r5
  404636:	f000 fdbb 	bl	4051b0 <_sbrk_r>
  40463a:	1c41      	adds	r1, r0, #1
  40463c:	4602      	mov	r2, r0
  40463e:	f000 80fc 	beq.w	40483a <_malloc_r+0x42e>
  404642:	4582      	cmp	sl, r0
  404644:	f200 80f7 	bhi.w	404836 <_malloc_r+0x42a>
  404648:	4b43      	ldr	r3, [pc, #268]	; (404758 <_malloc_r+0x34c>)
  40464a:	6819      	ldr	r1, [r3, #0]
  40464c:	4459      	add	r1, fp
  40464e:	6019      	str	r1, [r3, #0]
  404650:	f000 814d 	beq.w	4048ee <_malloc_r+0x4e2>
  404654:	f8d9 0000 	ldr.w	r0, [r9]
  404658:	3001      	adds	r0, #1
  40465a:	bf1b      	ittet	ne
  40465c:	eba2 0a0a 	subne.w	sl, r2, sl
  404660:	4451      	addne	r1, sl
  404662:	f8c9 2000 	streq.w	r2, [r9]
  404666:	6019      	strne	r1, [r3, #0]
  404668:	f012 0107 	ands.w	r1, r2, #7
  40466c:	f000 8115 	beq.w	40489a <_malloc_r+0x48e>
  404670:	f1c1 0008 	rsb	r0, r1, #8
  404674:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404678:	4402      	add	r2, r0
  40467a:	3108      	adds	r1, #8
  40467c:	eb02 090b 	add.w	r9, r2, fp
  404680:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404684:	eba1 0909 	sub.w	r9, r1, r9
  404688:	4649      	mov	r1, r9
  40468a:	4628      	mov	r0, r5
  40468c:	9301      	str	r3, [sp, #4]
  40468e:	9200      	str	r2, [sp, #0]
  404690:	f000 fd8e 	bl	4051b0 <_sbrk_r>
  404694:	1c43      	adds	r3, r0, #1
  404696:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40469a:	f000 8143 	beq.w	404924 <_malloc_r+0x518>
  40469e:	1a80      	subs	r0, r0, r2
  4046a0:	4448      	add	r0, r9
  4046a2:	f040 0001 	orr.w	r0, r0, #1
  4046a6:	6819      	ldr	r1, [r3, #0]
  4046a8:	60ba      	str	r2, [r7, #8]
  4046aa:	4449      	add	r1, r9
  4046ac:	42bc      	cmp	r4, r7
  4046ae:	6050      	str	r0, [r2, #4]
  4046b0:	6019      	str	r1, [r3, #0]
  4046b2:	d017      	beq.n	4046e4 <_malloc_r+0x2d8>
  4046b4:	f1b8 0f0f 	cmp.w	r8, #15
  4046b8:	f240 80fb 	bls.w	4048b2 <_malloc_r+0x4a6>
  4046bc:	6860      	ldr	r0, [r4, #4]
  4046be:	f1a8 020c 	sub.w	r2, r8, #12
  4046c2:	f022 0207 	bic.w	r2, r2, #7
  4046c6:	eb04 0e02 	add.w	lr, r4, r2
  4046ca:	f000 0001 	and.w	r0, r0, #1
  4046ce:	f04f 0c05 	mov.w	ip, #5
  4046d2:	4310      	orrs	r0, r2
  4046d4:	2a0f      	cmp	r2, #15
  4046d6:	6060      	str	r0, [r4, #4]
  4046d8:	f8ce c004 	str.w	ip, [lr, #4]
  4046dc:	f8ce c008 	str.w	ip, [lr, #8]
  4046e0:	f200 8117 	bhi.w	404912 <_malloc_r+0x506>
  4046e4:	4b1d      	ldr	r3, [pc, #116]	; (40475c <_malloc_r+0x350>)
  4046e6:	68bc      	ldr	r4, [r7, #8]
  4046e8:	681a      	ldr	r2, [r3, #0]
  4046ea:	4291      	cmp	r1, r2
  4046ec:	bf88      	it	hi
  4046ee:	6019      	strhi	r1, [r3, #0]
  4046f0:	4b1b      	ldr	r3, [pc, #108]	; (404760 <_malloc_r+0x354>)
  4046f2:	681a      	ldr	r2, [r3, #0]
  4046f4:	4291      	cmp	r1, r2
  4046f6:	6862      	ldr	r2, [r4, #4]
  4046f8:	bf88      	it	hi
  4046fa:	6019      	strhi	r1, [r3, #0]
  4046fc:	f022 0203 	bic.w	r2, r2, #3
  404700:	4296      	cmp	r6, r2
  404702:	eba2 0306 	sub.w	r3, r2, r6
  404706:	d801      	bhi.n	40470c <_malloc_r+0x300>
  404708:	2b0f      	cmp	r3, #15
  40470a:	dc04      	bgt.n	404716 <_malloc_r+0x30a>
  40470c:	4628      	mov	r0, r5
  40470e:	f000 fa4f 	bl	404bb0 <__malloc_unlock>
  404712:	2400      	movs	r4, #0
  404714:	e740      	b.n	404598 <_malloc_r+0x18c>
  404716:	19a2      	adds	r2, r4, r6
  404718:	f043 0301 	orr.w	r3, r3, #1
  40471c:	f046 0601 	orr.w	r6, r6, #1
  404720:	6066      	str	r6, [r4, #4]
  404722:	4628      	mov	r0, r5
  404724:	60ba      	str	r2, [r7, #8]
  404726:	6053      	str	r3, [r2, #4]
  404728:	f000 fa42 	bl	404bb0 <__malloc_unlock>
  40472c:	3408      	adds	r4, #8
  40472e:	4620      	mov	r0, r4
  404730:	b003      	add	sp, #12
  404732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404736:	2b14      	cmp	r3, #20
  404738:	d971      	bls.n	40481e <_malloc_r+0x412>
  40473a:	2b54      	cmp	r3, #84	; 0x54
  40473c:	f200 80a3 	bhi.w	404886 <_malloc_r+0x47a>
  404740:	0b33      	lsrs	r3, r6, #12
  404742:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404746:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40474a:	00c3      	lsls	r3, r0, #3
  40474c:	e680      	b.n	404450 <_malloc_r+0x44>
  40474e:	bf00      	nop
  404750:	20000444 	.word	0x20000444
  404754:	20000aac 	.word	0x20000aac
  404758:	20000a7c 	.word	0x20000a7c
  40475c:	20000aa4 	.word	0x20000aa4
  404760:	20000aa8 	.word	0x20000aa8
  404764:	2000044c 	.word	0x2000044c
  404768:	2000084c 	.word	0x2000084c
  40476c:	0a5a      	lsrs	r2, r3, #9
  40476e:	2a04      	cmp	r2, #4
  404770:	d95b      	bls.n	40482a <_malloc_r+0x41e>
  404772:	2a14      	cmp	r2, #20
  404774:	f200 80ae 	bhi.w	4048d4 <_malloc_r+0x4c8>
  404778:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40477c:	00c9      	lsls	r1, r1, #3
  40477e:	325b      	adds	r2, #91	; 0x5b
  404780:	eb07 0c01 	add.w	ip, r7, r1
  404784:	5879      	ldr	r1, [r7, r1]
  404786:	f1ac 0c08 	sub.w	ip, ip, #8
  40478a:	458c      	cmp	ip, r1
  40478c:	f000 8088 	beq.w	4048a0 <_malloc_r+0x494>
  404790:	684a      	ldr	r2, [r1, #4]
  404792:	f022 0203 	bic.w	r2, r2, #3
  404796:	4293      	cmp	r3, r2
  404798:	d273      	bcs.n	404882 <_malloc_r+0x476>
  40479a:	6889      	ldr	r1, [r1, #8]
  40479c:	458c      	cmp	ip, r1
  40479e:	d1f7      	bne.n	404790 <_malloc_r+0x384>
  4047a0:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4047a4:	687b      	ldr	r3, [r7, #4]
  4047a6:	60e2      	str	r2, [r4, #12]
  4047a8:	f8c4 c008 	str.w	ip, [r4, #8]
  4047ac:	6094      	str	r4, [r2, #8]
  4047ae:	f8cc 400c 	str.w	r4, [ip, #12]
  4047b2:	e68f      	b.n	4044d4 <_malloc_r+0xc8>
  4047b4:	19a1      	adds	r1, r4, r6
  4047b6:	f046 0c01 	orr.w	ip, r6, #1
  4047ba:	f042 0601 	orr.w	r6, r2, #1
  4047be:	f8c4 c004 	str.w	ip, [r4, #4]
  4047c2:	4628      	mov	r0, r5
  4047c4:	6179      	str	r1, [r7, #20]
  4047c6:	6139      	str	r1, [r7, #16]
  4047c8:	f8c1 e00c 	str.w	lr, [r1, #12]
  4047cc:	f8c1 e008 	str.w	lr, [r1, #8]
  4047d0:	604e      	str	r6, [r1, #4]
  4047d2:	50e2      	str	r2, [r4, r3]
  4047d4:	f000 f9ec 	bl	404bb0 <__malloc_unlock>
  4047d8:	3408      	adds	r4, #8
  4047da:	e6dd      	b.n	404598 <_malloc_r+0x18c>
  4047dc:	687b      	ldr	r3, [r7, #4]
  4047de:	e679      	b.n	4044d4 <_malloc_r+0xc8>
  4047e0:	f108 0801 	add.w	r8, r8, #1
  4047e4:	f018 0f03 	tst.w	r8, #3
  4047e8:	f10c 0c08 	add.w	ip, ip, #8
  4047ec:	f47f ae85 	bne.w	4044fa <_malloc_r+0xee>
  4047f0:	e02d      	b.n	40484e <_malloc_r+0x442>
  4047f2:	68dc      	ldr	r4, [r3, #12]
  4047f4:	42a3      	cmp	r3, r4
  4047f6:	bf08      	it	eq
  4047f8:	3002      	addeq	r0, #2
  4047fa:	f43f ae3e 	beq.w	40447a <_malloc_r+0x6e>
  4047fe:	e6bb      	b.n	404578 <_malloc_r+0x16c>
  404800:	4419      	add	r1, r3
  404802:	461c      	mov	r4, r3
  404804:	684a      	ldr	r2, [r1, #4]
  404806:	68db      	ldr	r3, [r3, #12]
  404808:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40480c:	f042 0201 	orr.w	r2, r2, #1
  404810:	604a      	str	r2, [r1, #4]
  404812:	4628      	mov	r0, r5
  404814:	60f3      	str	r3, [r6, #12]
  404816:	609e      	str	r6, [r3, #8]
  404818:	f000 f9ca 	bl	404bb0 <__malloc_unlock>
  40481c:	e6bc      	b.n	404598 <_malloc_r+0x18c>
  40481e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404822:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404826:	00c3      	lsls	r3, r0, #3
  404828:	e612      	b.n	404450 <_malloc_r+0x44>
  40482a:	099a      	lsrs	r2, r3, #6
  40482c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404830:	00c9      	lsls	r1, r1, #3
  404832:	3238      	adds	r2, #56	; 0x38
  404834:	e7a4      	b.n	404780 <_malloc_r+0x374>
  404836:	42bc      	cmp	r4, r7
  404838:	d054      	beq.n	4048e4 <_malloc_r+0x4d8>
  40483a:	68bc      	ldr	r4, [r7, #8]
  40483c:	6862      	ldr	r2, [r4, #4]
  40483e:	f022 0203 	bic.w	r2, r2, #3
  404842:	e75d      	b.n	404700 <_malloc_r+0x2f4>
  404844:	f859 3908 	ldr.w	r3, [r9], #-8
  404848:	4599      	cmp	r9, r3
  40484a:	f040 8086 	bne.w	40495a <_malloc_r+0x54e>
  40484e:	f010 0f03 	tst.w	r0, #3
  404852:	f100 30ff 	add.w	r0, r0, #4294967295
  404856:	d1f5      	bne.n	404844 <_malloc_r+0x438>
  404858:	687b      	ldr	r3, [r7, #4]
  40485a:	ea23 0304 	bic.w	r3, r3, r4
  40485e:	607b      	str	r3, [r7, #4]
  404860:	0064      	lsls	r4, r4, #1
  404862:	429c      	cmp	r4, r3
  404864:	f63f aec7 	bhi.w	4045f6 <_malloc_r+0x1ea>
  404868:	2c00      	cmp	r4, #0
  40486a:	f43f aec4 	beq.w	4045f6 <_malloc_r+0x1ea>
  40486e:	421c      	tst	r4, r3
  404870:	4640      	mov	r0, r8
  404872:	f47f ae3e 	bne.w	4044f2 <_malloc_r+0xe6>
  404876:	0064      	lsls	r4, r4, #1
  404878:	421c      	tst	r4, r3
  40487a:	f100 0004 	add.w	r0, r0, #4
  40487e:	d0fa      	beq.n	404876 <_malloc_r+0x46a>
  404880:	e637      	b.n	4044f2 <_malloc_r+0xe6>
  404882:	468c      	mov	ip, r1
  404884:	e78c      	b.n	4047a0 <_malloc_r+0x394>
  404886:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40488a:	d815      	bhi.n	4048b8 <_malloc_r+0x4ac>
  40488c:	0bf3      	lsrs	r3, r6, #15
  40488e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404892:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404896:	00c3      	lsls	r3, r0, #3
  404898:	e5da      	b.n	404450 <_malloc_r+0x44>
  40489a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40489e:	e6ed      	b.n	40467c <_malloc_r+0x270>
  4048a0:	687b      	ldr	r3, [r7, #4]
  4048a2:	1092      	asrs	r2, r2, #2
  4048a4:	2101      	movs	r1, #1
  4048a6:	fa01 f202 	lsl.w	r2, r1, r2
  4048aa:	4313      	orrs	r3, r2
  4048ac:	607b      	str	r3, [r7, #4]
  4048ae:	4662      	mov	r2, ip
  4048b0:	e779      	b.n	4047a6 <_malloc_r+0x39a>
  4048b2:	2301      	movs	r3, #1
  4048b4:	6053      	str	r3, [r2, #4]
  4048b6:	e729      	b.n	40470c <_malloc_r+0x300>
  4048b8:	f240 5254 	movw	r2, #1364	; 0x554
  4048bc:	4293      	cmp	r3, r2
  4048be:	d822      	bhi.n	404906 <_malloc_r+0x4fa>
  4048c0:	0cb3      	lsrs	r3, r6, #18
  4048c2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4048c6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4048ca:	00c3      	lsls	r3, r0, #3
  4048cc:	e5c0      	b.n	404450 <_malloc_r+0x44>
  4048ce:	f103 0b10 	add.w	fp, r3, #16
  4048d2:	e6ae      	b.n	404632 <_malloc_r+0x226>
  4048d4:	2a54      	cmp	r2, #84	; 0x54
  4048d6:	d829      	bhi.n	40492c <_malloc_r+0x520>
  4048d8:	0b1a      	lsrs	r2, r3, #12
  4048da:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4048de:	00c9      	lsls	r1, r1, #3
  4048e0:	326e      	adds	r2, #110	; 0x6e
  4048e2:	e74d      	b.n	404780 <_malloc_r+0x374>
  4048e4:	4b20      	ldr	r3, [pc, #128]	; (404968 <_malloc_r+0x55c>)
  4048e6:	6819      	ldr	r1, [r3, #0]
  4048e8:	4459      	add	r1, fp
  4048ea:	6019      	str	r1, [r3, #0]
  4048ec:	e6b2      	b.n	404654 <_malloc_r+0x248>
  4048ee:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4048f2:	2800      	cmp	r0, #0
  4048f4:	f47f aeae 	bne.w	404654 <_malloc_r+0x248>
  4048f8:	eb08 030b 	add.w	r3, r8, fp
  4048fc:	68ba      	ldr	r2, [r7, #8]
  4048fe:	f043 0301 	orr.w	r3, r3, #1
  404902:	6053      	str	r3, [r2, #4]
  404904:	e6ee      	b.n	4046e4 <_malloc_r+0x2d8>
  404906:	207f      	movs	r0, #127	; 0x7f
  404908:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40490c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404910:	e59e      	b.n	404450 <_malloc_r+0x44>
  404912:	f104 0108 	add.w	r1, r4, #8
  404916:	4628      	mov	r0, r5
  404918:	9300      	str	r3, [sp, #0]
  40491a:	f000 fe3f 	bl	40559c <_free_r>
  40491e:	9b00      	ldr	r3, [sp, #0]
  404920:	6819      	ldr	r1, [r3, #0]
  404922:	e6df      	b.n	4046e4 <_malloc_r+0x2d8>
  404924:	2001      	movs	r0, #1
  404926:	f04f 0900 	mov.w	r9, #0
  40492a:	e6bc      	b.n	4046a6 <_malloc_r+0x29a>
  40492c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404930:	d805      	bhi.n	40493e <_malloc_r+0x532>
  404932:	0bda      	lsrs	r2, r3, #15
  404934:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404938:	00c9      	lsls	r1, r1, #3
  40493a:	3277      	adds	r2, #119	; 0x77
  40493c:	e720      	b.n	404780 <_malloc_r+0x374>
  40493e:	f240 5154 	movw	r1, #1364	; 0x554
  404942:	428a      	cmp	r2, r1
  404944:	d805      	bhi.n	404952 <_malloc_r+0x546>
  404946:	0c9a      	lsrs	r2, r3, #18
  404948:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40494c:	00c9      	lsls	r1, r1, #3
  40494e:	327c      	adds	r2, #124	; 0x7c
  404950:	e716      	b.n	404780 <_malloc_r+0x374>
  404952:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404956:	227e      	movs	r2, #126	; 0x7e
  404958:	e712      	b.n	404780 <_malloc_r+0x374>
  40495a:	687b      	ldr	r3, [r7, #4]
  40495c:	e780      	b.n	404860 <_malloc_r+0x454>
  40495e:	08f0      	lsrs	r0, r6, #3
  404960:	f106 0308 	add.w	r3, r6, #8
  404964:	e600      	b.n	404568 <_malloc_r+0x15c>
  404966:	bf00      	nop
  404968:	20000a7c 	.word	0x20000a7c
  40496c:	00000000 	.word	0x00000000

00404970 <memchr>:
  404970:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404974:	2a10      	cmp	r2, #16
  404976:	db2b      	blt.n	4049d0 <memchr+0x60>
  404978:	f010 0f07 	tst.w	r0, #7
  40497c:	d008      	beq.n	404990 <memchr+0x20>
  40497e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404982:	3a01      	subs	r2, #1
  404984:	428b      	cmp	r3, r1
  404986:	d02d      	beq.n	4049e4 <memchr+0x74>
  404988:	f010 0f07 	tst.w	r0, #7
  40498c:	b342      	cbz	r2, 4049e0 <memchr+0x70>
  40498e:	d1f6      	bne.n	40497e <memchr+0xe>
  404990:	b4f0      	push	{r4, r5, r6, r7}
  404992:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404996:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40499a:	f022 0407 	bic.w	r4, r2, #7
  40499e:	f07f 0700 	mvns.w	r7, #0
  4049a2:	2300      	movs	r3, #0
  4049a4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4049a8:	3c08      	subs	r4, #8
  4049aa:	ea85 0501 	eor.w	r5, r5, r1
  4049ae:	ea86 0601 	eor.w	r6, r6, r1
  4049b2:	fa85 f547 	uadd8	r5, r5, r7
  4049b6:	faa3 f587 	sel	r5, r3, r7
  4049ba:	fa86 f647 	uadd8	r6, r6, r7
  4049be:	faa5 f687 	sel	r6, r5, r7
  4049c2:	b98e      	cbnz	r6, 4049e8 <memchr+0x78>
  4049c4:	d1ee      	bne.n	4049a4 <memchr+0x34>
  4049c6:	bcf0      	pop	{r4, r5, r6, r7}
  4049c8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4049cc:	f002 0207 	and.w	r2, r2, #7
  4049d0:	b132      	cbz	r2, 4049e0 <memchr+0x70>
  4049d2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4049d6:	3a01      	subs	r2, #1
  4049d8:	ea83 0301 	eor.w	r3, r3, r1
  4049dc:	b113      	cbz	r3, 4049e4 <memchr+0x74>
  4049de:	d1f8      	bne.n	4049d2 <memchr+0x62>
  4049e0:	2000      	movs	r0, #0
  4049e2:	4770      	bx	lr
  4049e4:	3801      	subs	r0, #1
  4049e6:	4770      	bx	lr
  4049e8:	2d00      	cmp	r5, #0
  4049ea:	bf06      	itte	eq
  4049ec:	4635      	moveq	r5, r6
  4049ee:	3803      	subeq	r0, #3
  4049f0:	3807      	subne	r0, #7
  4049f2:	f015 0f01 	tst.w	r5, #1
  4049f6:	d107      	bne.n	404a08 <memchr+0x98>
  4049f8:	3001      	adds	r0, #1
  4049fa:	f415 7f80 	tst.w	r5, #256	; 0x100
  4049fe:	bf02      	ittt	eq
  404a00:	3001      	addeq	r0, #1
  404a02:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404a06:	3001      	addeq	r0, #1
  404a08:	bcf0      	pop	{r4, r5, r6, r7}
  404a0a:	3801      	subs	r0, #1
  404a0c:	4770      	bx	lr
  404a0e:	bf00      	nop

00404a10 <memcmp>:
  404a10:	2a03      	cmp	r2, #3
  404a12:	b470      	push	{r4, r5, r6}
  404a14:	d922      	bls.n	404a5c <memcmp+0x4c>
  404a16:	ea40 0301 	orr.w	r3, r0, r1
  404a1a:	079b      	lsls	r3, r3, #30
  404a1c:	d011      	beq.n	404a42 <memcmp+0x32>
  404a1e:	7803      	ldrb	r3, [r0, #0]
  404a20:	780c      	ldrb	r4, [r1, #0]
  404a22:	42a3      	cmp	r3, r4
  404a24:	d11d      	bne.n	404a62 <memcmp+0x52>
  404a26:	440a      	add	r2, r1
  404a28:	3101      	adds	r1, #1
  404a2a:	e005      	b.n	404a38 <memcmp+0x28>
  404a2c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  404a30:	f811 4b01 	ldrb.w	r4, [r1], #1
  404a34:	42a3      	cmp	r3, r4
  404a36:	d114      	bne.n	404a62 <memcmp+0x52>
  404a38:	4291      	cmp	r1, r2
  404a3a:	d1f7      	bne.n	404a2c <memcmp+0x1c>
  404a3c:	2000      	movs	r0, #0
  404a3e:	bc70      	pop	{r4, r5, r6}
  404a40:	4770      	bx	lr
  404a42:	680d      	ldr	r5, [r1, #0]
  404a44:	6806      	ldr	r6, [r0, #0]
  404a46:	42ae      	cmp	r6, r5
  404a48:	460c      	mov	r4, r1
  404a4a:	4603      	mov	r3, r0
  404a4c:	f101 0104 	add.w	r1, r1, #4
  404a50:	f100 0004 	add.w	r0, r0, #4
  404a54:	d108      	bne.n	404a68 <memcmp+0x58>
  404a56:	3a04      	subs	r2, #4
  404a58:	2a03      	cmp	r2, #3
  404a5a:	d8f2      	bhi.n	404a42 <memcmp+0x32>
  404a5c:	2a00      	cmp	r2, #0
  404a5e:	d1de      	bne.n	404a1e <memcmp+0xe>
  404a60:	e7ec      	b.n	404a3c <memcmp+0x2c>
  404a62:	1b18      	subs	r0, r3, r4
  404a64:	bc70      	pop	{r4, r5, r6}
  404a66:	4770      	bx	lr
  404a68:	4621      	mov	r1, r4
  404a6a:	4618      	mov	r0, r3
  404a6c:	e7d7      	b.n	404a1e <memcmp+0xe>
  404a6e:	bf00      	nop

00404a70 <memcpy>:
  404a70:	4684      	mov	ip, r0
  404a72:	ea41 0300 	orr.w	r3, r1, r0
  404a76:	f013 0303 	ands.w	r3, r3, #3
  404a7a:	d16d      	bne.n	404b58 <memcpy+0xe8>
  404a7c:	3a40      	subs	r2, #64	; 0x40
  404a7e:	d341      	bcc.n	404b04 <memcpy+0x94>
  404a80:	f851 3b04 	ldr.w	r3, [r1], #4
  404a84:	f840 3b04 	str.w	r3, [r0], #4
  404a88:	f851 3b04 	ldr.w	r3, [r1], #4
  404a8c:	f840 3b04 	str.w	r3, [r0], #4
  404a90:	f851 3b04 	ldr.w	r3, [r1], #4
  404a94:	f840 3b04 	str.w	r3, [r0], #4
  404a98:	f851 3b04 	ldr.w	r3, [r1], #4
  404a9c:	f840 3b04 	str.w	r3, [r0], #4
  404aa0:	f851 3b04 	ldr.w	r3, [r1], #4
  404aa4:	f840 3b04 	str.w	r3, [r0], #4
  404aa8:	f851 3b04 	ldr.w	r3, [r1], #4
  404aac:	f840 3b04 	str.w	r3, [r0], #4
  404ab0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ab4:	f840 3b04 	str.w	r3, [r0], #4
  404ab8:	f851 3b04 	ldr.w	r3, [r1], #4
  404abc:	f840 3b04 	str.w	r3, [r0], #4
  404ac0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ac4:	f840 3b04 	str.w	r3, [r0], #4
  404ac8:	f851 3b04 	ldr.w	r3, [r1], #4
  404acc:	f840 3b04 	str.w	r3, [r0], #4
  404ad0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ad4:	f840 3b04 	str.w	r3, [r0], #4
  404ad8:	f851 3b04 	ldr.w	r3, [r1], #4
  404adc:	f840 3b04 	str.w	r3, [r0], #4
  404ae0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ae4:	f840 3b04 	str.w	r3, [r0], #4
  404ae8:	f851 3b04 	ldr.w	r3, [r1], #4
  404aec:	f840 3b04 	str.w	r3, [r0], #4
  404af0:	f851 3b04 	ldr.w	r3, [r1], #4
  404af4:	f840 3b04 	str.w	r3, [r0], #4
  404af8:	f851 3b04 	ldr.w	r3, [r1], #4
  404afc:	f840 3b04 	str.w	r3, [r0], #4
  404b00:	3a40      	subs	r2, #64	; 0x40
  404b02:	d2bd      	bcs.n	404a80 <memcpy+0x10>
  404b04:	3230      	adds	r2, #48	; 0x30
  404b06:	d311      	bcc.n	404b2c <memcpy+0xbc>
  404b08:	f851 3b04 	ldr.w	r3, [r1], #4
  404b0c:	f840 3b04 	str.w	r3, [r0], #4
  404b10:	f851 3b04 	ldr.w	r3, [r1], #4
  404b14:	f840 3b04 	str.w	r3, [r0], #4
  404b18:	f851 3b04 	ldr.w	r3, [r1], #4
  404b1c:	f840 3b04 	str.w	r3, [r0], #4
  404b20:	f851 3b04 	ldr.w	r3, [r1], #4
  404b24:	f840 3b04 	str.w	r3, [r0], #4
  404b28:	3a10      	subs	r2, #16
  404b2a:	d2ed      	bcs.n	404b08 <memcpy+0x98>
  404b2c:	320c      	adds	r2, #12
  404b2e:	d305      	bcc.n	404b3c <memcpy+0xcc>
  404b30:	f851 3b04 	ldr.w	r3, [r1], #4
  404b34:	f840 3b04 	str.w	r3, [r0], #4
  404b38:	3a04      	subs	r2, #4
  404b3a:	d2f9      	bcs.n	404b30 <memcpy+0xc0>
  404b3c:	3204      	adds	r2, #4
  404b3e:	d008      	beq.n	404b52 <memcpy+0xe2>
  404b40:	07d2      	lsls	r2, r2, #31
  404b42:	bf1c      	itt	ne
  404b44:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404b48:	f800 3b01 	strbne.w	r3, [r0], #1
  404b4c:	d301      	bcc.n	404b52 <memcpy+0xe2>
  404b4e:	880b      	ldrh	r3, [r1, #0]
  404b50:	8003      	strh	r3, [r0, #0]
  404b52:	4660      	mov	r0, ip
  404b54:	4770      	bx	lr
  404b56:	bf00      	nop
  404b58:	2a08      	cmp	r2, #8
  404b5a:	d313      	bcc.n	404b84 <memcpy+0x114>
  404b5c:	078b      	lsls	r3, r1, #30
  404b5e:	d08d      	beq.n	404a7c <memcpy+0xc>
  404b60:	f010 0303 	ands.w	r3, r0, #3
  404b64:	d08a      	beq.n	404a7c <memcpy+0xc>
  404b66:	f1c3 0304 	rsb	r3, r3, #4
  404b6a:	1ad2      	subs	r2, r2, r3
  404b6c:	07db      	lsls	r3, r3, #31
  404b6e:	bf1c      	itt	ne
  404b70:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404b74:	f800 3b01 	strbne.w	r3, [r0], #1
  404b78:	d380      	bcc.n	404a7c <memcpy+0xc>
  404b7a:	f831 3b02 	ldrh.w	r3, [r1], #2
  404b7e:	f820 3b02 	strh.w	r3, [r0], #2
  404b82:	e77b      	b.n	404a7c <memcpy+0xc>
  404b84:	3a04      	subs	r2, #4
  404b86:	d3d9      	bcc.n	404b3c <memcpy+0xcc>
  404b88:	3a01      	subs	r2, #1
  404b8a:	f811 3b01 	ldrb.w	r3, [r1], #1
  404b8e:	f800 3b01 	strb.w	r3, [r0], #1
  404b92:	d2f9      	bcs.n	404b88 <memcpy+0x118>
  404b94:	780b      	ldrb	r3, [r1, #0]
  404b96:	7003      	strb	r3, [r0, #0]
  404b98:	784b      	ldrb	r3, [r1, #1]
  404b9a:	7043      	strb	r3, [r0, #1]
  404b9c:	788b      	ldrb	r3, [r1, #2]
  404b9e:	7083      	strb	r3, [r0, #2]
  404ba0:	4660      	mov	r0, ip
  404ba2:	4770      	bx	lr

00404ba4 <__malloc_lock>:
  404ba4:	4801      	ldr	r0, [pc, #4]	; (404bac <__malloc_lock+0x8>)
  404ba6:	f7ff bc2d 	b.w	404404 <__retarget_lock_acquire_recursive>
  404baa:	bf00      	nop
  404bac:	20019560 	.word	0x20019560

00404bb0 <__malloc_unlock>:
  404bb0:	4801      	ldr	r0, [pc, #4]	; (404bb8 <__malloc_unlock+0x8>)
  404bb2:	f7ff bc29 	b.w	404408 <__retarget_lock_release_recursive>
  404bb6:	bf00      	nop
  404bb8:	20019560 	.word	0x20019560

00404bbc <_Balloc>:
  404bbc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404bbe:	b570      	push	{r4, r5, r6, lr}
  404bc0:	4605      	mov	r5, r0
  404bc2:	460c      	mov	r4, r1
  404bc4:	b14b      	cbz	r3, 404bda <_Balloc+0x1e>
  404bc6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404bca:	b180      	cbz	r0, 404bee <_Balloc+0x32>
  404bcc:	6802      	ldr	r2, [r0, #0]
  404bce:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404bd2:	2300      	movs	r3, #0
  404bd4:	6103      	str	r3, [r0, #16]
  404bd6:	60c3      	str	r3, [r0, #12]
  404bd8:	bd70      	pop	{r4, r5, r6, pc}
  404bda:	2221      	movs	r2, #33	; 0x21
  404bdc:	2104      	movs	r1, #4
  404bde:	f000 fc5d 	bl	40549c <_calloc_r>
  404be2:	64e8      	str	r0, [r5, #76]	; 0x4c
  404be4:	4603      	mov	r3, r0
  404be6:	2800      	cmp	r0, #0
  404be8:	d1ed      	bne.n	404bc6 <_Balloc+0xa>
  404bea:	2000      	movs	r0, #0
  404bec:	bd70      	pop	{r4, r5, r6, pc}
  404bee:	2101      	movs	r1, #1
  404bf0:	fa01 f604 	lsl.w	r6, r1, r4
  404bf4:	1d72      	adds	r2, r6, #5
  404bf6:	4628      	mov	r0, r5
  404bf8:	0092      	lsls	r2, r2, #2
  404bfa:	f000 fc4f 	bl	40549c <_calloc_r>
  404bfe:	2800      	cmp	r0, #0
  404c00:	d0f3      	beq.n	404bea <_Balloc+0x2e>
  404c02:	6044      	str	r4, [r0, #4]
  404c04:	6086      	str	r6, [r0, #8]
  404c06:	e7e4      	b.n	404bd2 <_Balloc+0x16>

00404c08 <_Bfree>:
  404c08:	b131      	cbz	r1, 404c18 <_Bfree+0x10>
  404c0a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404c0c:	684a      	ldr	r2, [r1, #4]
  404c0e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404c12:	6008      	str	r0, [r1, #0]
  404c14:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404c18:	4770      	bx	lr
  404c1a:	bf00      	nop

00404c1c <__multadd>:
  404c1c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404c1e:	690c      	ldr	r4, [r1, #16]
  404c20:	b083      	sub	sp, #12
  404c22:	460d      	mov	r5, r1
  404c24:	4606      	mov	r6, r0
  404c26:	f101 0e14 	add.w	lr, r1, #20
  404c2a:	2700      	movs	r7, #0
  404c2c:	f8de 0000 	ldr.w	r0, [lr]
  404c30:	b281      	uxth	r1, r0
  404c32:	fb02 3301 	mla	r3, r2, r1, r3
  404c36:	0c01      	lsrs	r1, r0, #16
  404c38:	0c18      	lsrs	r0, r3, #16
  404c3a:	fb02 0101 	mla	r1, r2, r1, r0
  404c3e:	b29b      	uxth	r3, r3
  404c40:	3701      	adds	r7, #1
  404c42:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404c46:	42bc      	cmp	r4, r7
  404c48:	f84e 3b04 	str.w	r3, [lr], #4
  404c4c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404c50:	dcec      	bgt.n	404c2c <__multadd+0x10>
  404c52:	b13b      	cbz	r3, 404c64 <__multadd+0x48>
  404c54:	68aa      	ldr	r2, [r5, #8]
  404c56:	4294      	cmp	r4, r2
  404c58:	da07      	bge.n	404c6a <__multadd+0x4e>
  404c5a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404c5e:	3401      	adds	r4, #1
  404c60:	6153      	str	r3, [r2, #20]
  404c62:	612c      	str	r4, [r5, #16]
  404c64:	4628      	mov	r0, r5
  404c66:	b003      	add	sp, #12
  404c68:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404c6a:	6869      	ldr	r1, [r5, #4]
  404c6c:	9301      	str	r3, [sp, #4]
  404c6e:	3101      	adds	r1, #1
  404c70:	4630      	mov	r0, r6
  404c72:	f7ff ffa3 	bl	404bbc <_Balloc>
  404c76:	692a      	ldr	r2, [r5, #16]
  404c78:	3202      	adds	r2, #2
  404c7a:	f105 010c 	add.w	r1, r5, #12
  404c7e:	4607      	mov	r7, r0
  404c80:	0092      	lsls	r2, r2, #2
  404c82:	300c      	adds	r0, #12
  404c84:	f7ff fef4 	bl	404a70 <memcpy>
  404c88:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404c8a:	6869      	ldr	r1, [r5, #4]
  404c8c:	9b01      	ldr	r3, [sp, #4]
  404c8e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404c92:	6028      	str	r0, [r5, #0]
  404c94:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404c98:	463d      	mov	r5, r7
  404c9a:	e7de      	b.n	404c5a <__multadd+0x3e>

00404c9c <__hi0bits>:
  404c9c:	0c02      	lsrs	r2, r0, #16
  404c9e:	0412      	lsls	r2, r2, #16
  404ca0:	4603      	mov	r3, r0
  404ca2:	b9b2      	cbnz	r2, 404cd2 <__hi0bits+0x36>
  404ca4:	0403      	lsls	r3, r0, #16
  404ca6:	2010      	movs	r0, #16
  404ca8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404cac:	bf04      	itt	eq
  404cae:	021b      	lsleq	r3, r3, #8
  404cb0:	3008      	addeq	r0, #8
  404cb2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404cb6:	bf04      	itt	eq
  404cb8:	011b      	lsleq	r3, r3, #4
  404cba:	3004      	addeq	r0, #4
  404cbc:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404cc0:	bf04      	itt	eq
  404cc2:	009b      	lsleq	r3, r3, #2
  404cc4:	3002      	addeq	r0, #2
  404cc6:	2b00      	cmp	r3, #0
  404cc8:	db02      	blt.n	404cd0 <__hi0bits+0x34>
  404cca:	005b      	lsls	r3, r3, #1
  404ccc:	d403      	bmi.n	404cd6 <__hi0bits+0x3a>
  404cce:	2020      	movs	r0, #32
  404cd0:	4770      	bx	lr
  404cd2:	2000      	movs	r0, #0
  404cd4:	e7e8      	b.n	404ca8 <__hi0bits+0xc>
  404cd6:	3001      	adds	r0, #1
  404cd8:	4770      	bx	lr
  404cda:	bf00      	nop

00404cdc <__lo0bits>:
  404cdc:	6803      	ldr	r3, [r0, #0]
  404cde:	f013 0207 	ands.w	r2, r3, #7
  404ce2:	4601      	mov	r1, r0
  404ce4:	d007      	beq.n	404cf6 <__lo0bits+0x1a>
  404ce6:	07da      	lsls	r2, r3, #31
  404ce8:	d421      	bmi.n	404d2e <__lo0bits+0x52>
  404cea:	0798      	lsls	r0, r3, #30
  404cec:	d421      	bmi.n	404d32 <__lo0bits+0x56>
  404cee:	089b      	lsrs	r3, r3, #2
  404cf0:	600b      	str	r3, [r1, #0]
  404cf2:	2002      	movs	r0, #2
  404cf4:	4770      	bx	lr
  404cf6:	b298      	uxth	r0, r3
  404cf8:	b198      	cbz	r0, 404d22 <__lo0bits+0x46>
  404cfa:	4610      	mov	r0, r2
  404cfc:	f013 0fff 	tst.w	r3, #255	; 0xff
  404d00:	bf04      	itt	eq
  404d02:	0a1b      	lsreq	r3, r3, #8
  404d04:	3008      	addeq	r0, #8
  404d06:	071a      	lsls	r2, r3, #28
  404d08:	bf04      	itt	eq
  404d0a:	091b      	lsreq	r3, r3, #4
  404d0c:	3004      	addeq	r0, #4
  404d0e:	079a      	lsls	r2, r3, #30
  404d10:	bf04      	itt	eq
  404d12:	089b      	lsreq	r3, r3, #2
  404d14:	3002      	addeq	r0, #2
  404d16:	07da      	lsls	r2, r3, #31
  404d18:	d407      	bmi.n	404d2a <__lo0bits+0x4e>
  404d1a:	085b      	lsrs	r3, r3, #1
  404d1c:	d104      	bne.n	404d28 <__lo0bits+0x4c>
  404d1e:	2020      	movs	r0, #32
  404d20:	4770      	bx	lr
  404d22:	0c1b      	lsrs	r3, r3, #16
  404d24:	2010      	movs	r0, #16
  404d26:	e7e9      	b.n	404cfc <__lo0bits+0x20>
  404d28:	3001      	adds	r0, #1
  404d2a:	600b      	str	r3, [r1, #0]
  404d2c:	4770      	bx	lr
  404d2e:	2000      	movs	r0, #0
  404d30:	4770      	bx	lr
  404d32:	085b      	lsrs	r3, r3, #1
  404d34:	600b      	str	r3, [r1, #0]
  404d36:	2001      	movs	r0, #1
  404d38:	4770      	bx	lr
  404d3a:	bf00      	nop

00404d3c <__i2b>:
  404d3c:	b510      	push	{r4, lr}
  404d3e:	460c      	mov	r4, r1
  404d40:	2101      	movs	r1, #1
  404d42:	f7ff ff3b 	bl	404bbc <_Balloc>
  404d46:	2201      	movs	r2, #1
  404d48:	6144      	str	r4, [r0, #20]
  404d4a:	6102      	str	r2, [r0, #16]
  404d4c:	bd10      	pop	{r4, pc}
  404d4e:	bf00      	nop

00404d50 <__multiply>:
  404d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404d54:	690c      	ldr	r4, [r1, #16]
  404d56:	6915      	ldr	r5, [r2, #16]
  404d58:	42ac      	cmp	r4, r5
  404d5a:	b083      	sub	sp, #12
  404d5c:	468b      	mov	fp, r1
  404d5e:	4616      	mov	r6, r2
  404d60:	da04      	bge.n	404d6c <__multiply+0x1c>
  404d62:	4622      	mov	r2, r4
  404d64:	46b3      	mov	fp, r6
  404d66:	462c      	mov	r4, r5
  404d68:	460e      	mov	r6, r1
  404d6a:	4615      	mov	r5, r2
  404d6c:	f8db 3008 	ldr.w	r3, [fp, #8]
  404d70:	f8db 1004 	ldr.w	r1, [fp, #4]
  404d74:	eb04 0805 	add.w	r8, r4, r5
  404d78:	4598      	cmp	r8, r3
  404d7a:	bfc8      	it	gt
  404d7c:	3101      	addgt	r1, #1
  404d7e:	f7ff ff1d 	bl	404bbc <_Balloc>
  404d82:	f100 0914 	add.w	r9, r0, #20
  404d86:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404d8a:	45d1      	cmp	r9, sl
  404d8c:	9000      	str	r0, [sp, #0]
  404d8e:	d205      	bcs.n	404d9c <__multiply+0x4c>
  404d90:	464b      	mov	r3, r9
  404d92:	2100      	movs	r1, #0
  404d94:	f843 1b04 	str.w	r1, [r3], #4
  404d98:	459a      	cmp	sl, r3
  404d9a:	d8fb      	bhi.n	404d94 <__multiply+0x44>
  404d9c:	f106 0c14 	add.w	ip, r6, #20
  404da0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404da4:	f10b 0b14 	add.w	fp, fp, #20
  404da8:	459c      	cmp	ip, r3
  404daa:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404dae:	d24c      	bcs.n	404e4a <__multiply+0xfa>
  404db0:	f8cd a004 	str.w	sl, [sp, #4]
  404db4:	469a      	mov	sl, r3
  404db6:	f8dc 5000 	ldr.w	r5, [ip]
  404dba:	b2af      	uxth	r7, r5
  404dbc:	b1ef      	cbz	r7, 404dfa <__multiply+0xaa>
  404dbe:	2100      	movs	r1, #0
  404dc0:	464d      	mov	r5, r9
  404dc2:	465e      	mov	r6, fp
  404dc4:	460c      	mov	r4, r1
  404dc6:	f856 2b04 	ldr.w	r2, [r6], #4
  404dca:	6828      	ldr	r0, [r5, #0]
  404dcc:	b293      	uxth	r3, r2
  404dce:	b281      	uxth	r1, r0
  404dd0:	fb07 1303 	mla	r3, r7, r3, r1
  404dd4:	0c12      	lsrs	r2, r2, #16
  404dd6:	0c01      	lsrs	r1, r0, #16
  404dd8:	4423      	add	r3, r4
  404dda:	fb07 1102 	mla	r1, r7, r2, r1
  404dde:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404de2:	b29b      	uxth	r3, r3
  404de4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404de8:	45b6      	cmp	lr, r6
  404dea:	f845 3b04 	str.w	r3, [r5], #4
  404dee:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404df2:	d8e8      	bhi.n	404dc6 <__multiply+0x76>
  404df4:	602c      	str	r4, [r5, #0]
  404df6:	f8dc 5000 	ldr.w	r5, [ip]
  404dfa:	0c2d      	lsrs	r5, r5, #16
  404dfc:	d01d      	beq.n	404e3a <__multiply+0xea>
  404dfe:	f8d9 3000 	ldr.w	r3, [r9]
  404e02:	4648      	mov	r0, r9
  404e04:	461c      	mov	r4, r3
  404e06:	4659      	mov	r1, fp
  404e08:	2200      	movs	r2, #0
  404e0a:	880e      	ldrh	r6, [r1, #0]
  404e0c:	0c24      	lsrs	r4, r4, #16
  404e0e:	fb05 4406 	mla	r4, r5, r6, r4
  404e12:	4422      	add	r2, r4
  404e14:	b29b      	uxth	r3, r3
  404e16:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404e1a:	f840 3b04 	str.w	r3, [r0], #4
  404e1e:	f851 3b04 	ldr.w	r3, [r1], #4
  404e22:	6804      	ldr	r4, [r0, #0]
  404e24:	0c1b      	lsrs	r3, r3, #16
  404e26:	b2a6      	uxth	r6, r4
  404e28:	fb05 6303 	mla	r3, r5, r3, r6
  404e2c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404e30:	458e      	cmp	lr, r1
  404e32:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404e36:	d8e8      	bhi.n	404e0a <__multiply+0xba>
  404e38:	6003      	str	r3, [r0, #0]
  404e3a:	f10c 0c04 	add.w	ip, ip, #4
  404e3e:	45e2      	cmp	sl, ip
  404e40:	f109 0904 	add.w	r9, r9, #4
  404e44:	d8b7      	bhi.n	404db6 <__multiply+0x66>
  404e46:	f8dd a004 	ldr.w	sl, [sp, #4]
  404e4a:	f1b8 0f00 	cmp.w	r8, #0
  404e4e:	dd0b      	ble.n	404e68 <__multiply+0x118>
  404e50:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404e54:	f1aa 0a04 	sub.w	sl, sl, #4
  404e58:	b11b      	cbz	r3, 404e62 <__multiply+0x112>
  404e5a:	e005      	b.n	404e68 <__multiply+0x118>
  404e5c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404e60:	b913      	cbnz	r3, 404e68 <__multiply+0x118>
  404e62:	f1b8 0801 	subs.w	r8, r8, #1
  404e66:	d1f9      	bne.n	404e5c <__multiply+0x10c>
  404e68:	9800      	ldr	r0, [sp, #0]
  404e6a:	f8c0 8010 	str.w	r8, [r0, #16]
  404e6e:	b003      	add	sp, #12
  404e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404e74 <__pow5mult>:
  404e74:	f012 0303 	ands.w	r3, r2, #3
  404e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e7c:	4614      	mov	r4, r2
  404e7e:	4607      	mov	r7, r0
  404e80:	d12e      	bne.n	404ee0 <__pow5mult+0x6c>
  404e82:	460d      	mov	r5, r1
  404e84:	10a4      	asrs	r4, r4, #2
  404e86:	d01c      	beq.n	404ec2 <__pow5mult+0x4e>
  404e88:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404e8a:	b396      	cbz	r6, 404ef2 <__pow5mult+0x7e>
  404e8c:	07e3      	lsls	r3, r4, #31
  404e8e:	f04f 0800 	mov.w	r8, #0
  404e92:	d406      	bmi.n	404ea2 <__pow5mult+0x2e>
  404e94:	1064      	asrs	r4, r4, #1
  404e96:	d014      	beq.n	404ec2 <__pow5mult+0x4e>
  404e98:	6830      	ldr	r0, [r6, #0]
  404e9a:	b1a8      	cbz	r0, 404ec8 <__pow5mult+0x54>
  404e9c:	4606      	mov	r6, r0
  404e9e:	07e3      	lsls	r3, r4, #31
  404ea0:	d5f8      	bpl.n	404e94 <__pow5mult+0x20>
  404ea2:	4632      	mov	r2, r6
  404ea4:	4629      	mov	r1, r5
  404ea6:	4638      	mov	r0, r7
  404ea8:	f7ff ff52 	bl	404d50 <__multiply>
  404eac:	b1b5      	cbz	r5, 404edc <__pow5mult+0x68>
  404eae:	686a      	ldr	r2, [r5, #4]
  404eb0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404eb2:	1064      	asrs	r4, r4, #1
  404eb4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404eb8:	6029      	str	r1, [r5, #0]
  404eba:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404ebe:	4605      	mov	r5, r0
  404ec0:	d1ea      	bne.n	404e98 <__pow5mult+0x24>
  404ec2:	4628      	mov	r0, r5
  404ec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ec8:	4632      	mov	r2, r6
  404eca:	4631      	mov	r1, r6
  404ecc:	4638      	mov	r0, r7
  404ece:	f7ff ff3f 	bl	404d50 <__multiply>
  404ed2:	6030      	str	r0, [r6, #0]
  404ed4:	f8c0 8000 	str.w	r8, [r0]
  404ed8:	4606      	mov	r6, r0
  404eda:	e7e0      	b.n	404e9e <__pow5mult+0x2a>
  404edc:	4605      	mov	r5, r0
  404ede:	e7d9      	b.n	404e94 <__pow5mult+0x20>
  404ee0:	1e5a      	subs	r2, r3, #1
  404ee2:	4d0b      	ldr	r5, [pc, #44]	; (404f10 <__pow5mult+0x9c>)
  404ee4:	2300      	movs	r3, #0
  404ee6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404eea:	f7ff fe97 	bl	404c1c <__multadd>
  404eee:	4605      	mov	r5, r0
  404ef0:	e7c8      	b.n	404e84 <__pow5mult+0x10>
  404ef2:	2101      	movs	r1, #1
  404ef4:	4638      	mov	r0, r7
  404ef6:	f7ff fe61 	bl	404bbc <_Balloc>
  404efa:	f240 2171 	movw	r1, #625	; 0x271
  404efe:	2201      	movs	r2, #1
  404f00:	2300      	movs	r3, #0
  404f02:	6141      	str	r1, [r0, #20]
  404f04:	6102      	str	r2, [r0, #16]
  404f06:	4606      	mov	r6, r0
  404f08:	64b8      	str	r0, [r7, #72]	; 0x48
  404f0a:	6003      	str	r3, [r0, #0]
  404f0c:	e7be      	b.n	404e8c <__pow5mult+0x18>
  404f0e:	bf00      	nop
  404f10:	00407650 	.word	0x00407650

00404f14 <__lshift>:
  404f14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404f18:	4691      	mov	r9, r2
  404f1a:	690a      	ldr	r2, [r1, #16]
  404f1c:	688b      	ldr	r3, [r1, #8]
  404f1e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404f22:	eb04 0802 	add.w	r8, r4, r2
  404f26:	f108 0501 	add.w	r5, r8, #1
  404f2a:	429d      	cmp	r5, r3
  404f2c:	460e      	mov	r6, r1
  404f2e:	4607      	mov	r7, r0
  404f30:	6849      	ldr	r1, [r1, #4]
  404f32:	dd04      	ble.n	404f3e <__lshift+0x2a>
  404f34:	005b      	lsls	r3, r3, #1
  404f36:	429d      	cmp	r5, r3
  404f38:	f101 0101 	add.w	r1, r1, #1
  404f3c:	dcfa      	bgt.n	404f34 <__lshift+0x20>
  404f3e:	4638      	mov	r0, r7
  404f40:	f7ff fe3c 	bl	404bbc <_Balloc>
  404f44:	2c00      	cmp	r4, #0
  404f46:	f100 0314 	add.w	r3, r0, #20
  404f4a:	dd06      	ble.n	404f5a <__lshift+0x46>
  404f4c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404f50:	2100      	movs	r1, #0
  404f52:	f843 1b04 	str.w	r1, [r3], #4
  404f56:	429a      	cmp	r2, r3
  404f58:	d1fb      	bne.n	404f52 <__lshift+0x3e>
  404f5a:	6934      	ldr	r4, [r6, #16]
  404f5c:	f106 0114 	add.w	r1, r6, #20
  404f60:	f019 091f 	ands.w	r9, r9, #31
  404f64:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404f68:	d01d      	beq.n	404fa6 <__lshift+0x92>
  404f6a:	f1c9 0c20 	rsb	ip, r9, #32
  404f6e:	2200      	movs	r2, #0
  404f70:	680c      	ldr	r4, [r1, #0]
  404f72:	fa04 f409 	lsl.w	r4, r4, r9
  404f76:	4314      	orrs	r4, r2
  404f78:	f843 4b04 	str.w	r4, [r3], #4
  404f7c:	f851 2b04 	ldr.w	r2, [r1], #4
  404f80:	458e      	cmp	lr, r1
  404f82:	fa22 f20c 	lsr.w	r2, r2, ip
  404f86:	d8f3      	bhi.n	404f70 <__lshift+0x5c>
  404f88:	601a      	str	r2, [r3, #0]
  404f8a:	b10a      	cbz	r2, 404f90 <__lshift+0x7c>
  404f8c:	f108 0502 	add.w	r5, r8, #2
  404f90:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404f92:	6872      	ldr	r2, [r6, #4]
  404f94:	3d01      	subs	r5, #1
  404f96:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404f9a:	6105      	str	r5, [r0, #16]
  404f9c:	6031      	str	r1, [r6, #0]
  404f9e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404fa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404fa6:	3b04      	subs	r3, #4
  404fa8:	f851 2b04 	ldr.w	r2, [r1], #4
  404fac:	f843 2f04 	str.w	r2, [r3, #4]!
  404fb0:	458e      	cmp	lr, r1
  404fb2:	d8f9      	bhi.n	404fa8 <__lshift+0x94>
  404fb4:	e7ec      	b.n	404f90 <__lshift+0x7c>
  404fb6:	bf00      	nop

00404fb8 <__mcmp>:
  404fb8:	b430      	push	{r4, r5}
  404fba:	690b      	ldr	r3, [r1, #16]
  404fbc:	4605      	mov	r5, r0
  404fbe:	6900      	ldr	r0, [r0, #16]
  404fc0:	1ac0      	subs	r0, r0, r3
  404fc2:	d10f      	bne.n	404fe4 <__mcmp+0x2c>
  404fc4:	009b      	lsls	r3, r3, #2
  404fc6:	3514      	adds	r5, #20
  404fc8:	3114      	adds	r1, #20
  404fca:	4419      	add	r1, r3
  404fcc:	442b      	add	r3, r5
  404fce:	e001      	b.n	404fd4 <__mcmp+0x1c>
  404fd0:	429d      	cmp	r5, r3
  404fd2:	d207      	bcs.n	404fe4 <__mcmp+0x2c>
  404fd4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404fd8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404fdc:	4294      	cmp	r4, r2
  404fde:	d0f7      	beq.n	404fd0 <__mcmp+0x18>
  404fe0:	d302      	bcc.n	404fe8 <__mcmp+0x30>
  404fe2:	2001      	movs	r0, #1
  404fe4:	bc30      	pop	{r4, r5}
  404fe6:	4770      	bx	lr
  404fe8:	f04f 30ff 	mov.w	r0, #4294967295
  404fec:	e7fa      	b.n	404fe4 <__mcmp+0x2c>
  404fee:	bf00      	nop

00404ff0 <__mdiff>:
  404ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404ff4:	690f      	ldr	r7, [r1, #16]
  404ff6:	460e      	mov	r6, r1
  404ff8:	6911      	ldr	r1, [r2, #16]
  404ffa:	1a7f      	subs	r7, r7, r1
  404ffc:	2f00      	cmp	r7, #0
  404ffe:	4690      	mov	r8, r2
  405000:	d117      	bne.n	405032 <__mdiff+0x42>
  405002:	0089      	lsls	r1, r1, #2
  405004:	f106 0514 	add.w	r5, r6, #20
  405008:	f102 0e14 	add.w	lr, r2, #20
  40500c:	186b      	adds	r3, r5, r1
  40500e:	4471      	add	r1, lr
  405010:	e001      	b.n	405016 <__mdiff+0x26>
  405012:	429d      	cmp	r5, r3
  405014:	d25c      	bcs.n	4050d0 <__mdiff+0xe0>
  405016:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40501a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40501e:	42a2      	cmp	r2, r4
  405020:	d0f7      	beq.n	405012 <__mdiff+0x22>
  405022:	d25e      	bcs.n	4050e2 <__mdiff+0xf2>
  405024:	4633      	mov	r3, r6
  405026:	462c      	mov	r4, r5
  405028:	4646      	mov	r6, r8
  40502a:	4675      	mov	r5, lr
  40502c:	4698      	mov	r8, r3
  40502e:	2701      	movs	r7, #1
  405030:	e005      	b.n	40503e <__mdiff+0x4e>
  405032:	db58      	blt.n	4050e6 <__mdiff+0xf6>
  405034:	f106 0514 	add.w	r5, r6, #20
  405038:	f108 0414 	add.w	r4, r8, #20
  40503c:	2700      	movs	r7, #0
  40503e:	6871      	ldr	r1, [r6, #4]
  405040:	f7ff fdbc 	bl	404bbc <_Balloc>
  405044:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405048:	6936      	ldr	r6, [r6, #16]
  40504a:	60c7      	str	r7, [r0, #12]
  40504c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405050:	46a6      	mov	lr, r4
  405052:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405056:	f100 0414 	add.w	r4, r0, #20
  40505a:	2300      	movs	r3, #0
  40505c:	f85e 1b04 	ldr.w	r1, [lr], #4
  405060:	f855 8b04 	ldr.w	r8, [r5], #4
  405064:	b28a      	uxth	r2, r1
  405066:	fa13 f388 	uxtah	r3, r3, r8
  40506a:	0c09      	lsrs	r1, r1, #16
  40506c:	1a9a      	subs	r2, r3, r2
  40506e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405072:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405076:	b292      	uxth	r2, r2
  405078:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40507c:	45f4      	cmp	ip, lr
  40507e:	f844 2b04 	str.w	r2, [r4], #4
  405082:	ea4f 4323 	mov.w	r3, r3, asr #16
  405086:	d8e9      	bhi.n	40505c <__mdiff+0x6c>
  405088:	42af      	cmp	r7, r5
  40508a:	d917      	bls.n	4050bc <__mdiff+0xcc>
  40508c:	46a4      	mov	ip, r4
  40508e:	46ae      	mov	lr, r5
  405090:	f85e 2b04 	ldr.w	r2, [lr], #4
  405094:	fa13 f382 	uxtah	r3, r3, r2
  405098:	1419      	asrs	r1, r3, #16
  40509a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40509e:	b29b      	uxth	r3, r3
  4050a0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  4050a4:	4577      	cmp	r7, lr
  4050a6:	f84c 2b04 	str.w	r2, [ip], #4
  4050aa:	ea4f 4321 	mov.w	r3, r1, asr #16
  4050ae:	d8ef      	bhi.n	405090 <__mdiff+0xa0>
  4050b0:	43ed      	mvns	r5, r5
  4050b2:	442f      	add	r7, r5
  4050b4:	f027 0703 	bic.w	r7, r7, #3
  4050b8:	3704      	adds	r7, #4
  4050ba:	443c      	add	r4, r7
  4050bc:	3c04      	subs	r4, #4
  4050be:	b922      	cbnz	r2, 4050ca <__mdiff+0xda>
  4050c0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  4050c4:	3e01      	subs	r6, #1
  4050c6:	2b00      	cmp	r3, #0
  4050c8:	d0fa      	beq.n	4050c0 <__mdiff+0xd0>
  4050ca:	6106      	str	r6, [r0, #16]
  4050cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4050d0:	2100      	movs	r1, #0
  4050d2:	f7ff fd73 	bl	404bbc <_Balloc>
  4050d6:	2201      	movs	r2, #1
  4050d8:	2300      	movs	r3, #0
  4050da:	6102      	str	r2, [r0, #16]
  4050dc:	6143      	str	r3, [r0, #20]
  4050de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4050e2:	4674      	mov	r4, lr
  4050e4:	e7ab      	b.n	40503e <__mdiff+0x4e>
  4050e6:	4633      	mov	r3, r6
  4050e8:	f106 0414 	add.w	r4, r6, #20
  4050ec:	f102 0514 	add.w	r5, r2, #20
  4050f0:	4616      	mov	r6, r2
  4050f2:	2701      	movs	r7, #1
  4050f4:	4698      	mov	r8, r3
  4050f6:	e7a2      	b.n	40503e <__mdiff+0x4e>

004050f8 <__d2b>:
  4050f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4050fc:	b082      	sub	sp, #8
  4050fe:	2101      	movs	r1, #1
  405100:	461c      	mov	r4, r3
  405102:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405106:	4615      	mov	r5, r2
  405108:	9e08      	ldr	r6, [sp, #32]
  40510a:	f7ff fd57 	bl	404bbc <_Balloc>
  40510e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405112:	4680      	mov	r8, r0
  405114:	b10f      	cbz	r7, 40511a <__d2b+0x22>
  405116:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40511a:	9401      	str	r4, [sp, #4]
  40511c:	b31d      	cbz	r5, 405166 <__d2b+0x6e>
  40511e:	a802      	add	r0, sp, #8
  405120:	f840 5d08 	str.w	r5, [r0, #-8]!
  405124:	f7ff fdda 	bl	404cdc <__lo0bits>
  405128:	2800      	cmp	r0, #0
  40512a:	d134      	bne.n	405196 <__d2b+0x9e>
  40512c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405130:	f8c8 2014 	str.w	r2, [r8, #20]
  405134:	2b00      	cmp	r3, #0
  405136:	bf0c      	ite	eq
  405138:	2101      	moveq	r1, #1
  40513a:	2102      	movne	r1, #2
  40513c:	f8c8 3018 	str.w	r3, [r8, #24]
  405140:	f8c8 1010 	str.w	r1, [r8, #16]
  405144:	b9df      	cbnz	r7, 40517e <__d2b+0x86>
  405146:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40514a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40514e:	6030      	str	r0, [r6, #0]
  405150:	6918      	ldr	r0, [r3, #16]
  405152:	f7ff fda3 	bl	404c9c <__hi0bits>
  405156:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405158:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40515c:	6018      	str	r0, [r3, #0]
  40515e:	4640      	mov	r0, r8
  405160:	b002      	add	sp, #8
  405162:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405166:	a801      	add	r0, sp, #4
  405168:	f7ff fdb8 	bl	404cdc <__lo0bits>
  40516c:	9b01      	ldr	r3, [sp, #4]
  40516e:	f8c8 3014 	str.w	r3, [r8, #20]
  405172:	2101      	movs	r1, #1
  405174:	3020      	adds	r0, #32
  405176:	f8c8 1010 	str.w	r1, [r8, #16]
  40517a:	2f00      	cmp	r7, #0
  40517c:	d0e3      	beq.n	405146 <__d2b+0x4e>
  40517e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405180:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405184:	4407      	add	r7, r0
  405186:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40518a:	6037      	str	r7, [r6, #0]
  40518c:	6018      	str	r0, [r3, #0]
  40518e:	4640      	mov	r0, r8
  405190:	b002      	add	sp, #8
  405192:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405196:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40519a:	f1c0 0220 	rsb	r2, r0, #32
  40519e:	fa03 f202 	lsl.w	r2, r3, r2
  4051a2:	430a      	orrs	r2, r1
  4051a4:	40c3      	lsrs	r3, r0
  4051a6:	9301      	str	r3, [sp, #4]
  4051a8:	f8c8 2014 	str.w	r2, [r8, #20]
  4051ac:	e7c2      	b.n	405134 <__d2b+0x3c>
  4051ae:	bf00      	nop

004051b0 <_sbrk_r>:
  4051b0:	b538      	push	{r3, r4, r5, lr}
  4051b2:	4c07      	ldr	r4, [pc, #28]	; (4051d0 <_sbrk_r+0x20>)
  4051b4:	2300      	movs	r3, #0
  4051b6:	4605      	mov	r5, r0
  4051b8:	4608      	mov	r0, r1
  4051ba:	6023      	str	r3, [r4, #0]
  4051bc:	f7fc fac0 	bl	401740 <_sbrk>
  4051c0:	1c43      	adds	r3, r0, #1
  4051c2:	d000      	beq.n	4051c6 <_sbrk_r+0x16>
  4051c4:	bd38      	pop	{r3, r4, r5, pc}
  4051c6:	6823      	ldr	r3, [r4, #0]
  4051c8:	2b00      	cmp	r3, #0
  4051ca:	d0fb      	beq.n	4051c4 <_sbrk_r+0x14>
  4051cc:	602b      	str	r3, [r5, #0]
  4051ce:	bd38      	pop	{r3, r4, r5, pc}
  4051d0:	20019574 	.word	0x20019574
	...

00405200 <strlen>:
  405200:	f890 f000 	pld	[r0]
  405204:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405208:	f020 0107 	bic.w	r1, r0, #7
  40520c:	f06f 0c00 	mvn.w	ip, #0
  405210:	f010 0407 	ands.w	r4, r0, #7
  405214:	f891 f020 	pld	[r1, #32]
  405218:	f040 8049 	bne.w	4052ae <strlen+0xae>
  40521c:	f04f 0400 	mov.w	r4, #0
  405220:	f06f 0007 	mvn.w	r0, #7
  405224:	e9d1 2300 	ldrd	r2, r3, [r1]
  405228:	f891 f040 	pld	[r1, #64]	; 0x40
  40522c:	f100 0008 	add.w	r0, r0, #8
  405230:	fa82 f24c 	uadd8	r2, r2, ip
  405234:	faa4 f28c 	sel	r2, r4, ip
  405238:	fa83 f34c 	uadd8	r3, r3, ip
  40523c:	faa2 f38c 	sel	r3, r2, ip
  405240:	bb4b      	cbnz	r3, 405296 <strlen+0x96>
  405242:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405246:	fa82 f24c 	uadd8	r2, r2, ip
  40524a:	f100 0008 	add.w	r0, r0, #8
  40524e:	faa4 f28c 	sel	r2, r4, ip
  405252:	fa83 f34c 	uadd8	r3, r3, ip
  405256:	faa2 f38c 	sel	r3, r2, ip
  40525a:	b9e3      	cbnz	r3, 405296 <strlen+0x96>
  40525c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405260:	fa82 f24c 	uadd8	r2, r2, ip
  405264:	f100 0008 	add.w	r0, r0, #8
  405268:	faa4 f28c 	sel	r2, r4, ip
  40526c:	fa83 f34c 	uadd8	r3, r3, ip
  405270:	faa2 f38c 	sel	r3, r2, ip
  405274:	b97b      	cbnz	r3, 405296 <strlen+0x96>
  405276:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40527a:	f101 0120 	add.w	r1, r1, #32
  40527e:	fa82 f24c 	uadd8	r2, r2, ip
  405282:	f100 0008 	add.w	r0, r0, #8
  405286:	faa4 f28c 	sel	r2, r4, ip
  40528a:	fa83 f34c 	uadd8	r3, r3, ip
  40528e:	faa2 f38c 	sel	r3, r2, ip
  405292:	2b00      	cmp	r3, #0
  405294:	d0c6      	beq.n	405224 <strlen+0x24>
  405296:	2a00      	cmp	r2, #0
  405298:	bf04      	itt	eq
  40529a:	3004      	addeq	r0, #4
  40529c:	461a      	moveq	r2, r3
  40529e:	ba12      	rev	r2, r2
  4052a0:	fab2 f282 	clz	r2, r2
  4052a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4052a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4052ac:	4770      	bx	lr
  4052ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4052b2:	f004 0503 	and.w	r5, r4, #3
  4052b6:	f1c4 0000 	rsb	r0, r4, #0
  4052ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4052be:	f014 0f04 	tst.w	r4, #4
  4052c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4052c6:	fa0c f505 	lsl.w	r5, ip, r5
  4052ca:	ea62 0205 	orn	r2, r2, r5
  4052ce:	bf1c      	itt	ne
  4052d0:	ea63 0305 	ornne	r3, r3, r5
  4052d4:	4662      	movne	r2, ip
  4052d6:	f04f 0400 	mov.w	r4, #0
  4052da:	e7a9      	b.n	405230 <strlen+0x30>

004052dc <__ssprint_r>:
  4052dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4052e0:	6893      	ldr	r3, [r2, #8]
  4052e2:	b083      	sub	sp, #12
  4052e4:	4690      	mov	r8, r2
  4052e6:	2b00      	cmp	r3, #0
  4052e8:	d070      	beq.n	4053cc <__ssprint_r+0xf0>
  4052ea:	4682      	mov	sl, r0
  4052ec:	460c      	mov	r4, r1
  4052ee:	6817      	ldr	r7, [r2, #0]
  4052f0:	688d      	ldr	r5, [r1, #8]
  4052f2:	6808      	ldr	r0, [r1, #0]
  4052f4:	e042      	b.n	40537c <__ssprint_r+0xa0>
  4052f6:	89a3      	ldrh	r3, [r4, #12]
  4052f8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4052fc:	d02e      	beq.n	40535c <__ssprint_r+0x80>
  4052fe:	6965      	ldr	r5, [r4, #20]
  405300:	6921      	ldr	r1, [r4, #16]
  405302:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405306:	eba0 0b01 	sub.w	fp, r0, r1
  40530a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40530e:	f10b 0001 	add.w	r0, fp, #1
  405312:	106d      	asrs	r5, r5, #1
  405314:	4430      	add	r0, r6
  405316:	42a8      	cmp	r0, r5
  405318:	462a      	mov	r2, r5
  40531a:	bf84      	itt	hi
  40531c:	4605      	movhi	r5, r0
  40531e:	462a      	movhi	r2, r5
  405320:	055b      	lsls	r3, r3, #21
  405322:	d538      	bpl.n	405396 <__ssprint_r+0xba>
  405324:	4611      	mov	r1, r2
  405326:	4650      	mov	r0, sl
  405328:	f7ff f870 	bl	40440c <_malloc_r>
  40532c:	2800      	cmp	r0, #0
  40532e:	d03c      	beq.n	4053aa <__ssprint_r+0xce>
  405330:	465a      	mov	r2, fp
  405332:	6921      	ldr	r1, [r4, #16]
  405334:	9001      	str	r0, [sp, #4]
  405336:	f7ff fb9b 	bl	404a70 <memcpy>
  40533a:	89a2      	ldrh	r2, [r4, #12]
  40533c:	9b01      	ldr	r3, [sp, #4]
  40533e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405342:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405346:	81a2      	strh	r2, [r4, #12]
  405348:	eba5 020b 	sub.w	r2, r5, fp
  40534c:	eb03 000b 	add.w	r0, r3, fp
  405350:	6165      	str	r5, [r4, #20]
  405352:	6123      	str	r3, [r4, #16]
  405354:	6020      	str	r0, [r4, #0]
  405356:	60a2      	str	r2, [r4, #8]
  405358:	4635      	mov	r5, r6
  40535a:	46b3      	mov	fp, r6
  40535c:	465a      	mov	r2, fp
  40535e:	4649      	mov	r1, r9
  405360:	f000 fa18 	bl	405794 <memmove>
  405364:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405368:	68a2      	ldr	r2, [r4, #8]
  40536a:	6820      	ldr	r0, [r4, #0]
  40536c:	1b55      	subs	r5, r2, r5
  40536e:	4458      	add	r0, fp
  405370:	1b9e      	subs	r6, r3, r6
  405372:	60a5      	str	r5, [r4, #8]
  405374:	6020      	str	r0, [r4, #0]
  405376:	f8c8 6008 	str.w	r6, [r8, #8]
  40537a:	b33e      	cbz	r6, 4053cc <__ssprint_r+0xf0>
  40537c:	687e      	ldr	r6, [r7, #4]
  40537e:	463b      	mov	r3, r7
  405380:	3708      	adds	r7, #8
  405382:	2e00      	cmp	r6, #0
  405384:	d0fa      	beq.n	40537c <__ssprint_r+0xa0>
  405386:	42ae      	cmp	r6, r5
  405388:	f8d3 9000 	ldr.w	r9, [r3]
  40538c:	46ab      	mov	fp, r5
  40538e:	d2b2      	bcs.n	4052f6 <__ssprint_r+0x1a>
  405390:	4635      	mov	r5, r6
  405392:	46b3      	mov	fp, r6
  405394:	e7e2      	b.n	40535c <__ssprint_r+0x80>
  405396:	4650      	mov	r0, sl
  405398:	f000 fa60 	bl	40585c <_realloc_r>
  40539c:	4603      	mov	r3, r0
  40539e:	2800      	cmp	r0, #0
  4053a0:	d1d2      	bne.n	405348 <__ssprint_r+0x6c>
  4053a2:	6921      	ldr	r1, [r4, #16]
  4053a4:	4650      	mov	r0, sl
  4053a6:	f000 f8f9 	bl	40559c <_free_r>
  4053aa:	230c      	movs	r3, #12
  4053ac:	f8ca 3000 	str.w	r3, [sl]
  4053b0:	89a3      	ldrh	r3, [r4, #12]
  4053b2:	2200      	movs	r2, #0
  4053b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4053b8:	f04f 30ff 	mov.w	r0, #4294967295
  4053bc:	81a3      	strh	r3, [r4, #12]
  4053be:	f8c8 2008 	str.w	r2, [r8, #8]
  4053c2:	f8c8 2004 	str.w	r2, [r8, #4]
  4053c6:	b003      	add	sp, #12
  4053c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4053cc:	2000      	movs	r0, #0
  4053ce:	f8c8 0004 	str.w	r0, [r8, #4]
  4053d2:	b003      	add	sp, #12
  4053d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004053d8 <__register_exitproc>:
  4053d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4053dc:	4d2c      	ldr	r5, [pc, #176]	; (405490 <__register_exitproc+0xb8>)
  4053de:	4606      	mov	r6, r0
  4053e0:	6828      	ldr	r0, [r5, #0]
  4053e2:	4698      	mov	r8, r3
  4053e4:	460f      	mov	r7, r1
  4053e6:	4691      	mov	r9, r2
  4053e8:	f7ff f80c 	bl	404404 <__retarget_lock_acquire_recursive>
  4053ec:	4b29      	ldr	r3, [pc, #164]	; (405494 <__register_exitproc+0xbc>)
  4053ee:	681c      	ldr	r4, [r3, #0]
  4053f0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4053f4:	2b00      	cmp	r3, #0
  4053f6:	d03e      	beq.n	405476 <__register_exitproc+0x9e>
  4053f8:	685a      	ldr	r2, [r3, #4]
  4053fa:	2a1f      	cmp	r2, #31
  4053fc:	dc1c      	bgt.n	405438 <__register_exitproc+0x60>
  4053fe:	f102 0e01 	add.w	lr, r2, #1
  405402:	b176      	cbz	r6, 405422 <__register_exitproc+0x4a>
  405404:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405408:	2401      	movs	r4, #1
  40540a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40540e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405412:	4094      	lsls	r4, r2
  405414:	4320      	orrs	r0, r4
  405416:	2e02      	cmp	r6, #2
  405418:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40541c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405420:	d023      	beq.n	40546a <__register_exitproc+0x92>
  405422:	3202      	adds	r2, #2
  405424:	f8c3 e004 	str.w	lr, [r3, #4]
  405428:	6828      	ldr	r0, [r5, #0]
  40542a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40542e:	f7fe ffeb 	bl	404408 <__retarget_lock_release_recursive>
  405432:	2000      	movs	r0, #0
  405434:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405438:	4b17      	ldr	r3, [pc, #92]	; (405498 <__register_exitproc+0xc0>)
  40543a:	b30b      	cbz	r3, 405480 <__register_exitproc+0xa8>
  40543c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405440:	f3af 8000 	nop.w
  405444:	4603      	mov	r3, r0
  405446:	b1d8      	cbz	r0, 405480 <__register_exitproc+0xa8>
  405448:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40544c:	6002      	str	r2, [r0, #0]
  40544e:	2100      	movs	r1, #0
  405450:	6041      	str	r1, [r0, #4]
  405452:	460a      	mov	r2, r1
  405454:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405458:	f04f 0e01 	mov.w	lr, #1
  40545c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405460:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405464:	2e00      	cmp	r6, #0
  405466:	d0dc      	beq.n	405422 <__register_exitproc+0x4a>
  405468:	e7cc      	b.n	405404 <__register_exitproc+0x2c>
  40546a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40546e:	430c      	orrs	r4, r1
  405470:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405474:	e7d5      	b.n	405422 <__register_exitproc+0x4a>
  405476:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40547a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40547e:	e7bb      	b.n	4053f8 <__register_exitproc+0x20>
  405480:	6828      	ldr	r0, [r5, #0]
  405482:	f7fe ffc1 	bl	404408 <__retarget_lock_release_recursive>
  405486:	f04f 30ff 	mov.w	r0, #4294967295
  40548a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40548e:	bf00      	nop
  405490:	20000440 	.word	0x20000440
  405494:	004074e4 	.word	0x004074e4
  405498:	00000000 	.word	0x00000000

0040549c <_calloc_r>:
  40549c:	b510      	push	{r4, lr}
  40549e:	fb02 f101 	mul.w	r1, r2, r1
  4054a2:	f7fe ffb3 	bl	40440c <_malloc_r>
  4054a6:	4604      	mov	r4, r0
  4054a8:	b1d8      	cbz	r0, 4054e2 <_calloc_r+0x46>
  4054aa:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4054ae:	f022 0203 	bic.w	r2, r2, #3
  4054b2:	3a04      	subs	r2, #4
  4054b4:	2a24      	cmp	r2, #36	; 0x24
  4054b6:	d818      	bhi.n	4054ea <_calloc_r+0x4e>
  4054b8:	2a13      	cmp	r2, #19
  4054ba:	d914      	bls.n	4054e6 <_calloc_r+0x4a>
  4054bc:	2300      	movs	r3, #0
  4054be:	2a1b      	cmp	r2, #27
  4054c0:	6003      	str	r3, [r0, #0]
  4054c2:	6043      	str	r3, [r0, #4]
  4054c4:	d916      	bls.n	4054f4 <_calloc_r+0x58>
  4054c6:	2a24      	cmp	r2, #36	; 0x24
  4054c8:	6083      	str	r3, [r0, #8]
  4054ca:	60c3      	str	r3, [r0, #12]
  4054cc:	bf11      	iteee	ne
  4054ce:	f100 0210 	addne.w	r2, r0, #16
  4054d2:	6103      	streq	r3, [r0, #16]
  4054d4:	6143      	streq	r3, [r0, #20]
  4054d6:	f100 0218 	addeq.w	r2, r0, #24
  4054da:	2300      	movs	r3, #0
  4054dc:	6013      	str	r3, [r2, #0]
  4054de:	6053      	str	r3, [r2, #4]
  4054e0:	6093      	str	r3, [r2, #8]
  4054e2:	4620      	mov	r0, r4
  4054e4:	bd10      	pop	{r4, pc}
  4054e6:	4602      	mov	r2, r0
  4054e8:	e7f7      	b.n	4054da <_calloc_r+0x3e>
  4054ea:	2100      	movs	r1, #0
  4054ec:	f7fc fa1a 	bl	401924 <memset>
  4054f0:	4620      	mov	r0, r4
  4054f2:	bd10      	pop	{r4, pc}
  4054f4:	f100 0208 	add.w	r2, r0, #8
  4054f8:	e7ef      	b.n	4054da <_calloc_r+0x3e>
  4054fa:	bf00      	nop

004054fc <_malloc_trim_r>:
  4054fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4054fe:	4f24      	ldr	r7, [pc, #144]	; (405590 <_malloc_trim_r+0x94>)
  405500:	460c      	mov	r4, r1
  405502:	4606      	mov	r6, r0
  405504:	f7ff fb4e 	bl	404ba4 <__malloc_lock>
  405508:	68bb      	ldr	r3, [r7, #8]
  40550a:	685d      	ldr	r5, [r3, #4]
  40550c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405510:	310f      	adds	r1, #15
  405512:	f025 0503 	bic.w	r5, r5, #3
  405516:	4429      	add	r1, r5
  405518:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40551c:	f021 010f 	bic.w	r1, r1, #15
  405520:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405524:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405528:	db07      	blt.n	40553a <_malloc_trim_r+0x3e>
  40552a:	2100      	movs	r1, #0
  40552c:	4630      	mov	r0, r6
  40552e:	f7ff fe3f 	bl	4051b0 <_sbrk_r>
  405532:	68bb      	ldr	r3, [r7, #8]
  405534:	442b      	add	r3, r5
  405536:	4298      	cmp	r0, r3
  405538:	d004      	beq.n	405544 <_malloc_trim_r+0x48>
  40553a:	4630      	mov	r0, r6
  40553c:	f7ff fb38 	bl	404bb0 <__malloc_unlock>
  405540:	2000      	movs	r0, #0
  405542:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405544:	4261      	negs	r1, r4
  405546:	4630      	mov	r0, r6
  405548:	f7ff fe32 	bl	4051b0 <_sbrk_r>
  40554c:	3001      	adds	r0, #1
  40554e:	d00d      	beq.n	40556c <_malloc_trim_r+0x70>
  405550:	4b10      	ldr	r3, [pc, #64]	; (405594 <_malloc_trim_r+0x98>)
  405552:	68ba      	ldr	r2, [r7, #8]
  405554:	6819      	ldr	r1, [r3, #0]
  405556:	1b2d      	subs	r5, r5, r4
  405558:	f045 0501 	orr.w	r5, r5, #1
  40555c:	4630      	mov	r0, r6
  40555e:	1b09      	subs	r1, r1, r4
  405560:	6055      	str	r5, [r2, #4]
  405562:	6019      	str	r1, [r3, #0]
  405564:	f7ff fb24 	bl	404bb0 <__malloc_unlock>
  405568:	2001      	movs	r0, #1
  40556a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40556c:	2100      	movs	r1, #0
  40556e:	4630      	mov	r0, r6
  405570:	f7ff fe1e 	bl	4051b0 <_sbrk_r>
  405574:	68ba      	ldr	r2, [r7, #8]
  405576:	1a83      	subs	r3, r0, r2
  405578:	2b0f      	cmp	r3, #15
  40557a:	ddde      	ble.n	40553a <_malloc_trim_r+0x3e>
  40557c:	4c06      	ldr	r4, [pc, #24]	; (405598 <_malloc_trim_r+0x9c>)
  40557e:	4905      	ldr	r1, [pc, #20]	; (405594 <_malloc_trim_r+0x98>)
  405580:	6824      	ldr	r4, [r4, #0]
  405582:	f043 0301 	orr.w	r3, r3, #1
  405586:	1b00      	subs	r0, r0, r4
  405588:	6053      	str	r3, [r2, #4]
  40558a:	6008      	str	r0, [r1, #0]
  40558c:	e7d5      	b.n	40553a <_malloc_trim_r+0x3e>
  40558e:	bf00      	nop
  405590:	20000444 	.word	0x20000444
  405594:	20000a7c 	.word	0x20000a7c
  405598:	2000084c 	.word	0x2000084c

0040559c <_free_r>:
  40559c:	2900      	cmp	r1, #0
  40559e:	d044      	beq.n	40562a <_free_r+0x8e>
  4055a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4055a4:	460d      	mov	r5, r1
  4055a6:	4680      	mov	r8, r0
  4055a8:	f7ff fafc 	bl	404ba4 <__malloc_lock>
  4055ac:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4055b0:	4969      	ldr	r1, [pc, #420]	; (405758 <_free_r+0x1bc>)
  4055b2:	f027 0301 	bic.w	r3, r7, #1
  4055b6:	f1a5 0408 	sub.w	r4, r5, #8
  4055ba:	18e2      	adds	r2, r4, r3
  4055bc:	688e      	ldr	r6, [r1, #8]
  4055be:	6850      	ldr	r0, [r2, #4]
  4055c0:	42b2      	cmp	r2, r6
  4055c2:	f020 0003 	bic.w	r0, r0, #3
  4055c6:	d05e      	beq.n	405686 <_free_r+0xea>
  4055c8:	07fe      	lsls	r6, r7, #31
  4055ca:	6050      	str	r0, [r2, #4]
  4055cc:	d40b      	bmi.n	4055e6 <_free_r+0x4a>
  4055ce:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4055d2:	1be4      	subs	r4, r4, r7
  4055d4:	f101 0e08 	add.w	lr, r1, #8
  4055d8:	68a5      	ldr	r5, [r4, #8]
  4055da:	4575      	cmp	r5, lr
  4055dc:	443b      	add	r3, r7
  4055de:	d06d      	beq.n	4056bc <_free_r+0x120>
  4055e0:	68e7      	ldr	r7, [r4, #12]
  4055e2:	60ef      	str	r7, [r5, #12]
  4055e4:	60bd      	str	r5, [r7, #8]
  4055e6:	1815      	adds	r5, r2, r0
  4055e8:	686d      	ldr	r5, [r5, #4]
  4055ea:	07ed      	lsls	r5, r5, #31
  4055ec:	d53e      	bpl.n	40566c <_free_r+0xd0>
  4055ee:	f043 0201 	orr.w	r2, r3, #1
  4055f2:	6062      	str	r2, [r4, #4]
  4055f4:	50e3      	str	r3, [r4, r3]
  4055f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4055fa:	d217      	bcs.n	40562c <_free_r+0x90>
  4055fc:	08db      	lsrs	r3, r3, #3
  4055fe:	1c58      	adds	r0, r3, #1
  405600:	109a      	asrs	r2, r3, #2
  405602:	684d      	ldr	r5, [r1, #4]
  405604:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405608:	60a7      	str	r7, [r4, #8]
  40560a:	2301      	movs	r3, #1
  40560c:	4093      	lsls	r3, r2
  40560e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405612:	432b      	orrs	r3, r5
  405614:	3a08      	subs	r2, #8
  405616:	60e2      	str	r2, [r4, #12]
  405618:	604b      	str	r3, [r1, #4]
  40561a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40561e:	60fc      	str	r4, [r7, #12]
  405620:	4640      	mov	r0, r8
  405622:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405626:	f7ff bac3 	b.w	404bb0 <__malloc_unlock>
  40562a:	4770      	bx	lr
  40562c:	0a5a      	lsrs	r2, r3, #9
  40562e:	2a04      	cmp	r2, #4
  405630:	d852      	bhi.n	4056d8 <_free_r+0x13c>
  405632:	099a      	lsrs	r2, r3, #6
  405634:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405638:	00ff      	lsls	r7, r7, #3
  40563a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40563e:	19c8      	adds	r0, r1, r7
  405640:	59ca      	ldr	r2, [r1, r7]
  405642:	3808      	subs	r0, #8
  405644:	4290      	cmp	r0, r2
  405646:	d04f      	beq.n	4056e8 <_free_r+0x14c>
  405648:	6851      	ldr	r1, [r2, #4]
  40564a:	f021 0103 	bic.w	r1, r1, #3
  40564e:	428b      	cmp	r3, r1
  405650:	d232      	bcs.n	4056b8 <_free_r+0x11c>
  405652:	6892      	ldr	r2, [r2, #8]
  405654:	4290      	cmp	r0, r2
  405656:	d1f7      	bne.n	405648 <_free_r+0xac>
  405658:	68c3      	ldr	r3, [r0, #12]
  40565a:	60a0      	str	r0, [r4, #8]
  40565c:	60e3      	str	r3, [r4, #12]
  40565e:	609c      	str	r4, [r3, #8]
  405660:	60c4      	str	r4, [r0, #12]
  405662:	4640      	mov	r0, r8
  405664:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405668:	f7ff baa2 	b.w	404bb0 <__malloc_unlock>
  40566c:	6895      	ldr	r5, [r2, #8]
  40566e:	4f3b      	ldr	r7, [pc, #236]	; (40575c <_free_r+0x1c0>)
  405670:	42bd      	cmp	r5, r7
  405672:	4403      	add	r3, r0
  405674:	d040      	beq.n	4056f8 <_free_r+0x15c>
  405676:	68d0      	ldr	r0, [r2, #12]
  405678:	60e8      	str	r0, [r5, #12]
  40567a:	f043 0201 	orr.w	r2, r3, #1
  40567e:	6085      	str	r5, [r0, #8]
  405680:	6062      	str	r2, [r4, #4]
  405682:	50e3      	str	r3, [r4, r3]
  405684:	e7b7      	b.n	4055f6 <_free_r+0x5a>
  405686:	07ff      	lsls	r7, r7, #31
  405688:	4403      	add	r3, r0
  40568a:	d407      	bmi.n	40569c <_free_r+0x100>
  40568c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405690:	1aa4      	subs	r4, r4, r2
  405692:	4413      	add	r3, r2
  405694:	68a0      	ldr	r0, [r4, #8]
  405696:	68e2      	ldr	r2, [r4, #12]
  405698:	60c2      	str	r2, [r0, #12]
  40569a:	6090      	str	r0, [r2, #8]
  40569c:	4a30      	ldr	r2, [pc, #192]	; (405760 <_free_r+0x1c4>)
  40569e:	6812      	ldr	r2, [r2, #0]
  4056a0:	f043 0001 	orr.w	r0, r3, #1
  4056a4:	4293      	cmp	r3, r2
  4056a6:	6060      	str	r0, [r4, #4]
  4056a8:	608c      	str	r4, [r1, #8]
  4056aa:	d3b9      	bcc.n	405620 <_free_r+0x84>
  4056ac:	4b2d      	ldr	r3, [pc, #180]	; (405764 <_free_r+0x1c8>)
  4056ae:	4640      	mov	r0, r8
  4056b0:	6819      	ldr	r1, [r3, #0]
  4056b2:	f7ff ff23 	bl	4054fc <_malloc_trim_r>
  4056b6:	e7b3      	b.n	405620 <_free_r+0x84>
  4056b8:	4610      	mov	r0, r2
  4056ba:	e7cd      	b.n	405658 <_free_r+0xbc>
  4056bc:	1811      	adds	r1, r2, r0
  4056be:	6849      	ldr	r1, [r1, #4]
  4056c0:	07c9      	lsls	r1, r1, #31
  4056c2:	d444      	bmi.n	40574e <_free_r+0x1b2>
  4056c4:	6891      	ldr	r1, [r2, #8]
  4056c6:	68d2      	ldr	r2, [r2, #12]
  4056c8:	60ca      	str	r2, [r1, #12]
  4056ca:	4403      	add	r3, r0
  4056cc:	f043 0001 	orr.w	r0, r3, #1
  4056d0:	6091      	str	r1, [r2, #8]
  4056d2:	6060      	str	r0, [r4, #4]
  4056d4:	50e3      	str	r3, [r4, r3]
  4056d6:	e7a3      	b.n	405620 <_free_r+0x84>
  4056d8:	2a14      	cmp	r2, #20
  4056da:	d816      	bhi.n	40570a <_free_r+0x16e>
  4056dc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4056e0:	00ff      	lsls	r7, r7, #3
  4056e2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4056e6:	e7aa      	b.n	40563e <_free_r+0xa2>
  4056e8:	10aa      	asrs	r2, r5, #2
  4056ea:	2301      	movs	r3, #1
  4056ec:	684d      	ldr	r5, [r1, #4]
  4056ee:	4093      	lsls	r3, r2
  4056f0:	432b      	orrs	r3, r5
  4056f2:	604b      	str	r3, [r1, #4]
  4056f4:	4603      	mov	r3, r0
  4056f6:	e7b0      	b.n	40565a <_free_r+0xbe>
  4056f8:	f043 0201 	orr.w	r2, r3, #1
  4056fc:	614c      	str	r4, [r1, #20]
  4056fe:	610c      	str	r4, [r1, #16]
  405700:	60e5      	str	r5, [r4, #12]
  405702:	60a5      	str	r5, [r4, #8]
  405704:	6062      	str	r2, [r4, #4]
  405706:	50e3      	str	r3, [r4, r3]
  405708:	e78a      	b.n	405620 <_free_r+0x84>
  40570a:	2a54      	cmp	r2, #84	; 0x54
  40570c:	d806      	bhi.n	40571c <_free_r+0x180>
  40570e:	0b1a      	lsrs	r2, r3, #12
  405710:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405714:	00ff      	lsls	r7, r7, #3
  405716:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40571a:	e790      	b.n	40563e <_free_r+0xa2>
  40571c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405720:	d806      	bhi.n	405730 <_free_r+0x194>
  405722:	0bda      	lsrs	r2, r3, #15
  405724:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405728:	00ff      	lsls	r7, r7, #3
  40572a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40572e:	e786      	b.n	40563e <_free_r+0xa2>
  405730:	f240 5054 	movw	r0, #1364	; 0x554
  405734:	4282      	cmp	r2, r0
  405736:	d806      	bhi.n	405746 <_free_r+0x1aa>
  405738:	0c9a      	lsrs	r2, r3, #18
  40573a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40573e:	00ff      	lsls	r7, r7, #3
  405740:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405744:	e77b      	b.n	40563e <_free_r+0xa2>
  405746:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40574a:	257e      	movs	r5, #126	; 0x7e
  40574c:	e777      	b.n	40563e <_free_r+0xa2>
  40574e:	f043 0101 	orr.w	r1, r3, #1
  405752:	6061      	str	r1, [r4, #4]
  405754:	6013      	str	r3, [r2, #0]
  405756:	e763      	b.n	405620 <_free_r+0x84>
  405758:	20000444 	.word	0x20000444
  40575c:	2000044c 	.word	0x2000044c
  405760:	20000850 	.word	0x20000850
  405764:	20000aac 	.word	0x20000aac

00405768 <__ascii_mbtowc>:
  405768:	b082      	sub	sp, #8
  40576a:	b149      	cbz	r1, 405780 <__ascii_mbtowc+0x18>
  40576c:	b15a      	cbz	r2, 405786 <__ascii_mbtowc+0x1e>
  40576e:	b16b      	cbz	r3, 40578c <__ascii_mbtowc+0x24>
  405770:	7813      	ldrb	r3, [r2, #0]
  405772:	600b      	str	r3, [r1, #0]
  405774:	7812      	ldrb	r2, [r2, #0]
  405776:	1c10      	adds	r0, r2, #0
  405778:	bf18      	it	ne
  40577a:	2001      	movne	r0, #1
  40577c:	b002      	add	sp, #8
  40577e:	4770      	bx	lr
  405780:	a901      	add	r1, sp, #4
  405782:	2a00      	cmp	r2, #0
  405784:	d1f3      	bne.n	40576e <__ascii_mbtowc+0x6>
  405786:	4610      	mov	r0, r2
  405788:	b002      	add	sp, #8
  40578a:	4770      	bx	lr
  40578c:	f06f 0001 	mvn.w	r0, #1
  405790:	e7f4      	b.n	40577c <__ascii_mbtowc+0x14>
  405792:	bf00      	nop

00405794 <memmove>:
  405794:	4288      	cmp	r0, r1
  405796:	b5f0      	push	{r4, r5, r6, r7, lr}
  405798:	d90d      	bls.n	4057b6 <memmove+0x22>
  40579a:	188b      	adds	r3, r1, r2
  40579c:	4298      	cmp	r0, r3
  40579e:	d20a      	bcs.n	4057b6 <memmove+0x22>
  4057a0:	1884      	adds	r4, r0, r2
  4057a2:	2a00      	cmp	r2, #0
  4057a4:	d051      	beq.n	40584a <memmove+0xb6>
  4057a6:	4622      	mov	r2, r4
  4057a8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4057ac:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4057b0:	4299      	cmp	r1, r3
  4057b2:	d1f9      	bne.n	4057a8 <memmove+0x14>
  4057b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4057b6:	2a0f      	cmp	r2, #15
  4057b8:	d948      	bls.n	40584c <memmove+0xb8>
  4057ba:	ea41 0300 	orr.w	r3, r1, r0
  4057be:	079b      	lsls	r3, r3, #30
  4057c0:	d146      	bne.n	405850 <memmove+0xbc>
  4057c2:	f100 0410 	add.w	r4, r0, #16
  4057c6:	f101 0310 	add.w	r3, r1, #16
  4057ca:	4615      	mov	r5, r2
  4057cc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4057d0:	f844 6c10 	str.w	r6, [r4, #-16]
  4057d4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4057d8:	f844 6c0c 	str.w	r6, [r4, #-12]
  4057dc:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4057e0:	f844 6c08 	str.w	r6, [r4, #-8]
  4057e4:	3d10      	subs	r5, #16
  4057e6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4057ea:	f844 6c04 	str.w	r6, [r4, #-4]
  4057ee:	2d0f      	cmp	r5, #15
  4057f0:	f103 0310 	add.w	r3, r3, #16
  4057f4:	f104 0410 	add.w	r4, r4, #16
  4057f8:	d8e8      	bhi.n	4057cc <memmove+0x38>
  4057fa:	f1a2 0310 	sub.w	r3, r2, #16
  4057fe:	f023 030f 	bic.w	r3, r3, #15
  405802:	f002 0e0f 	and.w	lr, r2, #15
  405806:	3310      	adds	r3, #16
  405808:	f1be 0f03 	cmp.w	lr, #3
  40580c:	4419      	add	r1, r3
  40580e:	4403      	add	r3, r0
  405810:	d921      	bls.n	405856 <memmove+0xc2>
  405812:	1f1e      	subs	r6, r3, #4
  405814:	460d      	mov	r5, r1
  405816:	4674      	mov	r4, lr
  405818:	3c04      	subs	r4, #4
  40581a:	f855 7b04 	ldr.w	r7, [r5], #4
  40581e:	f846 7f04 	str.w	r7, [r6, #4]!
  405822:	2c03      	cmp	r4, #3
  405824:	d8f8      	bhi.n	405818 <memmove+0x84>
  405826:	f1ae 0404 	sub.w	r4, lr, #4
  40582a:	f024 0403 	bic.w	r4, r4, #3
  40582e:	3404      	adds	r4, #4
  405830:	4421      	add	r1, r4
  405832:	4423      	add	r3, r4
  405834:	f002 0203 	and.w	r2, r2, #3
  405838:	b162      	cbz	r2, 405854 <memmove+0xc0>
  40583a:	3b01      	subs	r3, #1
  40583c:	440a      	add	r2, r1
  40583e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405842:	f803 4f01 	strb.w	r4, [r3, #1]!
  405846:	428a      	cmp	r2, r1
  405848:	d1f9      	bne.n	40583e <memmove+0xaa>
  40584a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40584c:	4603      	mov	r3, r0
  40584e:	e7f3      	b.n	405838 <memmove+0xa4>
  405850:	4603      	mov	r3, r0
  405852:	e7f2      	b.n	40583a <memmove+0xa6>
  405854:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405856:	4672      	mov	r2, lr
  405858:	e7ee      	b.n	405838 <memmove+0xa4>
  40585a:	bf00      	nop

0040585c <_realloc_r>:
  40585c:	2900      	cmp	r1, #0
  40585e:	f000 8095 	beq.w	40598c <_realloc_r+0x130>
  405862:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405866:	460d      	mov	r5, r1
  405868:	4616      	mov	r6, r2
  40586a:	b083      	sub	sp, #12
  40586c:	4680      	mov	r8, r0
  40586e:	f106 070b 	add.w	r7, r6, #11
  405872:	f7ff f997 	bl	404ba4 <__malloc_lock>
  405876:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40587a:	2f16      	cmp	r7, #22
  40587c:	f02e 0403 	bic.w	r4, lr, #3
  405880:	f1a5 0908 	sub.w	r9, r5, #8
  405884:	d83c      	bhi.n	405900 <_realloc_r+0xa4>
  405886:	2210      	movs	r2, #16
  405888:	4617      	mov	r7, r2
  40588a:	42be      	cmp	r6, r7
  40588c:	d83d      	bhi.n	40590a <_realloc_r+0xae>
  40588e:	4294      	cmp	r4, r2
  405890:	da43      	bge.n	40591a <_realloc_r+0xbe>
  405892:	4bc4      	ldr	r3, [pc, #784]	; (405ba4 <_realloc_r+0x348>)
  405894:	6899      	ldr	r1, [r3, #8]
  405896:	eb09 0004 	add.w	r0, r9, r4
  40589a:	4288      	cmp	r0, r1
  40589c:	f000 80b4 	beq.w	405a08 <_realloc_r+0x1ac>
  4058a0:	6843      	ldr	r3, [r0, #4]
  4058a2:	f023 0101 	bic.w	r1, r3, #1
  4058a6:	4401      	add	r1, r0
  4058a8:	6849      	ldr	r1, [r1, #4]
  4058aa:	07c9      	lsls	r1, r1, #31
  4058ac:	d54c      	bpl.n	405948 <_realloc_r+0xec>
  4058ae:	f01e 0f01 	tst.w	lr, #1
  4058b2:	f000 809b 	beq.w	4059ec <_realloc_r+0x190>
  4058b6:	4631      	mov	r1, r6
  4058b8:	4640      	mov	r0, r8
  4058ba:	f7fe fda7 	bl	40440c <_malloc_r>
  4058be:	4606      	mov	r6, r0
  4058c0:	2800      	cmp	r0, #0
  4058c2:	d03a      	beq.n	40593a <_realloc_r+0xde>
  4058c4:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4058c8:	f023 0301 	bic.w	r3, r3, #1
  4058cc:	444b      	add	r3, r9
  4058ce:	f1a0 0208 	sub.w	r2, r0, #8
  4058d2:	429a      	cmp	r2, r3
  4058d4:	f000 8121 	beq.w	405b1a <_realloc_r+0x2be>
  4058d8:	1f22      	subs	r2, r4, #4
  4058da:	2a24      	cmp	r2, #36	; 0x24
  4058dc:	f200 8107 	bhi.w	405aee <_realloc_r+0x292>
  4058e0:	2a13      	cmp	r2, #19
  4058e2:	f200 80db 	bhi.w	405a9c <_realloc_r+0x240>
  4058e6:	4603      	mov	r3, r0
  4058e8:	462a      	mov	r2, r5
  4058ea:	6811      	ldr	r1, [r2, #0]
  4058ec:	6019      	str	r1, [r3, #0]
  4058ee:	6851      	ldr	r1, [r2, #4]
  4058f0:	6059      	str	r1, [r3, #4]
  4058f2:	6892      	ldr	r2, [r2, #8]
  4058f4:	609a      	str	r2, [r3, #8]
  4058f6:	4629      	mov	r1, r5
  4058f8:	4640      	mov	r0, r8
  4058fa:	f7ff fe4f 	bl	40559c <_free_r>
  4058fe:	e01c      	b.n	40593a <_realloc_r+0xde>
  405900:	f027 0707 	bic.w	r7, r7, #7
  405904:	2f00      	cmp	r7, #0
  405906:	463a      	mov	r2, r7
  405908:	dabf      	bge.n	40588a <_realloc_r+0x2e>
  40590a:	2600      	movs	r6, #0
  40590c:	230c      	movs	r3, #12
  40590e:	4630      	mov	r0, r6
  405910:	f8c8 3000 	str.w	r3, [r8]
  405914:	b003      	add	sp, #12
  405916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40591a:	462e      	mov	r6, r5
  40591c:	1be3      	subs	r3, r4, r7
  40591e:	2b0f      	cmp	r3, #15
  405920:	d81e      	bhi.n	405960 <_realloc_r+0x104>
  405922:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405926:	f003 0301 	and.w	r3, r3, #1
  40592a:	4323      	orrs	r3, r4
  40592c:	444c      	add	r4, r9
  40592e:	f8c9 3004 	str.w	r3, [r9, #4]
  405932:	6863      	ldr	r3, [r4, #4]
  405934:	f043 0301 	orr.w	r3, r3, #1
  405938:	6063      	str	r3, [r4, #4]
  40593a:	4640      	mov	r0, r8
  40593c:	f7ff f938 	bl	404bb0 <__malloc_unlock>
  405940:	4630      	mov	r0, r6
  405942:	b003      	add	sp, #12
  405944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405948:	f023 0303 	bic.w	r3, r3, #3
  40594c:	18e1      	adds	r1, r4, r3
  40594e:	4291      	cmp	r1, r2
  405950:	db1f      	blt.n	405992 <_realloc_r+0x136>
  405952:	68c3      	ldr	r3, [r0, #12]
  405954:	6882      	ldr	r2, [r0, #8]
  405956:	462e      	mov	r6, r5
  405958:	60d3      	str	r3, [r2, #12]
  40595a:	460c      	mov	r4, r1
  40595c:	609a      	str	r2, [r3, #8]
  40595e:	e7dd      	b.n	40591c <_realloc_r+0xc0>
  405960:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405964:	eb09 0107 	add.w	r1, r9, r7
  405968:	f002 0201 	and.w	r2, r2, #1
  40596c:	444c      	add	r4, r9
  40596e:	f043 0301 	orr.w	r3, r3, #1
  405972:	4317      	orrs	r7, r2
  405974:	f8c9 7004 	str.w	r7, [r9, #4]
  405978:	604b      	str	r3, [r1, #4]
  40597a:	6863      	ldr	r3, [r4, #4]
  40597c:	f043 0301 	orr.w	r3, r3, #1
  405980:	3108      	adds	r1, #8
  405982:	6063      	str	r3, [r4, #4]
  405984:	4640      	mov	r0, r8
  405986:	f7ff fe09 	bl	40559c <_free_r>
  40598a:	e7d6      	b.n	40593a <_realloc_r+0xde>
  40598c:	4611      	mov	r1, r2
  40598e:	f7fe bd3d 	b.w	40440c <_malloc_r>
  405992:	f01e 0f01 	tst.w	lr, #1
  405996:	d18e      	bne.n	4058b6 <_realloc_r+0x5a>
  405998:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40599c:	eba9 0a01 	sub.w	sl, r9, r1
  4059a0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4059a4:	f021 0103 	bic.w	r1, r1, #3
  4059a8:	440b      	add	r3, r1
  4059aa:	4423      	add	r3, r4
  4059ac:	4293      	cmp	r3, r2
  4059ae:	db25      	blt.n	4059fc <_realloc_r+0x1a0>
  4059b0:	68c2      	ldr	r2, [r0, #12]
  4059b2:	6881      	ldr	r1, [r0, #8]
  4059b4:	4656      	mov	r6, sl
  4059b6:	60ca      	str	r2, [r1, #12]
  4059b8:	6091      	str	r1, [r2, #8]
  4059ba:	f8da 100c 	ldr.w	r1, [sl, #12]
  4059be:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4059c2:	1f22      	subs	r2, r4, #4
  4059c4:	2a24      	cmp	r2, #36	; 0x24
  4059c6:	60c1      	str	r1, [r0, #12]
  4059c8:	6088      	str	r0, [r1, #8]
  4059ca:	f200 8094 	bhi.w	405af6 <_realloc_r+0x29a>
  4059ce:	2a13      	cmp	r2, #19
  4059d0:	d96f      	bls.n	405ab2 <_realloc_r+0x256>
  4059d2:	6829      	ldr	r1, [r5, #0]
  4059d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4059d8:	6869      	ldr	r1, [r5, #4]
  4059da:	f8ca 100c 	str.w	r1, [sl, #12]
  4059de:	2a1b      	cmp	r2, #27
  4059e0:	f200 80a2 	bhi.w	405b28 <_realloc_r+0x2cc>
  4059e4:	3508      	adds	r5, #8
  4059e6:	f10a 0210 	add.w	r2, sl, #16
  4059ea:	e063      	b.n	405ab4 <_realloc_r+0x258>
  4059ec:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4059f0:	eba9 0a03 	sub.w	sl, r9, r3
  4059f4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4059f8:	f021 0103 	bic.w	r1, r1, #3
  4059fc:	1863      	adds	r3, r4, r1
  4059fe:	4293      	cmp	r3, r2
  405a00:	f6ff af59 	blt.w	4058b6 <_realloc_r+0x5a>
  405a04:	4656      	mov	r6, sl
  405a06:	e7d8      	b.n	4059ba <_realloc_r+0x15e>
  405a08:	6841      	ldr	r1, [r0, #4]
  405a0a:	f021 0b03 	bic.w	fp, r1, #3
  405a0e:	44a3      	add	fp, r4
  405a10:	f107 0010 	add.w	r0, r7, #16
  405a14:	4583      	cmp	fp, r0
  405a16:	da56      	bge.n	405ac6 <_realloc_r+0x26a>
  405a18:	f01e 0f01 	tst.w	lr, #1
  405a1c:	f47f af4b 	bne.w	4058b6 <_realloc_r+0x5a>
  405a20:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405a24:	eba9 0a01 	sub.w	sl, r9, r1
  405a28:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a2c:	f021 0103 	bic.w	r1, r1, #3
  405a30:	448b      	add	fp, r1
  405a32:	4558      	cmp	r0, fp
  405a34:	dce2      	bgt.n	4059fc <_realloc_r+0x1a0>
  405a36:	4656      	mov	r6, sl
  405a38:	f8da 100c 	ldr.w	r1, [sl, #12]
  405a3c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405a40:	1f22      	subs	r2, r4, #4
  405a42:	2a24      	cmp	r2, #36	; 0x24
  405a44:	60c1      	str	r1, [r0, #12]
  405a46:	6088      	str	r0, [r1, #8]
  405a48:	f200 808f 	bhi.w	405b6a <_realloc_r+0x30e>
  405a4c:	2a13      	cmp	r2, #19
  405a4e:	f240 808a 	bls.w	405b66 <_realloc_r+0x30a>
  405a52:	6829      	ldr	r1, [r5, #0]
  405a54:	f8ca 1008 	str.w	r1, [sl, #8]
  405a58:	6869      	ldr	r1, [r5, #4]
  405a5a:	f8ca 100c 	str.w	r1, [sl, #12]
  405a5e:	2a1b      	cmp	r2, #27
  405a60:	f200 808a 	bhi.w	405b78 <_realloc_r+0x31c>
  405a64:	3508      	adds	r5, #8
  405a66:	f10a 0210 	add.w	r2, sl, #16
  405a6a:	6829      	ldr	r1, [r5, #0]
  405a6c:	6011      	str	r1, [r2, #0]
  405a6e:	6869      	ldr	r1, [r5, #4]
  405a70:	6051      	str	r1, [r2, #4]
  405a72:	68a9      	ldr	r1, [r5, #8]
  405a74:	6091      	str	r1, [r2, #8]
  405a76:	eb0a 0107 	add.w	r1, sl, r7
  405a7a:	ebab 0207 	sub.w	r2, fp, r7
  405a7e:	f042 0201 	orr.w	r2, r2, #1
  405a82:	6099      	str	r1, [r3, #8]
  405a84:	604a      	str	r2, [r1, #4]
  405a86:	f8da 3004 	ldr.w	r3, [sl, #4]
  405a8a:	f003 0301 	and.w	r3, r3, #1
  405a8e:	431f      	orrs	r7, r3
  405a90:	4640      	mov	r0, r8
  405a92:	f8ca 7004 	str.w	r7, [sl, #4]
  405a96:	f7ff f88b 	bl	404bb0 <__malloc_unlock>
  405a9a:	e751      	b.n	405940 <_realloc_r+0xe4>
  405a9c:	682b      	ldr	r3, [r5, #0]
  405a9e:	6003      	str	r3, [r0, #0]
  405aa0:	686b      	ldr	r3, [r5, #4]
  405aa2:	6043      	str	r3, [r0, #4]
  405aa4:	2a1b      	cmp	r2, #27
  405aa6:	d82d      	bhi.n	405b04 <_realloc_r+0x2a8>
  405aa8:	f100 0308 	add.w	r3, r0, #8
  405aac:	f105 0208 	add.w	r2, r5, #8
  405ab0:	e71b      	b.n	4058ea <_realloc_r+0x8e>
  405ab2:	4632      	mov	r2, r6
  405ab4:	6829      	ldr	r1, [r5, #0]
  405ab6:	6011      	str	r1, [r2, #0]
  405ab8:	6869      	ldr	r1, [r5, #4]
  405aba:	6051      	str	r1, [r2, #4]
  405abc:	68a9      	ldr	r1, [r5, #8]
  405abe:	6091      	str	r1, [r2, #8]
  405ac0:	461c      	mov	r4, r3
  405ac2:	46d1      	mov	r9, sl
  405ac4:	e72a      	b.n	40591c <_realloc_r+0xc0>
  405ac6:	eb09 0107 	add.w	r1, r9, r7
  405aca:	ebab 0b07 	sub.w	fp, fp, r7
  405ace:	f04b 0201 	orr.w	r2, fp, #1
  405ad2:	6099      	str	r1, [r3, #8]
  405ad4:	604a      	str	r2, [r1, #4]
  405ad6:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405ada:	f003 0301 	and.w	r3, r3, #1
  405ade:	431f      	orrs	r7, r3
  405ae0:	4640      	mov	r0, r8
  405ae2:	f845 7c04 	str.w	r7, [r5, #-4]
  405ae6:	f7ff f863 	bl	404bb0 <__malloc_unlock>
  405aea:	462e      	mov	r6, r5
  405aec:	e728      	b.n	405940 <_realloc_r+0xe4>
  405aee:	4629      	mov	r1, r5
  405af0:	f7ff fe50 	bl	405794 <memmove>
  405af4:	e6ff      	b.n	4058f6 <_realloc_r+0x9a>
  405af6:	4629      	mov	r1, r5
  405af8:	4630      	mov	r0, r6
  405afa:	461c      	mov	r4, r3
  405afc:	46d1      	mov	r9, sl
  405afe:	f7ff fe49 	bl	405794 <memmove>
  405b02:	e70b      	b.n	40591c <_realloc_r+0xc0>
  405b04:	68ab      	ldr	r3, [r5, #8]
  405b06:	6083      	str	r3, [r0, #8]
  405b08:	68eb      	ldr	r3, [r5, #12]
  405b0a:	60c3      	str	r3, [r0, #12]
  405b0c:	2a24      	cmp	r2, #36	; 0x24
  405b0e:	d017      	beq.n	405b40 <_realloc_r+0x2e4>
  405b10:	f100 0310 	add.w	r3, r0, #16
  405b14:	f105 0210 	add.w	r2, r5, #16
  405b18:	e6e7      	b.n	4058ea <_realloc_r+0x8e>
  405b1a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405b1e:	f023 0303 	bic.w	r3, r3, #3
  405b22:	441c      	add	r4, r3
  405b24:	462e      	mov	r6, r5
  405b26:	e6f9      	b.n	40591c <_realloc_r+0xc0>
  405b28:	68a9      	ldr	r1, [r5, #8]
  405b2a:	f8ca 1010 	str.w	r1, [sl, #16]
  405b2e:	68e9      	ldr	r1, [r5, #12]
  405b30:	f8ca 1014 	str.w	r1, [sl, #20]
  405b34:	2a24      	cmp	r2, #36	; 0x24
  405b36:	d00c      	beq.n	405b52 <_realloc_r+0x2f6>
  405b38:	3510      	adds	r5, #16
  405b3a:	f10a 0218 	add.w	r2, sl, #24
  405b3e:	e7b9      	b.n	405ab4 <_realloc_r+0x258>
  405b40:	692b      	ldr	r3, [r5, #16]
  405b42:	6103      	str	r3, [r0, #16]
  405b44:	696b      	ldr	r3, [r5, #20]
  405b46:	6143      	str	r3, [r0, #20]
  405b48:	f105 0218 	add.w	r2, r5, #24
  405b4c:	f100 0318 	add.w	r3, r0, #24
  405b50:	e6cb      	b.n	4058ea <_realloc_r+0x8e>
  405b52:	692a      	ldr	r2, [r5, #16]
  405b54:	f8ca 2018 	str.w	r2, [sl, #24]
  405b58:	696a      	ldr	r2, [r5, #20]
  405b5a:	f8ca 201c 	str.w	r2, [sl, #28]
  405b5e:	3518      	adds	r5, #24
  405b60:	f10a 0220 	add.w	r2, sl, #32
  405b64:	e7a6      	b.n	405ab4 <_realloc_r+0x258>
  405b66:	4632      	mov	r2, r6
  405b68:	e77f      	b.n	405a6a <_realloc_r+0x20e>
  405b6a:	4629      	mov	r1, r5
  405b6c:	4630      	mov	r0, r6
  405b6e:	9301      	str	r3, [sp, #4]
  405b70:	f7ff fe10 	bl	405794 <memmove>
  405b74:	9b01      	ldr	r3, [sp, #4]
  405b76:	e77e      	b.n	405a76 <_realloc_r+0x21a>
  405b78:	68a9      	ldr	r1, [r5, #8]
  405b7a:	f8ca 1010 	str.w	r1, [sl, #16]
  405b7e:	68e9      	ldr	r1, [r5, #12]
  405b80:	f8ca 1014 	str.w	r1, [sl, #20]
  405b84:	2a24      	cmp	r2, #36	; 0x24
  405b86:	d003      	beq.n	405b90 <_realloc_r+0x334>
  405b88:	3510      	adds	r5, #16
  405b8a:	f10a 0218 	add.w	r2, sl, #24
  405b8e:	e76c      	b.n	405a6a <_realloc_r+0x20e>
  405b90:	692a      	ldr	r2, [r5, #16]
  405b92:	f8ca 2018 	str.w	r2, [sl, #24]
  405b96:	696a      	ldr	r2, [r5, #20]
  405b98:	f8ca 201c 	str.w	r2, [sl, #28]
  405b9c:	3518      	adds	r5, #24
  405b9e:	f10a 0220 	add.w	r2, sl, #32
  405ba2:	e762      	b.n	405a6a <_realloc_r+0x20e>
  405ba4:	20000444 	.word	0x20000444

00405ba8 <__ascii_wctomb>:
  405ba8:	b121      	cbz	r1, 405bb4 <__ascii_wctomb+0xc>
  405baa:	2aff      	cmp	r2, #255	; 0xff
  405bac:	d804      	bhi.n	405bb8 <__ascii_wctomb+0x10>
  405bae:	700a      	strb	r2, [r1, #0]
  405bb0:	2001      	movs	r0, #1
  405bb2:	4770      	bx	lr
  405bb4:	4608      	mov	r0, r1
  405bb6:	4770      	bx	lr
  405bb8:	238a      	movs	r3, #138	; 0x8a
  405bba:	6003      	str	r3, [r0, #0]
  405bbc:	f04f 30ff 	mov.w	r0, #4294967295
  405bc0:	4770      	bx	lr
  405bc2:	bf00      	nop

00405bc4 <__aeabi_drsub>:
  405bc4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405bc8:	e002      	b.n	405bd0 <__adddf3>
  405bca:	bf00      	nop

00405bcc <__aeabi_dsub>:
  405bcc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405bd0 <__adddf3>:
  405bd0:	b530      	push	{r4, r5, lr}
  405bd2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405bd6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405bda:	ea94 0f05 	teq	r4, r5
  405bde:	bf08      	it	eq
  405be0:	ea90 0f02 	teqeq	r0, r2
  405be4:	bf1f      	itttt	ne
  405be6:	ea54 0c00 	orrsne.w	ip, r4, r0
  405bea:	ea55 0c02 	orrsne.w	ip, r5, r2
  405bee:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405bf2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405bf6:	f000 80e2 	beq.w	405dbe <__adddf3+0x1ee>
  405bfa:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405bfe:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405c02:	bfb8      	it	lt
  405c04:	426d      	neglt	r5, r5
  405c06:	dd0c      	ble.n	405c22 <__adddf3+0x52>
  405c08:	442c      	add	r4, r5
  405c0a:	ea80 0202 	eor.w	r2, r0, r2
  405c0e:	ea81 0303 	eor.w	r3, r1, r3
  405c12:	ea82 0000 	eor.w	r0, r2, r0
  405c16:	ea83 0101 	eor.w	r1, r3, r1
  405c1a:	ea80 0202 	eor.w	r2, r0, r2
  405c1e:	ea81 0303 	eor.w	r3, r1, r3
  405c22:	2d36      	cmp	r5, #54	; 0x36
  405c24:	bf88      	it	hi
  405c26:	bd30      	pophi	{r4, r5, pc}
  405c28:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405c2c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405c30:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405c34:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405c38:	d002      	beq.n	405c40 <__adddf3+0x70>
  405c3a:	4240      	negs	r0, r0
  405c3c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405c40:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405c44:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405c48:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405c4c:	d002      	beq.n	405c54 <__adddf3+0x84>
  405c4e:	4252      	negs	r2, r2
  405c50:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405c54:	ea94 0f05 	teq	r4, r5
  405c58:	f000 80a7 	beq.w	405daa <__adddf3+0x1da>
  405c5c:	f1a4 0401 	sub.w	r4, r4, #1
  405c60:	f1d5 0e20 	rsbs	lr, r5, #32
  405c64:	db0d      	blt.n	405c82 <__adddf3+0xb2>
  405c66:	fa02 fc0e 	lsl.w	ip, r2, lr
  405c6a:	fa22 f205 	lsr.w	r2, r2, r5
  405c6e:	1880      	adds	r0, r0, r2
  405c70:	f141 0100 	adc.w	r1, r1, #0
  405c74:	fa03 f20e 	lsl.w	r2, r3, lr
  405c78:	1880      	adds	r0, r0, r2
  405c7a:	fa43 f305 	asr.w	r3, r3, r5
  405c7e:	4159      	adcs	r1, r3
  405c80:	e00e      	b.n	405ca0 <__adddf3+0xd0>
  405c82:	f1a5 0520 	sub.w	r5, r5, #32
  405c86:	f10e 0e20 	add.w	lr, lr, #32
  405c8a:	2a01      	cmp	r2, #1
  405c8c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405c90:	bf28      	it	cs
  405c92:	f04c 0c02 	orrcs.w	ip, ip, #2
  405c96:	fa43 f305 	asr.w	r3, r3, r5
  405c9a:	18c0      	adds	r0, r0, r3
  405c9c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405ca0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405ca4:	d507      	bpl.n	405cb6 <__adddf3+0xe6>
  405ca6:	f04f 0e00 	mov.w	lr, #0
  405caa:	f1dc 0c00 	rsbs	ip, ip, #0
  405cae:	eb7e 0000 	sbcs.w	r0, lr, r0
  405cb2:	eb6e 0101 	sbc.w	r1, lr, r1
  405cb6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405cba:	d31b      	bcc.n	405cf4 <__adddf3+0x124>
  405cbc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405cc0:	d30c      	bcc.n	405cdc <__adddf3+0x10c>
  405cc2:	0849      	lsrs	r1, r1, #1
  405cc4:	ea5f 0030 	movs.w	r0, r0, rrx
  405cc8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405ccc:	f104 0401 	add.w	r4, r4, #1
  405cd0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405cd4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405cd8:	f080 809a 	bcs.w	405e10 <__adddf3+0x240>
  405cdc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405ce0:	bf08      	it	eq
  405ce2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405ce6:	f150 0000 	adcs.w	r0, r0, #0
  405cea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405cee:	ea41 0105 	orr.w	r1, r1, r5
  405cf2:	bd30      	pop	{r4, r5, pc}
  405cf4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405cf8:	4140      	adcs	r0, r0
  405cfa:	eb41 0101 	adc.w	r1, r1, r1
  405cfe:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405d02:	f1a4 0401 	sub.w	r4, r4, #1
  405d06:	d1e9      	bne.n	405cdc <__adddf3+0x10c>
  405d08:	f091 0f00 	teq	r1, #0
  405d0c:	bf04      	itt	eq
  405d0e:	4601      	moveq	r1, r0
  405d10:	2000      	moveq	r0, #0
  405d12:	fab1 f381 	clz	r3, r1
  405d16:	bf08      	it	eq
  405d18:	3320      	addeq	r3, #32
  405d1a:	f1a3 030b 	sub.w	r3, r3, #11
  405d1e:	f1b3 0220 	subs.w	r2, r3, #32
  405d22:	da0c      	bge.n	405d3e <__adddf3+0x16e>
  405d24:	320c      	adds	r2, #12
  405d26:	dd08      	ble.n	405d3a <__adddf3+0x16a>
  405d28:	f102 0c14 	add.w	ip, r2, #20
  405d2c:	f1c2 020c 	rsb	r2, r2, #12
  405d30:	fa01 f00c 	lsl.w	r0, r1, ip
  405d34:	fa21 f102 	lsr.w	r1, r1, r2
  405d38:	e00c      	b.n	405d54 <__adddf3+0x184>
  405d3a:	f102 0214 	add.w	r2, r2, #20
  405d3e:	bfd8      	it	le
  405d40:	f1c2 0c20 	rsble	ip, r2, #32
  405d44:	fa01 f102 	lsl.w	r1, r1, r2
  405d48:	fa20 fc0c 	lsr.w	ip, r0, ip
  405d4c:	bfdc      	itt	le
  405d4e:	ea41 010c 	orrle.w	r1, r1, ip
  405d52:	4090      	lslle	r0, r2
  405d54:	1ae4      	subs	r4, r4, r3
  405d56:	bfa2      	ittt	ge
  405d58:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405d5c:	4329      	orrge	r1, r5
  405d5e:	bd30      	popge	{r4, r5, pc}
  405d60:	ea6f 0404 	mvn.w	r4, r4
  405d64:	3c1f      	subs	r4, #31
  405d66:	da1c      	bge.n	405da2 <__adddf3+0x1d2>
  405d68:	340c      	adds	r4, #12
  405d6a:	dc0e      	bgt.n	405d8a <__adddf3+0x1ba>
  405d6c:	f104 0414 	add.w	r4, r4, #20
  405d70:	f1c4 0220 	rsb	r2, r4, #32
  405d74:	fa20 f004 	lsr.w	r0, r0, r4
  405d78:	fa01 f302 	lsl.w	r3, r1, r2
  405d7c:	ea40 0003 	orr.w	r0, r0, r3
  405d80:	fa21 f304 	lsr.w	r3, r1, r4
  405d84:	ea45 0103 	orr.w	r1, r5, r3
  405d88:	bd30      	pop	{r4, r5, pc}
  405d8a:	f1c4 040c 	rsb	r4, r4, #12
  405d8e:	f1c4 0220 	rsb	r2, r4, #32
  405d92:	fa20 f002 	lsr.w	r0, r0, r2
  405d96:	fa01 f304 	lsl.w	r3, r1, r4
  405d9a:	ea40 0003 	orr.w	r0, r0, r3
  405d9e:	4629      	mov	r1, r5
  405da0:	bd30      	pop	{r4, r5, pc}
  405da2:	fa21 f004 	lsr.w	r0, r1, r4
  405da6:	4629      	mov	r1, r5
  405da8:	bd30      	pop	{r4, r5, pc}
  405daa:	f094 0f00 	teq	r4, #0
  405dae:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405db2:	bf06      	itte	eq
  405db4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405db8:	3401      	addeq	r4, #1
  405dba:	3d01      	subne	r5, #1
  405dbc:	e74e      	b.n	405c5c <__adddf3+0x8c>
  405dbe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405dc2:	bf18      	it	ne
  405dc4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405dc8:	d029      	beq.n	405e1e <__adddf3+0x24e>
  405dca:	ea94 0f05 	teq	r4, r5
  405dce:	bf08      	it	eq
  405dd0:	ea90 0f02 	teqeq	r0, r2
  405dd4:	d005      	beq.n	405de2 <__adddf3+0x212>
  405dd6:	ea54 0c00 	orrs.w	ip, r4, r0
  405dda:	bf04      	itt	eq
  405ddc:	4619      	moveq	r1, r3
  405dde:	4610      	moveq	r0, r2
  405de0:	bd30      	pop	{r4, r5, pc}
  405de2:	ea91 0f03 	teq	r1, r3
  405de6:	bf1e      	ittt	ne
  405de8:	2100      	movne	r1, #0
  405dea:	2000      	movne	r0, #0
  405dec:	bd30      	popne	{r4, r5, pc}
  405dee:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405df2:	d105      	bne.n	405e00 <__adddf3+0x230>
  405df4:	0040      	lsls	r0, r0, #1
  405df6:	4149      	adcs	r1, r1
  405df8:	bf28      	it	cs
  405dfa:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405dfe:	bd30      	pop	{r4, r5, pc}
  405e00:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405e04:	bf3c      	itt	cc
  405e06:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405e0a:	bd30      	popcc	{r4, r5, pc}
  405e0c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405e10:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405e14:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405e18:	f04f 0000 	mov.w	r0, #0
  405e1c:	bd30      	pop	{r4, r5, pc}
  405e1e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405e22:	bf1a      	itte	ne
  405e24:	4619      	movne	r1, r3
  405e26:	4610      	movne	r0, r2
  405e28:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405e2c:	bf1c      	itt	ne
  405e2e:	460b      	movne	r3, r1
  405e30:	4602      	movne	r2, r0
  405e32:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405e36:	bf06      	itte	eq
  405e38:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405e3c:	ea91 0f03 	teqeq	r1, r3
  405e40:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405e44:	bd30      	pop	{r4, r5, pc}
  405e46:	bf00      	nop

00405e48 <__aeabi_ui2d>:
  405e48:	f090 0f00 	teq	r0, #0
  405e4c:	bf04      	itt	eq
  405e4e:	2100      	moveq	r1, #0
  405e50:	4770      	bxeq	lr
  405e52:	b530      	push	{r4, r5, lr}
  405e54:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405e58:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405e5c:	f04f 0500 	mov.w	r5, #0
  405e60:	f04f 0100 	mov.w	r1, #0
  405e64:	e750      	b.n	405d08 <__adddf3+0x138>
  405e66:	bf00      	nop

00405e68 <__aeabi_i2d>:
  405e68:	f090 0f00 	teq	r0, #0
  405e6c:	bf04      	itt	eq
  405e6e:	2100      	moveq	r1, #0
  405e70:	4770      	bxeq	lr
  405e72:	b530      	push	{r4, r5, lr}
  405e74:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405e78:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405e7c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405e80:	bf48      	it	mi
  405e82:	4240      	negmi	r0, r0
  405e84:	f04f 0100 	mov.w	r1, #0
  405e88:	e73e      	b.n	405d08 <__adddf3+0x138>
  405e8a:	bf00      	nop

00405e8c <__aeabi_f2d>:
  405e8c:	0042      	lsls	r2, r0, #1
  405e8e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405e92:	ea4f 0131 	mov.w	r1, r1, rrx
  405e96:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405e9a:	bf1f      	itttt	ne
  405e9c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405ea0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405ea4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405ea8:	4770      	bxne	lr
  405eaa:	f092 0f00 	teq	r2, #0
  405eae:	bf14      	ite	ne
  405eb0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405eb4:	4770      	bxeq	lr
  405eb6:	b530      	push	{r4, r5, lr}
  405eb8:	f44f 7460 	mov.w	r4, #896	; 0x380
  405ebc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405ec0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405ec4:	e720      	b.n	405d08 <__adddf3+0x138>
  405ec6:	bf00      	nop

00405ec8 <__aeabi_ul2d>:
  405ec8:	ea50 0201 	orrs.w	r2, r0, r1
  405ecc:	bf08      	it	eq
  405ece:	4770      	bxeq	lr
  405ed0:	b530      	push	{r4, r5, lr}
  405ed2:	f04f 0500 	mov.w	r5, #0
  405ed6:	e00a      	b.n	405eee <__aeabi_l2d+0x16>

00405ed8 <__aeabi_l2d>:
  405ed8:	ea50 0201 	orrs.w	r2, r0, r1
  405edc:	bf08      	it	eq
  405ede:	4770      	bxeq	lr
  405ee0:	b530      	push	{r4, r5, lr}
  405ee2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405ee6:	d502      	bpl.n	405eee <__aeabi_l2d+0x16>
  405ee8:	4240      	negs	r0, r0
  405eea:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405eee:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405ef2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405ef6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405efa:	f43f aedc 	beq.w	405cb6 <__adddf3+0xe6>
  405efe:	f04f 0203 	mov.w	r2, #3
  405f02:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405f06:	bf18      	it	ne
  405f08:	3203      	addne	r2, #3
  405f0a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405f0e:	bf18      	it	ne
  405f10:	3203      	addne	r2, #3
  405f12:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405f16:	f1c2 0320 	rsb	r3, r2, #32
  405f1a:	fa00 fc03 	lsl.w	ip, r0, r3
  405f1e:	fa20 f002 	lsr.w	r0, r0, r2
  405f22:	fa01 fe03 	lsl.w	lr, r1, r3
  405f26:	ea40 000e 	orr.w	r0, r0, lr
  405f2a:	fa21 f102 	lsr.w	r1, r1, r2
  405f2e:	4414      	add	r4, r2
  405f30:	e6c1      	b.n	405cb6 <__adddf3+0xe6>
  405f32:	bf00      	nop

00405f34 <__aeabi_dmul>:
  405f34:	b570      	push	{r4, r5, r6, lr}
  405f36:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405f3a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405f3e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405f42:	bf1d      	ittte	ne
  405f44:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405f48:	ea94 0f0c 	teqne	r4, ip
  405f4c:	ea95 0f0c 	teqne	r5, ip
  405f50:	f000 f8de 	bleq	406110 <__aeabi_dmul+0x1dc>
  405f54:	442c      	add	r4, r5
  405f56:	ea81 0603 	eor.w	r6, r1, r3
  405f5a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405f5e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405f62:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405f66:	bf18      	it	ne
  405f68:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405f6c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405f70:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405f74:	d038      	beq.n	405fe8 <__aeabi_dmul+0xb4>
  405f76:	fba0 ce02 	umull	ip, lr, r0, r2
  405f7a:	f04f 0500 	mov.w	r5, #0
  405f7e:	fbe1 e502 	umlal	lr, r5, r1, r2
  405f82:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405f86:	fbe0 e503 	umlal	lr, r5, r0, r3
  405f8a:	f04f 0600 	mov.w	r6, #0
  405f8e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405f92:	f09c 0f00 	teq	ip, #0
  405f96:	bf18      	it	ne
  405f98:	f04e 0e01 	orrne.w	lr, lr, #1
  405f9c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405fa0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405fa4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405fa8:	d204      	bcs.n	405fb4 <__aeabi_dmul+0x80>
  405faa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405fae:	416d      	adcs	r5, r5
  405fb0:	eb46 0606 	adc.w	r6, r6, r6
  405fb4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405fb8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405fbc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405fc0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405fc4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405fc8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405fcc:	bf88      	it	hi
  405fce:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405fd2:	d81e      	bhi.n	406012 <__aeabi_dmul+0xde>
  405fd4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405fd8:	bf08      	it	eq
  405fda:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405fde:	f150 0000 	adcs.w	r0, r0, #0
  405fe2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405fe6:	bd70      	pop	{r4, r5, r6, pc}
  405fe8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405fec:	ea46 0101 	orr.w	r1, r6, r1
  405ff0:	ea40 0002 	orr.w	r0, r0, r2
  405ff4:	ea81 0103 	eor.w	r1, r1, r3
  405ff8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405ffc:	bfc2      	ittt	gt
  405ffe:	ebd4 050c 	rsbsgt	r5, r4, ip
  406002:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406006:	bd70      	popgt	{r4, r5, r6, pc}
  406008:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40600c:	f04f 0e00 	mov.w	lr, #0
  406010:	3c01      	subs	r4, #1
  406012:	f300 80ab 	bgt.w	40616c <__aeabi_dmul+0x238>
  406016:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40601a:	bfde      	ittt	le
  40601c:	2000      	movle	r0, #0
  40601e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  406022:	bd70      	pople	{r4, r5, r6, pc}
  406024:	f1c4 0400 	rsb	r4, r4, #0
  406028:	3c20      	subs	r4, #32
  40602a:	da35      	bge.n	406098 <__aeabi_dmul+0x164>
  40602c:	340c      	adds	r4, #12
  40602e:	dc1b      	bgt.n	406068 <__aeabi_dmul+0x134>
  406030:	f104 0414 	add.w	r4, r4, #20
  406034:	f1c4 0520 	rsb	r5, r4, #32
  406038:	fa00 f305 	lsl.w	r3, r0, r5
  40603c:	fa20 f004 	lsr.w	r0, r0, r4
  406040:	fa01 f205 	lsl.w	r2, r1, r5
  406044:	ea40 0002 	orr.w	r0, r0, r2
  406048:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40604c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  406050:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  406054:	fa21 f604 	lsr.w	r6, r1, r4
  406058:	eb42 0106 	adc.w	r1, r2, r6
  40605c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406060:	bf08      	it	eq
  406062:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  406066:	bd70      	pop	{r4, r5, r6, pc}
  406068:	f1c4 040c 	rsb	r4, r4, #12
  40606c:	f1c4 0520 	rsb	r5, r4, #32
  406070:	fa00 f304 	lsl.w	r3, r0, r4
  406074:	fa20 f005 	lsr.w	r0, r0, r5
  406078:	fa01 f204 	lsl.w	r2, r1, r4
  40607c:	ea40 0002 	orr.w	r0, r0, r2
  406080:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406084:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  406088:	f141 0100 	adc.w	r1, r1, #0
  40608c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406090:	bf08      	it	eq
  406092:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  406096:	bd70      	pop	{r4, r5, r6, pc}
  406098:	f1c4 0520 	rsb	r5, r4, #32
  40609c:	fa00 f205 	lsl.w	r2, r0, r5
  4060a0:	ea4e 0e02 	orr.w	lr, lr, r2
  4060a4:	fa20 f304 	lsr.w	r3, r0, r4
  4060a8:	fa01 f205 	lsl.w	r2, r1, r5
  4060ac:	ea43 0302 	orr.w	r3, r3, r2
  4060b0:	fa21 f004 	lsr.w	r0, r1, r4
  4060b4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4060b8:	fa21 f204 	lsr.w	r2, r1, r4
  4060bc:	ea20 0002 	bic.w	r0, r0, r2
  4060c0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4060c4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4060c8:	bf08      	it	eq
  4060ca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4060ce:	bd70      	pop	{r4, r5, r6, pc}
  4060d0:	f094 0f00 	teq	r4, #0
  4060d4:	d10f      	bne.n	4060f6 <__aeabi_dmul+0x1c2>
  4060d6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4060da:	0040      	lsls	r0, r0, #1
  4060dc:	eb41 0101 	adc.w	r1, r1, r1
  4060e0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4060e4:	bf08      	it	eq
  4060e6:	3c01      	subeq	r4, #1
  4060e8:	d0f7      	beq.n	4060da <__aeabi_dmul+0x1a6>
  4060ea:	ea41 0106 	orr.w	r1, r1, r6
  4060ee:	f095 0f00 	teq	r5, #0
  4060f2:	bf18      	it	ne
  4060f4:	4770      	bxne	lr
  4060f6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4060fa:	0052      	lsls	r2, r2, #1
  4060fc:	eb43 0303 	adc.w	r3, r3, r3
  406100:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  406104:	bf08      	it	eq
  406106:	3d01      	subeq	r5, #1
  406108:	d0f7      	beq.n	4060fa <__aeabi_dmul+0x1c6>
  40610a:	ea43 0306 	orr.w	r3, r3, r6
  40610e:	4770      	bx	lr
  406110:	ea94 0f0c 	teq	r4, ip
  406114:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  406118:	bf18      	it	ne
  40611a:	ea95 0f0c 	teqne	r5, ip
  40611e:	d00c      	beq.n	40613a <__aeabi_dmul+0x206>
  406120:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  406124:	bf18      	it	ne
  406126:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40612a:	d1d1      	bne.n	4060d0 <__aeabi_dmul+0x19c>
  40612c:	ea81 0103 	eor.w	r1, r1, r3
  406130:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406134:	f04f 0000 	mov.w	r0, #0
  406138:	bd70      	pop	{r4, r5, r6, pc}
  40613a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40613e:	bf06      	itte	eq
  406140:	4610      	moveq	r0, r2
  406142:	4619      	moveq	r1, r3
  406144:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406148:	d019      	beq.n	40617e <__aeabi_dmul+0x24a>
  40614a:	ea94 0f0c 	teq	r4, ip
  40614e:	d102      	bne.n	406156 <__aeabi_dmul+0x222>
  406150:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  406154:	d113      	bne.n	40617e <__aeabi_dmul+0x24a>
  406156:	ea95 0f0c 	teq	r5, ip
  40615a:	d105      	bne.n	406168 <__aeabi_dmul+0x234>
  40615c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  406160:	bf1c      	itt	ne
  406162:	4610      	movne	r0, r2
  406164:	4619      	movne	r1, r3
  406166:	d10a      	bne.n	40617e <__aeabi_dmul+0x24a>
  406168:	ea81 0103 	eor.w	r1, r1, r3
  40616c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406170:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406174:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  406178:	f04f 0000 	mov.w	r0, #0
  40617c:	bd70      	pop	{r4, r5, r6, pc}
  40617e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406182:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  406186:	bd70      	pop	{r4, r5, r6, pc}

00406188 <__aeabi_ddiv>:
  406188:	b570      	push	{r4, r5, r6, lr}
  40618a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40618e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  406192:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406196:	bf1d      	ittte	ne
  406198:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40619c:	ea94 0f0c 	teqne	r4, ip
  4061a0:	ea95 0f0c 	teqne	r5, ip
  4061a4:	f000 f8a7 	bleq	4062f6 <__aeabi_ddiv+0x16e>
  4061a8:	eba4 0405 	sub.w	r4, r4, r5
  4061ac:	ea81 0e03 	eor.w	lr, r1, r3
  4061b0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4061b4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4061b8:	f000 8088 	beq.w	4062cc <__aeabi_ddiv+0x144>
  4061bc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4061c0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4061c4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4061c8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4061cc:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4061d0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4061d4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4061d8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4061dc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4061e0:	429d      	cmp	r5, r3
  4061e2:	bf08      	it	eq
  4061e4:	4296      	cmpeq	r6, r2
  4061e6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4061ea:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4061ee:	d202      	bcs.n	4061f6 <__aeabi_ddiv+0x6e>
  4061f0:	085b      	lsrs	r3, r3, #1
  4061f2:	ea4f 0232 	mov.w	r2, r2, rrx
  4061f6:	1ab6      	subs	r6, r6, r2
  4061f8:	eb65 0503 	sbc.w	r5, r5, r3
  4061fc:	085b      	lsrs	r3, r3, #1
  4061fe:	ea4f 0232 	mov.w	r2, r2, rrx
  406202:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  406206:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40620a:	ebb6 0e02 	subs.w	lr, r6, r2
  40620e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406212:	bf22      	ittt	cs
  406214:	1ab6      	subcs	r6, r6, r2
  406216:	4675      	movcs	r5, lr
  406218:	ea40 000c 	orrcs.w	r0, r0, ip
  40621c:	085b      	lsrs	r3, r3, #1
  40621e:	ea4f 0232 	mov.w	r2, r2, rrx
  406222:	ebb6 0e02 	subs.w	lr, r6, r2
  406226:	eb75 0e03 	sbcs.w	lr, r5, r3
  40622a:	bf22      	ittt	cs
  40622c:	1ab6      	subcs	r6, r6, r2
  40622e:	4675      	movcs	r5, lr
  406230:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  406234:	085b      	lsrs	r3, r3, #1
  406236:	ea4f 0232 	mov.w	r2, r2, rrx
  40623a:	ebb6 0e02 	subs.w	lr, r6, r2
  40623e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406242:	bf22      	ittt	cs
  406244:	1ab6      	subcs	r6, r6, r2
  406246:	4675      	movcs	r5, lr
  406248:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40624c:	085b      	lsrs	r3, r3, #1
  40624e:	ea4f 0232 	mov.w	r2, r2, rrx
  406252:	ebb6 0e02 	subs.w	lr, r6, r2
  406256:	eb75 0e03 	sbcs.w	lr, r5, r3
  40625a:	bf22      	ittt	cs
  40625c:	1ab6      	subcs	r6, r6, r2
  40625e:	4675      	movcs	r5, lr
  406260:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  406264:	ea55 0e06 	orrs.w	lr, r5, r6
  406268:	d018      	beq.n	40629c <__aeabi_ddiv+0x114>
  40626a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40626e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  406272:	ea4f 1606 	mov.w	r6, r6, lsl #4
  406276:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40627a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40627e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  406282:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  406286:	d1c0      	bne.n	40620a <__aeabi_ddiv+0x82>
  406288:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40628c:	d10b      	bne.n	4062a6 <__aeabi_ddiv+0x11e>
  40628e:	ea41 0100 	orr.w	r1, r1, r0
  406292:	f04f 0000 	mov.w	r0, #0
  406296:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40629a:	e7b6      	b.n	40620a <__aeabi_ddiv+0x82>
  40629c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4062a0:	bf04      	itt	eq
  4062a2:	4301      	orreq	r1, r0
  4062a4:	2000      	moveq	r0, #0
  4062a6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4062aa:	bf88      	it	hi
  4062ac:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4062b0:	f63f aeaf 	bhi.w	406012 <__aeabi_dmul+0xde>
  4062b4:	ebb5 0c03 	subs.w	ip, r5, r3
  4062b8:	bf04      	itt	eq
  4062ba:	ebb6 0c02 	subseq.w	ip, r6, r2
  4062be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4062c2:	f150 0000 	adcs.w	r0, r0, #0
  4062c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4062ca:	bd70      	pop	{r4, r5, r6, pc}
  4062cc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4062d0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4062d4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4062d8:	bfc2      	ittt	gt
  4062da:	ebd4 050c 	rsbsgt	r5, r4, ip
  4062de:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4062e2:	bd70      	popgt	{r4, r5, r6, pc}
  4062e4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4062e8:	f04f 0e00 	mov.w	lr, #0
  4062ec:	3c01      	subs	r4, #1
  4062ee:	e690      	b.n	406012 <__aeabi_dmul+0xde>
  4062f0:	ea45 0e06 	orr.w	lr, r5, r6
  4062f4:	e68d      	b.n	406012 <__aeabi_dmul+0xde>
  4062f6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4062fa:	ea94 0f0c 	teq	r4, ip
  4062fe:	bf08      	it	eq
  406300:	ea95 0f0c 	teqeq	r5, ip
  406304:	f43f af3b 	beq.w	40617e <__aeabi_dmul+0x24a>
  406308:	ea94 0f0c 	teq	r4, ip
  40630c:	d10a      	bne.n	406324 <__aeabi_ddiv+0x19c>
  40630e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406312:	f47f af34 	bne.w	40617e <__aeabi_dmul+0x24a>
  406316:	ea95 0f0c 	teq	r5, ip
  40631a:	f47f af25 	bne.w	406168 <__aeabi_dmul+0x234>
  40631e:	4610      	mov	r0, r2
  406320:	4619      	mov	r1, r3
  406322:	e72c      	b.n	40617e <__aeabi_dmul+0x24a>
  406324:	ea95 0f0c 	teq	r5, ip
  406328:	d106      	bne.n	406338 <__aeabi_ddiv+0x1b0>
  40632a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40632e:	f43f aefd 	beq.w	40612c <__aeabi_dmul+0x1f8>
  406332:	4610      	mov	r0, r2
  406334:	4619      	mov	r1, r3
  406336:	e722      	b.n	40617e <__aeabi_dmul+0x24a>
  406338:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40633c:	bf18      	it	ne
  40633e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406342:	f47f aec5 	bne.w	4060d0 <__aeabi_dmul+0x19c>
  406346:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40634a:	f47f af0d 	bne.w	406168 <__aeabi_dmul+0x234>
  40634e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  406352:	f47f aeeb 	bne.w	40612c <__aeabi_dmul+0x1f8>
  406356:	e712      	b.n	40617e <__aeabi_dmul+0x24a>

00406358 <__gedf2>:
  406358:	f04f 3cff 	mov.w	ip, #4294967295
  40635c:	e006      	b.n	40636c <__cmpdf2+0x4>
  40635e:	bf00      	nop

00406360 <__ledf2>:
  406360:	f04f 0c01 	mov.w	ip, #1
  406364:	e002      	b.n	40636c <__cmpdf2+0x4>
  406366:	bf00      	nop

00406368 <__cmpdf2>:
  406368:	f04f 0c01 	mov.w	ip, #1
  40636c:	f84d cd04 	str.w	ip, [sp, #-4]!
  406370:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406374:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406378:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40637c:	bf18      	it	ne
  40637e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406382:	d01b      	beq.n	4063bc <__cmpdf2+0x54>
  406384:	b001      	add	sp, #4
  406386:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40638a:	bf0c      	ite	eq
  40638c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406390:	ea91 0f03 	teqne	r1, r3
  406394:	bf02      	ittt	eq
  406396:	ea90 0f02 	teqeq	r0, r2
  40639a:	2000      	moveq	r0, #0
  40639c:	4770      	bxeq	lr
  40639e:	f110 0f00 	cmn.w	r0, #0
  4063a2:	ea91 0f03 	teq	r1, r3
  4063a6:	bf58      	it	pl
  4063a8:	4299      	cmppl	r1, r3
  4063aa:	bf08      	it	eq
  4063ac:	4290      	cmpeq	r0, r2
  4063ae:	bf2c      	ite	cs
  4063b0:	17d8      	asrcs	r0, r3, #31
  4063b2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4063b6:	f040 0001 	orr.w	r0, r0, #1
  4063ba:	4770      	bx	lr
  4063bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4063c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4063c4:	d102      	bne.n	4063cc <__cmpdf2+0x64>
  4063c6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4063ca:	d107      	bne.n	4063dc <__cmpdf2+0x74>
  4063cc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4063d0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4063d4:	d1d6      	bne.n	406384 <__cmpdf2+0x1c>
  4063d6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4063da:	d0d3      	beq.n	406384 <__cmpdf2+0x1c>
  4063dc:	f85d 0b04 	ldr.w	r0, [sp], #4
  4063e0:	4770      	bx	lr
  4063e2:	bf00      	nop

004063e4 <__aeabi_cdrcmple>:
  4063e4:	4684      	mov	ip, r0
  4063e6:	4610      	mov	r0, r2
  4063e8:	4662      	mov	r2, ip
  4063ea:	468c      	mov	ip, r1
  4063ec:	4619      	mov	r1, r3
  4063ee:	4663      	mov	r3, ip
  4063f0:	e000      	b.n	4063f4 <__aeabi_cdcmpeq>
  4063f2:	bf00      	nop

004063f4 <__aeabi_cdcmpeq>:
  4063f4:	b501      	push	{r0, lr}
  4063f6:	f7ff ffb7 	bl	406368 <__cmpdf2>
  4063fa:	2800      	cmp	r0, #0
  4063fc:	bf48      	it	mi
  4063fe:	f110 0f00 	cmnmi.w	r0, #0
  406402:	bd01      	pop	{r0, pc}

00406404 <__aeabi_dcmpeq>:
  406404:	f84d ed08 	str.w	lr, [sp, #-8]!
  406408:	f7ff fff4 	bl	4063f4 <__aeabi_cdcmpeq>
  40640c:	bf0c      	ite	eq
  40640e:	2001      	moveq	r0, #1
  406410:	2000      	movne	r0, #0
  406412:	f85d fb08 	ldr.w	pc, [sp], #8
  406416:	bf00      	nop

00406418 <__aeabi_dcmplt>:
  406418:	f84d ed08 	str.w	lr, [sp, #-8]!
  40641c:	f7ff ffea 	bl	4063f4 <__aeabi_cdcmpeq>
  406420:	bf34      	ite	cc
  406422:	2001      	movcc	r0, #1
  406424:	2000      	movcs	r0, #0
  406426:	f85d fb08 	ldr.w	pc, [sp], #8
  40642a:	bf00      	nop

0040642c <__aeabi_dcmple>:
  40642c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406430:	f7ff ffe0 	bl	4063f4 <__aeabi_cdcmpeq>
  406434:	bf94      	ite	ls
  406436:	2001      	movls	r0, #1
  406438:	2000      	movhi	r0, #0
  40643a:	f85d fb08 	ldr.w	pc, [sp], #8
  40643e:	bf00      	nop

00406440 <__aeabi_dcmpge>:
  406440:	f84d ed08 	str.w	lr, [sp, #-8]!
  406444:	f7ff ffce 	bl	4063e4 <__aeabi_cdrcmple>
  406448:	bf94      	ite	ls
  40644a:	2001      	movls	r0, #1
  40644c:	2000      	movhi	r0, #0
  40644e:	f85d fb08 	ldr.w	pc, [sp], #8
  406452:	bf00      	nop

00406454 <__aeabi_dcmpgt>:
  406454:	f84d ed08 	str.w	lr, [sp, #-8]!
  406458:	f7ff ffc4 	bl	4063e4 <__aeabi_cdrcmple>
  40645c:	bf34      	ite	cc
  40645e:	2001      	movcc	r0, #1
  406460:	2000      	movcs	r0, #0
  406462:	f85d fb08 	ldr.w	pc, [sp], #8
  406466:	bf00      	nop

00406468 <__aeabi_dcmpun>:
  406468:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40646c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406470:	d102      	bne.n	406478 <__aeabi_dcmpun+0x10>
  406472:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406476:	d10a      	bne.n	40648e <__aeabi_dcmpun+0x26>
  406478:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40647c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406480:	d102      	bne.n	406488 <__aeabi_dcmpun+0x20>
  406482:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406486:	d102      	bne.n	40648e <__aeabi_dcmpun+0x26>
  406488:	f04f 0000 	mov.w	r0, #0
  40648c:	4770      	bx	lr
  40648e:	f04f 0001 	mov.w	r0, #1
  406492:	4770      	bx	lr

00406494 <__aeabi_d2iz>:
  406494:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406498:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40649c:	d215      	bcs.n	4064ca <__aeabi_d2iz+0x36>
  40649e:	d511      	bpl.n	4064c4 <__aeabi_d2iz+0x30>
  4064a0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4064a4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4064a8:	d912      	bls.n	4064d0 <__aeabi_d2iz+0x3c>
  4064aa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4064ae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4064b2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4064b6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4064ba:	fa23 f002 	lsr.w	r0, r3, r2
  4064be:	bf18      	it	ne
  4064c0:	4240      	negne	r0, r0
  4064c2:	4770      	bx	lr
  4064c4:	f04f 0000 	mov.w	r0, #0
  4064c8:	4770      	bx	lr
  4064ca:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4064ce:	d105      	bne.n	4064dc <__aeabi_d2iz+0x48>
  4064d0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4064d4:	bf08      	it	eq
  4064d6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4064da:	4770      	bx	lr
  4064dc:	f04f 0000 	mov.w	r0, #0
  4064e0:	4770      	bx	lr
  4064e2:	bf00      	nop

004064e4 <__aeabi_uldivmod>:
  4064e4:	b953      	cbnz	r3, 4064fc <__aeabi_uldivmod+0x18>
  4064e6:	b94a      	cbnz	r2, 4064fc <__aeabi_uldivmod+0x18>
  4064e8:	2900      	cmp	r1, #0
  4064ea:	bf08      	it	eq
  4064ec:	2800      	cmpeq	r0, #0
  4064ee:	bf1c      	itt	ne
  4064f0:	f04f 31ff 	movne.w	r1, #4294967295
  4064f4:	f04f 30ff 	movne.w	r0, #4294967295
  4064f8:	f000 b97a 	b.w	4067f0 <__aeabi_idiv0>
  4064fc:	f1ad 0c08 	sub.w	ip, sp, #8
  406500:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406504:	f000 f806 	bl	406514 <__udivmoddi4>
  406508:	f8dd e004 	ldr.w	lr, [sp, #4]
  40650c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406510:	b004      	add	sp, #16
  406512:	4770      	bx	lr

00406514 <__udivmoddi4>:
  406514:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406518:	468c      	mov	ip, r1
  40651a:	460d      	mov	r5, r1
  40651c:	4604      	mov	r4, r0
  40651e:	9e08      	ldr	r6, [sp, #32]
  406520:	2b00      	cmp	r3, #0
  406522:	d151      	bne.n	4065c8 <__udivmoddi4+0xb4>
  406524:	428a      	cmp	r2, r1
  406526:	4617      	mov	r7, r2
  406528:	d96d      	bls.n	406606 <__udivmoddi4+0xf2>
  40652a:	fab2 fe82 	clz	lr, r2
  40652e:	f1be 0f00 	cmp.w	lr, #0
  406532:	d00b      	beq.n	40654c <__udivmoddi4+0x38>
  406534:	f1ce 0c20 	rsb	ip, lr, #32
  406538:	fa01 f50e 	lsl.w	r5, r1, lr
  40653c:	fa20 fc0c 	lsr.w	ip, r0, ip
  406540:	fa02 f70e 	lsl.w	r7, r2, lr
  406544:	ea4c 0c05 	orr.w	ip, ip, r5
  406548:	fa00 f40e 	lsl.w	r4, r0, lr
  40654c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406550:	0c25      	lsrs	r5, r4, #16
  406552:	fbbc f8fa 	udiv	r8, ip, sl
  406556:	fa1f f987 	uxth.w	r9, r7
  40655a:	fb0a cc18 	mls	ip, sl, r8, ip
  40655e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406562:	fb08 f309 	mul.w	r3, r8, r9
  406566:	42ab      	cmp	r3, r5
  406568:	d90a      	bls.n	406580 <__udivmoddi4+0x6c>
  40656a:	19ed      	adds	r5, r5, r7
  40656c:	f108 32ff 	add.w	r2, r8, #4294967295
  406570:	f080 8123 	bcs.w	4067ba <__udivmoddi4+0x2a6>
  406574:	42ab      	cmp	r3, r5
  406576:	f240 8120 	bls.w	4067ba <__udivmoddi4+0x2a6>
  40657a:	f1a8 0802 	sub.w	r8, r8, #2
  40657e:	443d      	add	r5, r7
  406580:	1aed      	subs	r5, r5, r3
  406582:	b2a4      	uxth	r4, r4
  406584:	fbb5 f0fa 	udiv	r0, r5, sl
  406588:	fb0a 5510 	mls	r5, sl, r0, r5
  40658c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406590:	fb00 f909 	mul.w	r9, r0, r9
  406594:	45a1      	cmp	r9, r4
  406596:	d909      	bls.n	4065ac <__udivmoddi4+0x98>
  406598:	19e4      	adds	r4, r4, r7
  40659a:	f100 33ff 	add.w	r3, r0, #4294967295
  40659e:	f080 810a 	bcs.w	4067b6 <__udivmoddi4+0x2a2>
  4065a2:	45a1      	cmp	r9, r4
  4065a4:	f240 8107 	bls.w	4067b6 <__udivmoddi4+0x2a2>
  4065a8:	3802      	subs	r0, #2
  4065aa:	443c      	add	r4, r7
  4065ac:	eba4 0409 	sub.w	r4, r4, r9
  4065b0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4065b4:	2100      	movs	r1, #0
  4065b6:	2e00      	cmp	r6, #0
  4065b8:	d061      	beq.n	40667e <__udivmoddi4+0x16a>
  4065ba:	fa24 f40e 	lsr.w	r4, r4, lr
  4065be:	2300      	movs	r3, #0
  4065c0:	6034      	str	r4, [r6, #0]
  4065c2:	6073      	str	r3, [r6, #4]
  4065c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4065c8:	428b      	cmp	r3, r1
  4065ca:	d907      	bls.n	4065dc <__udivmoddi4+0xc8>
  4065cc:	2e00      	cmp	r6, #0
  4065ce:	d054      	beq.n	40667a <__udivmoddi4+0x166>
  4065d0:	2100      	movs	r1, #0
  4065d2:	e886 0021 	stmia.w	r6, {r0, r5}
  4065d6:	4608      	mov	r0, r1
  4065d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4065dc:	fab3 f183 	clz	r1, r3
  4065e0:	2900      	cmp	r1, #0
  4065e2:	f040 808e 	bne.w	406702 <__udivmoddi4+0x1ee>
  4065e6:	42ab      	cmp	r3, r5
  4065e8:	d302      	bcc.n	4065f0 <__udivmoddi4+0xdc>
  4065ea:	4282      	cmp	r2, r0
  4065ec:	f200 80fa 	bhi.w	4067e4 <__udivmoddi4+0x2d0>
  4065f0:	1a84      	subs	r4, r0, r2
  4065f2:	eb65 0503 	sbc.w	r5, r5, r3
  4065f6:	2001      	movs	r0, #1
  4065f8:	46ac      	mov	ip, r5
  4065fa:	2e00      	cmp	r6, #0
  4065fc:	d03f      	beq.n	40667e <__udivmoddi4+0x16a>
  4065fe:	e886 1010 	stmia.w	r6, {r4, ip}
  406602:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406606:	b912      	cbnz	r2, 40660e <__udivmoddi4+0xfa>
  406608:	2701      	movs	r7, #1
  40660a:	fbb7 f7f2 	udiv	r7, r7, r2
  40660e:	fab7 fe87 	clz	lr, r7
  406612:	f1be 0f00 	cmp.w	lr, #0
  406616:	d134      	bne.n	406682 <__udivmoddi4+0x16e>
  406618:	1beb      	subs	r3, r5, r7
  40661a:	0c3a      	lsrs	r2, r7, #16
  40661c:	fa1f fc87 	uxth.w	ip, r7
  406620:	2101      	movs	r1, #1
  406622:	fbb3 f8f2 	udiv	r8, r3, r2
  406626:	0c25      	lsrs	r5, r4, #16
  406628:	fb02 3318 	mls	r3, r2, r8, r3
  40662c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406630:	fb0c f308 	mul.w	r3, ip, r8
  406634:	42ab      	cmp	r3, r5
  406636:	d907      	bls.n	406648 <__udivmoddi4+0x134>
  406638:	19ed      	adds	r5, r5, r7
  40663a:	f108 30ff 	add.w	r0, r8, #4294967295
  40663e:	d202      	bcs.n	406646 <__udivmoddi4+0x132>
  406640:	42ab      	cmp	r3, r5
  406642:	f200 80d1 	bhi.w	4067e8 <__udivmoddi4+0x2d4>
  406646:	4680      	mov	r8, r0
  406648:	1aed      	subs	r5, r5, r3
  40664a:	b2a3      	uxth	r3, r4
  40664c:	fbb5 f0f2 	udiv	r0, r5, r2
  406650:	fb02 5510 	mls	r5, r2, r0, r5
  406654:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406658:	fb0c fc00 	mul.w	ip, ip, r0
  40665c:	45a4      	cmp	ip, r4
  40665e:	d907      	bls.n	406670 <__udivmoddi4+0x15c>
  406660:	19e4      	adds	r4, r4, r7
  406662:	f100 33ff 	add.w	r3, r0, #4294967295
  406666:	d202      	bcs.n	40666e <__udivmoddi4+0x15a>
  406668:	45a4      	cmp	ip, r4
  40666a:	f200 80b8 	bhi.w	4067de <__udivmoddi4+0x2ca>
  40666e:	4618      	mov	r0, r3
  406670:	eba4 040c 	sub.w	r4, r4, ip
  406674:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406678:	e79d      	b.n	4065b6 <__udivmoddi4+0xa2>
  40667a:	4631      	mov	r1, r6
  40667c:	4630      	mov	r0, r6
  40667e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406682:	f1ce 0420 	rsb	r4, lr, #32
  406686:	fa05 f30e 	lsl.w	r3, r5, lr
  40668a:	fa07 f70e 	lsl.w	r7, r7, lr
  40668e:	fa20 f804 	lsr.w	r8, r0, r4
  406692:	0c3a      	lsrs	r2, r7, #16
  406694:	fa25 f404 	lsr.w	r4, r5, r4
  406698:	ea48 0803 	orr.w	r8, r8, r3
  40669c:	fbb4 f1f2 	udiv	r1, r4, r2
  4066a0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4066a4:	fb02 4411 	mls	r4, r2, r1, r4
  4066a8:	fa1f fc87 	uxth.w	ip, r7
  4066ac:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4066b0:	fb01 f30c 	mul.w	r3, r1, ip
  4066b4:	42ab      	cmp	r3, r5
  4066b6:	fa00 f40e 	lsl.w	r4, r0, lr
  4066ba:	d909      	bls.n	4066d0 <__udivmoddi4+0x1bc>
  4066bc:	19ed      	adds	r5, r5, r7
  4066be:	f101 30ff 	add.w	r0, r1, #4294967295
  4066c2:	f080 808a 	bcs.w	4067da <__udivmoddi4+0x2c6>
  4066c6:	42ab      	cmp	r3, r5
  4066c8:	f240 8087 	bls.w	4067da <__udivmoddi4+0x2c6>
  4066cc:	3902      	subs	r1, #2
  4066ce:	443d      	add	r5, r7
  4066d0:	1aeb      	subs	r3, r5, r3
  4066d2:	fa1f f588 	uxth.w	r5, r8
  4066d6:	fbb3 f0f2 	udiv	r0, r3, r2
  4066da:	fb02 3310 	mls	r3, r2, r0, r3
  4066de:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4066e2:	fb00 f30c 	mul.w	r3, r0, ip
  4066e6:	42ab      	cmp	r3, r5
  4066e8:	d907      	bls.n	4066fa <__udivmoddi4+0x1e6>
  4066ea:	19ed      	adds	r5, r5, r7
  4066ec:	f100 38ff 	add.w	r8, r0, #4294967295
  4066f0:	d26f      	bcs.n	4067d2 <__udivmoddi4+0x2be>
  4066f2:	42ab      	cmp	r3, r5
  4066f4:	d96d      	bls.n	4067d2 <__udivmoddi4+0x2be>
  4066f6:	3802      	subs	r0, #2
  4066f8:	443d      	add	r5, r7
  4066fa:	1aeb      	subs	r3, r5, r3
  4066fc:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406700:	e78f      	b.n	406622 <__udivmoddi4+0x10e>
  406702:	f1c1 0720 	rsb	r7, r1, #32
  406706:	fa22 f807 	lsr.w	r8, r2, r7
  40670a:	408b      	lsls	r3, r1
  40670c:	fa05 f401 	lsl.w	r4, r5, r1
  406710:	ea48 0303 	orr.w	r3, r8, r3
  406714:	fa20 fe07 	lsr.w	lr, r0, r7
  406718:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40671c:	40fd      	lsrs	r5, r7
  40671e:	ea4e 0e04 	orr.w	lr, lr, r4
  406722:	fbb5 f9fc 	udiv	r9, r5, ip
  406726:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40672a:	fb0c 5519 	mls	r5, ip, r9, r5
  40672e:	fa1f f883 	uxth.w	r8, r3
  406732:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406736:	fb09 f408 	mul.w	r4, r9, r8
  40673a:	42ac      	cmp	r4, r5
  40673c:	fa02 f201 	lsl.w	r2, r2, r1
  406740:	fa00 fa01 	lsl.w	sl, r0, r1
  406744:	d908      	bls.n	406758 <__udivmoddi4+0x244>
  406746:	18ed      	adds	r5, r5, r3
  406748:	f109 30ff 	add.w	r0, r9, #4294967295
  40674c:	d243      	bcs.n	4067d6 <__udivmoddi4+0x2c2>
  40674e:	42ac      	cmp	r4, r5
  406750:	d941      	bls.n	4067d6 <__udivmoddi4+0x2c2>
  406752:	f1a9 0902 	sub.w	r9, r9, #2
  406756:	441d      	add	r5, r3
  406758:	1b2d      	subs	r5, r5, r4
  40675a:	fa1f fe8e 	uxth.w	lr, lr
  40675e:	fbb5 f0fc 	udiv	r0, r5, ip
  406762:	fb0c 5510 	mls	r5, ip, r0, r5
  406766:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40676a:	fb00 f808 	mul.w	r8, r0, r8
  40676e:	45a0      	cmp	r8, r4
  406770:	d907      	bls.n	406782 <__udivmoddi4+0x26e>
  406772:	18e4      	adds	r4, r4, r3
  406774:	f100 35ff 	add.w	r5, r0, #4294967295
  406778:	d229      	bcs.n	4067ce <__udivmoddi4+0x2ba>
  40677a:	45a0      	cmp	r8, r4
  40677c:	d927      	bls.n	4067ce <__udivmoddi4+0x2ba>
  40677e:	3802      	subs	r0, #2
  406780:	441c      	add	r4, r3
  406782:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406786:	eba4 0408 	sub.w	r4, r4, r8
  40678a:	fba0 8902 	umull	r8, r9, r0, r2
  40678e:	454c      	cmp	r4, r9
  406790:	46c6      	mov	lr, r8
  406792:	464d      	mov	r5, r9
  406794:	d315      	bcc.n	4067c2 <__udivmoddi4+0x2ae>
  406796:	d012      	beq.n	4067be <__udivmoddi4+0x2aa>
  406798:	b156      	cbz	r6, 4067b0 <__udivmoddi4+0x29c>
  40679a:	ebba 030e 	subs.w	r3, sl, lr
  40679e:	eb64 0405 	sbc.w	r4, r4, r5
  4067a2:	fa04 f707 	lsl.w	r7, r4, r7
  4067a6:	40cb      	lsrs	r3, r1
  4067a8:	431f      	orrs	r7, r3
  4067aa:	40cc      	lsrs	r4, r1
  4067ac:	6037      	str	r7, [r6, #0]
  4067ae:	6074      	str	r4, [r6, #4]
  4067b0:	2100      	movs	r1, #0
  4067b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4067b6:	4618      	mov	r0, r3
  4067b8:	e6f8      	b.n	4065ac <__udivmoddi4+0x98>
  4067ba:	4690      	mov	r8, r2
  4067bc:	e6e0      	b.n	406580 <__udivmoddi4+0x6c>
  4067be:	45c2      	cmp	sl, r8
  4067c0:	d2ea      	bcs.n	406798 <__udivmoddi4+0x284>
  4067c2:	ebb8 0e02 	subs.w	lr, r8, r2
  4067c6:	eb69 0503 	sbc.w	r5, r9, r3
  4067ca:	3801      	subs	r0, #1
  4067cc:	e7e4      	b.n	406798 <__udivmoddi4+0x284>
  4067ce:	4628      	mov	r0, r5
  4067d0:	e7d7      	b.n	406782 <__udivmoddi4+0x26e>
  4067d2:	4640      	mov	r0, r8
  4067d4:	e791      	b.n	4066fa <__udivmoddi4+0x1e6>
  4067d6:	4681      	mov	r9, r0
  4067d8:	e7be      	b.n	406758 <__udivmoddi4+0x244>
  4067da:	4601      	mov	r1, r0
  4067dc:	e778      	b.n	4066d0 <__udivmoddi4+0x1bc>
  4067de:	3802      	subs	r0, #2
  4067e0:	443c      	add	r4, r7
  4067e2:	e745      	b.n	406670 <__udivmoddi4+0x15c>
  4067e4:	4608      	mov	r0, r1
  4067e6:	e708      	b.n	4065fa <__udivmoddi4+0xe6>
  4067e8:	f1a8 0802 	sub.w	r8, r8, #2
  4067ec:	443d      	add	r5, r7
  4067ee:	e72b      	b.n	406648 <__udivmoddi4+0x134>

004067f0 <__aeabi_idiv0>:
  4067f0:	4770      	bx	lr
  4067f2:	bf00      	nop

004067f4 <OV2640_JPEG>:
  4067f4:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  406804:	ffff 0000                                   ....

00406808 <OV2640_JPEG_1024x768>:
  406808:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406818:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406828:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406838:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406848:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

00406858 <OV2640_JPEG_1280x1024>:
  406858:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406868:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406878:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406888:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406898:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  4068a8:	ffff 0000                                   ....

004068ac <OV2640_JPEG_1600x1200>:
  4068ac:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4068bc:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4068cc:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4068dc:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4068ec:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  4068fc:	ffff 0000                                   ....

00406900 <OV2640_JPEG_320x240>:
  406900:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  406910:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  406920:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  406930:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  406940:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

00406950 <OV2640_JPEG_640x480>:
  406950:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406960:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406970:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406980:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  406990:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  4069a0:	ffff 0000                                   ....

004069a4 <OV2640_JPEG_800x600>:
  4069a4:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4069b4:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4069c4:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4069d4:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  4069e4:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  4069f4:	ffff 0000                                   ....

004069f8 <OV2640_JPEG_INIT>:
  4069f8:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  406a08:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  406a18:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  406a28:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  406a38:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  406a48:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  406a58:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  406a68:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  406a78:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  406a88:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  406a98:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  406aa8:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  406ab8:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  406ac8:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  406ad8:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  406ae8:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  406af8:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  406b08:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  406b18:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  406b28:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  406b38:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  406b48:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  406b58:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  406b68:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

00406b78 <OV2640_QQVGA_RGB888>:
  406b78:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406b88:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406b98:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406ba8:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406bb8:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406bc8:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406bd8:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406be8:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406bf8:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406c08:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406c18:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406c28:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406c38:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406c48:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  406c58:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406c68:	0228 ffff                                   (...

00406c6c <OV2640_QQVGA_YUV422>:
  406c6c:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  406c7c:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  406c8c:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  406c9c:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  406cac:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  406cbc:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  406ccc:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  406cdc:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  406cec:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  406cfc:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406d0c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406d1c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406d2c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406d3c:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  406d4c:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  406d5c:	00d9 ffff                                   ....

00406d60 <OV2640_QVGA_RGB888>:
  406d60:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406d70:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406d80:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406d90:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406da0:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406db0:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406dc0:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406dd0:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406de0:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406df0:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406e00:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406e10:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406e20:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406e30:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  406e40:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406e50:	0228 ffff                                   (...

00406e54 <OV2640_QVGA_YUV422_10FPS>:
  406e54:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  406e64:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406e74:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406e84:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406e94:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406ea4:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406eb4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406ec4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406ed4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406ee4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406ef4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406f04:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406f14:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406f24:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406f34:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406f44 <OV2640_QVGA_YUV422_15FPS>:
  406f44:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  406f54:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406f64:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406f74:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406f84:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406f94:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406fa4:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406fb4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406fc4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406fd4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406fe4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406ff4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407004:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407014:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407024:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407034 <OV2640_QVGA_YUV422_20FPS>:
  407034:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407044:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407054:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407064:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407074:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407084:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407094:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4070a4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4070b4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4070c4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4070d4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4070e4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4070f4:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  407104:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407114:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407124 <OV2640_QVGA_YUV422_30FPS>:
  407124:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  407134:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407144:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407154:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407164:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407174:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407184:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  407194:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4071a4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4071b4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4071c4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4071d4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4071e4:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4071f4:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  407204:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407214 <OV2640_TEST_PATTERN>:
  407214:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407224:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407234:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407244:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407254:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407264:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407274:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  407284:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  407294:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  4072a4:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  4072b4:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  4072c4:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  4072d4:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  4072e4:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  4072f4:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  407304:	0228 ffff                                   (...

00407308 <OV2640_VGA_YUV422_20FPS>:
  407308:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407318:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407328:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407338:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407348:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407358:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407368:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  407378:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  407388:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407398:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4073a8:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4073b8:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4073c8:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4073d8:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  4073e8:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004073f8 <OV2640_YUV422>:
  4073f8:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  407408:	0000 ffff c200 0001 00c0 0000 0800 0000     ................
	...
  407424:	7453 7261 2074 7274 6e61 6673 7265 0000     Start transfer..
  407434:	6f4e 656e 0000 0000 6c43 6569 746e 6e20     None....Client n
  407444:	746f 6320 6e6f 656e 7463 6465 0000 0000     ot connected....
  407454:	6557 7362 636f 656b 2074 6f63 6e6e 6365     Websocket connec
  407464:	6574 0064 6557 7362 636f 656b 2074 6964     ted.Websocket di
  407474:	6373 6e6f 656e 7463 6465 0000 6d69 6761     sconnected..imag
  407484:	5f65 7274 6e61 6673 7265 2520 0d64 000a     e_transfer %d...
  407494:	6573 7574 2070 6577 0d62 000a 6573 2074     setup web...set 
  4074a4:	7973 6320 7020 6f20 6666 0a0d 0000 0000     sy c p off......
  4074b4:	6573 2074 7973 6320 6520 6f20 6666 0a0d     set sy c e off..
  4074c4:	0000 0000 6567 2074 6c77 6e20 7320 0a0d     ....get wl n s..
  4074d4:	0000 0000 6f70 6c6c 6120 6c6c 0a0d 0000     ....poll all....

004074e4 <_global_impure_ptr>:
  4074e4:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  4074f4:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  407504:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407514:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407524:	296c 0000 0030 0000                         l)..0...

0040752c <blanks.7223>:
  40752c:	2020 2020 2020 2020 2020 2020 2020 2020                     

0040753c <zeroes.7224>:
  40753c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  40754c:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  40755c:	0000 0000                                   ....

00407560 <__mprec_bigtens>:
  407560:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  407570:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  407580:	bf3c 7f73 4fdd 7515                         <.s..O.u

00407588 <__mprec_tens>:
  407588:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  407598:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4075a8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  4075b8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  4075c8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  4075d8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  4075e8:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  4075f8:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407608:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407618:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407628:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407638:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407648:	9db4 79d9 7843 44ea                         ...yCx.D

00407650 <p05.6055>:
  407650:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  407660:	4f50 4953 0058 0000 002e 0000               POSIX.......

0040766c <_ctype_>:
  40766c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40767c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40768c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40769c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4076ac:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  4076bc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  4076cc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  4076dc:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  4076ec:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407770 <_init>:
  407770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407772:	bf00      	nop
  407774:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407776:	bc08      	pop	{r3}
  407778:	469e      	mov	lr, r3
  40777a:	4770      	bx	lr

0040777c <__init_array_start>:
  40777c:	00403419 	.word	0x00403419

00407780 <__frame_dummy_init_array_entry>:
  407780:	004000f1                                ..@.

00407784 <_fini>:
  407784:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407786:	bf00      	nop
  407788:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40778a:	bc08      	pop	{r3}
  40778c:	469e      	mov	lr, r3
  40778e:	4770      	bx	lr

00407790 <__fini_array_start>:
  407790:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__atexit_recursive_mutex>:
20000440:	9550 2001                                   P.. 

20000444 <__malloc_av_>:
	...
2000044c:	0444 2000 0444 2000 044c 2000 044c 2000     D.. D.. L.. L.. 
2000045c:	0454 2000 0454 2000 045c 2000 045c 2000     T.. T.. \.. \.. 
2000046c:	0464 2000 0464 2000 046c 2000 046c 2000     d.. d.. l.. l.. 
2000047c:	0474 2000 0474 2000 047c 2000 047c 2000     t.. t.. |.. |.. 
2000048c:	0484 2000 0484 2000 048c 2000 048c 2000     ... ... ... ... 
2000049c:	0494 2000 0494 2000 049c 2000 049c 2000     ... ... ... ... 
200004ac:	04a4 2000 04a4 2000 04ac 2000 04ac 2000     ... ... ... ... 
200004bc:	04b4 2000 04b4 2000 04bc 2000 04bc 2000     ... ... ... ... 
200004cc:	04c4 2000 04c4 2000 04cc 2000 04cc 2000     ... ... ... ... 
200004dc:	04d4 2000 04d4 2000 04dc 2000 04dc 2000     ... ... ... ... 
200004ec:	04e4 2000 04e4 2000 04ec 2000 04ec 2000     ... ... ... ... 
200004fc:	04f4 2000 04f4 2000 04fc 2000 04fc 2000     ... ... ... ... 
2000050c:	0504 2000 0504 2000 050c 2000 050c 2000     ... ... ... ... 
2000051c:	0514 2000 0514 2000 051c 2000 051c 2000     ... ... ... ... 
2000052c:	0524 2000 0524 2000 052c 2000 052c 2000     $.. $.. ,.. ,.. 
2000053c:	0534 2000 0534 2000 053c 2000 053c 2000     4.. 4.. <.. <.. 
2000054c:	0544 2000 0544 2000 054c 2000 054c 2000     D.. D.. L.. L.. 
2000055c:	0554 2000 0554 2000 055c 2000 055c 2000     T.. T.. \.. \.. 
2000056c:	0564 2000 0564 2000 056c 2000 056c 2000     d.. d.. l.. l.. 
2000057c:	0574 2000 0574 2000 057c 2000 057c 2000     t.. t.. |.. |.. 
2000058c:	0584 2000 0584 2000 058c 2000 058c 2000     ... ... ... ... 
2000059c:	0594 2000 0594 2000 059c 2000 059c 2000     ... ... ... ... 
200005ac:	05a4 2000 05a4 2000 05ac 2000 05ac 2000     ... ... ... ... 
200005bc:	05b4 2000 05b4 2000 05bc 2000 05bc 2000     ... ... ... ... 
200005cc:	05c4 2000 05c4 2000 05cc 2000 05cc 2000     ... ... ... ... 
200005dc:	05d4 2000 05d4 2000 05dc 2000 05dc 2000     ... ... ... ... 
200005ec:	05e4 2000 05e4 2000 05ec 2000 05ec 2000     ... ... ... ... 
200005fc:	05f4 2000 05f4 2000 05fc 2000 05fc 2000     ... ... ... ... 
2000060c:	0604 2000 0604 2000 060c 2000 060c 2000     ... ... ... ... 
2000061c:	0614 2000 0614 2000 061c 2000 061c 2000     ... ... ... ... 
2000062c:	0624 2000 0624 2000 062c 2000 062c 2000     $.. $.. ,.. ,.. 
2000063c:	0634 2000 0634 2000 063c 2000 063c 2000     4.. 4.. <.. <.. 
2000064c:	0644 2000 0644 2000 064c 2000 064c 2000     D.. D.. L.. L.. 
2000065c:	0654 2000 0654 2000 065c 2000 065c 2000     T.. T.. \.. \.. 
2000066c:	0664 2000 0664 2000 066c 2000 066c 2000     d.. d.. l.. l.. 
2000067c:	0674 2000 0674 2000 067c 2000 067c 2000     t.. t.. |.. |.. 
2000068c:	0684 2000 0684 2000 068c 2000 068c 2000     ... ... ... ... 
2000069c:	0694 2000 0694 2000 069c 2000 069c 2000     ... ... ... ... 
200006ac:	06a4 2000 06a4 2000 06ac 2000 06ac 2000     ... ... ... ... 
200006bc:	06b4 2000 06b4 2000 06bc 2000 06bc 2000     ... ... ... ... 
200006cc:	06c4 2000 06c4 2000 06cc 2000 06cc 2000     ... ... ... ... 
200006dc:	06d4 2000 06d4 2000 06dc 2000 06dc 2000     ... ... ... ... 
200006ec:	06e4 2000 06e4 2000 06ec 2000 06ec 2000     ... ... ... ... 
200006fc:	06f4 2000 06f4 2000 06fc 2000 06fc 2000     ... ... ... ... 
2000070c:	0704 2000 0704 2000 070c 2000 070c 2000     ... ... ... ... 
2000071c:	0714 2000 0714 2000 071c 2000 071c 2000     ... ... ... ... 
2000072c:	0724 2000 0724 2000 072c 2000 072c 2000     $.. $.. ,.. ,.. 
2000073c:	0734 2000 0734 2000 073c 2000 073c 2000     4.. 4.. <.. <.. 
2000074c:	0744 2000 0744 2000 074c 2000 074c 2000     D.. D.. L.. L.. 
2000075c:	0754 2000 0754 2000 075c 2000 075c 2000     T.. T.. \.. \.. 
2000076c:	0764 2000 0764 2000 076c 2000 076c 2000     d.. d.. l.. l.. 
2000077c:	0774 2000 0774 2000 077c 2000 077c 2000     t.. t.. |.. |.. 
2000078c:	0784 2000 0784 2000 078c 2000 078c 2000     ... ... ... ... 
2000079c:	0794 2000 0794 2000 079c 2000 079c 2000     ... ... ... ... 
200007ac:	07a4 2000 07a4 2000 07ac 2000 07ac 2000     ... ... ... ... 
200007bc:	07b4 2000 07b4 2000 07bc 2000 07bc 2000     ... ... ... ... 
200007cc:	07c4 2000 07c4 2000 07cc 2000 07cc 2000     ... ... ... ... 
200007dc:	07d4 2000 07d4 2000 07dc 2000 07dc 2000     ... ... ... ... 
200007ec:	07e4 2000 07e4 2000 07ec 2000 07ec 2000     ... ... ... ... 
200007fc:	07f4 2000 07f4 2000 07fc 2000 07fc 2000     ... ... ... ... 
2000080c:	0804 2000 0804 2000 080c 2000 080c 2000     ... ... ... ... 
2000081c:	0814 2000 0814 2000 081c 2000 081c 2000     ... ... ... ... 
2000082c:	0824 2000 0824 2000 082c 2000 082c 2000     $.. $.. ,.. ,.. 
2000083c:	0834 2000 0834 2000 083c 2000 083c 2000     4.. 4.. <.. <.. 

2000084c <__malloc_sbrk_base>:
2000084c:	ffff ffff                                   ....

20000850 <__malloc_trim_threshold>:
20000850:	0000 0002                                   ....

20000854 <__global_locale>:
20000854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000934:	5ba9 0040 5769 0040 0000 0000 766c 0040     .[@.iW@.....lv@.
20000944:	7668 0040 74c4 0040 74c4 0040 74c4 0040     hv@..t@..t@..t@.
20000954:	74c4 0040 74c4 0040 74c4 0040 74c4 0040     .t@..t@..t@..t@.
20000964:	74c4 0040 74c4 0040 ffff ffff ffff ffff     .t@..t@.........
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2000099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
