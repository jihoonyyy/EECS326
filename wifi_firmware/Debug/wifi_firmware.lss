
wifi_firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000785c  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040785c  0040785c  0001785c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  00407864  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00005338  200009c0  00408224  000209c0  2**2
                  ALLOC
  4 .stack        00003000  20005cf8  0040d55c  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209ea  2**0
                  CONTENTS, READONLY
  7 .debug_info   00019bdb  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003941  00000000  00000000  0003a61e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00007d9f  00000000  00000000  0003df5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000aa0  00000000  00000000  00045cfe  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001d30  00000000  00000000  0004679e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00015009  00000000  00000000  000484ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000f88f  00000000  00000000  0005d4d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004fb37  00000000  00000000  0006cd66  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000266c  00000000  00000000  000bc8a0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	f8 8c 00 20 b1 15 40 00 ad 15 40 00 ad 15 40 00     ... ..@...@...@.
  400010:	ad 15 40 00 ad 15 40 00 ad 15 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	ad 15 40 00 ad 15 40 00 00 00 00 00 ad 15 40 00     ..@...@.......@.
  40003c:	ad 15 40 00 ad 15 40 00 ad 15 40 00 ad 15 40 00     ..@...@...@...@.
  40004c:	ad 15 40 00 ad 15 40 00 ad 15 40 00 ad 15 40 00     ..@...@...@...@.
  40005c:	00 00 00 00 ad 15 40 00 ad 15 40 00 00 00 00 00     ......@...@.....
  40006c:	21 04 40 00 09 05 40 00 00 00 00 00 59 11 40 00     !.@...@.....Y.@.
  40007c:	ad 15 40 00 00 00 00 00 00 00 00 00 ad 15 40 00     ..@...........@.
  40008c:	ad 15 40 00 ad 15 40 00 ad 15 40 00 ad 15 40 00     ..@...@...@...@.
  40009c:	a9 10 40 00 ad 15 40 00 ad 15 40 00 00 00 00 00     ..@...@...@.....
	...
  4000b4:	ad 15 40 00 ad 15 40 00 ad 15 40 00 ad 15 40 00     ..@...@...@...@.
  4000c4:	ad 15 40 00 ad 15 40 00                             ..@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009c0 	.word	0x200009c0
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00407864 	.word	0x00407864

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00407864 	.word	0x00407864
  40012c:	200009c4 	.word	0x200009c4
  400130:	00407864 	.word	0x00407864
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b570      	push	{r4, r5, r6, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480f      	ldr	r0, [pc, #60]	; (400178 <sysclk_init+0x40>)
  40013c:	4d0f      	ldr	r5, [pc, #60]	; (40017c <sysclk_init+0x44>)
  40013e:	4c10      	ldr	r4, [pc, #64]	; (400180 <sysclk_init+0x48>)
  400140:	47a8      	blx	r5
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400142:	213e      	movs	r1, #62	; 0x3e
  400144:	2000      	movs	r0, #0
  400146:	4b0f      	ldr	r3, [pc, #60]	; (400184 <sysclk_init+0x4c>)
  400148:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0d      	ldr	r3, [pc, #52]	; (400188 <sysclk_init+0x50>)
  400152:	4c0e      	ldr	r4, [pc, #56]	; (40018c <sysclk_init+0x54>)
  400154:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400156:	4b0e      	ldr	r3, [pc, #56]	; (400190 <sysclk_init+0x58>)
  400158:	4a0e      	ldr	r2, [pc, #56]	; (400194 <sysclk_init+0x5c>)
  40015a:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	4b0d      	ldr	r3, [pc, #52]	; (400198 <sysclk_init+0x60>)
  400164:	2010      	movs	r0, #16
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0c      	ldr	r3, [pc, #48]	; (40019c <sysclk_init+0x64>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	462b      	mov	r3, r5
  40016e:	4802      	ldr	r0, [pc, #8]	; (400178 <sysclk_init+0x40>)

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  400170:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	system_init_flash(sysclk_get_cpu_hz());
  400174:	4718      	bx	r3
  400176:	bf00      	nop
  400178:	07270e00 	.word	0x07270e00
  40017c:	0040172d 	.word	0x0040172d
  400180:	00400699 	.word	0x00400699
  400184:	00400649 	.word	0x00400649
  400188:	004006a9 	.word	0x004006a9
  40018c:	004006b9 	.word	0x004006b9
  400190:	400e0400 	.word	0x400e0400
  400194:	20133f01 	.word	0x20133f01
  400198:	004005f1 	.word	0x004005f1
  40019c:	00401645 	.word	0x00401645

004001a0 <pio_set_debounce_filter>:
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  4001a0:	0053      	lsls	r3, r2, #1
  4001a2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4001a6:	fbb2 f2f3 	udiv	r2, r2, r3
  4001aa:	3a01      	subs	r2, #1
  4001ac:	f3c2 020d 	ubfx	r2, r2, #0, #14
	p_pio->PIO_IFSCER = ul_mask;
  4001b0:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  4001b4:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  4001b8:	4770      	bx	lr
  4001ba:	bf00      	nop

004001bc <pio_configure_interrupt>:
  4001bc:	06d3      	lsls	r3, r2, #27
  4001be:	d50e      	bpl.n	4001de <pio_configure_interrupt+0x22>
  4001c0:	0693      	lsls	r3, r2, #26
  4001c2:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
  4001c6:	bf4c      	ite	mi
  4001c8:	f8c0 10d4 	strmi.w	r1, [r0, #212]	; 0xd4
  4001cc:	f8c0 10d0 	strpl.w	r1, [r0, #208]	; 0xd0
  4001d0:	0653      	lsls	r3, r2, #25
  4001d2:	bf4c      	ite	mi
  4001d4:	f8c0 10c0 	strmi.w	r1, [r0, #192]	; 0xc0
  4001d8:	f8c0 10c4 	strpl.w	r1, [r0, #196]	; 0xc4
  4001dc:	4770      	bx	lr
  4001de:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4001e2:	4770      	bx	lr

004001e4 <pio_enable_interrupt>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IER = ul_mask;
  4001e4:	6401      	str	r1, [r0, #64]	; 0x40
  4001e6:	4770      	bx	lr

004001e8 <pio_disable_interrupt>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  4001e8:	6441      	str	r1, [r0, #68]	; 0x44
  4001ea:	4770      	bx	lr

004001ec <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4001ec:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4001ee:	4770      	bx	lr

004001f0 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4001f0:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4001f2:	4770      	bx	lr

004001f4 <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4001f4:	0943      	lsrs	r3, r0, #5
  4001f6:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4001fa:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4001fe:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  400200:	f000 001f 	and.w	r0, r0, #31
  400204:	2201      	movs	r2, #1
  400206:	fa02 f000 	lsl.w	r0, r2, r0
  40020a:	6318      	str	r0, [r3, #48]	; 0x30
  40020c:	4770      	bx	lr
  40020e:	bf00      	nop

00400210 <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400210:	0943      	lsrs	r3, r0, #5
  400212:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400216:	f203 7307 	addw	r3, r3, #1799	; 0x707
  40021a:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  40021c:	f000 001f 	and.w	r0, r0, #31
  400220:	2201      	movs	r2, #1
  400222:	fa02 f000 	lsl.w	r0, r2, r0
  400226:	6358      	str	r0, [r3, #52]	; 0x34
  400228:	4770      	bx	lr
  40022a:	bf00      	nop

0040022c <pio_configure_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  40022c:	0943      	lsrs	r3, r0, #5
  40022e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
	switch (ul_flags & PIO_TYPE_Msk) {
  400232:	f001 42f0 	and.w	r2, r1, #2013265920	; 0x78000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400236:	f203 7307 	addw	r3, r3, #1799	; 0x707
	switch (ul_flags & PIO_TYPE_Msk) {
  40023a:	f1b2 5f00 	cmp.w	r2, #536870912	; 0x20000000
{
  40023e:	b470      	push	{r4, r5, r6}
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400240:	ea4f 2343 	mov.w	r3, r3, lsl #9
	switch (ul_flags & PIO_TYPE_Msk) {
  400244:	f000 8086 	beq.w	400354 <pio_configure_pin+0x128>
  400248:	d80b      	bhi.n	400262 <pio_configure_pin+0x36>
  40024a:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
  40024e:	d028      	beq.n	4002a2 <pio_configure_pin+0x76>
  400250:	f1b2 5fc0 	cmp.w	r2, #402653184	; 0x18000000
  400254:	d06a      	beq.n	40032c <pio_configure_pin+0x100>
  400256:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
  40025a:	d037      	beq.n	4002cc <pio_configure_pin+0xa0>
		return 0;
  40025c:	2000      	movs	r0, #0
}
  40025e:	bc70      	pop	{r4, r5, r6}
  400260:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
  400262:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
  400266:	d048      	beq.n	4002fa <pio_configure_pin+0xce>
  400268:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  40026c:	d045      	beq.n	4002fa <pio_configure_pin+0xce>
  40026e:	f1b2 5f20 	cmp.w	r2, #671088640	; 0x28000000
  400272:	d1f3      	bne.n	40025c <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400274:	f000 001f 	and.w	r0, r0, #31
  400278:	2201      	movs	r2, #1
  40027a:	4082      	lsls	r2, r0
	if (ul_pull_up_enable) {
  40027c:	07cd      	lsls	r5, r1, #31
	p_pio->PIO_IDR = ul_mask;
  40027e:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
  400280:	bf4c      	ite	mi
  400282:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400284:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400286:	f011 0f0a 	tst.w	r1, #10
		p_pio->PIO_IFER = ul_mask;
  40028a:	bf14      	ite	ne
  40028c:	621a      	strne	r2, [r3, #32]
		p_pio->PIO_IFDR = ul_mask;
  40028e:	625a      	streq	r2, [r3, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  400290:	078c      	lsls	r4, r1, #30
  400292:	d568      	bpl.n	400366 <pio_configure_pin+0x13a>
		p_pio->PIO_IFSCDR = ul_mask;
  400294:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400298:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
  40029a:	601a      	str	r2, [r3, #0]
	return 1;
  40029c:	2001      	movs	r0, #1
}
  40029e:	bc70      	pop	{r4, r5, r6}
  4002a0:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  4002a2:	f000 021f 	and.w	r2, r0, #31
  4002a6:	2001      	movs	r0, #1
  4002a8:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  4002ac:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002ae:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4002b0:	4314      	orrs	r4, r2
  4002b2:	671c      	str	r4, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4002b4:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002b6:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  4002b8:	402c      	ands	r4, r5
  4002ba:	ea24 0402 	bic.w	r4, r4, r2
	if (ul_pull_up_enable) {
  4002be:	07c9      	lsls	r1, r1, #31
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002c0:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  4002c2:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  4002c4:	d516      	bpl.n	4002f4 <pio_configure_pin+0xc8>
		p_pio->PIO_PUER = ul_mask;
  4002c6:	665a      	str	r2, [r3, #100]	; 0x64
}
  4002c8:	bc70      	pop	{r4, r5, r6}
  4002ca:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4002cc:	f000 021f 	and.w	r2, r0, #31
  4002d0:	2001      	movs	r0, #1
  4002d2:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  4002d6:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  4002d8:	6f1d      	ldr	r5, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4002da:	6f1c      	ldr	r4, [r3, #112]	; 0x70
  4002dc:	43d6      	mvns	r6, r2
  4002de:	4025      	ands	r5, r4
  4002e0:	4035      	ands	r5, r6
  4002e2:	671d      	str	r5, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4002e4:	6f5c      	ldr	r4, [r3, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4002e6:	6f5d      	ldr	r5, [r3, #116]	; 0x74
  4002e8:	402c      	ands	r4, r5
  4002ea:	4034      	ands	r4, r6
  4002ec:	675c      	str	r4, [r3, #116]	; 0x74
	if (ul_pull_up_enable) {
  4002ee:	07cc      	lsls	r4, r1, #31
	p_pio->PIO_PDR = ul_mask;
  4002f0:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  4002f2:	d4e8      	bmi.n	4002c6 <pio_configure_pin+0x9a>
		p_pio->PIO_PUDR = ul_mask;
  4002f4:	661a      	str	r2, [r3, #96]	; 0x60
}
  4002f6:	bc70      	pop	{r4, r5, r6}
  4002f8:	4770      	bx	lr
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4002fa:	f000 001f 	and.w	r0, r0, #31
  4002fe:	2201      	movs	r2, #1
  400300:	4082      	lsls	r2, r0
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
  400302:	f001 0404 	and.w	r4, r1, #4
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400306:	f001 5060 	and.w	r0, r1, #939524096	; 0x38000000
	if (ul_pull_up_enable) {
  40030a:	07c9      	lsls	r1, r1, #31
	p_pio->PIO_IDR = ul_mask;
  40030c:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
  40030e:	bf4c      	ite	mi
  400310:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400312:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_multidrive_enable) {
  400314:	b364      	cbz	r4, 400370 <pio_configure_pin+0x144>
		p_pio->PIO_MDER = ul_mask;
  400316:	651a      	str	r2, [r3, #80]	; 0x50
	if (ul_default_level) {
  400318:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
		p_pio->PIO_SODR = ul_mask;
  40031c:	bf0c      	ite	eq
  40031e:	631a      	streq	r2, [r3, #48]	; 0x30
		p_pio->PIO_CODR = ul_mask;
  400320:	635a      	strne	r2, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400322:	611a      	str	r2, [r3, #16]
	p_pio->PIO_PER = ul_mask;
  400324:	601a      	str	r2, [r3, #0]
	return 1;
  400326:	2001      	movs	r0, #1
}
  400328:	bc70      	pop	{r4, r5, r6}
  40032a:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40032c:	f000 021f 	and.w	r2, r0, #31
  400330:	2001      	movs	r0, #1
  400332:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  400336:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  400338:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40033a:	6f1d      	ldr	r5, [r3, #112]	; 0x70
  40033c:	402c      	ands	r4, r5
  40033e:	ea24 0402 	bic.w	r4, r4, r2
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400342:	671c      	str	r4, [r3, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400344:	6f5c      	ldr	r4, [r3, #116]	; 0x74
	if (ul_pull_up_enable) {
  400346:	07ce      	lsls	r6, r1, #31
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400348:	ea44 0402 	orr.w	r4, r4, r2
  40034c:	675c      	str	r4, [r3, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40034e:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
  400350:	d5d0      	bpl.n	4002f4 <pio_configure_pin+0xc8>
  400352:	e7b8      	b.n	4002c6 <pio_configure_pin+0x9a>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400354:	f000 021f 	and.w	r2, r0, #31
  400358:	2001      	movs	r0, #1
  40035a:	fa00 f202 	lsl.w	r2, r0, r2
	p_pio->PIO_IDR = ul_mask;
  40035e:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABCDSR[0];
  400360:	6f1c      	ldr	r4, [r3, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400362:	4314      	orrs	r4, r2
  400364:	e7ed      	b.n	400342 <pio_configure_pin+0x116>
		if (ul_attribute & PIO_DEBOUNCE) {
  400366:	0708      	lsls	r0, r1, #28
			p_pio->PIO_IFSCER = ul_mask;
  400368:	bf48      	it	mi
  40036a:	f8c3 2084 	strmi.w	r2, [r3, #132]	; 0x84
  40036e:	e793      	b.n	400298 <pio_configure_pin+0x6c>
		p_pio->PIO_MDDR = ul_mask;
  400370:	655a      	str	r2, [r3, #84]	; 0x54
  400372:	e7d1      	b.n	400318 <pio_configure_pin+0xec>

00400374 <pio_capture_enable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  400374:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  400378:	4a03      	ldr	r2, [pc, #12]	; (400388 <pio_capture_enable+0x14>)
  40037a:	2101      	movs	r1, #1
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  40037c:	430b      	orrs	r3, r1
  40037e:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  400382:	6011      	str	r1, [r2, #0]
  400384:	4770      	bx	lr
  400386:	bf00      	nop
  400388:	20000ab0 	.word	0x20000ab0

0040038c <pio_capture_disable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  40038c:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  400390:	4a03      	ldr	r2, [pc, #12]	; (4003a0 <pio_capture_disable+0x14>)
  400392:	2100      	movs	r1, #0
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  400394:	f023 0301 	bic.w	r3, r3, #1
  400398:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  40039c:	6011      	str	r1, [r2, #0]
  40039e:	4770      	bx	lr
  4003a0:	20000ab0 	.word	0x20000ab0

004003a4 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  4003a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  4003a8:	f8df 9070 	ldr.w	r9, [pc, #112]	; 40041c <pio_handler_set+0x78>
  4003ac:	f8d9 c000 	ldr.w	ip, [r9]
  4003b0:	f1bc 0f06 	cmp.w	ip, #6
  4003b4:	d82b      	bhi.n	40040e <pio_handler_set+0x6a>
  4003b6:	f04f 0800 	mov.w	r8, #0
  4003ba:	4e16      	ldr	r6, [pc, #88]	; (400414 <pio_handler_set+0x70>)
  4003bc:	4644      	mov	r4, r8
  4003be:	e002      	b.n	4003c6 <pio_handler_set+0x22>
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4003c0:	45a4      	cmp	ip, r4
  4003c2:	46a0      	mov	r8, r4
  4003c4:	d30c      	bcc.n	4003e0 <pio_handler_set+0x3c>
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4003c6:	0125      	lsls	r5, r4, #4
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4003c8:	f104 0e01 	add.w	lr, r4, #1
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4003cc:	5977      	ldr	r7, [r6, r5]
  4003ce:	428f      	cmp	r7, r1
		pSource = &(gs_interrupt_sources[i]);
  4003d0:	46a2      	mov	sl, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4003d2:	4435      	add	r5, r6
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4003d4:	fa5f f48e 	uxtb.w	r4, lr
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4003d8:	d1f2      	bne.n	4003c0 <pio_handler_set+0x1c>
  4003da:	686d      	ldr	r5, [r5, #4]
  4003dc:	4295      	cmp	r5, r2
  4003de:	d1ef      	bne.n	4003c0 <pio_handler_set+0x1c>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4003e0:	ea4f 1a0a 	mov.w	sl, sl, lsl #4
  4003e4:	eb06 040a 	add.w	r4, r6, sl
	pSource->mask = ul_mask;
	pSource->attr = ul_attr;
	pSource->handler = p_handler;
	if (i == gs_ul_nb_sources + 1) {
  4003e8:	f10c 0c01 	add.w	ip, ip, #1
	pSource->id = ul_id;
  4003ec:	f846 100a 	str.w	r1, [r6, sl]
	pSource->handler = p_handler;
  4003f0:	9908      	ldr	r1, [sp, #32]
	pSource->mask = ul_mask;
  4003f2:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4003f4:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4003f6:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4003f8:	45c4      	cmp	ip, r8
  4003fa:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4003fc:	461a      	mov	r2, r3
  4003fe:	4b06      	ldr	r3, [pc, #24]	; (400418 <pio_handler_set+0x74>)
		gs_ul_nb_sources++;
  400400:	bf08      	it	eq
  400402:	f8c9 8000 	streq.w	r8, [r9]
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400406:	4798      	blx	r3

	return 0;
  400408:	2000      	movs	r0, #0
  40040a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		return 1;
  40040e:	2001      	movs	r0, #1
}
  400410:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400414:	200009dc 	.word	0x200009dc
  400418:	004001bd 	.word	0x004001bd
  40041c:	20000a4c 	.word	0x20000a4c

00400420 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400420:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
  400422:	4b33      	ldr	r3, [pc, #204]	; (4004f0 <PIOA_Handler+0xd0>)
  400424:	4833      	ldr	r0, [pc, #204]	; (4004f4 <PIOA_Handler+0xd4>)
  400426:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
  400428:	4b33      	ldr	r3, [pc, #204]	; (4004f8 <PIOA_Handler+0xd8>)
	status = pio_get_interrupt_status(p_pio);
  40042a:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40042c:	4831      	ldr	r0, [pc, #196]	; (4004f4 <PIOA_Handler+0xd4>)
  40042e:	4798      	blx	r3
	if (status != 0) {
  400430:	4005      	ands	r5, r0
  400432:	d015      	beq.n	400460 <PIOA_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400434:	4c31      	ldr	r4, [pc, #196]	; (4004fc <PIOA_Handler+0xdc>)
  400436:	6820      	ldr	r0, [r4, #0]
  400438:	280b      	cmp	r0, #11
  40043a:	d01d      	beq.n	400478 <PIOA_Handler+0x58>
  40043c:	6920      	ldr	r0, [r4, #16]
  40043e:	280b      	cmp	r0, #11
  400440:	d029      	beq.n	400496 <PIOA_Handler+0x76>
  400442:	6a20      	ldr	r0, [r4, #32]
  400444:	280b      	cmp	r0, #11
  400446:	d02f      	beq.n	4004a8 <PIOA_Handler+0x88>
  400448:	6b20      	ldr	r0, [r4, #48]	; 0x30
  40044a:	280b      	cmp	r0, #11
  40044c:	d035      	beq.n	4004ba <PIOA_Handler+0x9a>
  40044e:	6c20      	ldr	r0, [r4, #64]	; 0x40
  400450:	280b      	cmp	r0, #11
  400452:	d03b      	beq.n	4004cc <PIOA_Handler+0xac>
  400454:	6d20      	ldr	r0, [r4, #80]	; 0x50
  400456:	280b      	cmp	r0, #11
  400458:	d041      	beq.n	4004de <PIOA_Handler+0xbe>
  40045a:	6e20      	ldr	r0, [r4, #96]	; 0x60
  40045c:	280b      	cmp	r0, #11
  40045e:	d014      	beq.n	40048a <PIOA_Handler+0x6a>
	if (pio_capture_enable_flag) {
  400460:	4b27      	ldr	r3, [pc, #156]	; (400500 <PIOA_Handler+0xe0>)
  400462:	681b      	ldr	r3, [r3, #0]
  400464:	b13b      	cbz	r3, 400476 <PIOA_Handler+0x56>
		if (pio_capture_handler) {
  400466:	4b27      	ldr	r3, [pc, #156]	; (400504 <PIOA_Handler+0xe4>)
  400468:	681b      	ldr	r3, [r3, #0]
  40046a:	b11b      	cbz	r3, 400474 <PIOA_Handler+0x54>
			pio_capture_handler(p_pio);
  40046c:	4821      	ldr	r0, [pc, #132]	; (4004f4 <PIOA_Handler+0xd4>)
	pio_handler_process(PIOA, ID_PIOA);
}
  40046e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			pio_capture_handler(p_pio);
  400472:	4718      	bx	r3
  400474:	bd70      	pop	{r4, r5, r6, pc}
  400476:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400478:	6861      	ldr	r1, [r4, #4]
  40047a:	420d      	tst	r5, r1
  40047c:	d0de      	beq.n	40043c <PIOA_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  40047e:	68e3      	ldr	r3, [r4, #12]
  400480:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400482:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
  400484:	439d      	bics	r5, r3
  400486:	d0eb      	beq.n	400460 <PIOA_Handler+0x40>
  400488:	e7d8      	b.n	40043c <PIOA_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40048a:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40048c:	4229      	tst	r1, r5
  40048e:	d0e7      	beq.n	400460 <PIOA_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400490:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
  400492:	4798      	blx	r3
  400494:	e7e4      	b.n	400460 <PIOA_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400496:	6961      	ldr	r1, [r4, #20]
  400498:	4229      	tst	r1, r5
  40049a:	d0d2      	beq.n	400442 <PIOA_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  40049c:	69e3      	ldr	r3, [r4, #28]
  40049e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4004a0:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
  4004a2:	439d      	bics	r5, r3
  4004a4:	d0dc      	beq.n	400460 <PIOA_Handler+0x40>
  4004a6:	e7cc      	b.n	400442 <PIOA_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4004a8:	6a61      	ldr	r1, [r4, #36]	; 0x24
  4004aa:	4229      	tst	r1, r5
  4004ac:	d0cc      	beq.n	400448 <PIOA_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4004ae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4004b0:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4004b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
  4004b4:	439d      	bics	r5, r3
  4004b6:	d0d3      	beq.n	400460 <PIOA_Handler+0x40>
  4004b8:	e7c6      	b.n	400448 <PIOA_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4004ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
  4004bc:	4229      	tst	r1, r5
  4004be:	d0c6      	beq.n	40044e <PIOA_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4004c0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  4004c2:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4004c4:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
  4004c6:	439d      	bics	r5, r3
  4004c8:	d0ca      	beq.n	400460 <PIOA_Handler+0x40>
  4004ca:	e7c0      	b.n	40044e <PIOA_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4004cc:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4004ce:	4229      	tst	r1, r5
  4004d0:	d0c0      	beq.n	400454 <PIOA_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4004d2:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
  4004d4:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4004d6:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
  4004d8:	439d      	bics	r5, r3
  4004da:	d0c1      	beq.n	400460 <PIOA_Handler+0x40>
  4004dc:	e7ba      	b.n	400454 <PIOA_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4004de:	6d61      	ldr	r1, [r4, #84]	; 0x54
  4004e0:	4229      	tst	r1, r5
  4004e2:	d0ba      	beq.n	40045a <PIOA_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4004e4:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  4004e6:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4004e8:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
  4004ea:	439d      	bics	r5, r3
  4004ec:	d0b8      	beq.n	400460 <PIOA_Handler+0x40>
  4004ee:	e7b4      	b.n	40045a <PIOA_Handler+0x3a>
  4004f0:	004001ed 	.word	0x004001ed
  4004f4:	400e0e00 	.word	0x400e0e00
  4004f8:	004001f1 	.word	0x004001f1
  4004fc:	200009dc 	.word	0x200009dc
  400500:	20000ab0 	.word	0x20000ab0
  400504:	20000a50 	.word	0x20000a50

00400508 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400508:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
  40050a:	4b33      	ldr	r3, [pc, #204]	; (4005d8 <PIOB_Handler+0xd0>)
  40050c:	4833      	ldr	r0, [pc, #204]	; (4005dc <PIOB_Handler+0xd4>)
  40050e:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
  400510:	4b33      	ldr	r3, [pc, #204]	; (4005e0 <PIOB_Handler+0xd8>)
	status = pio_get_interrupt_status(p_pio);
  400512:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400514:	4831      	ldr	r0, [pc, #196]	; (4005dc <PIOB_Handler+0xd4>)
  400516:	4798      	blx	r3
	if (status != 0) {
  400518:	4005      	ands	r5, r0
  40051a:	d015      	beq.n	400548 <PIOB_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  40051c:	4c31      	ldr	r4, [pc, #196]	; (4005e4 <PIOB_Handler+0xdc>)
  40051e:	6820      	ldr	r0, [r4, #0]
  400520:	280c      	cmp	r0, #12
  400522:	d01d      	beq.n	400560 <PIOB_Handler+0x58>
  400524:	6920      	ldr	r0, [r4, #16]
  400526:	280c      	cmp	r0, #12
  400528:	d029      	beq.n	40057e <PIOB_Handler+0x76>
  40052a:	6a20      	ldr	r0, [r4, #32]
  40052c:	280c      	cmp	r0, #12
  40052e:	d02f      	beq.n	400590 <PIOB_Handler+0x88>
  400530:	6b20      	ldr	r0, [r4, #48]	; 0x30
  400532:	280c      	cmp	r0, #12
  400534:	d035      	beq.n	4005a2 <PIOB_Handler+0x9a>
  400536:	6c20      	ldr	r0, [r4, #64]	; 0x40
  400538:	280c      	cmp	r0, #12
  40053a:	d03b      	beq.n	4005b4 <PIOB_Handler+0xac>
  40053c:	6d20      	ldr	r0, [r4, #80]	; 0x50
  40053e:	280c      	cmp	r0, #12
  400540:	d041      	beq.n	4005c6 <PIOB_Handler+0xbe>
  400542:	6e20      	ldr	r0, [r4, #96]	; 0x60
  400544:	280c      	cmp	r0, #12
  400546:	d014      	beq.n	400572 <PIOB_Handler+0x6a>
	if (pio_capture_enable_flag) {
  400548:	4b27      	ldr	r3, [pc, #156]	; (4005e8 <PIOB_Handler+0xe0>)
  40054a:	681b      	ldr	r3, [r3, #0]
  40054c:	b13b      	cbz	r3, 40055e <PIOB_Handler+0x56>
		if (pio_capture_handler) {
  40054e:	4b27      	ldr	r3, [pc, #156]	; (4005ec <PIOB_Handler+0xe4>)
  400550:	681b      	ldr	r3, [r3, #0]
  400552:	b11b      	cbz	r3, 40055c <PIOB_Handler+0x54>
			pio_capture_handler(p_pio);
  400554:	4821      	ldr	r0, [pc, #132]	; (4005dc <PIOB_Handler+0xd4>)
    pio_handler_process(PIOB, ID_PIOB);
}
  400556:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			pio_capture_handler(p_pio);
  40055a:	4718      	bx	r3
  40055c:	bd70      	pop	{r4, r5, r6, pc}
  40055e:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400560:	6861      	ldr	r1, [r4, #4]
  400562:	420d      	tst	r5, r1
  400564:	d0de      	beq.n	400524 <PIOB_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400566:	68e3      	ldr	r3, [r4, #12]
  400568:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  40056a:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
  40056c:	439d      	bics	r5, r3
  40056e:	d0eb      	beq.n	400548 <PIOB_Handler+0x40>
  400570:	e7d8      	b.n	400524 <PIOB_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400572:	6e61      	ldr	r1, [r4, #100]	; 0x64
  400574:	4229      	tst	r1, r5
  400576:	d0e7      	beq.n	400548 <PIOB_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400578:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
  40057a:	4798      	blx	r3
  40057c:	e7e4      	b.n	400548 <PIOB_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40057e:	6961      	ldr	r1, [r4, #20]
  400580:	4229      	tst	r1, r5
  400582:	d0d2      	beq.n	40052a <PIOB_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400584:	69e3      	ldr	r3, [r4, #28]
  400586:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400588:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
  40058a:	439d      	bics	r5, r3
  40058c:	d0dc      	beq.n	400548 <PIOB_Handler+0x40>
  40058e:	e7cc      	b.n	40052a <PIOB_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400590:	6a61      	ldr	r1, [r4, #36]	; 0x24
  400592:	4229      	tst	r1, r5
  400594:	d0cc      	beq.n	400530 <PIOB_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400596:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  400598:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  40059a:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
  40059c:	439d      	bics	r5, r3
  40059e:	d0d3      	beq.n	400548 <PIOB_Handler+0x40>
  4005a0:	e7c6      	b.n	400530 <PIOB_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4005a2:	6b61      	ldr	r1, [r4, #52]	; 0x34
  4005a4:	4229      	tst	r1, r5
  4005a6:	d0c6      	beq.n	400536 <PIOB_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4005a8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  4005aa:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4005ac:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
  4005ae:	439d      	bics	r5, r3
  4005b0:	d0ca      	beq.n	400548 <PIOB_Handler+0x40>
  4005b2:	e7c0      	b.n	400536 <PIOB_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4005b4:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4005b6:	4229      	tst	r1, r5
  4005b8:	d0c0      	beq.n	40053c <PIOB_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4005ba:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
  4005bc:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4005be:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
  4005c0:	439d      	bics	r5, r3
  4005c2:	d0c1      	beq.n	400548 <PIOB_Handler+0x40>
  4005c4:	e7ba      	b.n	40053c <PIOB_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4005c6:	6d61      	ldr	r1, [r4, #84]	; 0x54
  4005c8:	4229      	tst	r1, r5
  4005ca:	d0ba      	beq.n	400542 <PIOB_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4005cc:	6de3      	ldr	r3, [r4, #92]	; 0x5c
  4005ce:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4005d0:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
  4005d2:	439d      	bics	r5, r3
  4005d4:	d0b8      	beq.n	400548 <PIOB_Handler+0x40>
  4005d6:	e7b4      	b.n	400542 <PIOB_Handler+0x3a>
  4005d8:	004001ed 	.word	0x004001ed
  4005dc:	400e1000 	.word	0x400e1000
  4005e0:	004001f1 	.word	0x004001f1
  4005e4:	200009dc 	.word	0x200009dc
  4005e8:	20000ab0 	.word	0x20000ab0
  4005ec:	20000a50 	.word	0x20000a50

004005f0 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4005f0:	4914      	ldr	r1, [pc, #80]	; (400644 <pmc_switch_mck_to_pllack+0x54>)
  4005f2:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4005f4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4005f8:	4318      	orrs	r0, r3
  4005fa:	6308      	str	r0, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4005fc:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  4005fe:	0718      	lsls	r0, r3, #28
  400600:	bf58      	it	pl
  400602:	f44f 6300 	movpl.w	r3, #2048	; 0x800
  400606:	d502      	bpl.n	40060e <pmc_switch_mck_to_pllack+0x1e>
  400608:	e004      	b.n	400614 <pmc_switch_mck_to_pllack+0x24>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40060a:	3b01      	subs	r3, #1
  40060c:	d017      	beq.n	40063e <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40060e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400610:	0712      	lsls	r2, r2, #28
  400612:	d5fa      	bpl.n	40060a <pmc_switch_mck_to_pllack+0x1a>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400614:	490b      	ldr	r1, [pc, #44]	; (400644 <pmc_switch_mck_to_pllack+0x54>)
  400616:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400618:	f023 0303 	bic.w	r3, r3, #3
  40061c:	f043 0302 	orr.w	r3, r3, #2
  400620:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400622:	6e8b      	ldr	r3, [r1, #104]	; 0x68
  400624:	0718      	lsls	r0, r3, #28
  400626:	bf58      	it	pl
  400628:	f44f 6300 	movpl.w	r3, #2048	; 0x800
  40062c:	d502      	bpl.n	400634 <pmc_switch_mck_to_pllack+0x44>
  40062e:	e004      	b.n	40063a <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400630:	3b01      	subs	r3, #1
  400632:	d004      	beq.n	40063e <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400634:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400636:	0712      	lsls	r2, r2, #28
  400638:	d5fa      	bpl.n	400630 <pmc_switch_mck_to_pllack+0x40>
			return 1;
		}
	}

	return 0;
  40063a:	2000      	movs	r0, #0
}
  40063c:	4770      	bx	lr
			return 1;
  40063e:	2001      	movs	r0, #1
  400640:	4770      	bx	lr
  400642:	bf00      	nop
  400644:	400e0400 	.word	0x400e0400

00400648 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400648:	b9b8      	cbnz	r0, 40067a <pmc_switch_mainck_to_xtal+0x32>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40064a:	4a10      	ldr	r2, [pc, #64]	; (40068c <pmc_switch_mainck_to_xtal+0x44>)
  40064c:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40064e:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400652:	f023 0303 	bic.w	r3, r3, #3
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400656:	0209      	lsls	r1, r1, #8
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400658:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  40065c:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40065e:	f043 0301 	orr.w	r3, r3, #1
  400662:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400664:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400666:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400668:	07db      	lsls	r3, r3, #31
  40066a:	d5fc      	bpl.n	400666 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40066c:	6a13      	ldr	r3, [r2, #32]
  40066e:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  400672:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  400676:	6213      	str	r3, [r2, #32]
  400678:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40067a:	4904      	ldr	r1, [pc, #16]	; (40068c <pmc_switch_mainck_to_xtal+0x44>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40067c:	4a04      	ldr	r2, [pc, #16]	; (400690 <pmc_switch_mainck_to_xtal+0x48>)
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40067e:	6a08      	ldr	r0, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400680:	4b04      	ldr	r3, [pc, #16]	; (400694 <pmc_switch_mainck_to_xtal+0x4c>)
  400682:	4002      	ands	r2, r0
  400684:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400686:	620b      	str	r3, [r1, #32]
  400688:	4770      	bx	lr
  40068a:	bf00      	nop
  40068c:	400e0400 	.word	0x400e0400
  400690:	fec8fffc 	.word	0xfec8fffc
  400694:	01370002 	.word	0x01370002

00400698 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400698:	4b02      	ldr	r3, [pc, #8]	; (4006a4 <pmc_osc_is_ready_mainck+0xc>)
  40069a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40069c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4006a0:	4770      	bx	lr
  4006a2:	bf00      	nop
  4006a4:	400e0400 	.word	0x400e0400

004006a8 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4006a8:	4b02      	ldr	r3, [pc, #8]	; (4006b4 <pmc_disable_pllack+0xc>)
  4006aa:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4006ae:	629a      	str	r2, [r3, #40]	; 0x28
  4006b0:	4770      	bx	lr
  4006b2:	bf00      	nop
  4006b4:	400e0400 	.word	0x400e0400

004006b8 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4006b8:	4b02      	ldr	r3, [pc, #8]	; (4006c4 <pmc_is_locked_pllack+0xc>)
  4006ba:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4006bc:	f000 0002 	and.w	r0, r0, #2
  4006c0:	4770      	bx	lr
  4006c2:	bf00      	nop
  4006c4:	400e0400 	.word	0x400e0400

004006c8 <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  4006c8:	b410      	push	{r4}
#if SAMG55
	PMC->CKGR_PLLAR = CKGR_PLLAR_PLLAEN(divb) |
		CKGR_PLLAR_PLLACOUNT(pllbcount) | CKGR_PLLAR_MULA(mulb);
#else
	PMC->CKGR_PLLBR =
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  4006ca:	0209      	lsls	r1, r1, #8
			| CKGR_PLLBR_MULB(mulb);
  4006cc:	4c08      	ldr	r4, [pc, #32]	; (4006f0 <pmc_enable_pllbck+0x28>)
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  4006ce:	4b09      	ldr	r3, [pc, #36]	; (4006f4 <pmc_enable_pllbck+0x2c>)
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  4006d0:	b2d2      	uxtb	r2, r2
  4006d2:	f401 517c 	and.w	r1, r1, #16128	; 0x3f00
  4006d6:	4311      	orrs	r1, r2
			| CKGR_PLLBR_MULB(mulb);
  4006d8:	ea04 4000 	and.w	r0, r4, r0, lsl #16
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  4006dc:	2200      	movs	r2, #0
			| CKGR_PLLBR_MULB(mulb);
  4006de:	4301      	orrs	r1, r0
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  4006e0:	62da      	str	r2, [r3, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  4006e2:	461a      	mov	r2, r3
	PMC->CKGR_PLLBR =
  4006e4:	62d9      	str	r1, [r3, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  4006e6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006e8:	075b      	lsls	r3, r3, #29
  4006ea:	d5fc      	bpl.n	4006e6 <pmc_enable_pllbck+0x1e>
}
  4006ec:	bc10      	pop	{r4}
  4006ee:	4770      	bx	lr
  4006f0:	07ff0000 	.word	0x07ff0000
  4006f4:	400e0400 	.word	0x400e0400

004006f8 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  4006f8:	2822      	cmp	r0, #34	; 0x22
  4006fa:	d819      	bhi.n	400730 <pmc_enable_periph_clk+0x38>
		return 1;
	}

	if (ul_id < 32) {
  4006fc:	281f      	cmp	r0, #31
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  4006fe:	4a0e      	ldr	r2, [pc, #56]	; (400738 <pmc_enable_periph_clk+0x40>)
	if (ul_id < 32) {
  400700:	d809      	bhi.n	400716 <pmc_enable_periph_clk+0x1e>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400702:	2301      	movs	r3, #1
  400704:	6991      	ldr	r1, [r2, #24]
  400706:	fa03 f000 	lsl.w	r0, r3, r0
  40070a:	ea30 0301 	bics.w	r3, r0, r1
  40070e:	d011      	beq.n	400734 <pmc_enable_periph_clk+0x3c>
			PMC->PMC_PCER0 = 1 << ul_id;
  400710:	6110      	str	r0, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400712:	2000      	movs	r0, #0
  400714:	4770      	bx	lr
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400716:	2301      	movs	r3, #1
		ul_id -= 32;
  400718:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40071a:	f8d2 1108 	ldr.w	r1, [r2, #264]	; 0x108
  40071e:	fa03 f000 	lsl.w	r0, r3, r0
  400722:	ea30 0301 	bics.w	r3, r0, r1
  400726:	d005      	beq.n	400734 <pmc_enable_periph_clk+0x3c>
			PMC->PMC_PCER1 = 1 << ul_id;
  400728:	f8c2 0100 	str.w	r0, [r2, #256]	; 0x100
	return 0;
  40072c:	2000      	movs	r0, #0
  40072e:	4770      	bx	lr
		return 1;
  400730:	2001      	movs	r0, #1
  400732:	4770      	bx	lr
	return 0;
  400734:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400736:	4770      	bx	lr
  400738:	400e0400 	.word	0x400e0400

0040073c <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  40073c:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40073e:	0189      	lsls	r1, r1, #6
  400740:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400742:	2402      	movs	r4, #2
  400744:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400746:	f04f 31ff 	mov.w	r1, #4294967295
  40074a:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  40074c:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  40074e:	605a      	str	r2, [r3, #4]
}
  400750:	bc10      	pop	{r4}
  400752:	4770      	bx	lr

00400754 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400754:	0189      	lsls	r1, r1, #6
  400756:	2305      	movs	r3, #5
  400758:	5043      	str	r3, [r0, r1]
  40075a:	4770      	bx	lr

0040075c <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  40075c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  400760:	61ca      	str	r2, [r1, #28]
  400762:	4770      	bx	lr

00400764 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400764:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  400768:	624a      	str	r2, [r1, #36]	; 0x24
  40076a:	4770      	bx	lr

0040076c <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40076c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  400770:	6a08      	ldr	r0, [r1, #32]
}
  400772:	4770      	bx	lr

00400774 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  400774:	b430      	push	{r4, r5}
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  400776:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
{
  40077a:	9c02      	ldr	r4, [sp, #8]
		if (ul_freq > ul_high) {
  40077c:	d820      	bhi.n	4007c0 <tc_find_mck_divisor+0x4c>
  40077e:	0c4d      	lsrs	r5, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  400780:	42a8      	cmp	r0, r5
  400782:	d220      	bcs.n	4007c6 <tc_find_mck_divisor+0x52>
		if (ul_freq > ul_high) {
  400784:	ebb0 0fd1 	cmp.w	r0, r1, lsr #3
		ul_low  = ul_high / TC_DIV_FACTOR;
  400788:	ea4f 45d1 	mov.w	r5, r1, lsr #19
		if (ul_freq > ul_high) {
  40078c:	d818      	bhi.n	4007c0 <tc_find_mck_divisor+0x4c>
		} else if (ul_freq >= ul_low) {
  40078e:	42a8      	cmp	r0, r5
  400790:	d224      	bcs.n	4007dc <tc_find_mck_divisor+0x68>
		if (ul_freq > ul_high) {
  400792:	ebb0 1f51 	cmp.w	r0, r1, lsr #5
		ul_low  = ul_high / TC_DIV_FACTOR;
  400796:	ea4f 5551 	mov.w	r5, r1, lsr #21
		if (ul_freq > ul_high) {
  40079a:	d811      	bhi.n	4007c0 <tc_find_mck_divisor+0x4c>
		} else if (ul_freq >= ul_low) {
  40079c:	42a8      	cmp	r0, r5
  40079e:	d220      	bcs.n	4007e2 <tc_find_mck_divisor+0x6e>
		if (ul_freq > ul_high) {
  4007a0:	ebb0 1fd1 	cmp.w	r0, r1, lsr #7
		ul_low  = ul_high / TC_DIV_FACTOR;
  4007a4:	ea4f 55d1 	mov.w	r5, r1, lsr #23
		if (ul_freq > ul_high) {
  4007a8:	d80a      	bhi.n	4007c0 <tc_find_mck_divisor+0x4c>
		} else if (ul_freq >= ul_low) {
  4007aa:	42a8      	cmp	r0, r5
  4007ac:	d21c      	bcs.n	4007e8 <tc_find_mck_divisor+0x74>
  4007ae:	0be4      	lsrs	r4, r4, #15
		ul_high = ul_mck / divisors[ul_index];
  4007b0:	fbb1 f1f4 	udiv	r1, r1, r4
		if (ul_freq > ul_high) {
  4007b4:	4281      	cmp	r1, r0
		ul_low  = ul_high / TC_DIV_FACTOR;
  4007b6:	ea4f 4511 	mov.w	r5, r1, lsr #16
		if (ul_freq > ul_high) {
  4007ba:	d301      	bcc.n	4007c0 <tc_find_mck_divisor+0x4c>
		} else if (ul_freq >= ul_low) {
  4007bc:	4285      	cmp	r5, r0
  4007be:	d916      	bls.n	4007ee <tc_find_mck_divisor+0x7a>
			return 0;
  4007c0:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  4007c2:	bc30      	pop	{r4, r5}
  4007c4:	4770      	bx	lr
	for (ul_index = 0;
  4007c6:	2100      	movs	r1, #0
		ul_high = ul_mck / divisors[ul_index];
  4007c8:	2402      	movs	r4, #2
	if (p_uldiv) {
  4007ca:	b102      	cbz	r2, 4007ce <tc_find_mck_divisor+0x5a>
		*p_uldiv = divisors[ul_index];
  4007cc:	6014      	str	r4, [r2, #0]
	if (p_ultcclks) {
  4007ce:	b11b      	cbz	r3, 4007d8 <tc_find_mck_divisor+0x64>
	return 1;
  4007d0:	2001      	movs	r0, #1
		*p_ultcclks = ul_index;
  4007d2:	6019      	str	r1, [r3, #0]
}
  4007d4:	bc30      	pop	{r4, r5}
  4007d6:	4770      	bx	lr
	return 1;
  4007d8:	2001      	movs	r0, #1
  4007da:	e7f2      	b.n	4007c2 <tc_find_mck_divisor+0x4e>
			ul_index++) {
  4007dc:	2101      	movs	r1, #1
		ul_high = ul_mck / divisors[ul_index];
  4007de:	2408      	movs	r4, #8
  4007e0:	e7f3      	b.n	4007ca <tc_find_mck_divisor+0x56>
			ul_index++) {
  4007e2:	2102      	movs	r1, #2
		ul_high = ul_mck / divisors[ul_index];
  4007e4:	2420      	movs	r4, #32
  4007e6:	e7f0      	b.n	4007ca <tc_find_mck_divisor+0x56>
			ul_index++) {
  4007e8:	2103      	movs	r1, #3
		ul_high = ul_mck / divisors[ul_index];
  4007ea:	2480      	movs	r4, #128	; 0x80
  4007ec:	e7ed      	b.n	4007ca <tc_find_mck_divisor+0x56>
			ul_index++) {
  4007ee:	2104      	movs	r1, #4
  4007f0:	e7eb      	b.n	4007ca <tc_find_mck_divisor+0x56>
  4007f2:	bf00      	nop

004007f4 <twi_master_init>:
 * \param p_opt Options for initializing the TWI module (see \ref twi_options_t).
 *
 * \return TWI_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t twi_master_init(Twi *p_twi, const twi_options_t *p_opt)
{
  4007f4:	b570      	push	{r4, r5, r6, lr}
  4007f6:	4602      	mov	r2, r0
	uint32_t status = TWI_SUCCESS;

	/* Disable TWI interrupts */
	p_twi->TWI_IDR = ~0UL;
  4007f8:	f04f 33ff 	mov.w	r3, #4294967295
  4007fc:	6283      	str	r3, [r0, #40]	; 0x28
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  4007fe:	2380      	movs	r3, #128	; 0x80
	p_twi->TWI_SR;
  400800:	6a00      	ldr	r0, [r0, #32]
	p_twi->TWI_CR = TWI_CR_SWRST;
  400802:	6013      	str	r3, [r2, #0]
	p_twi->TWI_CR = TWI_CR_MSDIS;
  400804:	2008      	movs	r0, #8
	p_twi->TWI_CR = TWI_CR_SVDIS;
  400806:	2320      	movs	r3, #32
	p_twi->TWI_CR = TWI_CR_MSEN;
  400808:	2404      	movs	r4, #4
	p_twi->TWI_RHR;
  40080a:	6b15      	ldr	r5, [r2, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  40080c:	6010      	str	r0, [r2, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  40080e:	6013      	str	r3, [r2, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  400810:	6014      	str	r4, [r2, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  400812:	6848      	ldr	r0, [r1, #4]
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  400814:	4b70      	ldr	r3, [pc, #448]	; (4009d8 <twi_master_init+0x1e4>)
  400816:	4298      	cmp	r0, r3
  400818:	d868      	bhi.n	4008ec <twi_master_init+0xf8>
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  40081a:	4d70      	ldr	r5, [pc, #448]	; (4009dc <twi_master_init+0x1e8>)
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  40081c:	680b      	ldr	r3, [r1, #0]
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  40081e:	42a8      	cmp	r0, r5
  400820:	d82f      	bhi.n	400882 <twi_master_init+0x8e>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400822:	0040      	lsls	r0, r0, #1
  400824:	fbb3 f3f0 	udiv	r3, r3, r0
  400828:	3b04      	subs	r3, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40082a:	2bff      	cmp	r3, #255	; 0xff
  40082c:	f240 809c 	bls.w	400968 <twi_master_init+0x174>
			c_lh_div /= TWI_CLK_DIVIDER;
  400830:	0858      	lsrs	r0, r3, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400832:	28ff      	cmp	r0, #255	; 0xff
  400834:	f240 80aa 	bls.w	40098c <twi_master_init+0x198>
			c_lh_div /= TWI_CLK_DIVIDER;
  400838:	0898      	lsrs	r0, r3, #2
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40083a:	28ff      	cmp	r0, #255	; 0xff
  40083c:	f240 80ab 	bls.w	400996 <twi_master_init+0x1a2>
			c_lh_div /= TWI_CLK_DIVIDER;
  400840:	08d8      	lsrs	r0, r3, #3
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400842:	28ff      	cmp	r0, #255	; 0xff
  400844:	f240 80aa 	bls.w	40099c <twi_master_init+0x1a8>
			c_lh_div /= TWI_CLK_DIVIDER;
  400848:	0918      	lsrs	r0, r3, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40084a:	28ff      	cmp	r0, #255	; 0xff
  40084c:	f240 80b0 	bls.w	4009b0 <twi_master_init+0x1bc>
			c_lh_div /= TWI_CLK_DIVIDER;
  400850:	0958      	lsrs	r0, r3, #5
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400852:	28ff      	cmp	r0, #255	; 0xff
  400854:	f240 80b0 	bls.w	4009b8 <twi_master_init+0x1c4>
			c_lh_div /= TWI_CLK_DIVIDER;
  400858:	0998      	lsrs	r0, r3, #6
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40085a:	28ff      	cmp	r0, #255	; 0xff
  40085c:	d97e      	bls.n	40095c <twi_master_init+0x168>
			c_lh_div /= TWI_CLK_DIVIDER;
  40085e:	09db      	lsrs	r3, r3, #7
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400860:	2bff      	cmp	r3, #255	; 0xff
			ckdiv++;
  400862:	bf98      	it	ls
  400864:	2407      	movls	r4, #7
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400866:	d97b      	bls.n	400960 <twi_master_init+0x16c>
  400868:	f44f 24e0 	mov.w	r4, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  40086c:	0218      	lsls	r0, r3, #8
  40086e:	b2db      	uxtb	r3, r3
  400870:	b280      	uxth	r0, r0
  400872:	4323      	orrs	r3, r4
  400874:	4303      	orrs	r3, r0
		p_twi->TWI_CWGR =
  400876:	6113      	str	r3, [r2, #16]
	uint32_t status = TWI_SUCCESS;
  400878:	2000      	movs	r0, #0
	if (p_opt->smbus == 1) {
  40087a:	7a4b      	ldrb	r3, [r1, #9]
  40087c:	2b01      	cmp	r3, #1
  40087e:	d032      	beq.n	4008e6 <twi_master_init+0xf2>
}
  400880:	bd70      	pop	{r4, r5, r6, pc}
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400882:	4d57      	ldr	r5, [pc, #348]	; (4009e0 <twi_master_init+0x1ec>)
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400884:	4e57      	ldr	r6, [pc, #348]	; (4009e4 <twi_master_init+0x1f0>)
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400886:	fba5 e503 	umull	lr, r5, r5, r3
  40088a:	0bad      	lsrs	r5, r5, #14
  40088c:	3d04      	subs	r5, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  40088e:	4406      	add	r6, r0
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400890:	2dff      	cmp	r5, #255	; 0xff
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400892:	ea4f 0686 	mov.w	r6, r6, lsl #2
  400896:	fbb3 f3f6 	udiv	r3, r3, r6
  40089a:	f1a3 0304 	sub.w	r3, r3, #4
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40089e:	d965      	bls.n	40096c <twi_master_init+0x178>
			cldiv /= TWI_CLK_DIVIDER;
  4008a0:	0868      	lsrs	r0, r5, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008a2:	28ff      	cmp	r0, #255	; 0xff
  4008a4:	d970      	bls.n	400988 <twi_master_init+0x194>
			cldiv /= TWI_CLK_DIVIDER;
  4008a6:	08a8      	lsrs	r0, r5, #2
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008a8:	28ff      	cmp	r0, #255	; 0xff
  4008aa:	d972      	bls.n	400992 <twi_master_init+0x19e>
			cldiv /= TWI_CLK_DIVIDER;
  4008ac:	08e8      	lsrs	r0, r5, #3
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008ae:	28ff      	cmp	r0, #255	; 0xff
  4008b0:	d97c      	bls.n	4009ac <twi_master_init+0x1b8>
			cldiv /= TWI_CLK_DIVIDER;
  4008b2:	fa25 f004 	lsr.w	r0, r5, r4
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008b6:	28ff      	cmp	r0, #255	; 0xff
  4008b8:	d91b      	bls.n	4008f2 <twi_master_init+0xfe>
			cldiv /= TWI_CLK_DIVIDER;
  4008ba:	0968      	lsrs	r0, r5, #5
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008bc:	28ff      	cmp	r0, #255	; 0xff
  4008be:	d979      	bls.n	4009b4 <twi_master_init+0x1c0>
			cldiv /= TWI_CLK_DIVIDER;
  4008c0:	09a8      	lsrs	r0, r5, #6
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008c2:	28ff      	cmp	r0, #255	; 0xff
  4008c4:	d914      	bls.n	4008f0 <twi_master_init+0xfc>
			cldiv /= TWI_CLK_DIVIDER;
  4008c6:	09e8      	lsrs	r0, r5, #7
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008c8:	28ff      	cmp	r0, #255	; 0xff
  4008ca:	d978      	bls.n	4009be <twi_master_init+0x1ca>
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008cc:	f44f 24e0 	mov.w	r4, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  4008d0:	b2c0      	uxtb	r0, r0
  4008d2:	021b      	lsls	r3, r3, #8
  4008d4:	4304      	orrs	r4, r0
  4008d6:	b29b      	uxth	r3, r3
  4008d8:	4323      	orrs	r3, r4
		p_twi->TWI_CWGR =
  4008da:	6113      	str	r3, [r2, #16]
	if (p_opt->smbus == 1) {
  4008dc:	7a4b      	ldrb	r3, [r1, #9]
  4008de:	2b01      	cmp	r3, #1
	uint32_t status = TWI_SUCCESS;
  4008e0:	f04f 0000 	mov.w	r0, #0
	if (p_opt->smbus == 1) {
  4008e4:	d1cc      	bne.n	400880 <twi_master_init+0x8c>
		p_twi->TWI_CR = TWI_CR_QUICK;
  4008e6:	2340      	movs	r3, #64	; 0x40
  4008e8:	6013      	str	r3, [r2, #0]
	return status;
  4008ea:	bd70      	pop	{r4, r5, r6, pc}
		status = TWI_INVALID_ARGUMENT;
  4008ec:	2001      	movs	r0, #1
  4008ee:	e7c4      	b.n	40087a <twi_master_init+0x86>
			ckdiv++;
  4008f0:	2406      	movs	r4, #6
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008f2:	2bff      	cmp	r3, #255	; 0xff
  4008f4:	d966      	bls.n	4009c4 <twi_master_init+0x1d0>
			chdiv /= TWI_CLK_DIVIDER;
  4008f6:	085e      	lsrs	r6, r3, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008f8:	2eff      	cmp	r6, #255	; 0xff
			ckdiv++;
  4008fa:	f104 0501 	add.w	r5, r4, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4008fe:	d953      	bls.n	4009a8 <twi_master_init+0x1b4>
  400900:	2d07      	cmp	r5, #7
  400902:	d02f      	beq.n	400964 <twi_master_init+0x170>
			chdiv /= TWI_CLK_DIVIDER;
  400904:	089e      	lsrs	r6, r3, #2
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400906:	2eff      	cmp	r6, #255	; 0xff
			ckdiv++;
  400908:	f104 0402 	add.w	r4, r4, #2
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40090c:	d949      	bls.n	4009a2 <twi_master_init+0x1ae>
  40090e:	2c07      	cmp	r4, #7
  400910:	d028      	beq.n	400964 <twi_master_init+0x170>
			chdiv /= TWI_CLK_DIVIDER;
  400912:	0873      	lsrs	r3, r6, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400914:	2bff      	cmp	r3, #255	; 0xff
			ckdiv++;
  400916:	f104 0501 	add.w	r5, r4, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40091a:	d91b      	bls.n	400954 <twi_master_init+0x160>
  40091c:	2d07      	cmp	r5, #7
  40091e:	d0d5      	beq.n	4008cc <twi_master_init+0xd8>
			chdiv /= TWI_CLK_DIVIDER;
  400920:	08b3      	lsrs	r3, r6, #2
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400922:	2bff      	cmp	r3, #255	; 0xff
			ckdiv++;
  400924:	f104 0502 	add.w	r5, r4, #2
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400928:	d914      	bls.n	400954 <twi_master_init+0x160>
  40092a:	2d07      	cmp	r5, #7
  40092c:	d0ce      	beq.n	4008cc <twi_master_init+0xd8>
			chdiv /= TWI_CLK_DIVIDER;
  40092e:	08f3      	lsrs	r3, r6, #3
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400930:	2bff      	cmp	r3, #255	; 0xff
			ckdiv++;
  400932:	f104 0503 	add.w	r5, r4, #3
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400936:	d90d      	bls.n	400954 <twi_master_init+0x160>
  400938:	2d07      	cmp	r5, #7
  40093a:	d0c7      	beq.n	4008cc <twi_master_init+0xd8>
			chdiv /= TWI_CLK_DIVIDER;
  40093c:	0933      	lsrs	r3, r6, #4
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40093e:	2bff      	cmp	r3, #255	; 0xff
			ckdiv++;
  400940:	f104 0504 	add.w	r5, r4, #4
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400944:	d906      	bls.n	400954 <twi_master_init+0x160>
  400946:	2d06      	cmp	r5, #6
  400948:	d1c0      	bne.n	4008cc <twi_master_init+0xd8>
			chdiv /= TWI_CLK_DIVIDER;
  40094a:	0973      	lsrs	r3, r6, #5
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40094c:	2bff      	cmp	r3, #255	; 0xff
			ckdiv++;
  40094e:	bf98      	it	ls
  400950:	2507      	movls	r5, #7
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400952:	d8bb      	bhi.n	4008cc <twi_master_init+0xd8>
  400954:	042c      	lsls	r4, r5, #16
  400956:	f404 24e0 	and.w	r4, r4, #458752	; 0x70000
  40095a:	e7b9      	b.n	4008d0 <twi_master_init+0xdc>
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40095c:	4603      	mov	r3, r0
			ckdiv++;
  40095e:	2406      	movs	r4, #6
  400960:	0424      	lsls	r4, r4, #16
  400962:	e783      	b.n	40086c <twi_master_init+0x78>
			chdiv /= TWI_CLK_DIVIDER;
  400964:	4633      	mov	r3, r6
  400966:	e7b1      	b.n	4008cc <twi_master_init+0xd8>
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400968:	2400      	movs	r4, #0
  40096a:	e77f      	b.n	40086c <twi_master_init+0x78>
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40096c:	2bff      	cmp	r3, #255	; 0xff
  40096e:	d92f      	bls.n	4009d0 <twi_master_init+0x1dc>
			chdiv /= TWI_CLK_DIVIDER;
  400970:	085c      	lsrs	r4, r3, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400972:	2cff      	cmp	r4, #255	; 0xff
  400974:	d928      	bls.n	4009c8 <twi_master_init+0x1d4>
			chdiv /= TWI_CLK_DIVIDER;
  400976:	089e      	lsrs	r6, r3, #2
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400978:	2eff      	cmp	r6, #255	; 0xff
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  40097a:	4628      	mov	r0, r5
			ckdiv++;
  40097c:	bf88      	it	hi
  40097e:	2402      	movhi	r4, #2
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400980:	d8c7      	bhi.n	400912 <twi_master_init+0x11e>
			chdiv /= TWI_CLK_DIVIDER;
  400982:	4633      	mov	r3, r6
			ckdiv++;
  400984:	2502      	movs	r5, #2
  400986:	e7e5      	b.n	400954 <twi_master_init+0x160>
			ckdiv++;
  400988:	2401      	movs	r4, #1
  40098a:	e7b2      	b.n	4008f2 <twi_master_init+0xfe>
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40098c:	4603      	mov	r3, r0
			ckdiv++;
  40098e:	2401      	movs	r4, #1
  400990:	e7e6      	b.n	400960 <twi_master_init+0x16c>
			ckdiv++;
  400992:	2402      	movs	r4, #2
  400994:	e7ad      	b.n	4008f2 <twi_master_init+0xfe>
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400996:	4603      	mov	r3, r0
			ckdiv++;
  400998:	2402      	movs	r4, #2
  40099a:	e7e1      	b.n	400960 <twi_master_init+0x16c>
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40099c:	4603      	mov	r3, r0
			ckdiv++;
  40099e:	2403      	movs	r4, #3
  4009a0:	e7de      	b.n	400960 <twi_master_init+0x16c>
			chdiv /= TWI_CLK_DIVIDER;
  4009a2:	4633      	mov	r3, r6
			ckdiv++;
  4009a4:	4625      	mov	r5, r4
  4009a6:	e7d5      	b.n	400954 <twi_master_init+0x160>
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4009a8:	4633      	mov	r3, r6
  4009aa:	e7d3      	b.n	400954 <twi_master_init+0x160>
			ckdiv++;
  4009ac:	2403      	movs	r4, #3
  4009ae:	e7a0      	b.n	4008f2 <twi_master_init+0xfe>
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4009b0:	4603      	mov	r3, r0
  4009b2:	e7d5      	b.n	400960 <twi_master_init+0x16c>
			ckdiv++;
  4009b4:	2405      	movs	r4, #5
  4009b6:	e79c      	b.n	4008f2 <twi_master_init+0xfe>
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4009b8:	4603      	mov	r3, r0
			ckdiv++;
  4009ba:	2405      	movs	r4, #5
  4009bc:	e7d0      	b.n	400960 <twi_master_init+0x16c>
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4009be:	2bff      	cmp	r3, #255	; 0xff
  4009c0:	d884      	bhi.n	4008cc <twi_master_init+0xd8>
			ckdiv++;
  4009c2:	2407      	movs	r4, #7
  4009c4:	0424      	lsls	r4, r4, #16
  4009c6:	e783      	b.n	4008d0 <twi_master_init+0xdc>
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4009c8:	4628      	mov	r0, r5
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4009ca:	4623      	mov	r3, r4
			ckdiv++;
  4009cc:	2501      	movs	r5, #1
  4009ce:	e7c1      	b.n	400954 <twi_master_init+0x160>
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4009d0:	4628      	mov	r0, r5
  4009d2:	2400      	movs	r4, #0
  4009d4:	e77c      	b.n	4008d0 <twi_master_init+0xdc>
  4009d6:	bf00      	nop
  4009d8:	00061a80 	.word	0x00061a80
  4009dc:	0005dc00 	.word	0x0005dc00
  4009e0:	057619f1 	.word	0x057619f1
  4009e4:	3ffd1200 	.word	0x3ffd1200

004009e8 <twi_master_read>:
	uint32_t cnt = p_packet->length;
  4009e8:	68cb      	ldr	r3, [r1, #12]
	if (cnt == 0) {
  4009ea:	2b00      	cmp	r3, #0
  4009ec:	d054      	beq.n	400a98 <twi_master_read+0xb0>
{
  4009ee:	b4f0      	push	{r4, r5, r6, r7}
	p_twi->TWI_MMR = 0;
  4009f0:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  4009f2:	688c      	ldr	r4, [r1, #8]
	p_twi->TWI_MMR = 0;
  4009f4:	6046      	str	r6, [r0, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  4009f6:	684a      	ldr	r2, [r1, #4]
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  4009f8:	7c0d      	ldrb	r5, [r1, #16]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  4009fa:	0212      	lsls	r2, r2, #8
  4009fc:	f402 7240 	and.w	r2, r2, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  400a00:	042d      	lsls	r5, r5, #16
  400a02:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  400a06:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  400a0a:	432a      	orrs	r2, r5
  400a0c:	6042      	str	r2, [r0, #4]
	p_twi->TWI_IADR = 0;
  400a0e:	60c6      	str	r6, [r0, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400a10:	684a      	ldr	r2, [r1, #4]
	if (len == 0)
  400a12:	bb22      	cbnz	r2, 400a5e <twi_master_read+0x76>
		return 0;
  400a14:	4615      	mov	r5, r2
	if (cnt == 1) {
  400a16:	2b01      	cmp	r3, #1
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400a18:	60c5      	str	r5, [r0, #12]
	if (cnt == 1) {
  400a1a:	d02e      	beq.n	400a7a <twi_master_read+0x92>
		p_twi->TWI_CR = TWI_CR_START;
  400a1c:	2201      	movs	r2, #1
  400a1e:	6002      	str	r2, [r0, #0]
		stop_sent = 0;
  400a20:	2600      	movs	r6, #0
		status = p_twi->TWI_SR;
  400a22:	6a02      	ldr	r2, [r0, #32]
		if (status & TWI_SR_NACK) {
  400a24:	05d5      	lsls	r5, r2, #23
		timeout = TWI_TIMEOUT;
  400a26:	f247 5130 	movw	r1, #30000	; 0x7530
			p_twi->TWI_CR = TWI_CR_STOP;
  400a2a:	f04f 0702 	mov.w	r7, #2
		if (status & TWI_SR_NACK) {
  400a2e:	d412      	bmi.n	400a56 <twi_master_read+0x6e>
		if (!timeout--) {
  400a30:	1e4d      	subs	r5, r1, #1
  400a32:	2900      	cmp	r1, #0
  400a34:	d033      	beq.n	400a9e <twi_master_read+0xb6>
		if (cnt == 1  && !stop_sent) {
  400a36:	2b01      	cmp	r3, #1
  400a38:	d02a      	beq.n	400a90 <twi_master_read+0xa8>
		if (!(status & TWI_SR_RXRDY)) {
  400a3a:	0792      	lsls	r2, r2, #30
  400a3c:	d507      	bpl.n	400a4e <twi_master_read+0x66>
		*buffer++ = p_twi->TWI_RHR;
  400a3e:	6b02      	ldr	r2, [r0, #48]	; 0x30
  400a40:	7022      	strb	r2, [r4, #0]
	while (cnt > 0) {
  400a42:	3b01      	subs	r3, #1
		*buffer++ = p_twi->TWI_RHR;
  400a44:	f104 0401 	add.w	r4, r4, #1
	while (cnt > 0) {
  400a48:	d01b      	beq.n	400a82 <twi_master_read+0x9a>
		timeout = TWI_TIMEOUT;
  400a4a:	f247 5530 	movw	r5, #30000	; 0x7530
		status = p_twi->TWI_SR;
  400a4e:	6a02      	ldr	r2, [r0, #32]
		timeout = TWI_TIMEOUT;
  400a50:	4629      	mov	r1, r5
		if (status & TWI_SR_NACK) {
  400a52:	05d5      	lsls	r5, r2, #23
  400a54:	d5ec      	bpl.n	400a30 <twi_master_read+0x48>
			return TWI_RECEIVE_NACK;
  400a56:	2305      	movs	r3, #5
}
  400a58:	4618      	mov	r0, r3
  400a5a:	bcf0      	pop	{r4, r5, r6, r7}
  400a5c:	4770      	bx	lr
	if (len > 1) {
  400a5e:	2a01      	cmp	r2, #1
	val = addr[0];
  400a60:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  400a62:	ddd8      	ble.n	400a16 <twi_master_read+0x2e>
		val |= addr[1];
  400a64:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  400a66:	2a02      	cmp	r2, #2
		val |= addr[1];
  400a68:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  400a6c:	d0d3      	beq.n	400a16 <twi_master_read+0x2e>
		val |= addr[2];
  400a6e:	788a      	ldrb	r2, [r1, #2]
	if (cnt == 1) {
  400a70:	2b01      	cmp	r3, #1
		val |= addr[2];
  400a72:	ea42 2505 	orr.w	r5, r2, r5, lsl #8
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400a76:	60c5      	str	r5, [r0, #12]
	if (cnt == 1) {
  400a78:	d1d0      	bne.n	400a1c <twi_master_read+0x34>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  400a7a:	2203      	movs	r2, #3
  400a7c:	6002      	str	r2, [r0, #0]
		stop_sent = 1;
  400a7e:	461e      	mov	r6, r3
  400a80:	e7cf      	b.n	400a22 <twi_master_read+0x3a>
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400a82:	6a02      	ldr	r2, [r0, #32]
  400a84:	07d1      	lsls	r1, r2, #31
  400a86:	d5fc      	bpl.n	400a82 <twi_master_read+0x9a>
	p_twi->TWI_SR;
  400a88:	6a02      	ldr	r2, [r0, #32]
}
  400a8a:	bcf0      	pop	{r4, r5, r6, r7}
  400a8c:	4618      	mov	r0, r3
  400a8e:	4770      	bx	lr
		if (cnt == 1  && !stop_sent) {
  400a90:	b906      	cbnz	r6, 400a94 <twi_master_read+0xac>
			p_twi->TWI_CR = TWI_CR_STOP;
  400a92:	6007      	str	r7, [r0, #0]
		if (!(status & TWI_SR_RXRDY)) {
  400a94:	2601      	movs	r6, #1
  400a96:	e7d0      	b.n	400a3a <twi_master_read+0x52>
		return TWI_INVALID_ARGUMENT;
  400a98:	2301      	movs	r3, #1
}
  400a9a:	4618      	mov	r0, r3
  400a9c:	4770      	bx	lr
			return TWI_ERROR_TIMEOUT;
  400a9e:	2309      	movs	r3, #9
}
  400aa0:	4618      	mov	r0, r3
  400aa2:	bcf0      	pop	{r4, r5, r6, r7}
  400aa4:	4770      	bx	lr
  400aa6:	bf00      	nop

00400aa8 <twi_master_write>:
{
  400aa8:	4603      	mov	r3, r0
	uint32_t cnt = p_packet->length;
  400aaa:	68c8      	ldr	r0, [r1, #12]
	if (cnt == 0) {
  400aac:	2800      	cmp	r0, #0
  400aae:	d034      	beq.n	400b1a <twi_master_write+0x72>
{
  400ab0:	b470      	push	{r4, r5, r6}
	p_twi->TWI_MMR = 0;
  400ab2:	2600      	movs	r6, #0
	uint8_t *buffer = p_packet->buffer;
  400ab4:	688c      	ldr	r4, [r1, #8]
	p_twi->TWI_MMR = 0;
  400ab6:	605e      	str	r6, [r3, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400ab8:	7c0a      	ldrb	r2, [r1, #16]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  400aba:	684d      	ldr	r5, [r1, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400abc:	0412      	lsls	r2, r2, #16
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  400abe:	022d      	lsls	r5, r5, #8
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400ac0:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  400ac4:	f405 7540 	and.w	r5, r5, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400ac8:	432a      	orrs	r2, r5
  400aca:	605a      	str	r2, [r3, #4]
	p_twi->TWI_IADR = 0;
  400acc:	60de      	str	r6, [r3, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400ace:	684a      	ldr	r2, [r1, #4]
	if (len == 0)
  400ad0:	b98a      	cbnz	r2, 400af6 <twi_master_write+0x4e>
		return 0;
  400ad2:	4615      	mov	r5, r2
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400ad4:	60dd      	str	r5, [r3, #12]
		status = p_twi->TWI_SR;
  400ad6:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWI_SR_NACK) {
  400ad8:	05d6      	lsls	r6, r2, #23
  400ada:	d409      	bmi.n	400af0 <twi_master_write+0x48>
		if (!(status & TWI_SR_TXRDY)) {
  400adc:	0755      	lsls	r5, r2, #29
  400ade:	d5fa      	bpl.n	400ad6 <twi_master_write+0x2e>
		p_twi->TWI_THR = *buffer++;
  400ae0:	f814 2b01 	ldrb.w	r2, [r4], #1
  400ae4:	635a      	str	r2, [r3, #52]	; 0x34
	while (cnt > 0) {
  400ae6:	3801      	subs	r0, #1
  400ae8:	d013      	beq.n	400b12 <twi_master_write+0x6a>
		status = p_twi->TWI_SR;
  400aea:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWI_SR_NACK) {
  400aec:	05d6      	lsls	r6, r2, #23
  400aee:	d5f5      	bpl.n	400adc <twi_master_write+0x34>
			return TWI_RECEIVE_NACK;
  400af0:	2005      	movs	r0, #5
}
  400af2:	bc70      	pop	{r4, r5, r6}
  400af4:	4770      	bx	lr
	if (len > 1) {
  400af6:	2a01      	cmp	r2, #1
	val = addr[0];
  400af8:	780d      	ldrb	r5, [r1, #0]
	if (len > 1) {
  400afa:	ddeb      	ble.n	400ad4 <twi_master_write+0x2c>
		val |= addr[1];
  400afc:	784e      	ldrb	r6, [r1, #1]
	if (len > 2) {
  400afe:	2a02      	cmp	r2, #2
		val |= addr[1];
  400b00:	ea46 2505 	orr.w	r5, r6, r5, lsl #8
	if (len > 2) {
  400b04:	d0e6      	beq.n	400ad4 <twi_master_write+0x2c>
		val |= addr[2];
  400b06:	788a      	ldrb	r2, [r1, #2]
  400b08:	ea42 2505 	orr.w	r5, r2, r5, lsl #8
  400b0c:	e7e2      	b.n	400ad4 <twi_master_write+0x2c>
		if (status & TWI_SR_TXRDY) {
  400b0e:	0751      	lsls	r1, r2, #29
  400b10:	d405      	bmi.n	400b1e <twi_master_write+0x76>
		status = p_twi->TWI_SR;
  400b12:	6a1a      	ldr	r2, [r3, #32]
		if (status & TWI_SR_NACK) {
  400b14:	05d4      	lsls	r4, r2, #23
  400b16:	d4eb      	bmi.n	400af0 <twi_master_write+0x48>
  400b18:	e7f9      	b.n	400b0e <twi_master_write+0x66>
		return TWI_INVALID_ARGUMENT;
  400b1a:	2001      	movs	r0, #1
  400b1c:	4770      	bx	lr
	p_twi->TWI_CR = TWI_CR_STOP;
  400b1e:	2202      	movs	r2, #2
  400b20:	601a      	str	r2, [r3, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  400b22:	6a1a      	ldr	r2, [r3, #32]
  400b24:	07d2      	lsls	r2, r2, #31
  400b26:	d5fc      	bpl.n	400b22 <twi_master_write+0x7a>
}
  400b28:	bc70      	pop	{r4, r5, r6}
  400b2a:	4770      	bx	lr

00400b2c <usart_init_hw_handshaking>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_hw_handshaking(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  400b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400b2e:	4b29      	ldr	r3, [pc, #164]	; (400bd4 <usart_init_hw_handshaking+0xa8>)
	ul_reg_val = 0;
  400b30:	4c29      	ldr	r4, [pc, #164]	; (400bd8 <usart_init_hw_handshaking+0xac>)
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400b32:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400b36:	2300      	movs	r3, #0
  400b38:	6043      	str	r3, [r0, #4]
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400b3a:	f04f 0e88 	mov.w	lr, #136	; 0x88
	p_usart->US_RTOR = 0;
  400b3e:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400b40:	2724      	movs	r7, #36	; 0x24
	p_usart->US_TTGR = 0;
  400b42:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTSTA;
  400b44:	f44f 7680 	mov.w	r6, #256	; 0x100
	ul_reg_val = 0;
  400b48:	6023      	str	r3, [r4, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400b4a:	f44f 2500 	mov.w	r5, #524288	; 0x80000
	p_usart->US_CR = US_CR_DTRDIS;
  400b4e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400b52:	f8c0 e000 	str.w	lr, [r0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400b56:	6007      	str	r7, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400b58:	6006      	str	r6, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400b5a:	6005      	str	r5, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
  400b5c:	6003      	str	r3, [r0, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400b5e:	b391      	cbz	r1, 400bc6 <usart_init_hw_handshaking+0x9a>
  400b60:	680b      	ldr	r3, [r1, #0]
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  400b62:	011d      	lsls	r5, r3, #4
  400b64:	42aa      	cmp	r2, r5
  400b66:	d322      	bcc.n	400bae <usart_init_hw_handshaking+0x82>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400b68:	086b      	lsrs	r3, r5, #1
  400b6a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400b6e:	fbb2 f2f5 	udiv	r2, r2, r5
	cd = cd_fp >> 3;
  400b72:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400b74:	1e5e      	subs	r6, r3, #1
  400b76:	f64f 75fe 	movw	r5, #65534	; 0xfffe
  400b7a:	42ae      	cmp	r6, r5
  400b7c:	d823      	bhi.n	400bc6 <usart_init_hw_handshaking+0x9a>
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400b7e:	0412      	lsls	r2, r2, #16
  400b80:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400b84:	431a      	orrs	r2, r3
  400b86:	6202      	str	r2, [r0, #32]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400b88:	684b      	ldr	r3, [r1, #4]
  400b8a:	688e      	ldr	r6, [r1, #8]
  400b8c:	690d      	ldr	r5, [r1, #16]
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400b8e:	68c9      	ldr	r1, [r1, #12]
	p_usart->US_MR |= ul_reg_val;
  400b90:	6842      	ldr	r2, [r0, #4]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400b92:	4333      	orrs	r3, r6
  400b94:	432b      	orrs	r3, r5
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400b96:	430b      	orrs	r3, r1
	p_usart->US_MR |= ul_reg_val;
  400b98:	431a      	orrs	r2, r3
  400b9a:	6042      	str	r2, [r0, #4]
	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
  400b9c:	6842      	ldr	r2, [r0, #4]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400b9e:	6023      	str	r3, [r4, #0]
	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
  400ba0:	f022 030f 	bic.w	r3, r2, #15
  400ba4:	f043 0302 	orr.w	r3, r3, #2
  400ba8:	6043      	str	r3, [r0, #4]
	return 0;
  400baa:	2000      	movs	r0, #0
  400bac:	bdf0      	pop	{r4, r5, r6, r7, pc}
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400bae:	00dd      	lsls	r5, r3, #3
  400bb0:	086b      	lsrs	r3, r5, #1
  400bb2:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400bb6:	fbb2 f2f5 	udiv	r2, r2, r5
	cd = cd_fp >> 3;
  400bba:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400bbc:	1e5e      	subs	r6, r3, #1
  400bbe:	f64f 75fe 	movw	r5, #65534	; 0xfffe
  400bc2:	42ae      	cmp	r6, r5
  400bc4:	d901      	bls.n	400bca <usart_init_hw_handshaking+0x9e>
		return 1;
  400bc6:	2001      	movs	r0, #1
  400bc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		p_usart->US_MR |= US_MR_OVER;
  400bca:	6845      	ldr	r5, [r0, #4]
  400bcc:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
  400bd0:	6045      	str	r5, [r0, #4]
  400bd2:	e7d4      	b.n	400b7e <usart_init_hw_handshaking+0x52>
  400bd4:	55534100 	.word	0x55534100
  400bd8:	20000a54 	.word	0x20000a54

00400bdc <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400bdc:	2340      	movs	r3, #64	; 0x40
  400bde:	6003      	str	r3, [r0, #0]
  400be0:	4770      	bx	lr
  400be2:	bf00      	nop

00400be4 <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400be4:	2310      	movs	r3, #16
  400be6:	6003      	str	r3, [r0, #0]
  400be8:	4770      	bx	lr
  400bea:	bf00      	nop

00400bec <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  400bec:	6081      	str	r1, [r0, #8]
  400bee:	4770      	bx	lr

00400bf0 <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
  400bf0:	60c1      	str	r1, [r0, #12]
  400bf2:	4770      	bx	lr

00400bf4 <usart_get_status>:
	return p_usart->US_CSR;
  400bf4:	6940      	ldr	r0, [r0, #20]
}
  400bf6:	4770      	bx	lr

00400bf8 <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400bf8:	6943      	ldr	r3, [r0, #20]
  400bfa:	079b      	lsls	r3, r3, #30
  400bfc:	d5fc      	bpl.n	400bf8 <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
  400bfe:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400c02:	61c1      	str	r1, [r0, #28]
}
  400c04:	2000      	movs	r0, #0
  400c06:	4770      	bx	lr

00400c08 <usart_write_line>:
	while (*string != '\0') {
  400c08:	780a      	ldrb	r2, [r1, #0]
  400c0a:	b13a      	cbz	r2, 400c1c <usart_write_line+0x14>
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400c0c:	6943      	ldr	r3, [r0, #20]
  400c0e:	079b      	lsls	r3, r3, #30
  400c10:	d5fc      	bpl.n	400c0c <usart_write_line+0x4>
	p_usart->US_THR = US_THR_TXCHR(c);
  400c12:	61c2      	str	r2, [r0, #28]
	while (*string != '\0') {
  400c14:	f811 2f01 	ldrb.w	r2, [r1, #1]!
  400c18:	2a00      	cmp	r2, #0
  400c1a:	d1f7      	bne.n	400c0c <usart_write_line+0x4>
  400c1c:	4770      	bx	lr
  400c1e:	bf00      	nop

00400c20 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400c20:	6943      	ldr	r3, [r0, #20]
  400c22:	07db      	lsls	r3, r3, #31
  400c24:	d505      	bpl.n	400c32 <usart_read+0x12>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400c26:	6983      	ldr	r3, [r0, #24]
  400c28:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400c2c:	600b      	str	r3, [r1, #0]
	return 0;
  400c2e:	2000      	movs	r0, #0
  400c30:	4770      	bx	lr
		return 1;
  400c32:	2001      	movs	r0, #1
}
  400c34:	4770      	bx	lr
  400c36:	bf00      	nop

00400c38 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  400c38:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400c3c:	6043      	str	r3, [r0, #4]
  400c3e:	4770      	bx	lr

00400c40 <vsync_handler>:
void vsync_handler(uint32_t ul_id, uint32_t ul_mask)
{
	unused(ul_id);
	unused(ul_mask);

	g_ul_vsync_flag = 1;
  400c40:	4b01      	ldr	r3, [pc, #4]	; (400c48 <vsync_handler+0x8>)
  400c42:	2201      	movs	r2, #1
  400c44:	601a      	str	r2, [r3, #0]
  400c46:	4770      	bx	lr
  400c48:	20000a58 	.word	0x20000a58

00400c4c <init_camera>:
}



void init_camera(void)
{
  400c4c:	b570      	push	{r4, r5, r6, lr}
	//gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
	//gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
	
	
	
	pmc_enable_pllbck(3, 0x1, 1); /* PLLA work at 96 Mhz */
  400c4e:	2201      	movs	r2, #1
	pio_handler_set(OV2640_VSYNC_PIO, OV2640_VSYNC_ID, OV2640_VSYNC_MASK,
  400c50:	4c30      	ldr	r4, [pc, #192]	; (400d14 <init_camera+0xc8>)
	pmc_enable_pllbck(3, 0x1, 1); /* PLLA work at 96 Mhz */
  400c52:	4b31      	ldr	r3, [pc, #196]	; (400d18 <init_camera+0xcc>)
	pio_handler_set(OV2640_VSYNC_PIO, OV2640_VSYNC_ID, OV2640_VSYNC_MASK,
  400c54:	4e31      	ldr	r6, [pc, #196]	; (400d1c <init_camera+0xd0>)
	pmc_enable_periph_clk(ul_id);
  400c56:	4d32      	ldr	r5, [pc, #200]	; (400d20 <init_camera+0xd4>)
{
  400c58:	b086      	sub	sp, #24
	pmc_enable_pllbck(3, 0x1, 1); /* PLLA work at 96 Mhz */
  400c5a:	4611      	mov	r1, r2
  400c5c:	2003      	movs	r0, #3
  400c5e:	4798      	blx	r3
	pio_handler_set(OV2640_VSYNC_PIO, OV2640_VSYNC_ID, OV2640_VSYNC_MASK,
  400c60:	4b30      	ldr	r3, [pc, #192]	; (400d24 <init_camera+0xd8>)
  400c62:	9300      	str	r3, [sp, #0]
  400c64:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400c68:	2301      	movs	r3, #1
  400c6a:	210b      	movs	r1, #11
  400c6c:	4620      	mov	r0, r4
  400c6e:	47b0      	blx	r6
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400c70:	4a2d      	ldr	r2, [pc, #180]	; (400d28 <init_camera+0xdc>)
	
	
	/* Init Vsync handler*/
	init_vsync_interrupts();
	//	pio_disable_interrupt(VSYNC_PIO, VSYNC_MASK);    // try???
	g_ul_vsync_flag = 0;	// reset the flag
  400c72:	4b2e      	ldr	r3, [pc, #184]	; (400d2c <init_camera+0xe0>)
  400c74:	f44f 6100 	mov.w	r1, #2048	; 0x800
  400c78:	6011      	str	r1, [r2, #0]
	pmc_enable_periph_clk(ul_id);
  400c7a:	200b      	movs	r0, #11
	g_ul_vsync_flag = 0;	// reset the flag
  400c7c:	2200      	movs	r2, #0
  400c7e:	601a      	str	r2, [r3, #0]
	pmc_enable_periph_clk(ul_id);
  400c80:	47a8      	blx	r5
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400c82:	f8d4 2150 	ldr.w	r2, [r4, #336]	; 0x150
	///* Turn on ov7740 image sensor using power pin */
	//ov_power(true, OV_POWER_PIO, OV_POWER_MASK);

	/* Init PCK0 to work at 24 Mhz */
	/* 96/4=24 Mhz */
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_1 | PMC_PCK_CSS_PLLB_CLK);				// changed from 0 to 1 since we are using PCK1, for address info, refer to page 529 of MCU data sheet
  400c86:	4b2a      	ldr	r3, [pc, #168]	; (400d30 <init_camera+0xe4>)
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400c88:	f022 0201 	bic.w	r2, r2, #1
  400c8c:	f8c4 2150 	str.w	r2, [r4, #336]	; 0x150
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400c90:	f8d4 2158 	ldr.w	r2, [r4, #344]	; 0x158
  400c94:	f042 0208 	orr.w	r2, r2, #8
  400c98:	f8c4 2158 	str.w	r2, [r4, #344]	; 0x158
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400c9c:	f8d4 2150 	ldr.w	r2, [r4, #336]	; 0x150
  400ca0:	f022 0230 	bic.w	r2, r2, #48	; 0x30
  400ca4:	f8c4 2150 	str.w	r2, [r4, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  400ca8:	f8d4 2150 	ldr.w	r2, [r4, #336]	; 0x150
  400cac:	f042 0220 	orr.w	r2, r2, #32
  400cb0:	f8c4 2150 	str.w	r2, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  400cb4:	f8d4 2150 	ldr.w	r2, [r4, #336]	; 0x150
  400cb8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  400cbc:	f8c4 2150 	str.w	r2, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400cc0:	f8d4 2150 	ldr.w	r2, [r4, #336]	; 0x150
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_1 | PMC_PCK_CSS_PLLB_CLK);				// changed from 0 to 1 since we are using PCK1, for address info, refer to page 529 of MCU data sheet
  400cc4:	2003      	movs	r0, #3
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400cc6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
	PMC->PMC_SCER = PMC_SCER_PCK1;												// changed from 0 to 1 since we are using PCK1
  400cca:	f44f 7100 	mov.w	r1, #512	; 0x200
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400cce:	f8c4 2150 	str.w	r2, [r4, #336]	; 0x150
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_1 | PMC_PCK_CSS_PLLB_CLK);				// changed from 0 to 1 since we are using PCK1, for address info, refer to page 529 of MCU data sheet
  400cd2:	6458      	str	r0, [r3, #68]	; 0x44
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {									// changed from 0 to 1 since we are using PCK1
  400cd4:	461a      	mov	r2, r3
	PMC->PMC_SCER = PMC_SCER_PCK1;												// changed from 0 to 1 since we are using PCK1
  400cd6:	6019      	str	r1, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {									// changed from 0 to 1 since we are using PCK1
  400cd8:	6893      	ldr	r3, [r2, #8]
  400cda:	059b      	lsls	r3, r3, #22
  400cdc:	d5fc      	bpl.n	400cd8 <init_camera+0x8c>
	pmc_enable_periph_clk(ID_BOARD_TWI);
  400cde:	2013      	movs	r0, #19
  400ce0:	47a8      	blx	r5
	opt.master_clk = sysclk_get_cpu_hz();
  400ce2:	4914      	ldr	r1, [pc, #80]	; (400d34 <init_camera+0xe8>)
	opt.speed      = TWI_CLK;
  400ce4:	4a14      	ldr	r2, [pc, #80]	; (400d38 <init_camera+0xec>)
	opt.master_clk = sysclk_get_cpu_hz();
  400ce6:	9103      	str	r1, [sp, #12]
	twi_master_init(BOARD_TWI, &opt);
  400ce8:	4b14      	ldr	r3, [pc, #80]	; (400d3c <init_camera+0xf0>)
  400cea:	4815      	ldr	r0, [pc, #84]	; (400d40 <init_camera+0xf4>)
	opt.speed      = TWI_CLK;
  400cec:	9204      	str	r2, [sp, #16]
	twi_master_init(BOARD_TWI, &opt);
  400cee:	a903      	add	r1, sp, #12
  400cf0:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400cf2:	4b0d      	ldr	r3, [pc, #52]	; (400d28 <init_camera+0xdc>)
	
	configure_twi();              // initialize twi 
	

	/* Wait 3 seconds to let the image sensor to adapt to environment */
	delay_ms(3000);	
  400cf4:	4813      	ldr	r0, [pc, #76]	; (400d44 <init_camera+0xf8>)
  400cf6:	4914      	ldr	r1, [pc, #80]	; (400d48 <init_camera+0xfc>)
  400cf8:	f44f 2200 	mov.w	r2, #524288	; 0x80000
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400cfc:	2400      	movs	r4, #0
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400cfe:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400d02:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400d06:	f883 4313 	strb.w	r4, [r3, #787]	; 0x313
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400d0a:	601a      	str	r2, [r3, #0]
  400d0c:	4788      	blx	r1

}
  400d0e:	b006      	add	sp, #24
  400d10:	bd70      	pop	{r4, r5, r6, pc}
  400d12:	bf00      	nop
  400d14:	400e0e00 	.word	0x400e0e00
  400d18:	004006c9 	.word	0x004006c9
  400d1c:	004003a5 	.word	0x004003a5
  400d20:	004006f9 	.word	0x004006f9
  400d24:	00400c41 	.word	0x00400c41
  400d28:	e000e100 	.word	0xe000e100
  400d2c:	20000a58 	.word	0x20000a58
  400d30:	400e0400 	.word	0x400e0400
  400d34:	07270e00 	.word	0x07270e00
  400d38:	00061a80 	.word	0x00061a80
  400d3c:	004007f5 	.word	0x004007f5
  400d40:	40018000 	.word	0x40018000
  400d44:	01885e6e 	.word	0x01885e6e
  400d48:	20000001 	.word	0x20000001

00400d4c <configure_camera>:

void configure_camera(void)
{
  400d4c:	b570      	push	{r4, r5, r6, lr}
  400d4e:	4d0b      	ldr	r5, [pc, #44]	; (400d7c <configure_camera+0x30>)
		/* ov7740 Initialization */
	while (ov_init(BOARD_TWI) == 1) {
  400d50:	4c0b      	ldr	r4, [pc, #44]	; (400d80 <configure_camera+0x34>)
  400d52:	4620      	mov	r0, r4
  400d54:	47a8      	blx	r5
  400d56:	2801      	cmp	r0, #1
  400d58:	d0fb      	beq.n	400d52 <configure_camera+0x6>
	}

	/* ov7740 configuration */
	ov_configure(BOARD_TWI, JPEG_INIT);
  400d5a:	4c0a      	ldr	r4, [pc, #40]	; (400d84 <configure_camera+0x38>)
  400d5c:	4808      	ldr	r0, [pc, #32]	; (400d80 <configure_camera+0x34>)
  400d5e:	2100      	movs	r1, #0
  400d60:	47a0      	blx	r4
	ov_configure(BOARD_TWI, YUV422);
  400d62:	2101      	movs	r1, #1
  400d64:	4806      	ldr	r0, [pc, #24]	; (400d80 <configure_camera+0x34>)
  400d66:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG);
  400d68:	2102      	movs	r1, #2
  400d6a:	4805      	ldr	r0, [pc, #20]	; (400d80 <configure_camera+0x34>)
  400d6c:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG_320x240);								//ov_configure(BOARD_TWI, JPEG_640x480);
  400d6e:	4623      	mov	r3, r4
  400d70:	2103      	movs	r1, #3
  400d72:	4803      	ldr	r0, [pc, #12]	; (400d80 <configure_camera+0x34>)
	
}
  400d74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	ov_configure(BOARD_TWI, JPEG_320x240);								//ov_configure(BOARD_TWI, JPEG_640x480);
  400d78:	4718      	bx	r3
  400d7a:	bf00      	nop
  400d7c:	00400ef9 	.word	0x00400ef9
  400d80:	40018000 	.word	0x40018000
  400d84:	00401031 	.word	0x00401031

00400d88 <start_capture>:




uint8_t start_capture(void)
{
  400d88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	/* Enable vsync interrupt*/
	pio_enable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400d8a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400d8e:	4834      	ldr	r0, [pc, #208]	; (400e60 <start_capture+0xd8>)
  400d90:	4b34      	ldr	r3, [pc, #208]	; (400e64 <start_capture+0xdc>)
  400d92:	4d35      	ldr	r5, [pc, #212]	; (400e68 <start_capture+0xe0>)
  400d94:	4798      	blx	r3

	/* Capture acquisition will start on rising edge of Vsync signal.
	 * So wait g_vsync_flag = 1 before start process
	 */
	while (!g_ul_vsync_flag) {
  400d96:	682b      	ldr	r3, [r5, #0]
  400d98:	2b00      	cmp	r3, #0
  400d9a:	d0fc      	beq.n	400d96 <start_capture+0xe>
	}

	/* Disable vsync interrupt*/
	pio_disable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400d9c:	4e30      	ldr	r6, [pc, #192]	; (400e60 <start_capture+0xd8>)
  400d9e:	4b33      	ldr	r3, [pc, #204]	; (400e6c <start_capture+0xe4>)
  400da0:	4630      	mov	r0, r6
  400da2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400da6:	4798      	blx	r3

	
	/* Enable pio capture*/
	pio_capture_enable(OV2640_DATA_BUS_PIO);
  400da8:	4b31      	ldr	r3, [pc, #196]	; (400e70 <start_capture+0xe8>)
  400daa:	4630      	mov	r0, r6
  400dac:	4798      	blx	r3
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400dae:	f8d6 316c 	ldr.w	r3, [r6, #364]	; 0x16c
  400db2:	2b00      	cmp	r3, #0
  400db4:	d139      	bne.n	400e2a <start_capture+0xa2>
  400db6:	f8d6 317c 	ldr.w	r3, [r6, #380]	; 0x17c
  400dba:	2b00      	cmp	r3, #0
  400dbc:	d135      	bne.n	400e2a <start_capture+0xa2>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400dbe:	4c2d      	ldr	r4, [pc, #180]	; (400e74 <start_capture+0xec>)
  400dc0:	f8c6 4168 	str.w	r4, [r6, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  400dc4:	f241 3288 	movw	r2, #5000	; 0x1388
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400dc8:	2301      	movs	r3, #1
		p_pio->PIO_RCR = ul_size;
  400dca:	f8c6 216c 	str.w	r2, [r6, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400dce:	f8c6 3188 	str.w	r3, [r6, #392]	; 0x188
	/* Capture data and send it to external SRAM memory thanks to PDC
	 * feature */
	pio_capture_to_buffer(OV2640_DATA_BUS_PIO, image_buffer, (MAX_BUFFER/4));

	/* Wait end of capture*/
	while (!((OV2640_DATA_BUS_PIO->PIO_PCISR & PIO_PCIMR_RXBUFF) ==
  400dd2:	4a23      	ldr	r2, [pc, #140]	; (400e60 <start_capture+0xd8>)
  400dd4:	f8d2 3160 	ldr.w	r3, [r2, #352]	; 0x160
  400dd8:	071b      	lsls	r3, r3, #28
  400dda:	d5fb      	bpl.n	400dd4 <start_capture+0x4c>
			PIO_PCIMR_RXBUFF)) {
	}

	/* Disable pio capture*/
	pio_capture_disable(OV2640_DATA_BUS_PIO);					
  400ddc:	4820      	ldr	r0, [pc, #128]	; (400e60 <start_capture+0xd8>)
  400dde:	4b26      	ldr	r3, [pc, #152]	; (400e78 <start_capture+0xf0>)


uint8_t find_image_len (void)
{
	start_point = 0;
	end_point = 0;
  400de0:	4f26      	ldr	r7, [pc, #152]	; (400e7c <start_capture+0xf4>)
	pio_capture_disable(OV2640_DATA_BUS_PIO);					
  400de2:	4798      	blx	r3
	start_point = 0;
  400de4:	f8df e098 	ldr.w	lr, [pc, #152]	; 400e80 <start_capture+0xf8>
	g_ul_vsync_flag = 0;
  400de8:	2200      	movs	r2, #0
  400dea:	602a      	str	r2, [r5, #0]
	end_point = 0;
  400dec:	4613      	mov	r3, r2
  400dee:	4616      	mov	r6, r2
  400df0:	4694      	mov	ip, r2
	bool no_error_flag = false;																					// This flag is used for checking error
  400df2:	4615      	mov	r5, r2
	start_point = 0;
  400df4:	f8ce 2000 	str.w	r2, [lr]
	end_point = 0;
  400df8:	603a      	str	r2, [r7, #0]
	
	for (uint32_t i = 0; i+1 < sizeof(image_buffer); i++)
  400dfa:	f644 601f 	movw	r0, #19999	; 0x4e1f
  400dfe:	e002      	b.n	400e06 <start_capture+0x7e>
  400e00:	4282      	cmp	r2, r0
  400e02:	4613      	mov	r3, r2
  400e04:	d025      	beq.n	400e52 <start_capture+0xca>
	{
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400e06:	5ce1      	ldrb	r1, [r4, r3]
  400e08:	29ff      	cmp	r1, #255	; 0xff
  400e0a:	f103 0201 	add.w	r2, r3, #1
  400e0e:	d019      	beq.n	400e44 <start_capture+0xbc>
		{
			start_point = i;
			no_error_flag = true;																				// we've detected initial value for JPEG
		}
		
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd9 && no_error_flag == true) {
  400e10:	5ce1      	ldrb	r1, [r4, r3]
  400e12:	29ff      	cmp	r1, #255	; 0xff
  400e14:	d1f4      	bne.n	400e00 <start_capture+0x78>
  400e16:	5ca1      	ldrb	r1, [r4, r2]
  400e18:	29d9      	cmp	r1, #217	; 0xd9
  400e1a:	d1f1      	bne.n	400e00 <start_capture+0x78>
  400e1c:	2d00      	cmp	r5, #0
  400e1e:	d0ef      	beq.n	400e00 <start_capture+0x78>
  400e20:	b9de      	cbnz	r6, 400e5a <start_capture+0xd2>
			end_point = i+2;
  400e22:	3302      	adds	r3, #2
  400e24:	603b      	str	r3, [r7, #0]
			return 1;
  400e26:	2001      	movs	r0, #1
  400e28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		} else if (p_pio->PIO_RNCR == 0) {
  400e2a:	4b0d      	ldr	r3, [pc, #52]	; (400e60 <start_capture+0xd8>)
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400e2c:	4c11      	ldr	r4, [pc, #68]	; (400e74 <start_capture+0xec>)
		} else if (p_pio->PIO_RNCR == 0) {
  400e2e:	f8d3 217c 	ldr.w	r2, [r3, #380]	; 0x17c
  400e32:	2a00      	cmp	r2, #0
  400e34:	d1cd      	bne.n	400dd2 <start_capture+0x4a>
		p_pio->PIO_RNCR = ul_size;
  400e36:	f241 3288 	movw	r2, #5000	; 0x1388
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400e3a:	f8c3 4178 	str.w	r4, [r3, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  400e3e:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
  400e42:	e7c6      	b.n	400dd2 <start_capture+0x4a>
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400e44:	5ca1      	ldrb	r1, [r4, r2]
  400e46:	29d8      	cmp	r1, #216	; 0xd8
  400e48:	d1e2      	bne.n	400e10 <start_capture+0x88>
  400e4a:	2601      	movs	r6, #1
			no_error_flag = true;																				// we've detected initial value for JPEG
  400e4c:	4635      	mov	r5, r6
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400e4e:	469c      	mov	ip, r3
  400e50:	e7de      	b.n	400e10 <start_capture+0x88>
		
	}
	
	
	// reset everything if not proper
	start_point = 0;																						
  400e52:	2000      	movs	r0, #0
  400e54:	f8ce 0000 	str.w	r0, [lr]
}
  400e58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400e5a:	f8ce c000 	str.w	ip, [lr]
  400e5e:	e7e0      	b.n	400e22 <start_capture+0x9a>
  400e60:	400e0e00 	.word	0x400e0e00
  400e64:	004001e5 	.word	0x004001e5
  400e68:	20000a58 	.word	0x20000a58
  400e6c:	004001e9 	.word	0x004001e9
  400e70:	00400375 	.word	0x00400375
  400e74:	20000abc 	.word	0x20000abc
  400e78:	0040038d 	.word	0x0040038d
  400e7c:	20000ab8 	.word	0x20000ab8
  400e80:	20000ab4 	.word	0x20000ab4

00400e84 <find_image_len>:
{
  400e84:	b5f0      	push	{r4, r5, r6, r7, lr}
	start_point = 0;
  400e86:	4f19      	ldr	r7, [pc, #100]	; (400eec <find_image_len+0x68>)
	end_point = 0;
  400e88:	f8df e068 	ldr.w	lr, [pc, #104]	; 400ef4 <find_image_len+0x70>
  400e8c:	4a18      	ldr	r2, [pc, #96]	; (400ef0 <find_image_len+0x6c>)
	start_point = 0;
  400e8e:	2100      	movs	r1, #0
  400e90:	6039      	str	r1, [r7, #0]
	end_point = 0;
  400e92:	460b      	mov	r3, r1
  400e94:	460e      	mov	r6, r1
  400e96:	468c      	mov	ip, r1
	bool no_error_flag = false;																					// This flag is used for checking error
  400e98:	460d      	mov	r5, r1
	end_point = 0;
  400e9a:	f8ce 1000 	str.w	r1, [lr]
	for (uint32_t i = 0; i+1 < sizeof(image_buffer); i++)
  400e9e:	f644 641f 	movw	r4, #19999	; 0x4e1f
  400ea2:	e002      	b.n	400eaa <find_image_len+0x26>
  400ea4:	42a1      	cmp	r1, r4
  400ea6:	460b      	mov	r3, r1
  400ea8:	d019      	beq.n	400ede <find_image_len+0x5a>
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400eaa:	5cd0      	ldrb	r0, [r2, r3]
  400eac:	28ff      	cmp	r0, #255	; 0xff
  400eae:	f103 0101 	add.w	r1, r3, #1
  400eb2:	d00d      	beq.n	400ed0 <find_image_len+0x4c>
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd9 && no_error_flag == true) {
  400eb4:	5cd0      	ldrb	r0, [r2, r3]
  400eb6:	28ff      	cmp	r0, #255	; 0xff
  400eb8:	d1f4      	bne.n	400ea4 <find_image_len+0x20>
  400eba:	5c50      	ldrb	r0, [r2, r1]
  400ebc:	28d9      	cmp	r0, #217	; 0xd9
  400ebe:	d1f1      	bne.n	400ea4 <find_image_len+0x20>
  400ec0:	2d00      	cmp	r5, #0
  400ec2:	d0ef      	beq.n	400ea4 <find_image_len+0x20>
  400ec4:	b976      	cbnz	r6, 400ee4 <find_image_len+0x60>
			end_point = i+2;
  400ec6:	3302      	adds	r3, #2
  400ec8:	f8ce 3000 	str.w	r3, [lr]
			return 1;
  400ecc:	2001      	movs	r0, #1
  400ece:	bdf0      	pop	{r4, r5, r6, r7, pc}
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400ed0:	5c50      	ldrb	r0, [r2, r1]
  400ed2:	28d8      	cmp	r0, #216	; 0xd8
  400ed4:	d1ee      	bne.n	400eb4 <find_image_len+0x30>
  400ed6:	2601      	movs	r6, #1
			no_error_flag = true;																				// we've detected initial value for JPEG
  400ed8:	4635      	mov	r5, r6
		if (image_buffer[i] == 0xff && image_buffer[i + 1] == 0xd8)												// Checking for initial value for JPEG
  400eda:	469c      	mov	ip, r3
  400edc:	e7ea      	b.n	400eb4 <find_image_len+0x30>
	start_point = 0;																						
  400ede:	2000      	movs	r0, #0
  400ee0:	6038      	str	r0, [r7, #0]
	end_point = 0;
	return 0;
}
  400ee2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400ee4:	f8c7 c000 	str.w	ip, [r7]
  400ee8:	e7ed      	b.n	400ec6 <find_image_len+0x42>
  400eea:	bf00      	nop
  400eec:	20000ab4 	.word	0x20000ab4
  400ef0:	20000abc 	.word	0x20000abc
  400ef4:	20000ab8 	.word	0x20000ab8

00400ef8 <ov_init>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_init(Twi* const p_twi)
{
  400ef8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400efc:	b093      	sub	sp, #76	; 0x4c
	const uint8_t cont_reg_val = 1;
  400efe:	2401      	movs	r4, #1
	twi_packet_t init_packet = {
  400f00:	22ff      	movs	r2, #255	; 0xff
  400f02:	f04f 0900 	mov.w	r9, #0
  400f06:	f10d 0303 	add.w	r3, sp, #3
  400f0a:	2530      	movs	r5, #48	; 0x30
	ul_status = twi_master_write(p_twi, p_packet);
  400f0c:	a903      	add	r1, sp, #12
  400f0e:	f8df 811c 	ldr.w	r8, [pc, #284]	; 40102c <ov_init+0x134>
	twi_packet_t init_packet = {
  400f12:	f8cd 901c 	str.w	r9, [sp, #28]
{
  400f16:	4606      	mov	r6, r0
	twi_packet_t init_packet = {
  400f18:	f8cd 900c 	str.w	r9, [sp, #12]
  400f1c:	9305      	str	r3, [sp, #20]
  400f1e:	f88d 200c 	strb.w	r2, [sp, #12]
	const uint8_t cont_reg_val = 1;
  400f22:	f88d 4003 	strb.w	r4, [sp, #3]
	twi_packet_t init_packet = {
  400f26:	9404      	str	r4, [sp, #16]
  400f28:	9406      	str	r4, [sp, #24]
  400f2a:	f88d 501c 	strb.w	r5, [sp, #28]
	ul_status = twi_master_write(p_twi, p_packet);
  400f2e:	47c0      	blx	r8
	packet_pid.addr[0] = OV2640_PIDH;
  400f30:	230a      	movs	r3, #10
	ul_status = twi_master_read(p_twi, p_packet);
  400f32:	4f3d      	ldr	r7, [pc, #244]	; (401028 <ov_init+0x130>)
	packet_pid.addr[0] = OV2640_PIDH;
  400f34:	f88d 3020 	strb.w	r3, [sp, #32]
	ul_status = twi_master_read(p_twi, p_packet);
  400f38:	a908      	add	r1, sp, #32
	packet_pid.buffer = &ul_id;
  400f3a:	ab01      	add	r3, sp, #4
	ul_status = twi_master_read(p_twi, p_packet);
  400f3c:	4630      	mov	r0, r6
	packet_pid.buffer = &ul_id;
  400f3e:	930a      	str	r3, [sp, #40]	; 0x28
	uint32_t ul_id = 0;
  400f40:	f8cd 9004 	str.w	r9, [sp, #4]
	uint32_t ul_ver = 0;
  400f44:	f8cd 9008 	str.w	r9, [sp, #8]
	packet_pid.chip = OV_I2C_SENSOR_ADDRESS;
  400f48:	f88d 5030 	strb.w	r5, [sp, #48]	; 0x30
	packet_pid.addr_length = 1;
  400f4c:	9409      	str	r4, [sp, #36]	; 0x24
	packet_pid.length = 1;
  400f4e:	940b      	str	r4, [sp, #44]	; 0x2c
	ul_status = twi_master_read(p_twi, p_packet);
  400f50:	47b8      	blx	r7
	packet_ver.addr[0] = OV2640_PIDL;
  400f52:	230b      	movs	r3, #11
  400f54:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
	ul_status = twi_master_read(p_twi, p_packet);
  400f58:	4630      	mov	r0, r6
	packet_ver.buffer = &ul_ver;
  400f5a:	ab02      	add	r3, sp, #8
	ul_status = twi_master_read(p_twi, p_packet);
  400f5c:	a90d      	add	r1, sp, #52	; 0x34
	packet_ver.buffer = &ul_ver;
  400f5e:	930f      	str	r3, [sp, #60]	; 0x3c
	packet_ver.chip = OV_I2C_SENSOR_ADDRESS;
  400f60:	f88d 5044 	strb.w	r5, [sp, #68]	; 0x44
	packet_ver.addr_length = 1;
  400f64:	940e      	str	r4, [sp, #56]	; 0x38
	packet_ver.length = 1;
  400f66:	9410      	str	r4, [sp, #64]	; 0x40
	ul_status = twi_master_read(p_twi, p_packet);
  400f68:	47b8      	blx	r7
	return ((uint32_t)(ul_id << 8) | ul_ver);
  400f6a:	9a01      	ldr	r2, [sp, #4]
  400f6c:	9b02      	ldr	r3, [sp, #8]
  400f6e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	
	uint32_t ul_id = 0;

	ul_id = ov_id( p_twi );

	if (((ul_id >> 8)&0xff)  == OV2640_PIDH_DEFAULT) {
  400f72:	f3c3 2307 	ubfx	r3, r3, #8, #8
  400f76:	2b26      	cmp	r3, #38	; 0x26
  400f78:	d003      	beq.n	400f82 <ov_init+0x8a>
				return 0;
			}
		}
	}

	return 1;
  400f7a:	2001      	movs	r0, #1
}
  400f7c:	b013      	add	sp, #76	; 0x4c
  400f7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	twi_packet.addr[0] = OV2640_MIDH;
  400f82:	231c      	movs	r3, #28
	twi_packet.buffer = &ul_midh;
  400f84:	aa02      	add	r2, sp, #8
	ul_status = twi_master_read(p_twi, p_packet);
  400f86:	a90d      	add	r1, sp, #52	; 0x34
  400f88:	4630      	mov	r0, r6
	twi_packet.buffer = &ul_midh;
  400f8a:	920f      	str	r2, [sp, #60]	; 0x3c
	twi_packet.addr[0] = OV2640_MIDH;
  400f8c:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
	uint32_t ul_midh = 0;
  400f90:	f8cd 9008 	str.w	r9, [sp, #8]
	uint32_t ul_midl = 0;
  400f94:	f8cd 9020 	str.w	r9, [sp, #32]
	twi_packet.addr_length = 1;
  400f98:	940e      	str	r4, [sp, #56]	; 0x38
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400f9a:	f88d 5044 	strb.w	r5, [sp, #68]	; 0x44
	twi_packet.length = 1;
  400f9e:	9410      	str	r4, [sp, #64]	; 0x40
	ul_status = twi_master_read(p_twi, p_packet);
  400fa0:	47b8      	blx	r7
	twi_packet.addr[0] = OV2640_MIDL;
  400fa2:	231d      	movs	r3, #29
	twi_packet.buffer = &ul_midl;
  400fa4:	aa08      	add	r2, sp, #32
	ul_status = twi_master_read(p_twi, p_packet);
  400fa6:	a90d      	add	r1, sp, #52	; 0x34
  400fa8:	4630      	mov	r0, r6
	twi_packet.addr[0] = OV2640_MIDL;
  400faa:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
	twi_packet.addr_length = 1;
  400fae:	940e      	str	r4, [sp, #56]	; 0x38
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400fb0:	f88d 5044 	strb.w	r5, [sp, #68]	; 0x44
	twi_packet.buffer = &ul_midl;
  400fb4:	920f      	str	r2, [sp, #60]	; 0x3c
	twi_packet.length = 1;
  400fb6:	9410      	str	r4, [sp, #64]	; 0x40
	ul_status = twi_master_read(p_twi, p_packet);
  400fb8:	47b8      	blx	r7
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400fba:	9b02      	ldr	r3, [sp, #8]
  400fbc:	2b7f      	cmp	r3, #127	; 0x7f
  400fbe:	d1dc      	bne.n	400f7a <ov_init+0x82>
  400fc0:	9b08      	ldr	r3, [sp, #32]
  400fc2:	2ba2      	cmp	r3, #162	; 0xa2
  400fc4:	d1d9      	bne.n	400f7a <ov_init+0x82>
	twi_packet.buffer = &ul_oldvalue;
  400fc6:	ab02      	add	r3, sp, #8
	ul_status = twi_master_read(p_twi, p_packet);
  400fc8:	a90d      	add	r1, sp, #52	; 0x34
  400fca:	4630      	mov	r0, r6
	twi_packet.buffer = &ul_oldvalue;
  400fcc:	930f      	str	r3, [sp, #60]	; 0x3c
	uint32_t ul_value = 0;
  400fce:	f8cd 9004 	str.w	r9, [sp, #4]
	uint32_t ul_oldvalue = 0;
  400fd2:	f8cd 9008 	str.w	r9, [sp, #8]
	uint32_t ul_entervalue = 0;
  400fd6:	f8cd 9020 	str.w	r9, [sp, #32]
	twi_packet.addr[0] = 0x01;
  400fda:	f88d 4034 	strb.w	r4, [sp, #52]	; 0x34
	twi_packet.addr_length = 1;
  400fde:	940e      	str	r4, [sp, #56]	; 0x38
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400fe0:	f88d 5044 	strb.w	r5, [sp, #68]	; 0x44
	twi_packet.length = 1;
  400fe4:	9410      	str	r4, [sp, #64]	; 0x40
	ul_status = twi_master_read(p_twi, p_packet);
  400fe6:	47b8      	blx	r7
	twi_packet.buffer = &ul_entervalue;
  400fe8:	aa08      	add	r2, sp, #32
	ul_entervalue = 0xAD;
  400fea:	23ad      	movs	r3, #173	; 0xad
	ul_status = twi_master_write(p_twi, p_packet);
  400fec:	a90d      	add	r1, sp, #52	; 0x34
  400fee:	4630      	mov	r0, r6
	twi_packet.buffer = &ul_entervalue;
  400ff0:	920f      	str	r2, [sp, #60]	; 0x3c
	ul_entervalue = 0xAD;
  400ff2:	9308      	str	r3, [sp, #32]
	ul_status = twi_master_write(p_twi, p_packet);
  400ff4:	47c0      	blx	r8
	twi_packet.buffer = &ul_value;
  400ff6:	ab01      	add	r3, sp, #4
	ul_status = twi_master_read(p_twi, p_packet);
  400ff8:	a90d      	add	r1, sp, #52	; 0x34
  400ffa:	4630      	mov	r0, r6
	twi_packet.buffer = &ul_value;
  400ffc:	930f      	str	r3, [sp, #60]	; 0x3c
	ul_status = twi_master_read(p_twi, p_packet);
  400ffe:	47b8      	blx	r7
	if (ul_value != ul_entervalue) {
  401000:	9a01      	ldr	r2, [sp, #4]
  401002:	9b08      	ldr	r3, [sp, #32]
  401004:	429a      	cmp	r2, r3
  401006:	d1b8      	bne.n	400f7a <ov_init+0x82>
	twi_packet.buffer = &ul_oldvalue;
  401008:	ab02      	add	r3, sp, #8
	ul_status = twi_master_write(p_twi, p_packet);
  40100a:	a90d      	add	r1, sp, #52	; 0x34
  40100c:	4630      	mov	r0, r6
	twi_packet.buffer = &ul_oldvalue;
  40100e:	930f      	str	r3, [sp, #60]	; 0x3c
	ul_status = twi_master_write(p_twi, p_packet);
  401010:	47c0      	blx	r8
	twi_packet.buffer = &ul_value;
  401012:	ab01      	add	r3, sp, #4
	ul_status = twi_master_read(p_twi, p_packet);
  401014:	a90d      	add	r1, sp, #52	; 0x34
  401016:	4630      	mov	r0, r6
	twi_packet.buffer = &ul_value;
  401018:	930f      	str	r3, [sp, #60]	; 0x3c
	ul_status = twi_master_read(p_twi, p_packet);
  40101a:	47b8      	blx	r7
	if (ul_value != ul_oldvalue) {
  40101c:	9a01      	ldr	r2, [sp, #4]
  40101e:	9b02      	ldr	r3, [sp, #8]
  401020:	429a      	cmp	r2, r3
  401022:	d1aa      	bne.n	400f7a <ov_init+0x82>
				return 0;
  401024:	4648      	mov	r0, r9
  401026:	e7a9      	b.n	400f7c <ov_init+0x84>
  401028:	004009e9 	.word	0x004009e9
  40102c:	00400aa9 	.word	0x00400aa9

00401030 <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  401030:	2911      	cmp	r1, #17
  401032:	d82f      	bhi.n	401094 <ov_configure+0x64>
  401034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401038:	4b18      	ldr	r3, [pc, #96]	; (40109c <ov_configure+0x6c>)
  40103a:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
  40103e:	b086      	sub	sp, #24

	default:
		break;
	}

	if (p_regs_conf != NULL) {
  401040:	b354      	cbz	r4, 401098 <ov_configure+0x68>
  401042:	4606      	mov	r6, r0
  401044:	3401      	adds	r4, #1
			twi_packet_regs.addr_length = 1;
  401046:	2501      	movs	r5, #1
	ul_status = twi_master_write(p_twi, p_packet);
  401048:	4f15      	ldr	r7, [pc, #84]	; (4010a0 <ov_configure+0x70>)
			delay_ms(5);
  40104a:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4010a4 <ov_configure+0x74>
  40104e:	e00c      	b.n	40106a <ov_configure+0x3a>
		if (p_next->reg == 0xFE) {
  401050:	2bfe      	cmp	r3, #254	; 0xfe
  401052:	d01b      	beq.n	40108c <ov_configure+0x5c>
			twi_packet_regs.addr[0] = p_next->reg;
  401054:	f88d 3004 	strb.w	r3, [sp, #4]
			twi_packet_regs.addr_length = 1;
  401058:	9502      	str	r5, [sp, #8]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  40105a:	f88d 2014 	strb.w	r2, [sp, #20]
			twi_packet_regs.length = 1;
  40105e:	9504      	str	r5, [sp, #16]
			twi_packet_regs.buffer = &(p_next->val);
  401060:	9403      	str	r4, [sp, #12]
	ul_status = twi_master_write(p_twi, p_packet);
  401062:	47b8      	blx	r7
			if (ul_err == TWI_BUSY) {
  401064:	2808      	cmp	r0, #8
  401066:	d00d      	beq.n	401084 <ov_configure+0x54>
  401068:	3402      	adds	r4, #2
	while (!((p_next->reg == OV_REG_TERM) &&
  40106a:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  40106e:	2bff      	cmp	r3, #255	; 0xff
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  401070:	f04f 0230 	mov.w	r2, #48	; 0x30
	ul_status = twi_master_write(p_twi, p_packet);
  401074:	a901      	add	r1, sp, #4
  401076:	4630      	mov	r0, r6
	while (!((p_next->reg == OV_REG_TERM) &&
  401078:	d1ea      	bne.n	401050 <ov_configure+0x20>
  40107a:	f894 e000 	ldrb.w	lr, [r4]
  40107e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
  401082:	d1e7      	bne.n	401054 <ov_configure+0x24>
		ov_write_regs( p_twi, p_regs_conf );
		return 0;
  401084:	2000      	movs	r0, #0
	}

	return 1;
}
  401086:	b006      	add	sp, #24
  401088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			delay_ms(5);
  40108c:	f24a 706a 	movw	r0, #42858	; 0xa76a
  401090:	47c0      	blx	r8
  401092:	e7e9      	b.n	401068 <ov_configure+0x38>
	return 1;
  401094:	2001      	movs	r0, #1
  401096:	4770      	bx	lr
  401098:	2001      	movs	r0, #1
  40109a:	e7f4      	b.n	401086 <ov_configure+0x56>
  40109c:	00406874 	.word	0x00406874
  4010a0:	00400aa9 	.word	0x00400aa9
  4010a4:	20000001 	.word	0x20000001

004010a8 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  4010a8:	b508      	push	{r3, lr}
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  4010aa:	2100      	movs	r1, #0
  4010ac:	4b05      	ldr	r3, [pc, #20]	; (4010c4 <TC0_Handler+0x1c>)
  4010ae:	4806      	ldr	r0, [pc, #24]	; (4010c8 <TC0_Handler+0x20>)
  4010b0:	4798      	blx	r3

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  4010b2:	06c3      	lsls	r3, r0, #27
  4010b4:	d504      	bpl.n	4010c0 <TC0_Handler+0x18>
		counts++;
  4010b6:	4a05      	ldr	r2, [pc, #20]	; (4010cc <TC0_Handler+0x24>)
  4010b8:	7813      	ldrb	r3, [r2, #0]
  4010ba:	3301      	adds	r3, #1
  4010bc:	b2db      	uxtb	r3, r3
  4010be:	7013      	strb	r3, [r2, #0]
  4010c0:	bd08      	pop	{r3, pc}
  4010c2:	bf00      	nop
  4010c4:	0040076d 	.word	0x0040076d
  4010c8:	40010000 	.word	0x40010000
  4010cc:	200058dc 	.word	0x200058dc

004010d0 <configure_tc>:
	}
}

void configure_tc(void)
{
  4010d0:	b570      	push	{r4, r5, r6, lr}

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  4010d2:	4d15      	ldr	r5, [pc, #84]	; (401128 <configure_tc+0x58>)
	pmc_enable_periph_clk(ID_TC0);
  4010d4:	4b15      	ldr	r3, [pc, #84]	; (40112c <configure_tc+0x5c>)
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  4010d6:	4e16      	ldr	r6, [pc, #88]	; (401130 <configure_tc+0x60>)
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  4010d8:	4c16      	ldr	r4, [pc, #88]	; (401134 <configure_tc+0x64>)
{
  4010da:	b084      	sub	sp, #16
	pmc_enable_periph_clk(ID_TC0);
  4010dc:	2017      	movs	r0, #23
  4010de:	4798      	blx	r3
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  4010e0:	4629      	mov	r1, r5
  4010e2:	ab03      	add	r3, sp, #12
  4010e4:	aa02      	add	r2, sp, #8
  4010e6:	9500      	str	r5, [sp, #0]
  4010e8:	2001      	movs	r0, #1
  4010ea:	47b0      	blx	r6
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  4010ec:	9a03      	ldr	r2, [sp, #12]
  4010ee:	4b12      	ldr	r3, [pc, #72]	; (401138 <configure_tc+0x68>)
  4010f0:	4620      	mov	r0, r4
  4010f2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  4010f6:	2100      	movs	r1, #0
  4010f8:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  4010fa:	9a02      	ldr	r2, [sp, #8]
  4010fc:	4b0f      	ldr	r3, [pc, #60]	; (40113c <configure_tc+0x6c>)
  4010fe:	fbb5 f2f2 	udiv	r2, r5, r2
  401102:	4620      	mov	r0, r4
  401104:	2100      	movs	r1, #0
  401106:	4798      	blx	r3
  401108:	4a0d      	ldr	r2, [pc, #52]	; (401140 <configure_tc+0x70>)

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  40110a:	4b0e      	ldr	r3, [pc, #56]	; (401144 <configure_tc+0x74>)
  40110c:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
  401110:	4620      	mov	r0, r4
  401112:	6011      	str	r1, [r2, #0]
  401114:	2210      	movs	r2, #16
  401116:	2100      	movs	r1, #0
  401118:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  40111a:	4620      	mov	r0, r4
  40111c:	2100      	movs	r1, #0
  40111e:	4b0a      	ldr	r3, [pc, #40]	; (401148 <configure_tc+0x78>)
  401120:	4798      	blx	r3
  401122:	b004      	add	sp, #16
  401124:	bd70      	pop	{r4, r5, r6, pc}
  401126:	bf00      	nop
  401128:	07270e00 	.word	0x07270e00
  40112c:	004006f9 	.word	0x004006f9
  401130:	00400775 	.word	0x00400775
  401134:	40010000 	.word	0x40010000
  401138:	0040073d 	.word	0x0040073d
  40113c:	0040075d 	.word	0x0040075d
  401140:	e000e100 	.word	0xe000e100
  401144:	00400765 	.word	0x00400765
  401148:	00400755 	.word	0x00400755

0040114c <wifi_web_setup_handler>:
void wifi_web_setup_handler(uint32_t ul_id, uint32_t ul_mask)
{
	unused(ul_id);
	unused(ul_mask);
	
	web_setup_flag = true;
  40114c:	4b01      	ldr	r3, [pc, #4]	; (401154 <wifi_web_setup_handler+0x8>)
  40114e:	2201      	movs	r2, #1
  401150:	601a      	str	r2, [r3, #0]
  401152:	4770      	bx	lr
  401154:	20000a70 	.word	0x20000a70

00401158 <USART0_Handler>:
	ul_status = usart_get_status(WIFI_USART);           // Gets Channel Status Register data 
  401158:	4b0b      	ldr	r3, [pc, #44]	; (401188 <USART0_Handler+0x30>)
  40115a:	480c      	ldr	r0, [pc, #48]	; (40118c <USART0_Handler+0x34>)
{
  40115c:	b510      	push	{r4, lr}
	ul_status = usart_get_status(WIFI_USART);           // Gets Channel Status Register data 
  40115e:	4798      	blx	r3
	if (ul_status & US_CSR_RXBUFF) {                    // Checking if we received a byte
  401160:	04c3      	lsls	r3, r0, #19
  401162:	d50f      	bpl.n	401184 <USART0_Handler+0x2c>
		usart_read(WIFI_USART, &received_byte_wifi);
  401164:	4c0a      	ldr	r4, [pc, #40]	; (401190 <USART0_Handler+0x38>)
  401166:	4b0b      	ldr	r3, [pc, #44]	; (401194 <USART0_Handler+0x3c>)
  401168:	4808      	ldr	r0, [pc, #32]	; (40118c <USART0_Handler+0x34>)
  40116a:	4621      	mov	r1, r4
  40116c:	4798      	blx	r3
		new_rx_wifi = true;
  40116e:	4b0a      	ldr	r3, [pc, #40]	; (401198 <USART0_Handler+0x40>)
	input_line_wifi[input_pos_wifi++] = in_byte;            // Saves the incoming byte into a next position, and increment
  401170:	490a      	ldr	r1, [pc, #40]	; (40119c <USART0_Handler+0x44>)
  401172:	480b      	ldr	r0, [pc, #44]	; (4011a0 <USART0_Handler+0x48>)
		new_rx_wifi = true;
  401174:	2201      	movs	r2, #1
  401176:	701a      	strb	r2, [r3, #0]
		process_incoming_byte_wifi((uint8_t)received_byte_wifi);
  401178:	6823      	ldr	r3, [r4, #0]
	input_line_wifi[input_pos_wifi++] = in_byte;            // Saves the incoming byte into a next position, and increment
  40117a:	680a      	ldr	r2, [r1, #0]
		process_incoming_byte_wifi((uint8_t)received_byte_wifi);
  40117c:	b2db      	uxtb	r3, r3
	input_line_wifi[input_pos_wifi++] = in_byte;            // Saves the incoming byte into a next position, and increment
  40117e:	1c54      	adds	r4, r2, #1
  401180:	600c      	str	r4, [r1, #0]
  401182:	5483      	strb	r3, [r0, r2]
  401184:	bd10      	pop	{r4, pc}
  401186:	bf00      	nop
  401188:	00400bf5 	.word	0x00400bf5
  40118c:	40024000 	.word	0x40024000
  401190:	20000a68 	.word	0x20000a68
  401194:	00400c21 	.word	0x00400c21
  401198:	20000a64 	.word	0x20000a64
  40119c:	20000a60 	.word	0x20000a60
  4011a0:	200058e0 	.word	0x200058e0

004011a4 <process_data_wifi>:
{
  4011a4:	b510      	push	{r4, lr}
		if (strstr(input_line_wifi, "Start transfer")) {                
  4011a6:	491b      	ldr	r1, [pc, #108]	; (401214 <process_data_wifi+0x70>)
  4011a8:	481b      	ldr	r0, [pc, #108]	; (401218 <process_data_wifi+0x74>)
  4011aa:	4c1c      	ldr	r4, [pc, #112]	; (40121c <process_data_wifi+0x78>)
  4011ac:	47a0      	blx	r4
  4011ae:	b120      	cbz	r0, 4011ba <process_data_wifi+0x16>
			image_transfer_flag = true;
  4011b0:	491b      	ldr	r1, [pc, #108]	; (401220 <process_data_wifi+0x7c>)
			wifi_status = true;
  4011b2:	4a1c      	ldr	r2, [pc, #112]	; (401224 <process_data_wifi+0x80>)
			image_transfer_flag = true;
  4011b4:	2301      	movs	r3, #1
  4011b6:	700b      	strb	r3, [r1, #0]
			wifi_status = true;
  4011b8:	7013      	strb	r3, [r2, #0]
		if (strstr(input_line_wifi, "None")) {
  4011ba:	491b      	ldr	r1, [pc, #108]	; (401228 <process_data_wifi+0x84>)
  4011bc:	4816      	ldr	r0, [pc, #88]	; (401218 <process_data_wifi+0x74>)
  4011be:	47a0      	blx	r4
  4011c0:	b110      	cbz	r0, 4011c8 <process_data_wifi+0x24>
			wifi_websocket_flag = false;		
  4011c2:	4b1a      	ldr	r3, [pc, #104]	; (40122c <process_data_wifi+0x88>)
  4011c4:	2200      	movs	r2, #0
  4011c6:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "Client not connected")) {
  4011c8:	4919      	ldr	r1, [pc, #100]	; (401230 <process_data_wifi+0x8c>)
  4011ca:	4813      	ldr	r0, [pc, #76]	; (401218 <process_data_wifi+0x74>)
  4011cc:	47a0      	blx	r4
  4011ce:	b110      	cbz	r0, 4011d6 <process_data_wifi+0x32>
			wifi_websocket_flag = false;
  4011d0:	4b16      	ldr	r3, [pc, #88]	; (40122c <process_data_wifi+0x88>)
  4011d2:	2200      	movs	r2, #0
  4011d4:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "Websocket connected")) {
  4011d6:	4917      	ldr	r1, [pc, #92]	; (401234 <process_data_wifi+0x90>)
  4011d8:	480f      	ldr	r0, [pc, #60]	; (401218 <process_data_wifi+0x74>)
  4011da:	47a0      	blx	r4
  4011dc:	b110      	cbz	r0, 4011e4 <process_data_wifi+0x40>
			wifi_websocket_flag = true;
  4011de:	4b13      	ldr	r3, [pc, #76]	; (40122c <process_data_wifi+0x88>)
  4011e0:	2201      	movs	r2, #1
  4011e2:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "Websocket disconnected")) {
  4011e4:	4914      	ldr	r1, [pc, #80]	; (401238 <process_data_wifi+0x94>)
  4011e6:	480c      	ldr	r0, [pc, #48]	; (401218 <process_data_wifi+0x74>)
  4011e8:	47a0      	blx	r4
  4011ea:	b110      	cbz	r0, 4011f2 <process_data_wifi+0x4e>
			wifi_websocket_flag = false;
  4011ec:	4b0f      	ldr	r3, [pc, #60]	; (40122c <process_data_wifi+0x88>)
  4011ee:	2200      	movs	r2, #0
  4011f0:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, ",")) {
  4011f2:	212c      	movs	r1, #44	; 0x2c
  4011f4:	4808      	ldr	r0, [pc, #32]	; (401218 <process_data_wifi+0x74>)
  4011f6:	4c11      	ldr	r4, [pc, #68]	; (40123c <process_data_wifi+0x98>)
  4011f8:	47a0      	blx	r4
  4011fa:	b110      	cbz	r0, 401202 <process_data_wifi+0x5e>
			wifi_websocket_flag = true;
  4011fc:	4b0b      	ldr	r3, [pc, #44]	; (40122c <process_data_wifi+0x88>)
  4011fe:	2201      	movs	r2, #1
  401200:	701a      	strb	r2, [r3, #0]
		if (strstr(input_line_wifi, "2")) {
  401202:	2132      	movs	r1, #50	; 0x32
  401204:	4804      	ldr	r0, [pc, #16]	; (401218 <process_data_wifi+0x74>)
  401206:	47a0      	blx	r4
  401208:	b110      	cbz	r0, 401210 <process_data_wifi+0x6c>
			wifi_status = true;
  40120a:	4b06      	ldr	r3, [pc, #24]	; (401224 <process_data_wifi+0x80>)
  40120c:	2201      	movs	r2, #1
  40120e:	701a      	strb	r2, [r3, #0]
  401210:	bd10      	pop	{r4, pc}
  401212:	bf00      	nop
  401214:	004074ec 	.word	0x004074ec
  401218:	200058e0 	.word	0x200058e0
  40121c:	00401f49 	.word	0x00401f49
  401220:	20000a5c 	.word	0x20000a5c
  401224:	20000a75 	.word	0x20000a75
  401228:	004074fc 	.word	0x004074fc
  40122c:	20000a76 	.word	0x20000a76
  401230:	00407504 	.word	0x00407504
  401234:	0040751c 	.word	0x0040751c
  401238:	00407530 	.word	0x00407530
  40123c:	00401bb1 	.word	0x00401bb1

00401240 <wifi_command_response_handler>:
	wifi_comm_success = true;
  401240:	4a08      	ldr	r2, [pc, #32]	; (401264 <wifi_command_response_handler+0x24>)
{
  401242:	b508      	push	{r3, lr}
	wifi_comm_success = true;
  401244:	2101      	movs	r1, #1
	process_data_wifi();
  401246:	4b08      	ldr	r3, [pc, #32]	; (401268 <wifi_command_response_handler+0x28>)
	wifi_comm_success = true;
  401248:	7011      	strb	r1, [r2, #0]
	process_data_wifi();
  40124a:	4798      	blx	r3
	for (int jj=0; jj<MAX_INPUT_WIFI; jj++) {input_line_wifi[jj] = 0; }                         // Once the data was processed, clear the buffer, but consider not using this loop
  40124c:	2300      	movs	r3, #0
  40124e:	4907      	ldr	r1, [pc, #28]	; (40126c <wifi_command_response_handler+0x2c>)
  401250:	461a      	mov	r2, r3
  401252:	54ca      	strb	r2, [r1, r3]
  401254:	3301      	adds	r3, #1
  401256:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  40125a:	d1fa      	bne.n	401252 <wifi_command_response_handler+0x12>
	input_pos_wifi = 0;
  40125c:	4b04      	ldr	r3, [pc, #16]	; (401270 <wifi_command_response_handler+0x30>)
  40125e:	601a      	str	r2, [r3, #0]
  401260:	bd08      	pop	{r3, pc}
  401262:	bf00      	nop
  401264:	20000a74 	.word	0x20000a74
  401268:	004011a5 	.word	0x004011a5
  40126c:	200058e0 	.word	0x200058e0
  401270:	20000a60 	.word	0x20000a60

00401274 <configure_usart_wifi>:
}


// Configuration of USART port used to communicate with the AMW136.
void configure_usart_wifi(void)
{
  401274:	b5f0      	push	{r4, r5, r6, r7, lr}
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  401276:	4d1a      	ldr	r5, [pc, #104]	; (4012e0 <configure_usart_wifi+0x6c>)
  401278:	4c1a      	ldr	r4, [pc, #104]	; (4012e4 <configure_usart_wifi+0x70>)

	/* Enable peripheral clock. */
	sysclk_enable_peripheral_clock(WIFI_USART_ID);

	/* Configure USART. */
	usart_init_hw_handshaking(WIFI_USART, &usart_console_settings, ul_sysclk);
  40127a:	4e1b      	ldr	r6, [pc, #108]	; (4012e8 <configure_usart_wifi+0x74>)
	ul_sysclk = sysclk_get_peripheral_hz();
  40127c:	4f1b      	ldr	r7, [pc, #108]	; (4012ec <configure_usart_wifi+0x78>)
{
  40127e:	b087      	sub	sp, #28
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  401280:	4629      	mov	r1, r5
  401282:	2005      	movs	r0, #5
  401284:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  401286:	4629      	mov	r1, r5
  401288:	2006      	movs	r0, #6
  40128a:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART0_CTS_IDX, PIN_USART0_CTS_FLAGS);
  40128c:	4629      	mov	r1, r5
	const sam_usart_opt_t usart_console_settings = {
  40128e:	4d18      	ldr	r5, [pc, #96]	; (4012f0 <configure_usart_wifi+0x7c>)
	gpio_configure_pin(PIN_USART0_CTS_IDX, PIN_USART0_CTS_FLAGS);
  401290:	2008      	movs	r0, #8
  401292:	47a0      	blx	r4
	const sam_usart_opt_t usart_console_settings = {
  401294:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  401296:	466c      	mov	r4, sp
  401298:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  40129a:	e895 0003 	ldmia.w	r5, {r0, r1}
	ul_sysclk = sysclk_get_peripheral_hz();
  40129e:	4a15      	ldr	r2, [pc, #84]	; (4012f4 <configure_usart_wifi+0x80>)
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4012a0:	4b15      	ldr	r3, [pc, #84]	; (4012f8 <configure_usart_wifi+0x84>)
  4012a2:	603a      	str	r2, [r7, #0]
	const sam_usart_opt_t usart_console_settings = {
  4012a4:	e884 0003 	stmia.w	r4, {r0, r1}
  4012a8:	200e      	movs	r0, #14
  4012aa:	4798      	blx	r3
	usart_init_hw_handshaking(WIFI_USART, &usart_console_settings, ul_sysclk);
  4012ac:	683a      	ldr	r2, [r7, #0]
  4012ae:	4b13      	ldr	r3, [pc, #76]	; (4012fc <configure_usart_wifi+0x88>)
  4012b0:	4669      	mov	r1, sp
  4012b2:	4630      	mov	r0, r6
  4012b4:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  4012b6:	f04f 31ff 	mov.w	r1, #4294967295
  4012ba:	4630      	mov	r0, r6
  4012bc:	4b10      	ldr	r3, [pc, #64]	; (401300 <configure_usart_wifi+0x8c>)
  4012be:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  4012c0:	4630      	mov	r0, r6
  4012c2:	4b10      	ldr	r3, [pc, #64]	; (401304 <configure_usart_wifi+0x90>)
  4012c4:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  4012c6:	4630      	mov	r0, r6
  4012c8:	4b0f      	ldr	r3, [pc, #60]	; (401308 <configure_usart_wifi+0x94>)
  4012ca:	4798      	blx	r3
	
	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  4012cc:	4630      	mov	r0, r6
  4012ce:	2101      	movs	r1, #1
  4012d0:	4b0e      	ldr	r3, [pc, #56]	; (40130c <configure_usart_wifi+0x98>)
  4012d2:	4798      	blx	r3
  4012d4:	4b0e      	ldr	r3, [pc, #56]	; (401310 <configure_usart_wifi+0x9c>)
  4012d6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  4012da:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(WIFI_USART_IRQn);
}
  4012dc:	b007      	add	sp, #28
  4012de:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4012e0:	08000001 	.word	0x08000001
  4012e4:	0040022d 	.word	0x0040022d
  4012e8:	40024000 	.word	0x40024000
  4012ec:	20000a6c 	.word	0x20000a6c
  4012f0:	004074d4 	.word	0x004074d4
  4012f4:	07270e00 	.word	0x07270e00
  4012f8:	004006f9 	.word	0x004006f9
  4012fc:	00400b2d 	.word	0x00400b2d
  401300:	00400bf1 	.word	0x00400bf1
  401304:	00400bdd 	.word	0x00400bdd
  401308:	00400be5 	.word	0x00400be5
  40130c:	00400bed 	.word	0x00400bed
  401310:	e000e100 	.word	0xe000e100

00401314 <configure_wifi_comm_pin>:



// Configuration of "command complete" rising-edge interrupt.
void configure_wifi_comm_pin(void)
{
  401314:	b530      	push	{r4, r5, lr}
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  401316:	4b0d      	ldr	r3, [pc, #52]	; (40134c <configure_wifi_comm_pin+0x38>)

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_NUM, WIFI_COMM_ATTR, wifi_command_response_handler);
  401318:	4c0d      	ldr	r4, [pc, #52]	; (401350 <configure_wifi_comm_pin+0x3c>)
  40131a:	4d0e      	ldr	r5, [pc, #56]	; (401354 <configure_wifi_comm_pin+0x40>)
{
  40131c:	b083      	sub	sp, #12
	pmc_enable_periph_clk(WIFI_COMM_ID);
  40131e:	200c      	movs	r0, #12
  401320:	4798      	blx	r3
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_NUM, WIFI_COMM_ATTR, wifi_command_response_handler);
  401322:	4b0d      	ldr	r3, [pc, #52]	; (401358 <configure_wifi_comm_pin+0x44>)
  401324:	9300      	str	r3, [sp, #0]
  401326:	4620      	mov	r0, r4
  401328:	2371      	movs	r3, #113	; 0x71
  40132a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40132e:	210c      	movs	r1, #12
  401330:	47a8      	blx	r5
  401332:	4a0a      	ldr	r2, [pc, #40]	; (40135c <configure_wifi_comm_pin+0x48>)

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_NUM);
  401334:	4b0a      	ldr	r3, [pc, #40]	; (401360 <configure_wifi_comm_pin+0x4c>)
  401336:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40133a:	6011      	str	r1, [r2, #0]
  40133c:	4620      	mov	r0, r4
  40133e:	f44f 6180 	mov.w	r1, #1024	; 0x400
}
  401342:	b003      	add	sp, #12
  401344:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_NUM);
  401348:	4718      	bx	r3
  40134a:	bf00      	nop
  40134c:	004006f9 	.word	0x004006f9
  401350:	400e1000 	.word	0x400e1000
  401354:	004003a5 	.word	0x004003a5
  401358:	00401241 	.word	0x00401241
  40135c:	e000e100 	.word	0xe000e100
  401360:	004001e5 	.word	0x004001e5

00401364 <configure_wifi_web_setup_pin>:


// Configuration of button interrupt to initiate the web setup
void configure_wifi_web_setup_pin(void)
{
  401364:	b530      	push	{r4, r5, lr}
	
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_SETUP_ID);

// 		/* Adjust PIO debounce filter using a 10 Hz filter. */
	pio_set_debounce_filter(WIFI_SETUP_PIO, WIFI_SETUP_PIN, 10);     // give a shot
  401366:	4c0f      	ldr	r4, [pc, #60]	; (4013a4 <configure_wifi_web_setup_pin+0x40>)
	pmc_enable_periph_clk(WIFI_SETUP_ID);
  401368:	4b0f      	ldr	r3, [pc, #60]	; (4013a8 <configure_wifi_web_setup_pin+0x44>)
// 	
	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_SETUP_PIO, WIFI_SETUP_ID, WIFI_SETUP_PIN_NUM, WIFI_SETUP_ATTR, wifi_web_setup_handler);
  40136a:	4d10      	ldr	r5, [pc, #64]	; (4013ac <configure_wifi_web_setup_pin+0x48>)
{
  40136c:	b083      	sub	sp, #12
	pmc_enable_periph_clk(WIFI_SETUP_ID);
  40136e:	200b      	movs	r0, #11
  401370:	4798      	blx	r3
	pio_set_debounce_filter(WIFI_SETUP_PIO, WIFI_SETUP_PIN, 10);     // give a shot
  401372:	4620      	mov	r0, r4
  401374:	220a      	movs	r2, #10
  401376:	2116      	movs	r1, #22
  401378:	4b0d      	ldr	r3, [pc, #52]	; (4013b0 <configure_wifi_web_setup_pin+0x4c>)
  40137a:	4798      	blx	r3
	pio_handler_set(WIFI_SETUP_PIO, WIFI_SETUP_ID, WIFI_SETUP_PIN_NUM, WIFI_SETUP_ATTR, wifi_web_setup_handler);
  40137c:	4b0d      	ldr	r3, [pc, #52]	; (4013b4 <configure_wifi_web_setup_pin+0x50>)
  40137e:	9300      	str	r3, [sp, #0]
  401380:	4620      	mov	r0, r4
  401382:	2359      	movs	r3, #89	; 0x59
  401384:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  401388:	210b      	movs	r1, #11
  40138a:	47a8      	blx	r5
  40138c:	4a0a      	ldr	r2, [pc, #40]	; (4013b8 <configure_wifi_web_setup_pin+0x54>)

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_SETUP_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_SETUP_PIO, WIFI_SETUP_PIN_NUM);
  40138e:	4b0b      	ldr	r3, [pc, #44]	; (4013bc <configure_wifi_web_setup_pin+0x58>)
  401390:	f44f 6100 	mov.w	r1, #2048	; 0x800
  401394:	6011      	str	r1, [r2, #0]
  401396:	4620      	mov	r0, r4
  401398:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
	
	// write_wifi_command("web setup mode initiated\r\n", 3);
	
}
  40139c:	b003      	add	sp, #12
  40139e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	pio_enable_interrupt(WIFI_SETUP_PIO, WIFI_SETUP_PIN_NUM);
  4013a2:	4718      	bx	r3
  4013a4:	400e0e00 	.word	0x400e0e00
  4013a8:	004006f9 	.word	0x004006f9
  4013ac:	004003a5 	.word	0x004003a5
  4013b0:	004001a1 	.word	0x004001a1
  4013b4:	0040114d 	.word	0x0040114d
  4013b8:	e000e100 	.word	0xe000e100
  4013bc:	004001e5 	.word	0x004001e5

004013c0 <write_wifi_command>:


/* Writes a command (comm) to the AMW136, and waits either for an acknowledgment or a timeout. The timeout can be created by setting the global variable "counts" to zero, 
which will automatically increment every second, and waiting while counts < cnt */
void write_wifi_command(char* comm, uint8_t cnt)
{
  4013c0:	b510      	push	{r4, lr}
	usart_write_line(WIFI_USART, comm);
  4013c2:	4b09      	ldr	r3, [pc, #36]	; (4013e8 <write_wifi_command+0x28>)
{
  4013c4:	460c      	mov	r4, r1
	usart_write_line(WIFI_USART, comm);
  4013c6:	4601      	mov	r1, r0
  4013c8:	4808      	ldr	r0, [pc, #32]	; (4013ec <write_wifi_command+0x2c>)
  4013ca:	4798      	blx	r3
	counts = 0;
  4013cc:	4a08      	ldr	r2, [pc, #32]	; (4013f0 <write_wifi_command+0x30>)
	while (counts < cnt)
	{
		if(wifi_comm_success)						// if wifi_comm_success is true
  4013ce:	4909      	ldr	r1, [pc, #36]	; (4013f4 <write_wifi_command+0x34>)
	counts = 0;
  4013d0:	2300      	movs	r3, #0
  4013d2:	7013      	strb	r3, [r2, #0]
	while (counts < cnt)
  4013d4:	e001      	b.n	4013da <write_wifi_command+0x1a>
		if(wifi_comm_success)						// if wifi_comm_success is true
  4013d6:	780b      	ldrb	r3, [r1, #0]
  4013d8:	b91b      	cbnz	r3, 4013e2 <write_wifi_command+0x22>
	while (counts < cnt)
  4013da:	7813      	ldrb	r3, [r2, #0]
  4013dc:	42a3      	cmp	r3, r4
  4013de:	d3fa      	bcc.n	4013d6 <write_wifi_command+0x16>
  4013e0:	bd10      	pop	{r4, pc}
		{
			wifi_comm_success = false;				// reset the flag
  4013e2:	2300      	movs	r3, #0
  4013e4:	700b      	strb	r3, [r1, #0]
			break;									// get out of the loop
  4013e6:	bd10      	pop	{r4, pc}
  4013e8:	00400c09 	.word	0x00400c09
  4013ec:	40024000 	.word	0x40024000
  4013f0:	200058dc 	.word	0x200058dc
  4013f4:	20000a74 	.word	0x20000a74

004013f8 <write_image_to_file>:
		


// Writes an image from SAM4s8B to the AMW136. If the length of the image is zero (i.e.. the image is not valid), return. Otherwise, follow the protocol
void write_image_to_file(void)
{
  4013f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	image_available = find_image_len();
	img_length = end_point - start_point;
  4013fc:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 4014e0 <write_image_to_file+0xe8>
  401400:	4c28      	ldr	r4, [pc, #160]	; (4014a4 <write_image_to_file+0xac>)
	image_available = find_image_len();
  401402:	4b29      	ldr	r3, [pc, #164]	; (4014a8 <write_image_to_file+0xb0>)
{
  401404:	b09b      	sub	sp, #108	; 0x6c
	image_available = find_image_len();
  401406:	4798      	blx	r3
	img_length = end_point - start_point;
  401408:	f8d9 5000 	ldr.w	r5, [r9]
  40140c:	6822      	ldr	r2, [r4, #0]
	image_available = find_image_len();
  40140e:	4927      	ldr	r1, [pc, #156]	; (4014ac <write_image_to_file+0xb4>)
	img_length = end_point - start_point;
  401410:	4b27      	ldr	r3, [pc, #156]	; (4014b0 <write_image_to_file+0xb8>)
	image_available = find_image_len();
  401412:	7008      	strb	r0, [r1, #0]
	img_length = end_point - start_point;
  401414:	1aad      	subs	r5, r5, r2
  401416:	601d      	str	r5, [r3, #0]
	
	if (image_available == 0) {
  401418:	b910      	cbnz	r0, 401420 <write_image_to_file+0x28>
		}
		image_transfer_flag = false;						// reset the flag after data transfer
		delay_ms(50);										// slight delay according to the step
	}	
		
}
  40141a:	b01b      	add	sp, #108	; 0x6c
  40141c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		char img_array[100] = {0};
  401420:	2264      	movs	r2, #100	; 0x64
  401422:	2100      	movs	r1, #0
  401424:	4b23      	ldr	r3, [pc, #140]	; (4014b4 <write_image_to_file+0xbc>)
  401426:	a801      	add	r0, sp, #4
  401428:	4798      	blx	r3
		sprintf(img_array, "image_transfer %d\r\n", img_length);
  40142a:	462a      	mov	r2, r5
  40142c:	4922      	ldr	r1, [pc, #136]	; (4014b8 <write_image_to_file+0xc0>)
  40142e:	4b23      	ldr	r3, [pc, #140]	; (4014bc <write_image_to_file+0xc4>)
  401430:	a801      	add	r0, sp, #4
  401432:	4798      	blx	r3
	usart_write_line(WIFI_USART, comm);
  401434:	a901      	add	r1, sp, #4
  401436:	4b22      	ldr	r3, [pc, #136]	; (4014c0 <write_image_to_file+0xc8>)
  401438:	4822      	ldr	r0, [pc, #136]	; (4014c4 <write_image_to_file+0xcc>)
  40143a:	4798      	blx	r3
	counts = 0;
  40143c:	4b22      	ldr	r3, [pc, #136]	; (4014c8 <write_image_to_file+0xd0>)
		if(wifi_comm_success)						// if wifi_comm_success is true
  40143e:	4923      	ldr	r1, [pc, #140]	; (4014cc <write_image_to_file+0xd4>)
	counts = 0;
  401440:	2200      	movs	r2, #0
  401442:	701a      	strb	r2, [r3, #0]
  401444:	e001      	b.n	40144a <write_image_to_file+0x52>
		if(wifi_comm_success)						// if wifi_comm_success is true
  401446:	780a      	ldrb	r2, [r1, #0]
  401448:	bb4a      	cbnz	r2, 40149e <write_image_to_file+0xa6>
	while (counts < cnt)
  40144a:	781a      	ldrb	r2, [r3, #0]
  40144c:	2a01      	cmp	r2, #1
  40144e:	d9fa      	bls.n	401446 <write_image_to_file+0x4e>
		counts = 0;
  401450:	2200      	movs	r2, #0
  401452:	701a      	strb	r2, [r3, #0]
  401454:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4014e4 <write_image_to_file+0xec>
		while(!image_transfer_flag) {
  401458:	e002      	b.n	401460 <write_image_to_file+0x68>
			if (counts > 3) {
  40145a:	781a      	ldrb	r2, [r3, #0]
  40145c:	2a03      	cmp	r2, #3
  40145e:	d815      	bhi.n	40148c <write_image_to_file+0x94>
		while(!image_transfer_flag) {
  401460:	f898 2000 	ldrb.w	r2, [r8]
  401464:	2a00      	cmp	r2, #0
  401466:	d0f8      	beq.n	40145a <write_image_to_file+0x62>
				for (uint32_t i = start_point; i <= end_point + 1; i++) {
  401468:	f8d9 3000 	ldr.w	r3, [r9]
  40146c:	6824      	ldr	r4, [r4, #0]
  40146e:	3301      	adds	r3, #1
  401470:	42a3      	cmp	r3, r4
  401472:	d30b      	bcc.n	40148c <write_image_to_file+0x94>
  401474:	4f16      	ldr	r7, [pc, #88]	; (4014d0 <write_image_to_file+0xd8>)
  401476:	4e17      	ldr	r6, [pc, #92]	; (4014d4 <write_image_to_file+0xdc>)
					usart_putchar(WIFI_USART, image_buffer[i]);
  401478:	4d12      	ldr	r5, [pc, #72]	; (4014c4 <write_image_to_file+0xcc>)
  40147a:	5d39      	ldrb	r1, [r7, r4]
  40147c:	4628      	mov	r0, r5
  40147e:	47b0      	blx	r6
				for (uint32_t i = start_point; i <= end_point + 1; i++) {
  401480:	f8d9 3000 	ldr.w	r3, [r9]
  401484:	3401      	adds	r4, #1
  401486:	3301      	adds	r3, #1
  401488:	42a3      	cmp	r3, r4
  40148a:	d2f6      	bcs.n	40147a <write_image_to_file+0x82>
		image_transfer_flag = false;						// reset the flag after data transfer
  40148c:	2200      	movs	r2, #0
		delay_ms(50);										// slight delay according to the step
  40148e:	4812      	ldr	r0, [pc, #72]	; (4014d8 <write_image_to_file+0xe0>)
  401490:	4b12      	ldr	r3, [pc, #72]	; (4014dc <write_image_to_file+0xe4>)
		image_transfer_flag = false;						// reset the flag after data transfer
  401492:	f888 2000 	strb.w	r2, [r8]
		delay_ms(50);										// slight delay according to the step
  401496:	4798      	blx	r3
}
  401498:	b01b      	add	sp, #108	; 0x6c
  40149a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			wifi_comm_success = false;				// reset the flag
  40149e:	2200      	movs	r2, #0
  4014a0:	700a      	strb	r2, [r1, #0]
  4014a2:	e7d5      	b.n	401450 <write_image_to_file+0x58>
  4014a4:	20000ab4 	.word	0x20000ab4
  4014a8:	00400e85 	.word	0x00400e85
  4014ac:	20005ccc 	.word	0x20005ccc
  4014b0:	20005cc8 	.word	0x20005cc8
  4014b4:	00401ac9 	.word	0x00401ac9
  4014b8:	00407548 	.word	0x00407548
  4014bc:	00401b65 	.word	0x00401b65
  4014c0:	00400c09 	.word	0x00400c09
  4014c4:	40024000 	.word	0x40024000
  4014c8:	200058dc 	.word	0x200058dc
  4014cc:	20000a74 	.word	0x20000a74
  4014d0:	20000abc 	.word	0x20000abc
  4014d4:	00400bf9 	.word	0x00400bf9
  4014d8:	00068a1c 	.word	0x00068a1c
  4014dc:	20000001 	.word	0x20000001
  4014e0:	20000ab8 	.word	0x20000ab8
  4014e4:	20000a5c 	.word	0x20000a5c

004014e8 <board_init>:
#include <board.h>
#include <conf_board.h>
#include "camera.h"

void board_init(void)
{
  4014e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4014ec:	200b      	movs	r0, #11
  4014ee:	4e2a      	ldr	r6, [pc, #168]	; (401598 <board_init+0xb0>)
	ioport_set_pin_level(WIFI_CTS_PIN, false);
	
	
	
	
	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);				// configure TWI clock
  4014f0:	4c2a      	ldr	r4, [pc, #168]	; (40159c <board_init+0xb4>)
	// configure HSYNC and VSYNC
	gpio_configure_pin(HSYNC_GPIO, HSYNC_FLAGS);
	gpio_configure_pin(VSYNC_GPIO, VSYNC_FLAGS);
	
	// configure DATA pins
	gpio_configure_pin(OV_DATA_BUS_D0, OV_DATA_BUS_FLAGS);
  4014f2:	4d2b      	ldr	r5, [pc, #172]	; (4015a0 <board_init+0xb8>)
  4014f4:	47b0      	blx	r6
  4014f6:	200c      	movs	r0, #12
  4014f8:	47b0      	blx	r6
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4014fa:	4b2a      	ldr	r3, [pc, #168]	; (4015a4 <board_init+0xbc>)
  4014fc:	4a2a      	ldr	r2, [pc, #168]	; (4015a8 <board_init+0xc0>)
  4014fe:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
  401502:	611e      	str	r6, [r3, #16]
  401504:	2001      	movs	r0, #1
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401506:	f8c3 60a0 	str.w	r6, [r3, #160]	; 0xa0
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  40150a:	f44f 6180 	mov.w	r1, #1024	; 0x400
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40150e:	631e      	str	r6, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401510:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401514:	2680      	movs	r6, #128	; 0x80
  401516:	6110      	str	r0, [r2, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401518:	f8c2 00a0 	str.w	r0, [r2, #160]	; 0xa0
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40151c:	6350      	str	r0, [r2, #52]	; 0x34
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  40151e:	6151      	str	r1, [r2, #20]
	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);				// configure TWI clock
  401520:	2004      	movs	r0, #4
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401522:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401526:	6311      	str	r1, [r2, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401528:	615f      	str	r7, [r3, #20]
  40152a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40152e:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401532:	631f      	str	r7, [r3, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401534:	611e      	str	r6, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401536:	f8c3 60a0 	str.w	r6, [r3, #160]	; 0xa0
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40153a:	635e      	str	r6, [r3, #52]	; 0x34
  40153c:	47a0      	blx	r4
	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);			// configure TWI data pin
  40153e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401542:	2003      	movs	r0, #3
  401544:	47a0      	blx	r4
	gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
  401546:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40154a:	2011      	movs	r0, #17
  40154c:	47a0      	blx	r4
	gpio_configure_pin(OV_RST_GPIO, OV_RST_FLAGS);
  40154e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  401552:	2014      	movs	r0, #20
  401554:	47a0      	blx	r4
	gpio_configure_pin(HSYNC_GPIO, HSYNC_FLAGS);
  401556:	2171      	movs	r1, #113	; 0x71
  401558:	2010      	movs	r0, #16
  40155a:	47a0      	blx	r4
	gpio_configure_pin(VSYNC_GPIO, VSYNC_FLAGS);
  40155c:	2171      	movs	r1, #113	; 0x71
  40155e:	200f      	movs	r0, #15
  401560:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D0, OV_DATA_BUS_FLAGS);
  401562:	4629      	mov	r1, r5
  401564:	2018      	movs	r0, #24
  401566:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D1, OV_DATA_BUS_FLAGS);
  401568:	4629      	mov	r1, r5
  40156a:	2019      	movs	r0, #25
  40156c:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D2, OV_DATA_BUS_FLAGS);
  40156e:	4629      	mov	r1, r5
  401570:	201a      	movs	r0, #26
  401572:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D3, OV_DATA_BUS_FLAGS);
  401574:	4629      	mov	r1, r5
  401576:	201b      	movs	r0, #27
  401578:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D4, OV_DATA_BUS_FLAGS);
  40157a:	4629      	mov	r1, r5
  40157c:	201c      	movs	r0, #28
  40157e:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D5, OV_DATA_BUS_FLAGS);
  401580:	4629      	mov	r1, r5
  401582:	201d      	movs	r0, #29
  401584:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
  401586:	4629      	mov	r1, r5
  401588:	201e      	movs	r0, #30
  40158a:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
  40158c:	4629      	mov	r1, r5
  40158e:	4623      	mov	r3, r4
  401590:	201f      	movs	r0, #31
	
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
}
  401592:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
  401596:	4718      	bx	r3
  401598:	004006f9 	.word	0x004006f9
  40159c:	0040022d 	.word	0x0040022d
  4015a0:	28000001 	.word	0x28000001
  4015a4:	400e0e00 	.word	0x400e0e00
  4015a8:	400e1000 	.word	0x400e1000

004015ac <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4015ac:	e7fe      	b.n	4015ac <Dummy_Handler>
  4015ae:	bf00      	nop

004015b0 <Reset_Handler>:
	if (pSrc > pDest) {
  4015b0:	4919      	ldr	r1, [pc, #100]	; (401618 <Reset_Handler+0x68>)
  4015b2:	481a      	ldr	r0, [pc, #104]	; (40161c <Reset_Handler+0x6c>)
  4015b4:	4281      	cmp	r1, r0
{
  4015b6:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  4015b8:	d80e      	bhi.n	4015d8 <Reset_Handler+0x28>
	} else if (pSrc < pDest) {
  4015ba:	d217      	bcs.n	4015ec <Reset_Handler+0x3c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4015bc:	4b18      	ldr	r3, [pc, #96]	; (401620 <Reset_Handler+0x70>)
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4015be:	1f0a      	subs	r2, r1, #4
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4015c0:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4015c2:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  4015c4:	b190      	cbz	r0, 4015ec <Reset_Handler+0x3c>
  4015c6:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  4015ca:	f852 0904 	ldr.w	r0, [r2], #-4
  4015ce:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  4015d2:	42ca      	cmn	r2, r1
  4015d4:	d1f9      	bne.n	4015ca <Reset_Handler+0x1a>
  4015d6:	e009      	b.n	4015ec <Reset_Handler+0x3c>
		for (; pDest < &_erelocate;) {
  4015d8:	4b11      	ldr	r3, [pc, #68]	; (401620 <Reset_Handler+0x70>)
  4015da:	4298      	cmp	r0, r3
  4015dc:	d206      	bcs.n	4015ec <Reset_Handler+0x3c>
			*pDest++ = *pSrc++;
  4015de:	43c2      	mvns	r2, r0
  4015e0:	441a      	add	r2, r3
  4015e2:	f022 0203 	bic.w	r2, r2, #3
  4015e6:	3204      	adds	r2, #4
  4015e8:	4b0e      	ldr	r3, [pc, #56]	; (401624 <Reset_Handler+0x74>)
  4015ea:	4798      	blx	r3

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  4015ec:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  4015ee:	480e      	ldr	r0, [pc, #56]	; (401628 <Reset_Handler+0x78>)
  4015f0:	4b0e      	ldr	r3, [pc, #56]	; (40162c <Reset_Handler+0x7c>)
  4015f2:	4298      	cmp	r0, r3
  4015f4:	d207      	bcs.n	401606 <Reset_Handler+0x56>
		*pDest++ = 0;
  4015f6:	43c2      	mvns	r2, r0
  4015f8:	441a      	add	r2, r3
  4015fa:	f022 0203 	bic.w	r2, r2, #3
  4015fe:	3204      	adds	r2, #4
  401600:	2100      	movs	r1, #0
  401602:	4b0b      	ldr	r3, [pc, #44]	; (401630 <Reset_Handler+0x80>)
  401604:	4798      	blx	r3
	SCB->VTOR = ((uint32_t) pSrc);
  401606:	4b0b      	ldr	r3, [pc, #44]	; (401634 <Reset_Handler+0x84>)
  401608:	4a0b      	ldr	r2, [pc, #44]	; (401638 <Reset_Handler+0x88>)
  40160a:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  40160c:	4b0b      	ldr	r3, [pc, #44]	; (40163c <Reset_Handler+0x8c>)
  40160e:	4798      	blx	r3
	main();
  401610:	4b0b      	ldr	r3, [pc, #44]	; (401640 <Reset_Handler+0x90>)
  401612:	4798      	blx	r3
  401614:	e7fe      	b.n	401614 <Reset_Handler+0x64>
  401616:	bf00      	nop
  401618:	00407864 	.word	0x00407864
  40161c:	20000000 	.word	0x20000000
  401620:	200009c0 	.word	0x200009c0
  401624:	00401995 	.word	0x00401995
  401628:	200009c0 	.word	0x200009c0
  40162c:	20005cf8 	.word	0x20005cf8
  401630:	00401ac9 	.word	0x00401ac9
  401634:	e000ed00 	.word	0xe000ed00
  401638:	00400000 	.word	0x00400000
  40163c:	00401945 	.word	0x00401945
  401640:	004017cd 	.word	0x004017cd

00401644 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  401644:	4a32      	ldr	r2, [pc, #200]	; (401710 <SystemCoreClockUpdate+0xcc>)
  401646:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401648:	f003 0303 	and.w	r3, r3, #3
  40164c:	2b01      	cmp	r3, #1
  40164e:	d039      	beq.n	4016c4 <SystemCoreClockUpdate+0x80>
  401650:	d322      	bcc.n	401698 <SystemCoreClockUpdate+0x54>
		}
		break;
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401652:	6a13      	ldr	r3, [r2, #32]
  401654:	01d9      	lsls	r1, r3, #7
  401656:	d545      	bpl.n	4016e4 <SystemCoreClockUpdate+0xa0>
				SystemCoreClock = CHIP_FREQ_XTAL;
  401658:	492e      	ldr	r1, [pc, #184]	; (401714 <SystemCoreClockUpdate+0xd0>)
  40165a:	4b2f      	ldr	r3, [pc, #188]	; (401718 <SystemCoreClockUpdate+0xd4>)
  40165c:	600b      	str	r3, [r1, #0]
				default:
					break;
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  40165e:	4a2c      	ldr	r2, [pc, #176]	; (401710 <SystemCoreClockUpdate+0xcc>)
  401660:	6b10      	ldr	r0, [r2, #48]	; 0x30
  401662:	f000 0003 	and.w	r0, r0, #3
  401666:	2802      	cmp	r0, #2
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  401668:	bf0b      	itete	eq
  40166a:	6a90      	ldreq	r0, [r2, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
						>> CKGR_PLLAR_DIVA_Pos));
			} else {
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  40166c:	6ad0      	ldrne	r0, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  40166e:	6a92      	ldreq	r2, [r2, #40]	; 0x28
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401670:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  401672:	f3c0 400a 	ubfx	r0, r0, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401676:	fb00 3303 	mla	r3, r0, r3, r3
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  40167a:	4825      	ldr	r0, [pc, #148]	; (401710 <SystemCoreClockUpdate+0xcc>)
						>> CKGR_PLLBR_DIVB_Pos));
  40167c:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  40167e:	fbb3 f3f2 	udiv	r3, r3, r2
	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  401682:	6b02      	ldr	r2, [r0, #48]	; 0x30
  401684:	f002 0270 	and.w	r2, r2, #112	; 0x70
  401688:	2a70      	cmp	r2, #112	; 0x70
  40168a:	d115      	bne.n	4016b8 <SystemCoreClockUpdate+0x74>
		SystemCoreClock /= 3U;
  40168c:	4a23      	ldr	r2, [pc, #140]	; (40171c <SystemCoreClockUpdate+0xd8>)
  40168e:	fba2 2303 	umull	r2, r3, r2, r3
  401692:	085b      	lsrs	r3, r3, #1
  401694:	600b      	str	r3, [r1, #0]
  401696:	4770      	bx	lr
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  401698:	4b21      	ldr	r3, [pc, #132]	; (401720 <SystemCoreClockUpdate+0xdc>)
  40169a:	491e      	ldr	r1, [pc, #120]	; (401714 <SystemCoreClockUpdate+0xd0>)
  40169c:	695b      	ldr	r3, [r3, #20]
  40169e:	f013 0f80 	tst.w	r3, #128	; 0x80
  4016a2:	bf14      	ite	ne
  4016a4:	f44f 4300 	movne.w	r3, #32768	; 0x8000
  4016a8:	f44f 43fa 	moveq.w	r3, #32000	; 0x7d00
	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4016ac:	4818      	ldr	r0, [pc, #96]	; (401710 <SystemCoreClockUpdate+0xcc>)
  4016ae:	6b02      	ldr	r2, [r0, #48]	; 0x30
  4016b0:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4016b4:	2a70      	cmp	r2, #112	; 0x70
  4016b6:	d0e9      	beq.n	40168c <SystemCoreClockUpdate+0x48>
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4016b8:	6b02      	ldr	r2, [r0, #48]	; 0x30
  4016ba:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  4016be:	40d3      	lsrs	r3, r2
  4016c0:	600b      	str	r3, [r1, #0]
  4016c2:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4016c4:	6a13      	ldr	r3, [r2, #32]
  4016c6:	01db      	lsls	r3, r3, #7
  4016c8:	d419      	bmi.n	4016fe <SystemCoreClockUpdate+0xba>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4016ca:	4912      	ldr	r1, [pc, #72]	; (401714 <SystemCoreClockUpdate+0xd0>)
  4016cc:	4815      	ldr	r0, [pc, #84]	; (401724 <SystemCoreClockUpdate+0xe0>)
  4016ce:	6008      	str	r0, [r1, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4016d0:	6a12      	ldr	r2, [r2, #32]
  4016d2:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4016d6:	2a10      	cmp	r2, #16
  4016d8:	d017      	beq.n	40170a <SystemCoreClockUpdate+0xc6>
  4016da:	4b0f      	ldr	r3, [pc, #60]	; (401718 <SystemCoreClockUpdate+0xd4>)
  4016dc:	2a20      	cmp	r2, #32
  4016de:	bf18      	it	ne
  4016e0:	4603      	movne	r3, r0
  4016e2:	e7e3      	b.n	4016ac <SystemCoreClockUpdate+0x68>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4016e4:	490b      	ldr	r1, [pc, #44]	; (401714 <SystemCoreClockUpdate+0xd0>)
  4016e6:	4b0f      	ldr	r3, [pc, #60]	; (401724 <SystemCoreClockUpdate+0xe0>)
  4016e8:	600b      	str	r3, [r1, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4016ea:	6a12      	ldr	r2, [r2, #32]
  4016ec:	f002 0270 	and.w	r2, r2, #112	; 0x70
  4016f0:	2a10      	cmp	r2, #16
  4016f2:	d007      	beq.n	401704 <SystemCoreClockUpdate+0xc0>
  4016f4:	2a20      	cmp	r2, #32
  4016f6:	d1b2      	bne.n	40165e <SystemCoreClockUpdate+0x1a>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4016f8:	4b07      	ldr	r3, [pc, #28]	; (401718 <SystemCoreClockUpdate+0xd4>)
  4016fa:	600b      	str	r3, [r1, #0]
					break;
  4016fc:	e7af      	b.n	40165e <SystemCoreClockUpdate+0x1a>
  4016fe:	4b06      	ldr	r3, [pc, #24]	; (401718 <SystemCoreClockUpdate+0xd4>)
  401700:	4904      	ldr	r1, [pc, #16]	; (401714 <SystemCoreClockUpdate+0xd0>)
  401702:	e7d3      	b.n	4016ac <SystemCoreClockUpdate+0x68>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  401704:	4b08      	ldr	r3, [pc, #32]	; (401728 <SystemCoreClockUpdate+0xe4>)
  401706:	600b      	str	r3, [r1, #0]
					break;
  401708:	e7a9      	b.n	40165e <SystemCoreClockUpdate+0x1a>
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  40170a:	4b07      	ldr	r3, [pc, #28]	; (401728 <SystemCoreClockUpdate+0xe4>)
  40170c:	e7ce      	b.n	4016ac <SystemCoreClockUpdate+0x68>
  40170e:	bf00      	nop
  401710:	400e0400 	.word	0x400e0400
  401714:	2000000c 	.word	0x2000000c
  401718:	00b71b00 	.word	0x00b71b00
  40171c:	aaaaaaab 	.word	0xaaaaaaab
  401720:	400e1410 	.word	0x400e1410
  401724:	003d0900 	.word	0x003d0900
  401728:	007a1200 	.word	0x007a1200

0040172c <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  40172c:	4b12      	ldr	r3, [pc, #72]	; (401778 <system_init_flash+0x4c>)
  40172e:	4298      	cmp	r0, r3
  401730:	d915      	bls.n	40175e <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  401732:	4b12      	ldr	r3, [pc, #72]	; (40177c <system_init_flash+0x50>)
  401734:	4298      	cmp	r0, r3
  401736:	d90e      	bls.n	401756 <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  401738:	4b11      	ldr	r3, [pc, #68]	; (401780 <system_init_flash+0x54>)
  40173a:	4298      	cmp	r0, r3
  40173c:	d918      	bls.n	401770 <system_init_flash+0x44>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  40173e:	4b11      	ldr	r3, [pc, #68]	; (401784 <system_init_flash+0x58>)
  401740:	4298      	cmp	r0, r3
  401742:	d911      	bls.n	401768 <system_init_flash+0x3c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  401744:	4b10      	ldr	r3, [pc, #64]	; (401788 <system_init_flash+0x5c>)
  401746:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401748:	4b10      	ldr	r3, [pc, #64]	; (40178c <system_init_flash+0x60>)
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40174a:	bf8c      	ite	hi
  40174c:	4a10      	ldrhi	r2, [pc, #64]	; (401790 <system_init_flash+0x64>)
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  40174e:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401752:	601a      	str	r2, [r3, #0]
  401754:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401756:	4b0d      	ldr	r3, [pc, #52]	; (40178c <system_init_flash+0x60>)
  401758:	4a0e      	ldr	r2, [pc, #56]	; (401794 <system_init_flash+0x68>)
  40175a:	601a      	str	r2, [r3, #0]
  40175c:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40175e:	4b0b      	ldr	r3, [pc, #44]	; (40178c <system_init_flash+0x60>)
  401760:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401764:	601a      	str	r2, [r3, #0]
  401766:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401768:	4b08      	ldr	r3, [pc, #32]	; (40178c <system_init_flash+0x60>)
  40176a:	4a0b      	ldr	r2, [pc, #44]	; (401798 <system_init_flash+0x6c>)
  40176c:	601a      	str	r2, [r3, #0]
  40176e:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401770:	4b06      	ldr	r3, [pc, #24]	; (40178c <system_init_flash+0x60>)
  401772:	4a0a      	ldr	r2, [pc, #40]	; (40179c <system_init_flash+0x70>)
  401774:	601a      	str	r2, [r3, #0]
  401776:	4770      	bx	lr
  401778:	01312cff 	.word	0x01312cff
  40177c:	026259ff 	.word	0x026259ff
  401780:	039386ff 	.word	0x039386ff
  401784:	04c4b3ff 	.word	0x04c4b3ff
  401788:	05f5e0ff 	.word	0x05f5e0ff
  40178c:	400e0a00 	.word	0x400e0a00
  401790:	04000500 	.word	0x04000500
  401794:	04000100 	.word	0x04000100
  401798:	04000300 	.word	0x04000300
  40179c:	04000200 	.word	0x04000200

004017a0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4017a0:	4a07      	ldr	r2, [pc, #28]	; (4017c0 <_sbrk+0x20>)
	int ramend = (int)&__ram_end__;
  4017a2:	4908      	ldr	r1, [pc, #32]	; (4017c4 <_sbrk+0x24>)
	if (heap == NULL) {
  4017a4:	6813      	ldr	r3, [r2, #0]
  4017a6:	b13b      	cbz	r3, 4017b8 <_sbrk+0x18>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
  4017a8:	4418      	add	r0, r3
  4017aa:	4281      	cmp	r1, r0
		return (caddr_t) -1;	
	}

	heap += incr;
  4017ac:	bfa6      	itte	ge
  4017ae:	6010      	strge	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4017b0:	4618      	movge	r0, r3
		return (caddr_t) -1;	
  4017b2:	f04f 30ff 	movlt.w	r0, #4294967295
}
  4017b6:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4017b8:	4b03      	ldr	r3, [pc, #12]	; (4017c8 <_sbrk+0x28>)
  4017ba:	6013      	str	r3, [r2, #0]
  4017bc:	e7f4      	b.n	4017a8 <_sbrk+0x8>
  4017be:	bf00      	nop
  4017c0:	20000a78 	.word	0x20000a78
  4017c4:	2001fffc 	.word	0x2001fffc
  4017c8:	20008cf8 	.word	0x20008cf8

004017cc <main>:
#include "timer_interface.h"



int main (void)
{
  4017cc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
	/* Insert system clock initialization code here (sysclk_init()). */

	sysclk_init();
  4017d0:	4b3d      	ldr	r3, [pc, #244]	; (4018c8 <main+0xfc>)
	wdt_disable(WDT);
	board_init();
	
	wifi_status = false;
  4017d2:	4d3e      	ldr	r5, [pc, #248]	; (4018cc <main+0x100>)
	wifi_websocket_flag = false;
  4017d4:	f8df 8158 	ldr.w	r8, [pc, #344]	; 401930 <main+0x164>
	wifi_comm_success = false;
	image_transfer_flag = false;
	web_setup_flag = false;
  4017d8:	4f3d      	ldr	r7, [pc, #244]	; (4018d0 <main+0x104>)
	configure_wifi_comm_pin();			// Configuring WIFI command pin
	configure_wifi_web_setup_pin();     // Configuring WIFI web setup pin
	
	// Hard reset the wifi chip. Free "connected-to-mcu" GPIOs are PB4, PB3, PA11, 
	gpio_set_pin_low(WIFI_RESET_PIN);   // Pulling the pin low, hard resetting
	delay_ms(100);                      // Delaying for 100 ms, as instructed
  4017da:	f8df 9158 	ldr.w	r9, [pc, #344]	; 401934 <main+0x168>
  4017de:	4e3d      	ldr	r6, [pc, #244]	; (4018d4 <main+0x108>)
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  4017e0:	4c3d      	ldr	r4, [pc, #244]	; (4018d8 <main+0x10c>)


	while(!ioport_get_pin_level(WIFI_STATUS_PIN)) {
		if (web_setup_flag == true)
		{
			usart_write_line(WIFI_USART, "setup web\r\n");
  4017e2:	f8df a13c 	ldr.w	sl, [pc, #316]	; 401920 <main+0x154>
  4017e6:	f8df b150 	ldr.w	fp, [pc, #336]	; 401938 <main+0x16c>
{
  4017ea:	b083      	sub	sp, #12
	sysclk_init();
  4017ec:	4798      	blx	r3
	wdt_disable(WDT);
  4017ee:	483b      	ldr	r0, [pc, #236]	; (4018dc <main+0x110>)
  4017f0:	4b3b      	ldr	r3, [pc, #236]	; (4018e0 <main+0x114>)
  4017f2:	4798      	blx	r3
	board_init();
  4017f4:	4b3b      	ldr	r3, [pc, #236]	; (4018e4 <main+0x118>)
  4017f6:	4798      	blx	r3
	wifi_comm_success = false;
  4017f8:	493b      	ldr	r1, [pc, #236]	; (4018e8 <main+0x11c>)
	image_transfer_flag = false;
  4017fa:	4a3c      	ldr	r2, [pc, #240]	; (4018ec <main+0x120>)
	wifi_status = false;
  4017fc:	2300      	movs	r3, #0
  4017fe:	702b      	strb	r3, [r5, #0]
	wifi_websocket_flag = false;
  401800:	f888 3000 	strb.w	r3, [r8]
	wifi_comm_success = false;
  401804:	700b      	strb	r3, [r1, #0]
	image_transfer_flag = false;
  401806:	7013      	strb	r3, [r2, #0]
	configure_tc();						// Configuring the timer from timer_interface
  401808:	4a39      	ldr	r2, [pc, #228]	; (4018f0 <main+0x124>)
	web_setup_flag = false;
  40180a:	603b      	str	r3, [r7, #0]
	configure_tc();						// Configuring the timer from timer_interface
  40180c:	4790      	blx	r2
	configure_usart_wifi();				// Configuring WIFI USART
  40180e:	4b39      	ldr	r3, [pc, #228]	; (4018f4 <main+0x128>)
  401810:	4798      	blx	r3
	configure_wifi_comm_pin();			// Configuring WIFI command pin
  401812:	4b39      	ldr	r3, [pc, #228]	; (4018f8 <main+0x12c>)
  401814:	4798      	blx	r3
	configure_wifi_web_setup_pin();     // Configuring WIFI web setup pin
  401816:	4b39      	ldr	r3, [pc, #228]	; (4018fc <main+0x130>)
  401818:	4798      	blx	r3
	gpio_set_pin_low(WIFI_RESET_PIN);   // Pulling the pin low, hard resetting
  40181a:	4b39      	ldr	r3, [pc, #228]	; (401900 <main+0x134>)
  40181c:	2020      	movs	r0, #32
  40181e:	4798      	blx	r3
	delay_ms(100);                      // Delaying for 100 ms, as instructed
  401820:	4838      	ldr	r0, [pc, #224]	; (401904 <main+0x138>)
  401822:	47c8      	blx	r9
	gpio_set_pin_high(WIFI_RESET_PIN);  // Pulling the pin high
  401824:	2020      	movs	r0, #32
  401826:	4b38      	ldr	r3, [pc, #224]	; (401908 <main+0x13c>)
  401828:	4798      	blx	r3
	while(!ioport_get_pin_level(WIFI_STATUS_PIN)) {
  40182a:	e002      	b.n	401832 <main+0x66>
		if (web_setup_flag == true)
  40182c:	683a      	ldr	r2, [r7, #0]
  40182e:	2a01      	cmp	r2, #1
  401830:	d042      	beq.n	4018b8 <main+0xec>
  401832:	6be3      	ldr	r3, [r4, #60]	; 0x3c
	while(!ioport_get_pin_level(WIFI_STATUS_PIN)) {
  401834:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
  401838:	d0f8      	beq.n	40182c <main+0x60>
	}
	

	
	// Initialize the camera
	init_camera();
  40183a:	4b34      	ldr	r3, [pc, #208]	; (40190c <main+0x140>)
	
	
	// Configure the camera
	configure_camera();

 	write_wifi_command("set sy c p off\r\n", 3);					// Telling the wifi chip to turn off the command prompt
  40183c:	4c34      	ldr	r4, [pc, #208]	; (401910 <main+0x144>)
  40183e:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 40193c <main+0x170>
			else 
			{
				if (wifi_websocket_flag == false)
				{
					write_wifi_command("poll all\r\n",5);
					delay_ms(1000);
  401842:	f8df b0fc 	ldr.w	fp, [pc, #252]	; 401940 <main+0x174>
	init_camera();
  401846:	4798      	blx	r3
	configure_camera();
  401848:	4b32      	ldr	r3, [pc, #200]	; (401914 <main+0x148>)
  40184a:	4798      	blx	r3
 	write_wifi_command("set sy c p off\r\n", 3);					// Telling the wifi chip to turn off the command prompt
  40184c:	2103      	movs	r1, #3
  40184e:	4832      	ldr	r0, [pc, #200]	; (401918 <main+0x14c>)
  401850:	47a0      	blx	r4
 	write_wifi_command("set sy c e off\r\n", 3);					// Telling the wifi chip to turn off the echo
  401852:	2103      	movs	r1, #3
  401854:	4831      	ldr	r0, [pc, #196]	; (40191c <main+0x150>)
  401856:	47a0      	blx	r4
		if (web_setup_flag) {
  401858:	683b      	ldr	r3, [r7, #0]
  40185a:	b15b      	cbz	r3, 401874 <main+0xa8>
			write_wifi_command("setup web\r\n", 5);
  40185c:	2105      	movs	r1, #5
  40185e:	4830      	ldr	r0, [pc, #192]	; (401920 <main+0x154>)
  401860:	47a0      	blx	r4
			web_setup_flag = false;
  401862:	2300      	movs	r3, #0
  401864:	4a1c      	ldr	r2, [pc, #112]	; (4018d8 <main+0x10c>)
  401866:	603b      	str	r3, [r7, #0]
  401868:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
			while (!ioport_get_pin_level(WIFI_STATUS_PIN)) {
  40186a:	051b      	lsls	r3, r3, #20
  40186c:	d5fc      	bpl.n	401868 <main+0x9c>
		if (web_setup_flag) {
  40186e:	683b      	ldr	r3, [r7, #0]
  401870:	2b00      	cmp	r3, #0
  401872:	d1f3      	bne.n	40185c <main+0x90>
			if (wifi_status == false) {
  401874:	782b      	ldrb	r3, [r5, #0]
  401876:	b163      	cbz	r3, 401892 <main+0xc6>
				if (wifi_websocket_flag == false)
  401878:	f898 3000 	ldrb.w	r3, [r8]
  40187c:	b92b      	cbnz	r3, 40188a <main+0xbe>
					write_wifi_command("poll all\r\n",5);
  40187e:	2105      	movs	r1, #5
  401880:	4828      	ldr	r0, [pc, #160]	; (401924 <main+0x158>)
  401882:	47a0      	blx	r4
					delay_ms(1000);
  401884:	4658      	mov	r0, fp
  401886:	47c8      	blx	r9
  401888:	e7e6      	b.n	401858 <main+0x8c>
				}
				else
				{
					start_capture();
  40188a:	4b27      	ldr	r3, [pc, #156]	; (401928 <main+0x15c>)
  40188c:	4798      	blx	r3
					write_image_to_file();
  40188e:	47d0      	blx	sl
  401890:	e7e2      	b.n	401858 <main+0x8c>
 				gpio_set_pin_low(WIFI_RESET_PIN);   // Pulling the pin low, hard resetting
  401892:	4b1b      	ldr	r3, [pc, #108]	; (401900 <main+0x134>)
  401894:	2020      	movs	r0, #32
  401896:	4798      	blx	r3
 				delay_ms(100);                      // Delaying for 100 ms, as instructed
  401898:	481a      	ldr	r0, [pc, #104]	; (401904 <main+0x138>)
  40189a:	47c8      	blx	r9
 				gpio_set_pin_high(WIFI_RESET_PIN);  // Pulling the pin high
  40189c:	4b1a      	ldr	r3, [pc, #104]	; (401908 <main+0x13c>)
  40189e:	2020      	movs	r0, #32
  4018a0:	4798      	blx	r3
				while (!wifi_status) {
  4018a2:	782b      	ldrb	r3, [r5, #0]
  4018a4:	2b00      	cmp	r3, #0
  4018a6:	d1d7      	bne.n	401858 <main+0x8c>
					write_wifi_command("get wl n s\r\n", 5);
  4018a8:	4e20      	ldr	r6, [pc, #128]	; (40192c <main+0x160>)
  4018aa:	2105      	movs	r1, #5
  4018ac:	4630      	mov	r0, r6
  4018ae:	47a0      	blx	r4
				while (!wifi_status) {
  4018b0:	782b      	ldrb	r3, [r5, #0]
  4018b2:	2b00      	cmp	r3, #0
  4018b4:	d0f9      	beq.n	4018aa <main+0xde>
  4018b6:	e7cf      	b.n	401858 <main+0x8c>
			usart_write_line(WIFI_USART, "setup web\r\n");
  4018b8:	4651      	mov	r1, sl
  4018ba:	4658      	mov	r0, fp
  4018bc:	9301      	str	r3, [sp, #4]
  4018be:	47b0      	blx	r6
			web_setup_flag = false;
  4018c0:	9b01      	ldr	r3, [sp, #4]
  4018c2:	603b      	str	r3, [r7, #0]
  4018c4:	e7b5      	b.n	401832 <main+0x66>
  4018c6:	bf00      	nop
  4018c8:	00400139 	.word	0x00400139
  4018cc:	20000a75 	.word	0x20000a75
  4018d0:	20000a70 	.word	0x20000a70
  4018d4:	00400c09 	.word	0x00400c09
  4018d8:	400e1000 	.word	0x400e1000
  4018dc:	400e1450 	.word	0x400e1450
  4018e0:	00400c39 	.word	0x00400c39
  4018e4:	004014e9 	.word	0x004014e9
  4018e8:	20000a74 	.word	0x20000a74
  4018ec:	20000a5c 	.word	0x20000a5c
  4018f0:	004010d1 	.word	0x004010d1
  4018f4:	00401275 	.word	0x00401275
  4018f8:	00401315 	.word	0x00401315
  4018fc:	00401365 	.word	0x00401365
  401900:	00400211 	.word	0x00400211
  401904:	000d1437 	.word	0x000d1437
  401908:	004001f5 	.word	0x004001f5
  40190c:	00400c4d 	.word	0x00400c4d
  401910:	004013c1 	.word	0x004013c1
  401914:	00400d4d 	.word	0x00400d4d
  401918:	00407568 	.word	0x00407568
  40191c:	0040757c 	.word	0x0040757c
  401920:	0040755c 	.word	0x0040755c
  401924:	004075a0 	.word	0x004075a0
  401928:	00400d89 	.word	0x00400d89
  40192c:	00407590 	.word	0x00407590
  401930:	20000a76 	.word	0x20000a76
  401934:	20000001 	.word	0x20000001
  401938:	40024000 	.word	0x40024000
  40193c:	004013f9 	.word	0x004013f9
  401940:	0082ca25 	.word	0x0082ca25

00401944 <__libc_init_array>:
  401944:	b570      	push	{r4, r5, r6, lr}
  401946:	4e0f      	ldr	r6, [pc, #60]	; (401984 <__libc_init_array+0x40>)
  401948:	4d0f      	ldr	r5, [pc, #60]	; (401988 <__libc_init_array+0x44>)
  40194a:	1b76      	subs	r6, r6, r5
  40194c:	10b6      	asrs	r6, r6, #2
  40194e:	bf18      	it	ne
  401950:	2400      	movne	r4, #0
  401952:	d005      	beq.n	401960 <__libc_init_array+0x1c>
  401954:	3401      	adds	r4, #1
  401956:	f855 3b04 	ldr.w	r3, [r5], #4
  40195a:	4798      	blx	r3
  40195c:	42a6      	cmp	r6, r4
  40195e:	d1f9      	bne.n	401954 <__libc_init_array+0x10>
  401960:	4e0a      	ldr	r6, [pc, #40]	; (40198c <__libc_init_array+0x48>)
  401962:	4d0b      	ldr	r5, [pc, #44]	; (401990 <__libc_init_array+0x4c>)
  401964:	1b76      	subs	r6, r6, r5
  401966:	f005 ff67 	bl	407838 <_init>
  40196a:	10b6      	asrs	r6, r6, #2
  40196c:	bf18      	it	ne
  40196e:	2400      	movne	r4, #0
  401970:	d006      	beq.n	401980 <__libc_init_array+0x3c>
  401972:	3401      	adds	r4, #1
  401974:	f855 3b04 	ldr.w	r3, [r5], #4
  401978:	4798      	blx	r3
  40197a:	42a6      	cmp	r6, r4
  40197c:	d1f9      	bne.n	401972 <__libc_init_array+0x2e>
  40197e:	bd70      	pop	{r4, r5, r6, pc}
  401980:	bd70      	pop	{r4, r5, r6, pc}
  401982:	bf00      	nop
  401984:	00407844 	.word	0x00407844
  401988:	00407844 	.word	0x00407844
  40198c:	0040784c 	.word	0x0040784c
  401990:	00407844 	.word	0x00407844

00401994 <memcpy>:
  401994:	4684      	mov	ip, r0
  401996:	ea41 0300 	orr.w	r3, r1, r0
  40199a:	f013 0303 	ands.w	r3, r3, #3
  40199e:	d16d      	bne.n	401a7c <memcpy+0xe8>
  4019a0:	3a40      	subs	r2, #64	; 0x40
  4019a2:	d341      	bcc.n	401a28 <memcpy+0x94>
  4019a4:	f851 3b04 	ldr.w	r3, [r1], #4
  4019a8:	f840 3b04 	str.w	r3, [r0], #4
  4019ac:	f851 3b04 	ldr.w	r3, [r1], #4
  4019b0:	f840 3b04 	str.w	r3, [r0], #4
  4019b4:	f851 3b04 	ldr.w	r3, [r1], #4
  4019b8:	f840 3b04 	str.w	r3, [r0], #4
  4019bc:	f851 3b04 	ldr.w	r3, [r1], #4
  4019c0:	f840 3b04 	str.w	r3, [r0], #4
  4019c4:	f851 3b04 	ldr.w	r3, [r1], #4
  4019c8:	f840 3b04 	str.w	r3, [r0], #4
  4019cc:	f851 3b04 	ldr.w	r3, [r1], #4
  4019d0:	f840 3b04 	str.w	r3, [r0], #4
  4019d4:	f851 3b04 	ldr.w	r3, [r1], #4
  4019d8:	f840 3b04 	str.w	r3, [r0], #4
  4019dc:	f851 3b04 	ldr.w	r3, [r1], #4
  4019e0:	f840 3b04 	str.w	r3, [r0], #4
  4019e4:	f851 3b04 	ldr.w	r3, [r1], #4
  4019e8:	f840 3b04 	str.w	r3, [r0], #4
  4019ec:	f851 3b04 	ldr.w	r3, [r1], #4
  4019f0:	f840 3b04 	str.w	r3, [r0], #4
  4019f4:	f851 3b04 	ldr.w	r3, [r1], #4
  4019f8:	f840 3b04 	str.w	r3, [r0], #4
  4019fc:	f851 3b04 	ldr.w	r3, [r1], #4
  401a00:	f840 3b04 	str.w	r3, [r0], #4
  401a04:	f851 3b04 	ldr.w	r3, [r1], #4
  401a08:	f840 3b04 	str.w	r3, [r0], #4
  401a0c:	f851 3b04 	ldr.w	r3, [r1], #4
  401a10:	f840 3b04 	str.w	r3, [r0], #4
  401a14:	f851 3b04 	ldr.w	r3, [r1], #4
  401a18:	f840 3b04 	str.w	r3, [r0], #4
  401a1c:	f851 3b04 	ldr.w	r3, [r1], #4
  401a20:	f840 3b04 	str.w	r3, [r0], #4
  401a24:	3a40      	subs	r2, #64	; 0x40
  401a26:	d2bd      	bcs.n	4019a4 <memcpy+0x10>
  401a28:	3230      	adds	r2, #48	; 0x30
  401a2a:	d311      	bcc.n	401a50 <memcpy+0xbc>
  401a2c:	f851 3b04 	ldr.w	r3, [r1], #4
  401a30:	f840 3b04 	str.w	r3, [r0], #4
  401a34:	f851 3b04 	ldr.w	r3, [r1], #4
  401a38:	f840 3b04 	str.w	r3, [r0], #4
  401a3c:	f851 3b04 	ldr.w	r3, [r1], #4
  401a40:	f840 3b04 	str.w	r3, [r0], #4
  401a44:	f851 3b04 	ldr.w	r3, [r1], #4
  401a48:	f840 3b04 	str.w	r3, [r0], #4
  401a4c:	3a10      	subs	r2, #16
  401a4e:	d2ed      	bcs.n	401a2c <memcpy+0x98>
  401a50:	320c      	adds	r2, #12
  401a52:	d305      	bcc.n	401a60 <memcpy+0xcc>
  401a54:	f851 3b04 	ldr.w	r3, [r1], #4
  401a58:	f840 3b04 	str.w	r3, [r0], #4
  401a5c:	3a04      	subs	r2, #4
  401a5e:	d2f9      	bcs.n	401a54 <memcpy+0xc0>
  401a60:	3204      	adds	r2, #4
  401a62:	d008      	beq.n	401a76 <memcpy+0xe2>
  401a64:	07d2      	lsls	r2, r2, #31
  401a66:	bf1c      	itt	ne
  401a68:	f811 3b01 	ldrbne.w	r3, [r1], #1
  401a6c:	f800 3b01 	strbne.w	r3, [r0], #1
  401a70:	d301      	bcc.n	401a76 <memcpy+0xe2>
  401a72:	880b      	ldrh	r3, [r1, #0]
  401a74:	8003      	strh	r3, [r0, #0]
  401a76:	4660      	mov	r0, ip
  401a78:	4770      	bx	lr
  401a7a:	bf00      	nop
  401a7c:	2a08      	cmp	r2, #8
  401a7e:	d313      	bcc.n	401aa8 <memcpy+0x114>
  401a80:	078b      	lsls	r3, r1, #30
  401a82:	d08d      	beq.n	4019a0 <memcpy+0xc>
  401a84:	f010 0303 	ands.w	r3, r0, #3
  401a88:	d08a      	beq.n	4019a0 <memcpy+0xc>
  401a8a:	f1c3 0304 	rsb	r3, r3, #4
  401a8e:	1ad2      	subs	r2, r2, r3
  401a90:	07db      	lsls	r3, r3, #31
  401a92:	bf1c      	itt	ne
  401a94:	f811 3b01 	ldrbne.w	r3, [r1], #1
  401a98:	f800 3b01 	strbne.w	r3, [r0], #1
  401a9c:	d380      	bcc.n	4019a0 <memcpy+0xc>
  401a9e:	f831 3b02 	ldrh.w	r3, [r1], #2
  401aa2:	f820 3b02 	strh.w	r3, [r0], #2
  401aa6:	e77b      	b.n	4019a0 <memcpy+0xc>
  401aa8:	3a04      	subs	r2, #4
  401aaa:	d3d9      	bcc.n	401a60 <memcpy+0xcc>
  401aac:	3a01      	subs	r2, #1
  401aae:	f811 3b01 	ldrb.w	r3, [r1], #1
  401ab2:	f800 3b01 	strb.w	r3, [r0], #1
  401ab6:	d2f9      	bcs.n	401aac <memcpy+0x118>
  401ab8:	780b      	ldrb	r3, [r1, #0]
  401aba:	7003      	strb	r3, [r0, #0]
  401abc:	784b      	ldrb	r3, [r1, #1]
  401abe:	7043      	strb	r3, [r0, #1]
  401ac0:	788b      	ldrb	r3, [r1, #2]
  401ac2:	7083      	strb	r3, [r0, #2]
  401ac4:	4660      	mov	r0, ip
  401ac6:	4770      	bx	lr

00401ac8 <memset>:
  401ac8:	b470      	push	{r4, r5, r6}
  401aca:	0786      	lsls	r6, r0, #30
  401acc:	d046      	beq.n	401b5c <memset+0x94>
  401ace:	1e54      	subs	r4, r2, #1
  401ad0:	2a00      	cmp	r2, #0
  401ad2:	d041      	beq.n	401b58 <memset+0x90>
  401ad4:	b2ca      	uxtb	r2, r1
  401ad6:	4603      	mov	r3, r0
  401ad8:	e002      	b.n	401ae0 <memset+0x18>
  401ada:	f114 34ff 	adds.w	r4, r4, #4294967295
  401ade:	d33b      	bcc.n	401b58 <memset+0x90>
  401ae0:	f803 2b01 	strb.w	r2, [r3], #1
  401ae4:	079d      	lsls	r5, r3, #30
  401ae6:	d1f8      	bne.n	401ada <memset+0x12>
  401ae8:	2c03      	cmp	r4, #3
  401aea:	d92e      	bls.n	401b4a <memset+0x82>
  401aec:	b2cd      	uxtb	r5, r1
  401aee:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401af2:	2c0f      	cmp	r4, #15
  401af4:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401af8:	d919      	bls.n	401b2e <memset+0x66>
  401afa:	f103 0210 	add.w	r2, r3, #16
  401afe:	4626      	mov	r6, r4
  401b00:	3e10      	subs	r6, #16
  401b02:	2e0f      	cmp	r6, #15
  401b04:	f842 5c10 	str.w	r5, [r2, #-16]
  401b08:	f842 5c0c 	str.w	r5, [r2, #-12]
  401b0c:	f842 5c08 	str.w	r5, [r2, #-8]
  401b10:	f842 5c04 	str.w	r5, [r2, #-4]
  401b14:	f102 0210 	add.w	r2, r2, #16
  401b18:	d8f2      	bhi.n	401b00 <memset+0x38>
  401b1a:	f1a4 0210 	sub.w	r2, r4, #16
  401b1e:	f022 020f 	bic.w	r2, r2, #15
  401b22:	f004 040f 	and.w	r4, r4, #15
  401b26:	3210      	adds	r2, #16
  401b28:	2c03      	cmp	r4, #3
  401b2a:	4413      	add	r3, r2
  401b2c:	d90d      	bls.n	401b4a <memset+0x82>
  401b2e:	461e      	mov	r6, r3
  401b30:	4622      	mov	r2, r4
  401b32:	3a04      	subs	r2, #4
  401b34:	2a03      	cmp	r2, #3
  401b36:	f846 5b04 	str.w	r5, [r6], #4
  401b3a:	d8fa      	bhi.n	401b32 <memset+0x6a>
  401b3c:	1f22      	subs	r2, r4, #4
  401b3e:	f022 0203 	bic.w	r2, r2, #3
  401b42:	3204      	adds	r2, #4
  401b44:	4413      	add	r3, r2
  401b46:	f004 0403 	and.w	r4, r4, #3
  401b4a:	b12c      	cbz	r4, 401b58 <memset+0x90>
  401b4c:	b2c9      	uxtb	r1, r1
  401b4e:	441c      	add	r4, r3
  401b50:	f803 1b01 	strb.w	r1, [r3], #1
  401b54:	429c      	cmp	r4, r3
  401b56:	d1fb      	bne.n	401b50 <memset+0x88>
  401b58:	bc70      	pop	{r4, r5, r6}
  401b5a:	4770      	bx	lr
  401b5c:	4614      	mov	r4, r2
  401b5e:	4603      	mov	r3, r0
  401b60:	e7c2      	b.n	401ae8 <memset+0x20>
  401b62:	bf00      	nop

00401b64 <sprintf>:
  401b64:	b40e      	push	{r1, r2, r3}
  401b66:	b5f0      	push	{r4, r5, r6, r7, lr}
  401b68:	b09c      	sub	sp, #112	; 0x70
  401b6a:	ab21      	add	r3, sp, #132	; 0x84
  401b6c:	490f      	ldr	r1, [pc, #60]	; (401bac <sprintf+0x48>)
  401b6e:	f853 2b04 	ldr.w	r2, [r3], #4
  401b72:	9301      	str	r3, [sp, #4]
  401b74:	4605      	mov	r5, r0
  401b76:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401b7a:	6808      	ldr	r0, [r1, #0]
  401b7c:	9502      	str	r5, [sp, #8]
  401b7e:	f44f 7702 	mov.w	r7, #520	; 0x208
  401b82:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401b86:	a902      	add	r1, sp, #8
  401b88:	9506      	str	r5, [sp, #24]
  401b8a:	f8ad 7014 	strh.w	r7, [sp, #20]
  401b8e:	9404      	str	r4, [sp, #16]
  401b90:	9407      	str	r4, [sp, #28]
  401b92:	f8ad 6016 	strh.w	r6, [sp, #22]
  401b96:	f000 fae3 	bl	402160 <_svfprintf_r>
  401b9a:	9b02      	ldr	r3, [sp, #8]
  401b9c:	2200      	movs	r2, #0
  401b9e:	701a      	strb	r2, [r3, #0]
  401ba0:	b01c      	add	sp, #112	; 0x70
  401ba2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401ba6:	b003      	add	sp, #12
  401ba8:	4770      	bx	lr
  401baa:	bf00      	nop
  401bac:	20000010 	.word	0x20000010

00401bb0 <strchr>:
  401bb0:	b2c9      	uxtb	r1, r1
  401bb2:	2900      	cmp	r1, #0
  401bb4:	d041      	beq.n	401c3a <strchr+0x8a>
  401bb6:	0782      	lsls	r2, r0, #30
  401bb8:	b4f0      	push	{r4, r5, r6, r7}
  401bba:	d067      	beq.n	401c8c <strchr+0xdc>
  401bbc:	7803      	ldrb	r3, [r0, #0]
  401bbe:	2b00      	cmp	r3, #0
  401bc0:	d068      	beq.n	401c94 <strchr+0xe4>
  401bc2:	4299      	cmp	r1, r3
  401bc4:	d037      	beq.n	401c36 <strchr+0x86>
  401bc6:	1c43      	adds	r3, r0, #1
  401bc8:	e004      	b.n	401bd4 <strchr+0x24>
  401bca:	f813 0b01 	ldrb.w	r0, [r3], #1
  401bce:	b390      	cbz	r0, 401c36 <strchr+0x86>
  401bd0:	4281      	cmp	r1, r0
  401bd2:	d02f      	beq.n	401c34 <strchr+0x84>
  401bd4:	079a      	lsls	r2, r3, #30
  401bd6:	461c      	mov	r4, r3
  401bd8:	d1f7      	bne.n	401bca <strchr+0x1a>
  401bda:	6825      	ldr	r5, [r4, #0]
  401bdc:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  401be0:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  401be4:	ea83 0605 	eor.w	r6, r3, r5
  401be8:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  401bec:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  401bf0:	ea20 0006 	bic.w	r0, r0, r6
  401bf4:	ea22 0205 	bic.w	r2, r2, r5
  401bf8:	4302      	orrs	r2, r0
  401bfa:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401bfe:	d111      	bne.n	401c24 <strchr+0x74>
  401c00:	4620      	mov	r0, r4
  401c02:	f850 6f04 	ldr.w	r6, [r0, #4]!
  401c06:	ea83 0706 	eor.w	r7, r3, r6
  401c0a:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  401c0e:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  401c12:	ea25 0507 	bic.w	r5, r5, r7
  401c16:	ea22 0206 	bic.w	r2, r2, r6
  401c1a:	432a      	orrs	r2, r5
  401c1c:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401c20:	d0ef      	beq.n	401c02 <strchr+0x52>
  401c22:	4604      	mov	r4, r0
  401c24:	7820      	ldrb	r0, [r4, #0]
  401c26:	b918      	cbnz	r0, 401c30 <strchr+0x80>
  401c28:	e005      	b.n	401c36 <strchr+0x86>
  401c2a:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  401c2e:	b110      	cbz	r0, 401c36 <strchr+0x86>
  401c30:	4281      	cmp	r1, r0
  401c32:	d1fa      	bne.n	401c2a <strchr+0x7a>
  401c34:	4620      	mov	r0, r4
  401c36:	bcf0      	pop	{r4, r5, r6, r7}
  401c38:	4770      	bx	lr
  401c3a:	0783      	lsls	r3, r0, #30
  401c3c:	d024      	beq.n	401c88 <strchr+0xd8>
  401c3e:	7803      	ldrb	r3, [r0, #0]
  401c40:	2b00      	cmp	r3, #0
  401c42:	d0f9      	beq.n	401c38 <strchr+0x88>
  401c44:	1c43      	adds	r3, r0, #1
  401c46:	e003      	b.n	401c50 <strchr+0xa0>
  401c48:	7802      	ldrb	r2, [r0, #0]
  401c4a:	3301      	adds	r3, #1
  401c4c:	2a00      	cmp	r2, #0
  401c4e:	d0f3      	beq.n	401c38 <strchr+0x88>
  401c50:	0799      	lsls	r1, r3, #30
  401c52:	4618      	mov	r0, r3
  401c54:	d1f8      	bne.n	401c48 <strchr+0x98>
  401c56:	6819      	ldr	r1, [r3, #0]
  401c58:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  401c5c:	ea22 0201 	bic.w	r2, r2, r1
  401c60:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401c64:	d108      	bne.n	401c78 <strchr+0xc8>
  401c66:	f853 1f04 	ldr.w	r1, [r3, #4]!
  401c6a:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  401c6e:	ea22 0201 	bic.w	r2, r2, r1
  401c72:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  401c76:	d0f6      	beq.n	401c66 <strchr+0xb6>
  401c78:	781a      	ldrb	r2, [r3, #0]
  401c7a:	4618      	mov	r0, r3
  401c7c:	b142      	cbz	r2, 401c90 <strchr+0xe0>
  401c7e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  401c82:	2b00      	cmp	r3, #0
  401c84:	d1fb      	bne.n	401c7e <strchr+0xce>
  401c86:	4770      	bx	lr
  401c88:	4603      	mov	r3, r0
  401c8a:	e7e4      	b.n	401c56 <strchr+0xa6>
  401c8c:	4604      	mov	r4, r0
  401c8e:	e7a4      	b.n	401bda <strchr+0x2a>
  401c90:	4618      	mov	r0, r3
  401c92:	4770      	bx	lr
  401c94:	4618      	mov	r0, r3
  401c96:	e7ce      	b.n	401c36 <strchr+0x86>

00401c98 <critical_factorization>:
  401c98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401c9c:	f04f 0e01 	mov.w	lr, #1
  401ca0:	4674      	mov	r4, lr
  401ca2:	2500      	movs	r5, #0
  401ca4:	f04f 36ff 	mov.w	r6, #4294967295
  401ca8:	192b      	adds	r3, r5, r4
  401caa:	428b      	cmp	r3, r1
  401cac:	eb00 0706 	add.w	r7, r0, r6
  401cb0:	d20d      	bcs.n	401cce <critical_factorization+0x36>
  401cb2:	5d3f      	ldrb	r7, [r7, r4]
  401cb4:	f810 c003 	ldrb.w	ip, [r0, r3]
  401cb8:	45bc      	cmp	ip, r7
  401cba:	d22d      	bcs.n	401d18 <critical_factorization+0x80>
  401cbc:	461d      	mov	r5, r3
  401cbe:	2401      	movs	r4, #1
  401cc0:	eba3 0e06 	sub.w	lr, r3, r6
  401cc4:	192b      	adds	r3, r5, r4
  401cc6:	428b      	cmp	r3, r1
  401cc8:	eb00 0706 	add.w	r7, r0, r6
  401ccc:	d3f1      	bcc.n	401cb2 <critical_factorization+0x1a>
  401cce:	f04f 0801 	mov.w	r8, #1
  401cd2:	f8c2 e000 	str.w	lr, [r2]
  401cd6:	4644      	mov	r4, r8
  401cd8:	2500      	movs	r5, #0
  401cda:	f04f 37ff 	mov.w	r7, #4294967295
  401cde:	192b      	adds	r3, r5, r4
  401ce0:	4299      	cmp	r1, r3
  401ce2:	eb00 0e07 	add.w	lr, r0, r7
  401ce6:	d90e      	bls.n	401d06 <critical_factorization+0x6e>
  401ce8:	f81e e004 	ldrb.w	lr, [lr, r4]
  401cec:	f810 c003 	ldrb.w	ip, [r0, r3]
  401cf0:	45f4      	cmp	ip, lr
  401cf2:	d918      	bls.n	401d26 <critical_factorization+0x8e>
  401cf4:	461d      	mov	r5, r3
  401cf6:	2401      	movs	r4, #1
  401cf8:	eba3 0807 	sub.w	r8, r3, r7
  401cfc:	192b      	adds	r3, r5, r4
  401cfe:	4299      	cmp	r1, r3
  401d00:	eb00 0e07 	add.w	lr, r0, r7
  401d04:	d8f0      	bhi.n	401ce8 <critical_factorization+0x50>
  401d06:	3701      	adds	r7, #1
  401d08:	1c70      	adds	r0, r6, #1
  401d0a:	4287      	cmp	r7, r0
  401d0c:	bf24      	itt	cs
  401d0e:	f8c2 8000 	strcs.w	r8, [r2]
  401d12:	4638      	movcs	r0, r7
  401d14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401d18:	d00c      	beq.n	401d34 <critical_factorization+0x9c>
  401d1a:	f04f 0e01 	mov.w	lr, #1
  401d1e:	462e      	mov	r6, r5
  401d20:	4674      	mov	r4, lr
  401d22:	4475      	add	r5, lr
  401d24:	e7c0      	b.n	401ca8 <critical_factorization+0x10>
  401d26:	d00b      	beq.n	401d40 <critical_factorization+0xa8>
  401d28:	f04f 0801 	mov.w	r8, #1
  401d2c:	462f      	mov	r7, r5
  401d2e:	4644      	mov	r4, r8
  401d30:	4445      	add	r5, r8
  401d32:	e7d4      	b.n	401cde <critical_factorization+0x46>
  401d34:	4574      	cmp	r4, lr
  401d36:	bf12      	itee	ne
  401d38:	3401      	addne	r4, #1
  401d3a:	461d      	moveq	r5, r3
  401d3c:	2401      	moveq	r4, #1
  401d3e:	e7b3      	b.n	401ca8 <critical_factorization+0x10>
  401d40:	4544      	cmp	r4, r8
  401d42:	bf12      	itee	ne
  401d44:	3401      	addne	r4, #1
  401d46:	461d      	moveq	r5, r3
  401d48:	2401      	moveq	r4, #1
  401d4a:	e7c8      	b.n	401cde <critical_factorization+0x46>

00401d4c <two_way_long_needle>:
  401d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401d50:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  401d54:	4616      	mov	r6, r2
  401d56:	4605      	mov	r5, r0
  401d58:	468b      	mov	fp, r1
  401d5a:	4610      	mov	r0, r2
  401d5c:	4619      	mov	r1, r3
  401d5e:	aa03      	add	r2, sp, #12
  401d60:	461c      	mov	r4, r3
  401d62:	f7ff ff99 	bl	401c98 <critical_factorization>
  401d66:	ab03      	add	r3, sp, #12
  401d68:	4681      	mov	r9, r0
  401d6a:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  401d6e:	f843 4f04 	str.w	r4, [r3, #4]!
  401d72:	4293      	cmp	r3, r2
  401d74:	d1fb      	bne.n	401d6e <two_way_long_needle+0x22>
  401d76:	b14c      	cbz	r4, 401d8c <two_way_long_needle+0x40>
  401d78:	1e63      	subs	r3, r4, #1
  401d7a:	1e72      	subs	r2, r6, #1
  401d7c:	a804      	add	r0, sp, #16
  401d7e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401d82:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  401d86:	f113 33ff 	adds.w	r3, r3, #4294967295
  401d8a:	d2f8      	bcs.n	401d7e <two_way_long_needle+0x32>
  401d8c:	9903      	ldr	r1, [sp, #12]
  401d8e:	464a      	mov	r2, r9
  401d90:	4431      	add	r1, r6
  401d92:	4630      	mov	r0, r6
  401d94:	f002 ff14 	bl	404bc0 <memcmp>
  401d98:	2800      	cmp	r0, #0
  401d9a:	d16f      	bne.n	401e7c <two_way_long_needle+0x130>
  401d9c:	f109 33ff 	add.w	r3, r9, #4294967295
  401da0:	9300      	str	r3, [sp, #0]
  401da2:	18f3      	adds	r3, r6, r3
  401da4:	4682      	mov	sl, r0
  401da6:	9301      	str	r3, [sp, #4]
  401da8:	4623      	mov	r3, r4
  401daa:	4680      	mov	r8, r0
  401dac:	4654      	mov	r4, sl
  401dae:	4658      	mov	r0, fp
  401db0:	469a      	mov	sl, r3
  401db2:	eb08 070a 	add.w	r7, r8, sl
  401db6:	1a3a      	subs	r2, r7, r0
  401db8:	2100      	movs	r1, #0
  401dba:	4428      	add	r0, r5
  401dbc:	f002 feb0 	bl	404b20 <memchr>
  401dc0:	2800      	cmp	r0, #0
  401dc2:	d156      	bne.n	401e72 <two_way_long_needle+0x126>
  401dc4:	2f00      	cmp	r7, #0
  401dc6:	d054      	beq.n	401e72 <two_way_long_needle+0x126>
  401dc8:	19eb      	adds	r3, r5, r7
  401dca:	aa04      	add	r2, sp, #16
  401dcc:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401dd0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401dd4:	b14b      	cbz	r3, 401dea <two_way_long_needle+0x9e>
  401dd6:	b124      	cbz	r4, 401de2 <two_way_long_needle+0x96>
  401dd8:	9a03      	ldr	r2, [sp, #12]
  401dda:	4293      	cmp	r3, r2
  401ddc:	d201      	bcs.n	401de2 <two_way_long_needle+0x96>
  401dde:	ebaa 0302 	sub.w	r3, sl, r2
  401de2:	4498      	add	r8, r3
  401de4:	2400      	movs	r4, #0
  401de6:	4638      	mov	r0, r7
  401de8:	e7e3      	b.n	401db2 <two_way_long_needle+0x66>
  401dea:	454c      	cmp	r4, r9
  401dec:	4623      	mov	r3, r4
  401dee:	f10a 3eff 	add.w	lr, sl, #4294967295
  401df2:	bf38      	it	cc
  401df4:	464b      	movcc	r3, r9
  401df6:	4573      	cmp	r3, lr
  401df8:	d213      	bcs.n	401e22 <two_way_long_needle+0xd6>
  401dfa:	eb08 0203 	add.w	r2, r8, r3
  401dfe:	f816 c003 	ldrb.w	ip, [r6, r3]
  401e02:	5ca8      	ldrb	r0, [r5, r2]
  401e04:	4584      	cmp	ip, r0
  401e06:	442a      	add	r2, r5
  401e08:	eb06 0103 	add.w	r1, r6, r3
  401e0c:	d006      	beq.n	401e1c <two_way_long_needle+0xd0>
  401e0e:	e02c      	b.n	401e6a <two_way_long_needle+0x11e>
  401e10:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  401e14:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401e18:	4584      	cmp	ip, r0
  401e1a:	d126      	bne.n	401e6a <two_way_long_needle+0x11e>
  401e1c:	3301      	adds	r3, #1
  401e1e:	4573      	cmp	r3, lr
  401e20:	d3f6      	bcc.n	401e10 <two_way_long_needle+0xc4>
  401e22:	454c      	cmp	r4, r9
  401e24:	9900      	ldr	r1, [sp, #0]
  401e26:	f080 8089 	bcs.w	401f3c <two_way_long_needle+0x1f0>
  401e2a:	9b00      	ldr	r3, [sp, #0]
  401e2c:	eb08 0203 	add.w	r2, r8, r3
  401e30:	9b01      	ldr	r3, [sp, #4]
  401e32:	5ca8      	ldrb	r0, [r5, r2]
  401e34:	781b      	ldrb	r3, [r3, #0]
  401e36:	4298      	cmp	r0, r3
  401e38:	442a      	add	r2, r5
  401e3a:	d17f      	bne.n	401f3c <two_way_long_needle+0x1f0>
  401e3c:	9801      	ldr	r0, [sp, #4]
  401e3e:	f104 3bff 	add.w	fp, r4, #4294967295
  401e42:	e006      	b.n	401e52 <two_way_long_needle+0x106>
  401e44:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401e48:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401e4c:	45f4      	cmp	ip, lr
  401e4e:	d103      	bne.n	401e58 <two_way_long_needle+0x10c>
  401e50:	4619      	mov	r1, r3
  401e52:	1e4b      	subs	r3, r1, #1
  401e54:	459b      	cmp	fp, r3
  401e56:	d1f5      	bne.n	401e44 <two_way_long_needle+0xf8>
  401e58:	3401      	adds	r4, #1
  401e5a:	428c      	cmp	r4, r1
  401e5c:	d870      	bhi.n	401f40 <two_way_long_needle+0x1f4>
  401e5e:	9c03      	ldr	r4, [sp, #12]
  401e60:	4638      	mov	r0, r7
  401e62:	44a0      	add	r8, r4
  401e64:	ebaa 0404 	sub.w	r4, sl, r4
  401e68:	e7a3      	b.n	401db2 <two_way_long_needle+0x66>
  401e6a:	f1c9 0201 	rsb	r2, r9, #1
  401e6e:	4490      	add	r8, r2
  401e70:	e7b7      	b.n	401de2 <two_way_long_needle+0x96>
  401e72:	2000      	movs	r0, #0
  401e74:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401e7c:	eba4 0309 	sub.w	r3, r4, r9
  401e80:	454b      	cmp	r3, r9
  401e82:	bf38      	it	cc
  401e84:	464b      	movcc	r3, r9
  401e86:	3301      	adds	r3, #1
  401e88:	f109 38ff 	add.w	r8, r9, #4294967295
  401e8c:	9303      	str	r3, [sp, #12]
  401e8e:	eb06 0308 	add.w	r3, r6, r8
  401e92:	4658      	mov	r0, fp
  401e94:	f04f 0a00 	mov.w	sl, #0
  401e98:	46cb      	mov	fp, r9
  401e9a:	4699      	mov	r9, r3
  401e9c:	eb0a 0704 	add.w	r7, sl, r4
  401ea0:	1a3a      	subs	r2, r7, r0
  401ea2:	2100      	movs	r1, #0
  401ea4:	4428      	add	r0, r5
  401ea6:	f002 fe3b 	bl	404b20 <memchr>
  401eaa:	2800      	cmp	r0, #0
  401eac:	d1e1      	bne.n	401e72 <two_way_long_needle+0x126>
  401eae:	2f00      	cmp	r7, #0
  401eb0:	d0df      	beq.n	401e72 <two_way_long_needle+0x126>
  401eb2:	19eb      	adds	r3, r5, r7
  401eb4:	aa04      	add	r2, sp, #16
  401eb6:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401eba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401ebe:	bba3      	cbnz	r3, 401f2a <two_way_long_needle+0x1de>
  401ec0:	1e61      	subs	r1, r4, #1
  401ec2:	458b      	cmp	fp, r1
  401ec4:	d215      	bcs.n	401ef2 <two_way_long_needle+0x1a6>
  401ec6:	eb0a 020b 	add.w	r2, sl, fp
  401eca:	f816 300b 	ldrb.w	r3, [r6, fp]
  401ece:	f815 e002 	ldrb.w	lr, [r5, r2]
  401ed2:	459e      	cmp	lr, r3
  401ed4:	442a      	add	r2, r5
  401ed6:	eb06 000b 	add.w	r0, r6, fp
  401eda:	465b      	mov	r3, fp
  401edc:	d006      	beq.n	401eec <two_way_long_needle+0x1a0>
  401ede:	e027      	b.n	401f30 <two_way_long_needle+0x1e4>
  401ee0:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  401ee4:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  401ee8:	45f4      	cmp	ip, lr
  401eea:	d121      	bne.n	401f30 <two_way_long_needle+0x1e4>
  401eec:	3301      	adds	r3, #1
  401eee:	428b      	cmp	r3, r1
  401ef0:	d3f6      	bcc.n	401ee0 <two_way_long_needle+0x194>
  401ef2:	f1b8 3fff 	cmp.w	r8, #4294967295
  401ef6:	d011      	beq.n	401f1c <two_way_long_needle+0x1d0>
  401ef8:	eb0a 0208 	add.w	r2, sl, r8
  401efc:	f899 1000 	ldrb.w	r1, [r9]
  401f00:	5cab      	ldrb	r3, [r5, r2]
  401f02:	4299      	cmp	r1, r3
  401f04:	442a      	add	r2, r5
  401f06:	d10f      	bne.n	401f28 <two_way_long_needle+0x1dc>
  401f08:	464b      	mov	r3, r9
  401f0a:	e005      	b.n	401f18 <two_way_long_needle+0x1cc>
  401f0c:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401f10:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401f14:	4288      	cmp	r0, r1
  401f16:	d107      	bne.n	401f28 <two_way_long_needle+0x1dc>
  401f18:	42b3      	cmp	r3, r6
  401f1a:	d1f7      	bne.n	401f0c <two_way_long_needle+0x1c0>
  401f1c:	eb05 000a 	add.w	r0, r5, sl
  401f20:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f28:	9b03      	ldr	r3, [sp, #12]
  401f2a:	449a      	add	sl, r3
  401f2c:	4638      	mov	r0, r7
  401f2e:	e7b5      	b.n	401e9c <two_way_long_needle+0x150>
  401f30:	f1cb 0201 	rsb	r2, fp, #1
  401f34:	4492      	add	sl, r2
  401f36:	449a      	add	sl, r3
  401f38:	4638      	mov	r0, r7
  401f3a:	e7af      	b.n	401e9c <two_way_long_needle+0x150>
  401f3c:	4649      	mov	r1, r9
  401f3e:	e78b      	b.n	401e58 <two_way_long_needle+0x10c>
  401f40:	eb05 0008 	add.w	r0, r5, r8
  401f44:	e796      	b.n	401e74 <two_way_long_needle+0x128>
  401f46:	bf00      	nop

00401f48 <strstr>:
  401f48:	7802      	ldrb	r2, [r0, #0]
  401f4a:	2a00      	cmp	r2, #0
  401f4c:	f000 8101 	beq.w	402152 <strstr+0x20a>
  401f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401f54:	f891 8000 	ldrb.w	r8, [r1]
  401f58:	b085      	sub	sp, #20
  401f5a:	4644      	mov	r4, r8
  401f5c:	f1b8 0f00 	cmp.w	r8, #0
  401f60:	d016      	beq.n	401f90 <strstr+0x48>
  401f62:	4686      	mov	lr, r0
  401f64:	f101 0c01 	add.w	ip, r1, #1
  401f68:	2701      	movs	r7, #1
  401f6a:	e003      	b.n	401f74 <strstr+0x2c>
  401f6c:	f813 4b01 	ldrb.w	r4, [r3], #1
  401f70:	b16c      	cbz	r4, 401f8e <strstr+0x46>
  401f72:	469c      	mov	ip, r3
  401f74:	42a2      	cmp	r2, r4
  401f76:	bf14      	ite	ne
  401f78:	2700      	movne	r7, #0
  401f7a:	f007 0701 	andeq.w	r7, r7, #1
  401f7e:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  401f82:	4663      	mov	r3, ip
  401f84:	2a00      	cmp	r2, #0
  401f86:	d1f1      	bne.n	401f6c <strstr+0x24>
  401f88:	f89c 3000 	ldrb.w	r3, [ip]
  401f8c:	b9fb      	cbnz	r3, 401fce <strstr+0x86>
  401f8e:	b117      	cbz	r7, 401f96 <strstr+0x4e>
  401f90:	b005      	add	sp, #20
  401f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f96:	460e      	mov	r6, r1
  401f98:	4605      	mov	r5, r0
  401f9a:	4641      	mov	r1, r8
  401f9c:	3001      	adds	r0, #1
  401f9e:	ebac 0406 	sub.w	r4, ip, r6
  401fa2:	f7ff fe05 	bl	401bb0 <strchr>
  401fa6:	4607      	mov	r7, r0
  401fa8:	b188      	cbz	r0, 401fce <strstr+0x86>
  401faa:	2c01      	cmp	r4, #1
  401fac:	d0f0      	beq.n	401f90 <strstr+0x48>
  401fae:	1928      	adds	r0, r5, r4
  401fb0:	4287      	cmp	r7, r0
  401fb2:	bf94      	ite	ls
  401fb4:	1bc1      	subls	r1, r0, r7
  401fb6:	2101      	movhi	r1, #1
  401fb8:	2c1f      	cmp	r4, #31
  401fba:	468b      	mov	fp, r1
  401fbc:	d90b      	bls.n	401fd6 <strstr+0x8e>
  401fbe:	4623      	mov	r3, r4
  401fc0:	4632      	mov	r2, r6
  401fc2:	4638      	mov	r0, r7
  401fc4:	f7ff fec2 	bl	401d4c <two_way_long_needle>
  401fc8:	b005      	add	sp, #20
  401fca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401fce:	2000      	movs	r0, #0
  401fd0:	b005      	add	sp, #20
  401fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401fd6:	aa03      	add	r2, sp, #12
  401fd8:	4621      	mov	r1, r4
  401fda:	4630      	mov	r0, r6
  401fdc:	f7ff fe5c 	bl	401c98 <critical_factorization>
  401fe0:	9903      	ldr	r1, [sp, #12]
  401fe2:	4680      	mov	r8, r0
  401fe4:	4602      	mov	r2, r0
  401fe6:	4431      	add	r1, r6
  401fe8:	4630      	mov	r0, r6
  401fea:	f002 fde9 	bl	404bc0 <memcmp>
  401fee:	2800      	cmp	r0, #0
  401ff0:	d157      	bne.n	4020a2 <strstr+0x15a>
  401ff2:	f108 33ff 	add.w	r3, r8, #4294967295
  401ff6:	9300      	str	r3, [sp, #0]
  401ff8:	18f3      	adds	r3, r6, r3
  401ffa:	4681      	mov	r9, r0
  401ffc:	4605      	mov	r5, r0
  401ffe:	9301      	str	r3, [sp, #4]
  402000:	4658      	mov	r0, fp
  402002:	46b2      	mov	sl, r6
  402004:	1966      	adds	r6, r4, r5
  402006:	1a32      	subs	r2, r6, r0
  402008:	2100      	movs	r1, #0
  40200a:	4438      	add	r0, r7
  40200c:	f002 fd88 	bl	404b20 <memchr>
  402010:	2800      	cmp	r0, #0
  402012:	d1dc      	bne.n	401fce <strstr+0x86>
  402014:	2e00      	cmp	r6, #0
  402016:	d0da      	beq.n	401fce <strstr+0x86>
  402018:	45c8      	cmp	r8, r9
  40201a:	4643      	mov	r3, r8
  40201c:	bf38      	it	cc
  40201e:	464b      	movcc	r3, r9
  402020:	429c      	cmp	r4, r3
  402022:	d912      	bls.n	40204a <strstr+0x102>
  402024:	195a      	adds	r2, r3, r5
  402026:	f81a 1003 	ldrb.w	r1, [sl, r3]
  40202a:	5cb8      	ldrb	r0, [r7, r2]
  40202c:	4281      	cmp	r1, r0
  40202e:	443a      	add	r2, r7
  402030:	eb0a 0e03 	add.w	lr, sl, r3
  402034:	d006      	beq.n	402044 <strstr+0xfc>
  402036:	e02c      	b.n	402092 <strstr+0x14a>
  402038:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  40203c:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  402040:	4288      	cmp	r0, r1
  402042:	d126      	bne.n	402092 <strstr+0x14a>
  402044:	3301      	adds	r3, #1
  402046:	429c      	cmp	r4, r3
  402048:	d1f6      	bne.n	402038 <strstr+0xf0>
  40204a:	45c8      	cmp	r8, r9
  40204c:	9900      	ldr	r1, [sp, #0]
  40204e:	f240 8083 	bls.w	402158 <strstr+0x210>
  402052:	9b00      	ldr	r3, [sp, #0]
  402054:	18ea      	adds	r2, r5, r3
  402056:	9b01      	ldr	r3, [sp, #4]
  402058:	5cb8      	ldrb	r0, [r7, r2]
  40205a:	781b      	ldrb	r3, [r3, #0]
  40205c:	4298      	cmp	r0, r3
  40205e:	443a      	add	r2, r7
  402060:	d17a      	bne.n	402158 <strstr+0x210>
  402062:	9801      	ldr	r0, [sp, #4]
  402064:	f109 3bff 	add.w	fp, r9, #4294967295
  402068:	e006      	b.n	402078 <strstr+0x130>
  40206a:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  40206e:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  402072:	45f4      	cmp	ip, lr
  402074:	d103      	bne.n	40207e <strstr+0x136>
  402076:	4619      	mov	r1, r3
  402078:	1e4b      	subs	r3, r1, #1
  40207a:	455b      	cmp	r3, fp
  40207c:	d1f5      	bne.n	40206a <strstr+0x122>
  40207e:	f109 0901 	add.w	r9, r9, #1
  402082:	4589      	cmp	r9, r1
  402084:	d857      	bhi.n	402136 <strstr+0x1ee>
  402086:	9b03      	ldr	r3, [sp, #12]
  402088:	4630      	mov	r0, r6
  40208a:	441d      	add	r5, r3
  40208c:	eba4 0903 	sub.w	r9, r4, r3
  402090:	e7b8      	b.n	402004 <strstr+0xbc>
  402092:	f1c8 0201 	rsb	r2, r8, #1
  402096:	4415      	add	r5, r2
  402098:	441d      	add	r5, r3
  40209a:	f04f 0900 	mov.w	r9, #0
  40209e:	4630      	mov	r0, r6
  4020a0:	e7b0      	b.n	402004 <strstr+0xbc>
  4020a2:	eba4 0308 	sub.w	r3, r4, r8
  4020a6:	4543      	cmp	r3, r8
  4020a8:	bf38      	it	cc
  4020aa:	4643      	movcc	r3, r8
  4020ac:	3301      	adds	r3, #1
  4020ae:	f108 39ff 	add.w	r9, r8, #4294967295
  4020b2:	9303      	str	r3, [sp, #12]
  4020b4:	eb06 0309 	add.w	r3, r6, r9
  4020b8:	4658      	mov	r0, fp
  4020ba:	2500      	movs	r5, #0
  4020bc:	46bb      	mov	fp, r7
  4020be:	469a      	mov	sl, r3
  4020c0:	1967      	adds	r7, r4, r5
  4020c2:	1a3a      	subs	r2, r7, r0
  4020c4:	2100      	movs	r1, #0
  4020c6:	4458      	add	r0, fp
  4020c8:	f002 fd2a 	bl	404b20 <memchr>
  4020cc:	2800      	cmp	r0, #0
  4020ce:	f47f af7e 	bne.w	401fce <strstr+0x86>
  4020d2:	2f00      	cmp	r7, #0
  4020d4:	f43f af7b 	beq.w	401fce <strstr+0x86>
  4020d8:	4544      	cmp	r4, r8
  4020da:	d915      	bls.n	402108 <strstr+0x1c0>
  4020dc:	eb08 0205 	add.w	r2, r8, r5
  4020e0:	f816 3008 	ldrb.w	r3, [r6, r8]
  4020e4:	f81b 0002 	ldrb.w	r0, [fp, r2]
  4020e8:	4298      	cmp	r0, r3
  4020ea:	445a      	add	r2, fp
  4020ec:	eb06 0108 	add.w	r1, r6, r8
  4020f0:	4643      	mov	r3, r8
  4020f2:	d006      	beq.n	402102 <strstr+0x1ba>
  4020f4:	e023      	b.n	40213e <strstr+0x1f6>
  4020f6:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  4020fa:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  4020fe:	4586      	cmp	lr, r0
  402100:	d11d      	bne.n	40213e <strstr+0x1f6>
  402102:	3301      	adds	r3, #1
  402104:	429c      	cmp	r4, r3
  402106:	d1f6      	bne.n	4020f6 <strstr+0x1ae>
  402108:	f1b9 3fff 	cmp.w	r9, #4294967295
  40210c:	d012      	beq.n	402134 <strstr+0x1ec>
  40210e:	eb05 0209 	add.w	r2, r5, r9
  402112:	f89a 3000 	ldrb.w	r3, [sl]
  402116:	f81b 1002 	ldrb.w	r1, [fp, r2]
  40211a:	4299      	cmp	r1, r3
  40211c:	445a      	add	r2, fp
  40211e:	d114      	bne.n	40214a <strstr+0x202>
  402120:	4653      	mov	r3, sl
  402122:	e005      	b.n	402130 <strstr+0x1e8>
  402124:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  402128:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  40212c:	4288      	cmp	r0, r1
  40212e:	d10c      	bne.n	40214a <strstr+0x202>
  402130:	42b3      	cmp	r3, r6
  402132:	d1f7      	bne.n	402124 <strstr+0x1dc>
  402134:	465f      	mov	r7, fp
  402136:	1978      	adds	r0, r7, r5
  402138:	b005      	add	sp, #20
  40213a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40213e:	f1c8 0201 	rsb	r2, r8, #1
  402142:	4415      	add	r5, r2
  402144:	441d      	add	r5, r3
  402146:	4638      	mov	r0, r7
  402148:	e7ba      	b.n	4020c0 <strstr+0x178>
  40214a:	9b03      	ldr	r3, [sp, #12]
  40214c:	4638      	mov	r0, r7
  40214e:	441d      	add	r5, r3
  402150:	e7b6      	b.n	4020c0 <strstr+0x178>
  402152:	780b      	ldrb	r3, [r1, #0]
  402154:	b913      	cbnz	r3, 40215c <strstr+0x214>
  402156:	4770      	bx	lr
  402158:	4641      	mov	r1, r8
  40215a:	e790      	b.n	40207e <strstr+0x136>
  40215c:	2000      	movs	r0, #0
  40215e:	4770      	bx	lr

00402160 <_svfprintf_r>:
  402160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402164:	b0c3      	sub	sp, #268	; 0x10c
  402166:	460c      	mov	r4, r1
  402168:	910b      	str	r1, [sp, #44]	; 0x2c
  40216a:	4692      	mov	sl, r2
  40216c:	930f      	str	r3, [sp, #60]	; 0x3c
  40216e:	900c      	str	r0, [sp, #48]	; 0x30
  402170:	f002 fa0e 	bl	404590 <_localeconv_r>
  402174:	6803      	ldr	r3, [r0, #0]
  402176:	931a      	str	r3, [sp, #104]	; 0x68
  402178:	4618      	mov	r0, r3
  40217a:	f003 f881 	bl	405280 <strlen>
  40217e:	89a3      	ldrh	r3, [r4, #12]
  402180:	9019      	str	r0, [sp, #100]	; 0x64
  402182:	0619      	lsls	r1, r3, #24
  402184:	d503      	bpl.n	40218e <_svfprintf_r+0x2e>
  402186:	6923      	ldr	r3, [r4, #16]
  402188:	2b00      	cmp	r3, #0
  40218a:	f001 8003 	beq.w	403194 <_svfprintf_r+0x1034>
  40218e:	2300      	movs	r3, #0
  402190:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  402194:	9313      	str	r3, [sp, #76]	; 0x4c
  402196:	9315      	str	r3, [sp, #84]	; 0x54
  402198:	9314      	str	r3, [sp, #80]	; 0x50
  40219a:	9327      	str	r3, [sp, #156]	; 0x9c
  40219c:	9326      	str	r3, [sp, #152]	; 0x98
  40219e:	9318      	str	r3, [sp, #96]	; 0x60
  4021a0:	931b      	str	r3, [sp, #108]	; 0x6c
  4021a2:	9309      	str	r3, [sp, #36]	; 0x24
  4021a4:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4021a8:	46c8      	mov	r8, r9
  4021aa:	9316      	str	r3, [sp, #88]	; 0x58
  4021ac:	9317      	str	r3, [sp, #92]	; 0x5c
  4021ae:	f89a 3000 	ldrb.w	r3, [sl]
  4021b2:	4654      	mov	r4, sl
  4021b4:	b1e3      	cbz	r3, 4021f0 <_svfprintf_r+0x90>
  4021b6:	2b25      	cmp	r3, #37	; 0x25
  4021b8:	d102      	bne.n	4021c0 <_svfprintf_r+0x60>
  4021ba:	e019      	b.n	4021f0 <_svfprintf_r+0x90>
  4021bc:	2b25      	cmp	r3, #37	; 0x25
  4021be:	d003      	beq.n	4021c8 <_svfprintf_r+0x68>
  4021c0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4021c4:	2b00      	cmp	r3, #0
  4021c6:	d1f9      	bne.n	4021bc <_svfprintf_r+0x5c>
  4021c8:	eba4 050a 	sub.w	r5, r4, sl
  4021cc:	b185      	cbz	r5, 4021f0 <_svfprintf_r+0x90>
  4021ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4021d0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4021d2:	f8c8 a000 	str.w	sl, [r8]
  4021d6:	3301      	adds	r3, #1
  4021d8:	442a      	add	r2, r5
  4021da:	2b07      	cmp	r3, #7
  4021dc:	f8c8 5004 	str.w	r5, [r8, #4]
  4021e0:	9227      	str	r2, [sp, #156]	; 0x9c
  4021e2:	9326      	str	r3, [sp, #152]	; 0x98
  4021e4:	dc7f      	bgt.n	4022e6 <_svfprintf_r+0x186>
  4021e6:	f108 0808 	add.w	r8, r8, #8
  4021ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4021ec:	442b      	add	r3, r5
  4021ee:	9309      	str	r3, [sp, #36]	; 0x24
  4021f0:	7823      	ldrb	r3, [r4, #0]
  4021f2:	2b00      	cmp	r3, #0
  4021f4:	d07f      	beq.n	4022f6 <_svfprintf_r+0x196>
  4021f6:	2300      	movs	r3, #0
  4021f8:	461a      	mov	r2, r3
  4021fa:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4021fe:	4619      	mov	r1, r3
  402200:	930d      	str	r3, [sp, #52]	; 0x34
  402202:	469b      	mov	fp, r3
  402204:	f04f 30ff 	mov.w	r0, #4294967295
  402208:	7863      	ldrb	r3, [r4, #1]
  40220a:	900a      	str	r0, [sp, #40]	; 0x28
  40220c:	f104 0a01 	add.w	sl, r4, #1
  402210:	f10a 0a01 	add.w	sl, sl, #1
  402214:	f1a3 0020 	sub.w	r0, r3, #32
  402218:	2858      	cmp	r0, #88	; 0x58
  40221a:	f200 83c1 	bhi.w	4029a0 <_svfprintf_r+0x840>
  40221e:	e8df f010 	tbh	[pc, r0, lsl #1]
  402222:	0238      	.short	0x0238
  402224:	03bf03bf 	.word	0x03bf03bf
  402228:	03bf0240 	.word	0x03bf0240
  40222c:	03bf03bf 	.word	0x03bf03bf
  402230:	03bf03bf 	.word	0x03bf03bf
  402234:	024503bf 	.word	0x024503bf
  402238:	03bf0203 	.word	0x03bf0203
  40223c:	026b005d 	.word	0x026b005d
  402240:	028603bf 	.word	0x028603bf
  402244:	039d039d 	.word	0x039d039d
  402248:	039d039d 	.word	0x039d039d
  40224c:	039d039d 	.word	0x039d039d
  402250:	039d039d 	.word	0x039d039d
  402254:	03bf039d 	.word	0x03bf039d
  402258:	03bf03bf 	.word	0x03bf03bf
  40225c:	03bf03bf 	.word	0x03bf03bf
  402260:	03bf03bf 	.word	0x03bf03bf
  402264:	03bf03bf 	.word	0x03bf03bf
  402268:	033703bf 	.word	0x033703bf
  40226c:	03bf0357 	.word	0x03bf0357
  402270:	03bf0357 	.word	0x03bf0357
  402274:	03bf03bf 	.word	0x03bf03bf
  402278:	039803bf 	.word	0x039803bf
  40227c:	03bf03bf 	.word	0x03bf03bf
  402280:	03bf03ad 	.word	0x03bf03ad
  402284:	03bf03bf 	.word	0x03bf03bf
  402288:	03bf03bf 	.word	0x03bf03bf
  40228c:	03bf0259 	.word	0x03bf0259
  402290:	031e03bf 	.word	0x031e03bf
  402294:	03bf03bf 	.word	0x03bf03bf
  402298:	03bf03bf 	.word	0x03bf03bf
  40229c:	03bf03bf 	.word	0x03bf03bf
  4022a0:	03bf03bf 	.word	0x03bf03bf
  4022a4:	03bf03bf 	.word	0x03bf03bf
  4022a8:	02db02c6 	.word	0x02db02c6
  4022ac:	03570357 	.word	0x03570357
  4022b0:	028b0357 	.word	0x028b0357
  4022b4:	03bf02db 	.word	0x03bf02db
  4022b8:	029003bf 	.word	0x029003bf
  4022bc:	029d03bf 	.word	0x029d03bf
  4022c0:	02b401cc 	.word	0x02b401cc
  4022c4:	03bf0208 	.word	0x03bf0208
  4022c8:	03bf01e1 	.word	0x03bf01e1
  4022cc:	03bf007e 	.word	0x03bf007e
  4022d0:	020d03bf 	.word	0x020d03bf
  4022d4:	980d      	ldr	r0, [sp, #52]	; 0x34
  4022d6:	930f      	str	r3, [sp, #60]	; 0x3c
  4022d8:	4240      	negs	r0, r0
  4022da:	900d      	str	r0, [sp, #52]	; 0x34
  4022dc:	f04b 0b04 	orr.w	fp, fp, #4
  4022e0:	f89a 3000 	ldrb.w	r3, [sl]
  4022e4:	e794      	b.n	402210 <_svfprintf_r+0xb0>
  4022e6:	aa25      	add	r2, sp, #148	; 0x94
  4022e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4022ea:	980c      	ldr	r0, [sp, #48]	; 0x30
  4022ec:	f003 f836 	bl	40535c <__ssprint_r>
  4022f0:	b940      	cbnz	r0, 402304 <_svfprintf_r+0x1a4>
  4022f2:	46c8      	mov	r8, r9
  4022f4:	e779      	b.n	4021ea <_svfprintf_r+0x8a>
  4022f6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  4022f8:	b123      	cbz	r3, 402304 <_svfprintf_r+0x1a4>
  4022fa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4022fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4022fe:	aa25      	add	r2, sp, #148	; 0x94
  402300:	f003 f82c 	bl	40535c <__ssprint_r>
  402304:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402306:	899b      	ldrh	r3, [r3, #12]
  402308:	f013 0f40 	tst.w	r3, #64	; 0x40
  40230c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40230e:	bf18      	it	ne
  402310:	f04f 33ff 	movne.w	r3, #4294967295
  402314:	9309      	str	r3, [sp, #36]	; 0x24
  402316:	9809      	ldr	r0, [sp, #36]	; 0x24
  402318:	b043      	add	sp, #268	; 0x10c
  40231a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40231e:	f01b 0f20 	tst.w	fp, #32
  402322:	9311      	str	r3, [sp, #68]	; 0x44
  402324:	f040 81dd 	bne.w	4026e2 <_svfprintf_r+0x582>
  402328:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40232a:	f01b 0f10 	tst.w	fp, #16
  40232e:	4613      	mov	r3, r2
  402330:	f040 856e 	bne.w	402e10 <_svfprintf_r+0xcb0>
  402334:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402338:	f000 856a 	beq.w	402e10 <_svfprintf_r+0xcb0>
  40233c:	8814      	ldrh	r4, [r2, #0]
  40233e:	3204      	adds	r2, #4
  402340:	2500      	movs	r5, #0
  402342:	2301      	movs	r3, #1
  402344:	920f      	str	r2, [sp, #60]	; 0x3c
  402346:	2700      	movs	r7, #0
  402348:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40234c:	990a      	ldr	r1, [sp, #40]	; 0x28
  40234e:	1c4a      	adds	r2, r1, #1
  402350:	f000 8265 	beq.w	40281e <_svfprintf_r+0x6be>
  402354:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402358:	9207      	str	r2, [sp, #28]
  40235a:	ea54 0205 	orrs.w	r2, r4, r5
  40235e:	f040 8264 	bne.w	40282a <_svfprintf_r+0x6ca>
  402362:	2900      	cmp	r1, #0
  402364:	f040 843c 	bne.w	402be0 <_svfprintf_r+0xa80>
  402368:	2b00      	cmp	r3, #0
  40236a:	f040 84d7 	bne.w	402d1c <_svfprintf_r+0xbbc>
  40236e:	f01b 0301 	ands.w	r3, fp, #1
  402372:	930e      	str	r3, [sp, #56]	; 0x38
  402374:	f000 8604 	beq.w	402f80 <_svfprintf_r+0xe20>
  402378:	ae42      	add	r6, sp, #264	; 0x108
  40237a:	2330      	movs	r3, #48	; 0x30
  40237c:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402380:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402382:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402384:	4293      	cmp	r3, r2
  402386:	bfb8      	it	lt
  402388:	4613      	movlt	r3, r2
  40238a:	9308      	str	r3, [sp, #32]
  40238c:	2300      	movs	r3, #0
  40238e:	9312      	str	r3, [sp, #72]	; 0x48
  402390:	b117      	cbz	r7, 402398 <_svfprintf_r+0x238>
  402392:	9b08      	ldr	r3, [sp, #32]
  402394:	3301      	adds	r3, #1
  402396:	9308      	str	r3, [sp, #32]
  402398:	9b07      	ldr	r3, [sp, #28]
  40239a:	f013 0302 	ands.w	r3, r3, #2
  40239e:	9310      	str	r3, [sp, #64]	; 0x40
  4023a0:	d002      	beq.n	4023a8 <_svfprintf_r+0x248>
  4023a2:	9b08      	ldr	r3, [sp, #32]
  4023a4:	3302      	adds	r3, #2
  4023a6:	9308      	str	r3, [sp, #32]
  4023a8:	9b07      	ldr	r3, [sp, #28]
  4023aa:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4023ae:	f040 830e 	bne.w	4029ce <_svfprintf_r+0x86e>
  4023b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4023b4:	9a08      	ldr	r2, [sp, #32]
  4023b6:	eba3 0b02 	sub.w	fp, r3, r2
  4023ba:	f1bb 0f00 	cmp.w	fp, #0
  4023be:	f340 8306 	ble.w	4029ce <_svfprintf_r+0x86e>
  4023c2:	f1bb 0f10 	cmp.w	fp, #16
  4023c6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4023c8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4023ca:	dd29      	ble.n	402420 <_svfprintf_r+0x2c0>
  4023cc:	4643      	mov	r3, r8
  4023ce:	4621      	mov	r1, r4
  4023d0:	46a8      	mov	r8, r5
  4023d2:	2710      	movs	r7, #16
  4023d4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4023d6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4023d8:	e006      	b.n	4023e8 <_svfprintf_r+0x288>
  4023da:	f1ab 0b10 	sub.w	fp, fp, #16
  4023de:	f1bb 0f10 	cmp.w	fp, #16
  4023e2:	f103 0308 	add.w	r3, r3, #8
  4023e6:	dd18      	ble.n	40241a <_svfprintf_r+0x2ba>
  4023e8:	3201      	adds	r2, #1
  4023ea:	48b7      	ldr	r0, [pc, #732]	; (4026c8 <_svfprintf_r+0x568>)
  4023ec:	9226      	str	r2, [sp, #152]	; 0x98
  4023ee:	3110      	adds	r1, #16
  4023f0:	2a07      	cmp	r2, #7
  4023f2:	9127      	str	r1, [sp, #156]	; 0x9c
  4023f4:	e883 0081 	stmia.w	r3, {r0, r7}
  4023f8:	ddef      	ble.n	4023da <_svfprintf_r+0x27a>
  4023fa:	aa25      	add	r2, sp, #148	; 0x94
  4023fc:	4629      	mov	r1, r5
  4023fe:	4620      	mov	r0, r4
  402400:	f002 ffac 	bl	40535c <__ssprint_r>
  402404:	2800      	cmp	r0, #0
  402406:	f47f af7d 	bne.w	402304 <_svfprintf_r+0x1a4>
  40240a:	f1ab 0b10 	sub.w	fp, fp, #16
  40240e:	f1bb 0f10 	cmp.w	fp, #16
  402412:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402414:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402416:	464b      	mov	r3, r9
  402418:	dce6      	bgt.n	4023e8 <_svfprintf_r+0x288>
  40241a:	4645      	mov	r5, r8
  40241c:	460c      	mov	r4, r1
  40241e:	4698      	mov	r8, r3
  402420:	3201      	adds	r2, #1
  402422:	4ba9      	ldr	r3, [pc, #676]	; (4026c8 <_svfprintf_r+0x568>)
  402424:	9226      	str	r2, [sp, #152]	; 0x98
  402426:	445c      	add	r4, fp
  402428:	2a07      	cmp	r2, #7
  40242a:	9427      	str	r4, [sp, #156]	; 0x9c
  40242c:	e888 0808 	stmia.w	r8, {r3, fp}
  402430:	f300 8498 	bgt.w	402d64 <_svfprintf_r+0xc04>
  402434:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402438:	f108 0808 	add.w	r8, r8, #8
  40243c:	b177      	cbz	r7, 40245c <_svfprintf_r+0x2fc>
  40243e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402440:	3301      	adds	r3, #1
  402442:	3401      	adds	r4, #1
  402444:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402448:	2201      	movs	r2, #1
  40244a:	2b07      	cmp	r3, #7
  40244c:	9427      	str	r4, [sp, #156]	; 0x9c
  40244e:	9326      	str	r3, [sp, #152]	; 0x98
  402450:	e888 0006 	stmia.w	r8, {r1, r2}
  402454:	f300 83db 	bgt.w	402c0e <_svfprintf_r+0xaae>
  402458:	f108 0808 	add.w	r8, r8, #8
  40245c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40245e:	b16b      	cbz	r3, 40247c <_svfprintf_r+0x31c>
  402460:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402462:	3301      	adds	r3, #1
  402464:	3402      	adds	r4, #2
  402466:	a91e      	add	r1, sp, #120	; 0x78
  402468:	2202      	movs	r2, #2
  40246a:	2b07      	cmp	r3, #7
  40246c:	9427      	str	r4, [sp, #156]	; 0x9c
  40246e:	9326      	str	r3, [sp, #152]	; 0x98
  402470:	e888 0006 	stmia.w	r8, {r1, r2}
  402474:	f300 83d6 	bgt.w	402c24 <_svfprintf_r+0xac4>
  402478:	f108 0808 	add.w	r8, r8, #8
  40247c:	2d80      	cmp	r5, #128	; 0x80
  40247e:	f000 8315 	beq.w	402aac <_svfprintf_r+0x94c>
  402482:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402484:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402486:	1a9f      	subs	r7, r3, r2
  402488:	2f00      	cmp	r7, #0
  40248a:	dd36      	ble.n	4024fa <_svfprintf_r+0x39a>
  40248c:	2f10      	cmp	r7, #16
  40248e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402490:	4d8e      	ldr	r5, [pc, #568]	; (4026cc <_svfprintf_r+0x56c>)
  402492:	dd27      	ble.n	4024e4 <_svfprintf_r+0x384>
  402494:	4642      	mov	r2, r8
  402496:	4621      	mov	r1, r4
  402498:	46b0      	mov	r8, r6
  40249a:	f04f 0b10 	mov.w	fp, #16
  40249e:	462e      	mov	r6, r5
  4024a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4024a2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4024a4:	e004      	b.n	4024b0 <_svfprintf_r+0x350>
  4024a6:	3f10      	subs	r7, #16
  4024a8:	2f10      	cmp	r7, #16
  4024aa:	f102 0208 	add.w	r2, r2, #8
  4024ae:	dd15      	ble.n	4024dc <_svfprintf_r+0x37c>
  4024b0:	3301      	adds	r3, #1
  4024b2:	3110      	adds	r1, #16
  4024b4:	2b07      	cmp	r3, #7
  4024b6:	9127      	str	r1, [sp, #156]	; 0x9c
  4024b8:	9326      	str	r3, [sp, #152]	; 0x98
  4024ba:	e882 0840 	stmia.w	r2, {r6, fp}
  4024be:	ddf2      	ble.n	4024a6 <_svfprintf_r+0x346>
  4024c0:	aa25      	add	r2, sp, #148	; 0x94
  4024c2:	4629      	mov	r1, r5
  4024c4:	4620      	mov	r0, r4
  4024c6:	f002 ff49 	bl	40535c <__ssprint_r>
  4024ca:	2800      	cmp	r0, #0
  4024cc:	f47f af1a 	bne.w	402304 <_svfprintf_r+0x1a4>
  4024d0:	3f10      	subs	r7, #16
  4024d2:	2f10      	cmp	r7, #16
  4024d4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4024d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024d8:	464a      	mov	r2, r9
  4024da:	dce9      	bgt.n	4024b0 <_svfprintf_r+0x350>
  4024dc:	4635      	mov	r5, r6
  4024de:	460c      	mov	r4, r1
  4024e0:	4646      	mov	r6, r8
  4024e2:	4690      	mov	r8, r2
  4024e4:	3301      	adds	r3, #1
  4024e6:	443c      	add	r4, r7
  4024e8:	2b07      	cmp	r3, #7
  4024ea:	9427      	str	r4, [sp, #156]	; 0x9c
  4024ec:	9326      	str	r3, [sp, #152]	; 0x98
  4024ee:	e888 00a0 	stmia.w	r8, {r5, r7}
  4024f2:	f300 8381 	bgt.w	402bf8 <_svfprintf_r+0xa98>
  4024f6:	f108 0808 	add.w	r8, r8, #8
  4024fa:	9b07      	ldr	r3, [sp, #28]
  4024fc:	05df      	lsls	r7, r3, #23
  4024fe:	f100 8268 	bmi.w	4029d2 <_svfprintf_r+0x872>
  402502:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402504:	990e      	ldr	r1, [sp, #56]	; 0x38
  402506:	f8c8 6000 	str.w	r6, [r8]
  40250a:	3301      	adds	r3, #1
  40250c:	440c      	add	r4, r1
  40250e:	2b07      	cmp	r3, #7
  402510:	9427      	str	r4, [sp, #156]	; 0x9c
  402512:	f8c8 1004 	str.w	r1, [r8, #4]
  402516:	9326      	str	r3, [sp, #152]	; 0x98
  402518:	f300 834d 	bgt.w	402bb6 <_svfprintf_r+0xa56>
  40251c:	f108 0808 	add.w	r8, r8, #8
  402520:	9b07      	ldr	r3, [sp, #28]
  402522:	075b      	lsls	r3, r3, #29
  402524:	d53a      	bpl.n	40259c <_svfprintf_r+0x43c>
  402526:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402528:	9a08      	ldr	r2, [sp, #32]
  40252a:	1a9d      	subs	r5, r3, r2
  40252c:	2d00      	cmp	r5, #0
  40252e:	dd35      	ble.n	40259c <_svfprintf_r+0x43c>
  402530:	2d10      	cmp	r5, #16
  402532:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402534:	dd20      	ble.n	402578 <_svfprintf_r+0x418>
  402536:	2610      	movs	r6, #16
  402538:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40253a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40253e:	e004      	b.n	40254a <_svfprintf_r+0x3ea>
  402540:	3d10      	subs	r5, #16
  402542:	2d10      	cmp	r5, #16
  402544:	f108 0808 	add.w	r8, r8, #8
  402548:	dd16      	ble.n	402578 <_svfprintf_r+0x418>
  40254a:	3301      	adds	r3, #1
  40254c:	4a5e      	ldr	r2, [pc, #376]	; (4026c8 <_svfprintf_r+0x568>)
  40254e:	9326      	str	r3, [sp, #152]	; 0x98
  402550:	3410      	adds	r4, #16
  402552:	2b07      	cmp	r3, #7
  402554:	9427      	str	r4, [sp, #156]	; 0x9c
  402556:	e888 0044 	stmia.w	r8, {r2, r6}
  40255a:	ddf1      	ble.n	402540 <_svfprintf_r+0x3e0>
  40255c:	aa25      	add	r2, sp, #148	; 0x94
  40255e:	4659      	mov	r1, fp
  402560:	4638      	mov	r0, r7
  402562:	f002 fefb 	bl	40535c <__ssprint_r>
  402566:	2800      	cmp	r0, #0
  402568:	f47f aecc 	bne.w	402304 <_svfprintf_r+0x1a4>
  40256c:	3d10      	subs	r5, #16
  40256e:	2d10      	cmp	r5, #16
  402570:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402572:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402574:	46c8      	mov	r8, r9
  402576:	dce8      	bgt.n	40254a <_svfprintf_r+0x3ea>
  402578:	3301      	adds	r3, #1
  40257a:	4a53      	ldr	r2, [pc, #332]	; (4026c8 <_svfprintf_r+0x568>)
  40257c:	9326      	str	r3, [sp, #152]	; 0x98
  40257e:	442c      	add	r4, r5
  402580:	2b07      	cmp	r3, #7
  402582:	9427      	str	r4, [sp, #156]	; 0x9c
  402584:	e888 0024 	stmia.w	r8, {r2, r5}
  402588:	dd08      	ble.n	40259c <_svfprintf_r+0x43c>
  40258a:	aa25      	add	r2, sp, #148	; 0x94
  40258c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40258e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402590:	f002 fee4 	bl	40535c <__ssprint_r>
  402594:	2800      	cmp	r0, #0
  402596:	f47f aeb5 	bne.w	402304 <_svfprintf_r+0x1a4>
  40259a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40259c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40259e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4025a0:	9908      	ldr	r1, [sp, #32]
  4025a2:	428a      	cmp	r2, r1
  4025a4:	bfac      	ite	ge
  4025a6:	189b      	addge	r3, r3, r2
  4025a8:	185b      	addlt	r3, r3, r1
  4025aa:	9309      	str	r3, [sp, #36]	; 0x24
  4025ac:	2c00      	cmp	r4, #0
  4025ae:	f040 830d 	bne.w	402bcc <_svfprintf_r+0xa6c>
  4025b2:	2300      	movs	r3, #0
  4025b4:	9326      	str	r3, [sp, #152]	; 0x98
  4025b6:	46c8      	mov	r8, r9
  4025b8:	e5f9      	b.n	4021ae <_svfprintf_r+0x4e>
  4025ba:	9311      	str	r3, [sp, #68]	; 0x44
  4025bc:	f01b 0320 	ands.w	r3, fp, #32
  4025c0:	f040 81e3 	bne.w	40298a <_svfprintf_r+0x82a>
  4025c4:	f01b 0210 	ands.w	r2, fp, #16
  4025c8:	f040 842e 	bne.w	402e28 <_svfprintf_r+0xcc8>
  4025cc:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4025d0:	f000 842a 	beq.w	402e28 <_svfprintf_r+0xcc8>
  4025d4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4025d6:	4613      	mov	r3, r2
  4025d8:	460a      	mov	r2, r1
  4025da:	3204      	adds	r2, #4
  4025dc:	880c      	ldrh	r4, [r1, #0]
  4025de:	920f      	str	r2, [sp, #60]	; 0x3c
  4025e0:	2500      	movs	r5, #0
  4025e2:	e6b0      	b.n	402346 <_svfprintf_r+0x1e6>
  4025e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4025e6:	9311      	str	r3, [sp, #68]	; 0x44
  4025e8:	6816      	ldr	r6, [r2, #0]
  4025ea:	2400      	movs	r4, #0
  4025ec:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4025f0:	1d15      	adds	r5, r2, #4
  4025f2:	2e00      	cmp	r6, #0
  4025f4:	f000 86a7 	beq.w	403346 <_svfprintf_r+0x11e6>
  4025f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4025fa:	1c53      	adds	r3, r2, #1
  4025fc:	f000 8609 	beq.w	403212 <_svfprintf_r+0x10b2>
  402600:	4621      	mov	r1, r4
  402602:	4630      	mov	r0, r6
  402604:	f002 fa8c 	bl	404b20 <memchr>
  402608:	2800      	cmp	r0, #0
  40260a:	f000 86e1 	beq.w	4033d0 <_svfprintf_r+0x1270>
  40260e:	1b83      	subs	r3, r0, r6
  402610:	930e      	str	r3, [sp, #56]	; 0x38
  402612:	940a      	str	r4, [sp, #40]	; 0x28
  402614:	950f      	str	r5, [sp, #60]	; 0x3c
  402616:	f8cd b01c 	str.w	fp, [sp, #28]
  40261a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40261e:	9308      	str	r3, [sp, #32]
  402620:	9412      	str	r4, [sp, #72]	; 0x48
  402622:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402626:	e6b3      	b.n	402390 <_svfprintf_r+0x230>
  402628:	f89a 3000 	ldrb.w	r3, [sl]
  40262c:	2201      	movs	r2, #1
  40262e:	212b      	movs	r1, #43	; 0x2b
  402630:	e5ee      	b.n	402210 <_svfprintf_r+0xb0>
  402632:	f04b 0b20 	orr.w	fp, fp, #32
  402636:	f89a 3000 	ldrb.w	r3, [sl]
  40263a:	e5e9      	b.n	402210 <_svfprintf_r+0xb0>
  40263c:	9311      	str	r3, [sp, #68]	; 0x44
  40263e:	2a00      	cmp	r2, #0
  402640:	f040 8795 	bne.w	40356e <_svfprintf_r+0x140e>
  402644:	4b22      	ldr	r3, [pc, #136]	; (4026d0 <_svfprintf_r+0x570>)
  402646:	9318      	str	r3, [sp, #96]	; 0x60
  402648:	f01b 0f20 	tst.w	fp, #32
  40264c:	f040 8111 	bne.w	402872 <_svfprintf_r+0x712>
  402650:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402652:	f01b 0f10 	tst.w	fp, #16
  402656:	4613      	mov	r3, r2
  402658:	f040 83e1 	bne.w	402e1e <_svfprintf_r+0xcbe>
  40265c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402660:	f000 83dd 	beq.w	402e1e <_svfprintf_r+0xcbe>
  402664:	3304      	adds	r3, #4
  402666:	8814      	ldrh	r4, [r2, #0]
  402668:	930f      	str	r3, [sp, #60]	; 0x3c
  40266a:	2500      	movs	r5, #0
  40266c:	f01b 0f01 	tst.w	fp, #1
  402670:	f000 810c 	beq.w	40288c <_svfprintf_r+0x72c>
  402674:	ea54 0305 	orrs.w	r3, r4, r5
  402678:	f000 8108 	beq.w	40288c <_svfprintf_r+0x72c>
  40267c:	2330      	movs	r3, #48	; 0x30
  40267e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402682:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  402686:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  40268a:	f04b 0b02 	orr.w	fp, fp, #2
  40268e:	2302      	movs	r3, #2
  402690:	e659      	b.n	402346 <_svfprintf_r+0x1e6>
  402692:	f89a 3000 	ldrb.w	r3, [sl]
  402696:	2900      	cmp	r1, #0
  402698:	f47f adba 	bne.w	402210 <_svfprintf_r+0xb0>
  40269c:	2201      	movs	r2, #1
  40269e:	2120      	movs	r1, #32
  4026a0:	e5b6      	b.n	402210 <_svfprintf_r+0xb0>
  4026a2:	f04b 0b01 	orr.w	fp, fp, #1
  4026a6:	f89a 3000 	ldrb.w	r3, [sl]
  4026aa:	e5b1      	b.n	402210 <_svfprintf_r+0xb0>
  4026ac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4026ae:	6823      	ldr	r3, [r4, #0]
  4026b0:	930d      	str	r3, [sp, #52]	; 0x34
  4026b2:	4618      	mov	r0, r3
  4026b4:	2800      	cmp	r0, #0
  4026b6:	4623      	mov	r3, r4
  4026b8:	f103 0304 	add.w	r3, r3, #4
  4026bc:	f6ff ae0a 	blt.w	4022d4 <_svfprintf_r+0x174>
  4026c0:	930f      	str	r3, [sp, #60]	; 0x3c
  4026c2:	f89a 3000 	ldrb.w	r3, [sl]
  4026c6:	e5a3      	b.n	402210 <_svfprintf_r+0xb0>
  4026c8:	004075f4 	.word	0x004075f4
  4026cc:	00407604 	.word	0x00407604
  4026d0:	004075d4 	.word	0x004075d4
  4026d4:	f04b 0b10 	orr.w	fp, fp, #16
  4026d8:	f01b 0f20 	tst.w	fp, #32
  4026dc:	9311      	str	r3, [sp, #68]	; 0x44
  4026de:	f43f ae23 	beq.w	402328 <_svfprintf_r+0x1c8>
  4026e2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4026e4:	3507      	adds	r5, #7
  4026e6:	f025 0307 	bic.w	r3, r5, #7
  4026ea:	f103 0208 	add.w	r2, r3, #8
  4026ee:	e9d3 4500 	ldrd	r4, r5, [r3]
  4026f2:	920f      	str	r2, [sp, #60]	; 0x3c
  4026f4:	2301      	movs	r3, #1
  4026f6:	e626      	b.n	402346 <_svfprintf_r+0x1e6>
  4026f8:	f89a 3000 	ldrb.w	r3, [sl]
  4026fc:	2b2a      	cmp	r3, #42	; 0x2a
  4026fe:	f10a 0401 	add.w	r4, sl, #1
  402702:	f000 8727 	beq.w	403554 <_svfprintf_r+0x13f4>
  402706:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40270a:	2809      	cmp	r0, #9
  40270c:	46a2      	mov	sl, r4
  40270e:	f200 86ad 	bhi.w	40346c <_svfprintf_r+0x130c>
  402712:	2300      	movs	r3, #0
  402714:	461c      	mov	r4, r3
  402716:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40271a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40271e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402722:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402726:	2809      	cmp	r0, #9
  402728:	d9f5      	bls.n	402716 <_svfprintf_r+0x5b6>
  40272a:	940a      	str	r4, [sp, #40]	; 0x28
  40272c:	e572      	b.n	402214 <_svfprintf_r+0xb4>
  40272e:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402732:	f89a 3000 	ldrb.w	r3, [sl]
  402736:	e56b      	b.n	402210 <_svfprintf_r+0xb0>
  402738:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  40273c:	f89a 3000 	ldrb.w	r3, [sl]
  402740:	e566      	b.n	402210 <_svfprintf_r+0xb0>
  402742:	f89a 3000 	ldrb.w	r3, [sl]
  402746:	2b6c      	cmp	r3, #108	; 0x6c
  402748:	bf03      	ittte	eq
  40274a:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40274e:	f04b 0b20 	orreq.w	fp, fp, #32
  402752:	f10a 0a01 	addeq.w	sl, sl, #1
  402756:	f04b 0b10 	orrne.w	fp, fp, #16
  40275a:	e559      	b.n	402210 <_svfprintf_r+0xb0>
  40275c:	2a00      	cmp	r2, #0
  40275e:	f040 8711 	bne.w	403584 <_svfprintf_r+0x1424>
  402762:	f01b 0f20 	tst.w	fp, #32
  402766:	f040 84f9 	bne.w	40315c <_svfprintf_r+0xffc>
  40276a:	f01b 0f10 	tst.w	fp, #16
  40276e:	f040 84ac 	bne.w	4030ca <_svfprintf_r+0xf6a>
  402772:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402776:	f000 84a8 	beq.w	4030ca <_svfprintf_r+0xf6a>
  40277a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40277c:	6813      	ldr	r3, [r2, #0]
  40277e:	3204      	adds	r2, #4
  402780:	920f      	str	r2, [sp, #60]	; 0x3c
  402782:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402786:	801a      	strh	r2, [r3, #0]
  402788:	e511      	b.n	4021ae <_svfprintf_r+0x4e>
  40278a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40278c:	4bb3      	ldr	r3, [pc, #716]	; (402a5c <_svfprintf_r+0x8fc>)
  40278e:	680c      	ldr	r4, [r1, #0]
  402790:	9318      	str	r3, [sp, #96]	; 0x60
  402792:	2230      	movs	r2, #48	; 0x30
  402794:	2378      	movs	r3, #120	; 0x78
  402796:	3104      	adds	r1, #4
  402798:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  40279c:	9311      	str	r3, [sp, #68]	; 0x44
  40279e:	f04b 0b02 	orr.w	fp, fp, #2
  4027a2:	910f      	str	r1, [sp, #60]	; 0x3c
  4027a4:	2500      	movs	r5, #0
  4027a6:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4027aa:	2302      	movs	r3, #2
  4027ac:	e5cb      	b.n	402346 <_svfprintf_r+0x1e6>
  4027ae:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4027b0:	9311      	str	r3, [sp, #68]	; 0x44
  4027b2:	680a      	ldr	r2, [r1, #0]
  4027b4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4027b8:	2300      	movs	r3, #0
  4027ba:	460a      	mov	r2, r1
  4027bc:	461f      	mov	r7, r3
  4027be:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4027c2:	3204      	adds	r2, #4
  4027c4:	2301      	movs	r3, #1
  4027c6:	9308      	str	r3, [sp, #32]
  4027c8:	f8cd b01c 	str.w	fp, [sp, #28]
  4027cc:	970a      	str	r7, [sp, #40]	; 0x28
  4027ce:	9712      	str	r7, [sp, #72]	; 0x48
  4027d0:	920f      	str	r2, [sp, #60]	; 0x3c
  4027d2:	930e      	str	r3, [sp, #56]	; 0x38
  4027d4:	ae28      	add	r6, sp, #160	; 0xa0
  4027d6:	e5df      	b.n	402398 <_svfprintf_r+0x238>
  4027d8:	9311      	str	r3, [sp, #68]	; 0x44
  4027da:	2a00      	cmp	r2, #0
  4027dc:	f040 86ea 	bne.w	4035b4 <_svfprintf_r+0x1454>
  4027e0:	f01b 0f20 	tst.w	fp, #32
  4027e4:	d15d      	bne.n	4028a2 <_svfprintf_r+0x742>
  4027e6:	f01b 0f10 	tst.w	fp, #16
  4027ea:	f040 8308 	bne.w	402dfe <_svfprintf_r+0xc9e>
  4027ee:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4027f2:	f000 8304 	beq.w	402dfe <_svfprintf_r+0xc9e>
  4027f6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4027f8:	f9b1 4000 	ldrsh.w	r4, [r1]
  4027fc:	3104      	adds	r1, #4
  4027fe:	17e5      	asrs	r5, r4, #31
  402800:	4622      	mov	r2, r4
  402802:	462b      	mov	r3, r5
  402804:	910f      	str	r1, [sp, #60]	; 0x3c
  402806:	2a00      	cmp	r2, #0
  402808:	f173 0300 	sbcs.w	r3, r3, #0
  40280c:	db58      	blt.n	4028c0 <_svfprintf_r+0x760>
  40280e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402810:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402814:	1c4a      	adds	r2, r1, #1
  402816:	f04f 0301 	mov.w	r3, #1
  40281a:	f47f ad9b 	bne.w	402354 <_svfprintf_r+0x1f4>
  40281e:	ea54 0205 	orrs.w	r2, r4, r5
  402822:	f000 81df 	beq.w	402be4 <_svfprintf_r+0xa84>
  402826:	f8cd b01c 	str.w	fp, [sp, #28]
  40282a:	2b01      	cmp	r3, #1
  40282c:	f000 827b 	beq.w	402d26 <_svfprintf_r+0xbc6>
  402830:	2b02      	cmp	r3, #2
  402832:	f040 8206 	bne.w	402c42 <_svfprintf_r+0xae2>
  402836:	9818      	ldr	r0, [sp, #96]	; 0x60
  402838:	464e      	mov	r6, r9
  40283a:	0923      	lsrs	r3, r4, #4
  40283c:	f004 010f 	and.w	r1, r4, #15
  402840:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402844:	092a      	lsrs	r2, r5, #4
  402846:	461c      	mov	r4, r3
  402848:	4615      	mov	r5, r2
  40284a:	5c43      	ldrb	r3, [r0, r1]
  40284c:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402850:	ea54 0305 	orrs.w	r3, r4, r5
  402854:	d1f1      	bne.n	40283a <_svfprintf_r+0x6da>
  402856:	eba9 0306 	sub.w	r3, r9, r6
  40285a:	930e      	str	r3, [sp, #56]	; 0x38
  40285c:	e590      	b.n	402380 <_svfprintf_r+0x220>
  40285e:	9311      	str	r3, [sp, #68]	; 0x44
  402860:	2a00      	cmp	r2, #0
  402862:	f040 86a3 	bne.w	4035ac <_svfprintf_r+0x144c>
  402866:	4b7e      	ldr	r3, [pc, #504]	; (402a60 <_svfprintf_r+0x900>)
  402868:	9318      	str	r3, [sp, #96]	; 0x60
  40286a:	f01b 0f20 	tst.w	fp, #32
  40286e:	f43f aeef 	beq.w	402650 <_svfprintf_r+0x4f0>
  402872:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402874:	3507      	adds	r5, #7
  402876:	f025 0307 	bic.w	r3, r5, #7
  40287a:	f103 0208 	add.w	r2, r3, #8
  40287e:	f01b 0f01 	tst.w	fp, #1
  402882:	920f      	str	r2, [sp, #60]	; 0x3c
  402884:	e9d3 4500 	ldrd	r4, r5, [r3]
  402888:	f47f aef4 	bne.w	402674 <_svfprintf_r+0x514>
  40288c:	2302      	movs	r3, #2
  40288e:	e55a      	b.n	402346 <_svfprintf_r+0x1e6>
  402890:	9311      	str	r3, [sp, #68]	; 0x44
  402892:	2a00      	cmp	r2, #0
  402894:	f040 8686 	bne.w	4035a4 <_svfprintf_r+0x1444>
  402898:	f04b 0b10 	orr.w	fp, fp, #16
  40289c:	f01b 0f20 	tst.w	fp, #32
  4028a0:	d0a1      	beq.n	4027e6 <_svfprintf_r+0x686>
  4028a2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4028a4:	3507      	adds	r5, #7
  4028a6:	f025 0507 	bic.w	r5, r5, #7
  4028aa:	e9d5 2300 	ldrd	r2, r3, [r5]
  4028ae:	2a00      	cmp	r2, #0
  4028b0:	f105 0108 	add.w	r1, r5, #8
  4028b4:	461d      	mov	r5, r3
  4028b6:	f173 0300 	sbcs.w	r3, r3, #0
  4028ba:	910f      	str	r1, [sp, #60]	; 0x3c
  4028bc:	4614      	mov	r4, r2
  4028be:	daa6      	bge.n	40280e <_svfprintf_r+0x6ae>
  4028c0:	272d      	movs	r7, #45	; 0x2d
  4028c2:	4264      	negs	r4, r4
  4028c4:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4028c8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4028cc:	2301      	movs	r3, #1
  4028ce:	e53d      	b.n	40234c <_svfprintf_r+0x1ec>
  4028d0:	9311      	str	r3, [sp, #68]	; 0x44
  4028d2:	2a00      	cmp	r2, #0
  4028d4:	f040 8662 	bne.w	40359c <_svfprintf_r+0x143c>
  4028d8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4028da:	3507      	adds	r5, #7
  4028dc:	f025 0307 	bic.w	r3, r5, #7
  4028e0:	f103 0208 	add.w	r2, r3, #8
  4028e4:	920f      	str	r2, [sp, #60]	; 0x3c
  4028e6:	681a      	ldr	r2, [r3, #0]
  4028e8:	9215      	str	r2, [sp, #84]	; 0x54
  4028ea:	685b      	ldr	r3, [r3, #4]
  4028ec:	9314      	str	r3, [sp, #80]	; 0x50
  4028ee:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4028f0:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4028f2:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4028f6:	4628      	mov	r0, r5
  4028f8:	4621      	mov	r1, r4
  4028fa:	f04f 32ff 	mov.w	r2, #4294967295
  4028fe:	4b59      	ldr	r3, [pc, #356]	; (402a64 <_svfprintf_r+0x904>)
  402900:	f003 fdf2 	bl	4064e8 <__aeabi_dcmpun>
  402904:	2800      	cmp	r0, #0
  402906:	f040 834a 	bne.w	402f9e <_svfprintf_r+0xe3e>
  40290a:	4628      	mov	r0, r5
  40290c:	4621      	mov	r1, r4
  40290e:	f04f 32ff 	mov.w	r2, #4294967295
  402912:	4b54      	ldr	r3, [pc, #336]	; (402a64 <_svfprintf_r+0x904>)
  402914:	f003 fdca 	bl	4064ac <__aeabi_dcmple>
  402918:	2800      	cmp	r0, #0
  40291a:	f040 8340 	bne.w	402f9e <_svfprintf_r+0xe3e>
  40291e:	a815      	add	r0, sp, #84	; 0x54
  402920:	c80d      	ldmia	r0, {r0, r2, r3}
  402922:	9914      	ldr	r1, [sp, #80]	; 0x50
  402924:	f003 fdb8 	bl	406498 <__aeabi_dcmplt>
  402928:	2800      	cmp	r0, #0
  40292a:	f040 8530 	bne.w	40338e <_svfprintf_r+0x122e>
  40292e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402932:	4e4d      	ldr	r6, [pc, #308]	; (402a68 <_svfprintf_r+0x908>)
  402934:	4b4d      	ldr	r3, [pc, #308]	; (402a6c <_svfprintf_r+0x90c>)
  402936:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40293a:	9007      	str	r0, [sp, #28]
  40293c:	9811      	ldr	r0, [sp, #68]	; 0x44
  40293e:	2203      	movs	r2, #3
  402940:	2100      	movs	r1, #0
  402942:	9208      	str	r2, [sp, #32]
  402944:	910a      	str	r1, [sp, #40]	; 0x28
  402946:	2847      	cmp	r0, #71	; 0x47
  402948:	bfd8      	it	le
  40294a:	461e      	movle	r6, r3
  40294c:	920e      	str	r2, [sp, #56]	; 0x38
  40294e:	9112      	str	r1, [sp, #72]	; 0x48
  402950:	e51e      	b.n	402390 <_svfprintf_r+0x230>
  402952:	f04b 0b08 	orr.w	fp, fp, #8
  402956:	f89a 3000 	ldrb.w	r3, [sl]
  40295a:	e459      	b.n	402210 <_svfprintf_r+0xb0>
  40295c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402960:	2300      	movs	r3, #0
  402962:	461c      	mov	r4, r3
  402964:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402968:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40296c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402970:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402974:	2809      	cmp	r0, #9
  402976:	d9f5      	bls.n	402964 <_svfprintf_r+0x804>
  402978:	940d      	str	r4, [sp, #52]	; 0x34
  40297a:	e44b      	b.n	402214 <_svfprintf_r+0xb4>
  40297c:	f04b 0b10 	orr.w	fp, fp, #16
  402980:	9311      	str	r3, [sp, #68]	; 0x44
  402982:	f01b 0320 	ands.w	r3, fp, #32
  402986:	f43f ae1d 	beq.w	4025c4 <_svfprintf_r+0x464>
  40298a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40298c:	3507      	adds	r5, #7
  40298e:	f025 0307 	bic.w	r3, r5, #7
  402992:	f103 0208 	add.w	r2, r3, #8
  402996:	e9d3 4500 	ldrd	r4, r5, [r3]
  40299a:	920f      	str	r2, [sp, #60]	; 0x3c
  40299c:	2300      	movs	r3, #0
  40299e:	e4d2      	b.n	402346 <_svfprintf_r+0x1e6>
  4029a0:	9311      	str	r3, [sp, #68]	; 0x44
  4029a2:	2a00      	cmp	r2, #0
  4029a4:	f040 85e7 	bne.w	403576 <_svfprintf_r+0x1416>
  4029a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4029aa:	2a00      	cmp	r2, #0
  4029ac:	f43f aca3 	beq.w	4022f6 <_svfprintf_r+0x196>
  4029b0:	2300      	movs	r3, #0
  4029b2:	2101      	movs	r1, #1
  4029b4:	461f      	mov	r7, r3
  4029b6:	9108      	str	r1, [sp, #32]
  4029b8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4029bc:	f8cd b01c 	str.w	fp, [sp, #28]
  4029c0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4029c4:	930a      	str	r3, [sp, #40]	; 0x28
  4029c6:	9312      	str	r3, [sp, #72]	; 0x48
  4029c8:	910e      	str	r1, [sp, #56]	; 0x38
  4029ca:	ae28      	add	r6, sp, #160	; 0xa0
  4029cc:	e4e4      	b.n	402398 <_svfprintf_r+0x238>
  4029ce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4029d0:	e534      	b.n	40243c <_svfprintf_r+0x2dc>
  4029d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4029d4:	2b65      	cmp	r3, #101	; 0x65
  4029d6:	f340 80a7 	ble.w	402b28 <_svfprintf_r+0x9c8>
  4029da:	a815      	add	r0, sp, #84	; 0x54
  4029dc:	c80d      	ldmia	r0, {r0, r2, r3}
  4029de:	9914      	ldr	r1, [sp, #80]	; 0x50
  4029e0:	f003 fd50 	bl	406484 <__aeabi_dcmpeq>
  4029e4:	2800      	cmp	r0, #0
  4029e6:	f000 8150 	beq.w	402c8a <_svfprintf_r+0xb2a>
  4029ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029ec:	4a20      	ldr	r2, [pc, #128]	; (402a70 <_svfprintf_r+0x910>)
  4029ee:	f8c8 2000 	str.w	r2, [r8]
  4029f2:	3301      	adds	r3, #1
  4029f4:	3401      	adds	r4, #1
  4029f6:	2201      	movs	r2, #1
  4029f8:	2b07      	cmp	r3, #7
  4029fa:	9427      	str	r4, [sp, #156]	; 0x9c
  4029fc:	9326      	str	r3, [sp, #152]	; 0x98
  4029fe:	f8c8 2004 	str.w	r2, [r8, #4]
  402a02:	f300 836a 	bgt.w	4030da <_svfprintf_r+0xf7a>
  402a06:	f108 0808 	add.w	r8, r8, #8
  402a0a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402a0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402a0e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a10:	4293      	cmp	r3, r2
  402a12:	db03      	blt.n	402a1c <_svfprintf_r+0x8bc>
  402a14:	9b07      	ldr	r3, [sp, #28]
  402a16:	07dd      	lsls	r5, r3, #31
  402a18:	f57f ad82 	bpl.w	402520 <_svfprintf_r+0x3c0>
  402a1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a1e:	9919      	ldr	r1, [sp, #100]	; 0x64
  402a20:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402a22:	f8c8 2000 	str.w	r2, [r8]
  402a26:	3301      	adds	r3, #1
  402a28:	440c      	add	r4, r1
  402a2a:	2b07      	cmp	r3, #7
  402a2c:	f8c8 1004 	str.w	r1, [r8, #4]
  402a30:	9427      	str	r4, [sp, #156]	; 0x9c
  402a32:	9326      	str	r3, [sp, #152]	; 0x98
  402a34:	f300 839e 	bgt.w	403174 <_svfprintf_r+0x1014>
  402a38:	f108 0808 	add.w	r8, r8, #8
  402a3c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a3e:	1e5e      	subs	r6, r3, #1
  402a40:	2e00      	cmp	r6, #0
  402a42:	f77f ad6d 	ble.w	402520 <_svfprintf_r+0x3c0>
  402a46:	2e10      	cmp	r6, #16
  402a48:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a4a:	4d0a      	ldr	r5, [pc, #40]	; (402a74 <_svfprintf_r+0x914>)
  402a4c:	f340 81f5 	ble.w	402e3a <_svfprintf_r+0xcda>
  402a50:	4622      	mov	r2, r4
  402a52:	2710      	movs	r7, #16
  402a54:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402a58:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402a5a:	e013      	b.n	402a84 <_svfprintf_r+0x924>
  402a5c:	004075d4 	.word	0x004075d4
  402a60:	004075c0 	.word	0x004075c0
  402a64:	7fefffff 	.word	0x7fefffff
  402a68:	004075b4 	.word	0x004075b4
  402a6c:	004075b0 	.word	0x004075b0
  402a70:	004075f0 	.word	0x004075f0
  402a74:	00407604 	.word	0x00407604
  402a78:	f108 0808 	add.w	r8, r8, #8
  402a7c:	3e10      	subs	r6, #16
  402a7e:	2e10      	cmp	r6, #16
  402a80:	f340 81da 	ble.w	402e38 <_svfprintf_r+0xcd8>
  402a84:	3301      	adds	r3, #1
  402a86:	3210      	adds	r2, #16
  402a88:	2b07      	cmp	r3, #7
  402a8a:	9227      	str	r2, [sp, #156]	; 0x9c
  402a8c:	9326      	str	r3, [sp, #152]	; 0x98
  402a8e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402a92:	ddf1      	ble.n	402a78 <_svfprintf_r+0x918>
  402a94:	aa25      	add	r2, sp, #148	; 0x94
  402a96:	4621      	mov	r1, r4
  402a98:	4658      	mov	r0, fp
  402a9a:	f002 fc5f 	bl	40535c <__ssprint_r>
  402a9e:	2800      	cmp	r0, #0
  402aa0:	f47f ac30 	bne.w	402304 <_svfprintf_r+0x1a4>
  402aa4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402aa6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402aa8:	46c8      	mov	r8, r9
  402aaa:	e7e7      	b.n	402a7c <_svfprintf_r+0x91c>
  402aac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402aae:	9a08      	ldr	r2, [sp, #32]
  402ab0:	1a9f      	subs	r7, r3, r2
  402ab2:	2f00      	cmp	r7, #0
  402ab4:	f77f ace5 	ble.w	402482 <_svfprintf_r+0x322>
  402ab8:	2f10      	cmp	r7, #16
  402aba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402abc:	4db6      	ldr	r5, [pc, #728]	; (402d98 <_svfprintf_r+0xc38>)
  402abe:	dd27      	ble.n	402b10 <_svfprintf_r+0x9b0>
  402ac0:	4642      	mov	r2, r8
  402ac2:	4621      	mov	r1, r4
  402ac4:	46b0      	mov	r8, r6
  402ac6:	f04f 0b10 	mov.w	fp, #16
  402aca:	462e      	mov	r6, r5
  402acc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402ace:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402ad0:	e004      	b.n	402adc <_svfprintf_r+0x97c>
  402ad2:	3f10      	subs	r7, #16
  402ad4:	2f10      	cmp	r7, #16
  402ad6:	f102 0208 	add.w	r2, r2, #8
  402ada:	dd15      	ble.n	402b08 <_svfprintf_r+0x9a8>
  402adc:	3301      	adds	r3, #1
  402ade:	3110      	adds	r1, #16
  402ae0:	2b07      	cmp	r3, #7
  402ae2:	9127      	str	r1, [sp, #156]	; 0x9c
  402ae4:	9326      	str	r3, [sp, #152]	; 0x98
  402ae6:	e882 0840 	stmia.w	r2, {r6, fp}
  402aea:	ddf2      	ble.n	402ad2 <_svfprintf_r+0x972>
  402aec:	aa25      	add	r2, sp, #148	; 0x94
  402aee:	4629      	mov	r1, r5
  402af0:	4620      	mov	r0, r4
  402af2:	f002 fc33 	bl	40535c <__ssprint_r>
  402af6:	2800      	cmp	r0, #0
  402af8:	f47f ac04 	bne.w	402304 <_svfprintf_r+0x1a4>
  402afc:	3f10      	subs	r7, #16
  402afe:	2f10      	cmp	r7, #16
  402b00:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402b02:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b04:	464a      	mov	r2, r9
  402b06:	dce9      	bgt.n	402adc <_svfprintf_r+0x97c>
  402b08:	4635      	mov	r5, r6
  402b0a:	460c      	mov	r4, r1
  402b0c:	4646      	mov	r6, r8
  402b0e:	4690      	mov	r8, r2
  402b10:	3301      	adds	r3, #1
  402b12:	443c      	add	r4, r7
  402b14:	2b07      	cmp	r3, #7
  402b16:	9427      	str	r4, [sp, #156]	; 0x9c
  402b18:	9326      	str	r3, [sp, #152]	; 0x98
  402b1a:	e888 00a0 	stmia.w	r8, {r5, r7}
  402b1e:	f300 8232 	bgt.w	402f86 <_svfprintf_r+0xe26>
  402b22:	f108 0808 	add.w	r8, r8, #8
  402b26:	e4ac      	b.n	402482 <_svfprintf_r+0x322>
  402b28:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b2a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402b2c:	2b01      	cmp	r3, #1
  402b2e:	f340 81fe 	ble.w	402f2e <_svfprintf_r+0xdce>
  402b32:	3701      	adds	r7, #1
  402b34:	3401      	adds	r4, #1
  402b36:	2301      	movs	r3, #1
  402b38:	2f07      	cmp	r7, #7
  402b3a:	9427      	str	r4, [sp, #156]	; 0x9c
  402b3c:	9726      	str	r7, [sp, #152]	; 0x98
  402b3e:	f8c8 6000 	str.w	r6, [r8]
  402b42:	f8c8 3004 	str.w	r3, [r8, #4]
  402b46:	f300 8203 	bgt.w	402f50 <_svfprintf_r+0xdf0>
  402b4a:	f108 0808 	add.w	r8, r8, #8
  402b4e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402b50:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402b52:	f8c8 3000 	str.w	r3, [r8]
  402b56:	3701      	adds	r7, #1
  402b58:	4414      	add	r4, r2
  402b5a:	2f07      	cmp	r7, #7
  402b5c:	9427      	str	r4, [sp, #156]	; 0x9c
  402b5e:	9726      	str	r7, [sp, #152]	; 0x98
  402b60:	f8c8 2004 	str.w	r2, [r8, #4]
  402b64:	f300 8200 	bgt.w	402f68 <_svfprintf_r+0xe08>
  402b68:	f108 0808 	add.w	r8, r8, #8
  402b6c:	a815      	add	r0, sp, #84	; 0x54
  402b6e:	c80d      	ldmia	r0, {r0, r2, r3}
  402b70:	9914      	ldr	r1, [sp, #80]	; 0x50
  402b72:	f003 fc87 	bl	406484 <__aeabi_dcmpeq>
  402b76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b78:	2800      	cmp	r0, #0
  402b7a:	f040 8101 	bne.w	402d80 <_svfprintf_r+0xc20>
  402b7e:	3b01      	subs	r3, #1
  402b80:	3701      	adds	r7, #1
  402b82:	3601      	adds	r6, #1
  402b84:	441c      	add	r4, r3
  402b86:	2f07      	cmp	r7, #7
  402b88:	9726      	str	r7, [sp, #152]	; 0x98
  402b8a:	9427      	str	r4, [sp, #156]	; 0x9c
  402b8c:	f8c8 6000 	str.w	r6, [r8]
  402b90:	f8c8 3004 	str.w	r3, [r8, #4]
  402b94:	f300 8127 	bgt.w	402de6 <_svfprintf_r+0xc86>
  402b98:	f108 0808 	add.w	r8, r8, #8
  402b9c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402b9e:	f8c8 2004 	str.w	r2, [r8, #4]
  402ba2:	3701      	adds	r7, #1
  402ba4:	4414      	add	r4, r2
  402ba6:	ab21      	add	r3, sp, #132	; 0x84
  402ba8:	2f07      	cmp	r7, #7
  402baa:	9427      	str	r4, [sp, #156]	; 0x9c
  402bac:	9726      	str	r7, [sp, #152]	; 0x98
  402bae:	f8c8 3000 	str.w	r3, [r8]
  402bb2:	f77f acb3 	ble.w	40251c <_svfprintf_r+0x3bc>
  402bb6:	aa25      	add	r2, sp, #148	; 0x94
  402bb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bba:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bbc:	f002 fbce 	bl	40535c <__ssprint_r>
  402bc0:	2800      	cmp	r0, #0
  402bc2:	f47f ab9f 	bne.w	402304 <_svfprintf_r+0x1a4>
  402bc6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bc8:	46c8      	mov	r8, r9
  402bca:	e4a9      	b.n	402520 <_svfprintf_r+0x3c0>
  402bcc:	aa25      	add	r2, sp, #148	; 0x94
  402bce:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bd0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bd2:	f002 fbc3 	bl	40535c <__ssprint_r>
  402bd6:	2800      	cmp	r0, #0
  402bd8:	f43f aceb 	beq.w	4025b2 <_svfprintf_r+0x452>
  402bdc:	f7ff bb92 	b.w	402304 <_svfprintf_r+0x1a4>
  402be0:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402be4:	2b01      	cmp	r3, #1
  402be6:	f000 8134 	beq.w	402e52 <_svfprintf_r+0xcf2>
  402bea:	2b02      	cmp	r3, #2
  402bec:	d125      	bne.n	402c3a <_svfprintf_r+0xada>
  402bee:	f8cd b01c 	str.w	fp, [sp, #28]
  402bf2:	2400      	movs	r4, #0
  402bf4:	2500      	movs	r5, #0
  402bf6:	e61e      	b.n	402836 <_svfprintf_r+0x6d6>
  402bf8:	aa25      	add	r2, sp, #148	; 0x94
  402bfa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bfc:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bfe:	f002 fbad 	bl	40535c <__ssprint_r>
  402c02:	2800      	cmp	r0, #0
  402c04:	f47f ab7e 	bne.w	402304 <_svfprintf_r+0x1a4>
  402c08:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c0a:	46c8      	mov	r8, r9
  402c0c:	e475      	b.n	4024fa <_svfprintf_r+0x39a>
  402c0e:	aa25      	add	r2, sp, #148	; 0x94
  402c10:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c12:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c14:	f002 fba2 	bl	40535c <__ssprint_r>
  402c18:	2800      	cmp	r0, #0
  402c1a:	f47f ab73 	bne.w	402304 <_svfprintf_r+0x1a4>
  402c1e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c20:	46c8      	mov	r8, r9
  402c22:	e41b      	b.n	40245c <_svfprintf_r+0x2fc>
  402c24:	aa25      	add	r2, sp, #148	; 0x94
  402c26:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c28:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c2a:	f002 fb97 	bl	40535c <__ssprint_r>
  402c2e:	2800      	cmp	r0, #0
  402c30:	f47f ab68 	bne.w	402304 <_svfprintf_r+0x1a4>
  402c34:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c36:	46c8      	mov	r8, r9
  402c38:	e420      	b.n	40247c <_svfprintf_r+0x31c>
  402c3a:	f8cd b01c 	str.w	fp, [sp, #28]
  402c3e:	2400      	movs	r4, #0
  402c40:	2500      	movs	r5, #0
  402c42:	4649      	mov	r1, r9
  402c44:	e000      	b.n	402c48 <_svfprintf_r+0xae8>
  402c46:	4631      	mov	r1, r6
  402c48:	08e2      	lsrs	r2, r4, #3
  402c4a:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402c4e:	08e8      	lsrs	r0, r5, #3
  402c50:	f004 0307 	and.w	r3, r4, #7
  402c54:	4605      	mov	r5, r0
  402c56:	4614      	mov	r4, r2
  402c58:	3330      	adds	r3, #48	; 0x30
  402c5a:	ea54 0205 	orrs.w	r2, r4, r5
  402c5e:	f801 3c01 	strb.w	r3, [r1, #-1]
  402c62:	f101 36ff 	add.w	r6, r1, #4294967295
  402c66:	d1ee      	bne.n	402c46 <_svfprintf_r+0xae6>
  402c68:	9a07      	ldr	r2, [sp, #28]
  402c6a:	07d2      	lsls	r2, r2, #31
  402c6c:	f57f adf3 	bpl.w	402856 <_svfprintf_r+0x6f6>
  402c70:	2b30      	cmp	r3, #48	; 0x30
  402c72:	f43f adf0 	beq.w	402856 <_svfprintf_r+0x6f6>
  402c76:	3902      	subs	r1, #2
  402c78:	2330      	movs	r3, #48	; 0x30
  402c7a:	f806 3c01 	strb.w	r3, [r6, #-1]
  402c7e:	eba9 0301 	sub.w	r3, r9, r1
  402c82:	930e      	str	r3, [sp, #56]	; 0x38
  402c84:	460e      	mov	r6, r1
  402c86:	f7ff bb7b 	b.w	402380 <_svfprintf_r+0x220>
  402c8a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402c8c:	2900      	cmp	r1, #0
  402c8e:	f340 822e 	ble.w	4030ee <_svfprintf_r+0xf8e>
  402c92:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402c94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402c96:	4293      	cmp	r3, r2
  402c98:	bfa8      	it	ge
  402c9a:	4613      	movge	r3, r2
  402c9c:	2b00      	cmp	r3, #0
  402c9e:	461f      	mov	r7, r3
  402ca0:	dd0d      	ble.n	402cbe <_svfprintf_r+0xb5e>
  402ca2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ca4:	f8c8 6000 	str.w	r6, [r8]
  402ca8:	3301      	adds	r3, #1
  402caa:	443c      	add	r4, r7
  402cac:	2b07      	cmp	r3, #7
  402cae:	9427      	str	r4, [sp, #156]	; 0x9c
  402cb0:	f8c8 7004 	str.w	r7, [r8, #4]
  402cb4:	9326      	str	r3, [sp, #152]	; 0x98
  402cb6:	f300 831f 	bgt.w	4032f8 <_svfprintf_r+0x1198>
  402cba:	f108 0808 	add.w	r8, r8, #8
  402cbe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402cc0:	2f00      	cmp	r7, #0
  402cc2:	bfa8      	it	ge
  402cc4:	1bdb      	subge	r3, r3, r7
  402cc6:	2b00      	cmp	r3, #0
  402cc8:	461f      	mov	r7, r3
  402cca:	f340 80d6 	ble.w	402e7a <_svfprintf_r+0xd1a>
  402cce:	2f10      	cmp	r7, #16
  402cd0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cd2:	4d31      	ldr	r5, [pc, #196]	; (402d98 <_svfprintf_r+0xc38>)
  402cd4:	f340 81ed 	ble.w	4030b2 <_svfprintf_r+0xf52>
  402cd8:	4642      	mov	r2, r8
  402cda:	4621      	mov	r1, r4
  402cdc:	46b0      	mov	r8, r6
  402cde:	f04f 0b10 	mov.w	fp, #16
  402ce2:	462e      	mov	r6, r5
  402ce4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402ce6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402ce8:	e004      	b.n	402cf4 <_svfprintf_r+0xb94>
  402cea:	3208      	adds	r2, #8
  402cec:	3f10      	subs	r7, #16
  402cee:	2f10      	cmp	r7, #16
  402cf0:	f340 81db 	ble.w	4030aa <_svfprintf_r+0xf4a>
  402cf4:	3301      	adds	r3, #1
  402cf6:	3110      	adds	r1, #16
  402cf8:	2b07      	cmp	r3, #7
  402cfa:	9127      	str	r1, [sp, #156]	; 0x9c
  402cfc:	9326      	str	r3, [sp, #152]	; 0x98
  402cfe:	e882 0840 	stmia.w	r2, {r6, fp}
  402d02:	ddf2      	ble.n	402cea <_svfprintf_r+0xb8a>
  402d04:	aa25      	add	r2, sp, #148	; 0x94
  402d06:	4629      	mov	r1, r5
  402d08:	4620      	mov	r0, r4
  402d0a:	f002 fb27 	bl	40535c <__ssprint_r>
  402d0e:	2800      	cmp	r0, #0
  402d10:	f47f aaf8 	bne.w	402304 <_svfprintf_r+0x1a4>
  402d14:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402d16:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d18:	464a      	mov	r2, r9
  402d1a:	e7e7      	b.n	402cec <_svfprintf_r+0xb8c>
  402d1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402d1e:	930e      	str	r3, [sp, #56]	; 0x38
  402d20:	464e      	mov	r6, r9
  402d22:	f7ff bb2d 	b.w	402380 <_svfprintf_r+0x220>
  402d26:	2d00      	cmp	r5, #0
  402d28:	bf08      	it	eq
  402d2a:	2c0a      	cmpeq	r4, #10
  402d2c:	f0c0 808f 	bcc.w	402e4e <_svfprintf_r+0xcee>
  402d30:	464e      	mov	r6, r9
  402d32:	4620      	mov	r0, r4
  402d34:	4629      	mov	r1, r5
  402d36:	220a      	movs	r2, #10
  402d38:	2300      	movs	r3, #0
  402d3a:	f003 fc13 	bl	406564 <__aeabi_uldivmod>
  402d3e:	3230      	adds	r2, #48	; 0x30
  402d40:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402d44:	4620      	mov	r0, r4
  402d46:	4629      	mov	r1, r5
  402d48:	2300      	movs	r3, #0
  402d4a:	220a      	movs	r2, #10
  402d4c:	f003 fc0a 	bl	406564 <__aeabi_uldivmod>
  402d50:	4604      	mov	r4, r0
  402d52:	460d      	mov	r5, r1
  402d54:	ea54 0305 	orrs.w	r3, r4, r5
  402d58:	d1eb      	bne.n	402d32 <_svfprintf_r+0xbd2>
  402d5a:	eba9 0306 	sub.w	r3, r9, r6
  402d5e:	930e      	str	r3, [sp, #56]	; 0x38
  402d60:	f7ff bb0e 	b.w	402380 <_svfprintf_r+0x220>
  402d64:	aa25      	add	r2, sp, #148	; 0x94
  402d66:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d68:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d6a:	f002 faf7 	bl	40535c <__ssprint_r>
  402d6e:	2800      	cmp	r0, #0
  402d70:	f47f aac8 	bne.w	402304 <_svfprintf_r+0x1a4>
  402d74:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402d78:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d7a:	46c8      	mov	r8, r9
  402d7c:	f7ff bb5e 	b.w	40243c <_svfprintf_r+0x2dc>
  402d80:	1e5e      	subs	r6, r3, #1
  402d82:	2e00      	cmp	r6, #0
  402d84:	f77f af0a 	ble.w	402b9c <_svfprintf_r+0xa3c>
  402d88:	2e10      	cmp	r6, #16
  402d8a:	4d03      	ldr	r5, [pc, #12]	; (402d98 <_svfprintf_r+0xc38>)
  402d8c:	dd22      	ble.n	402dd4 <_svfprintf_r+0xc74>
  402d8e:	4622      	mov	r2, r4
  402d90:	f04f 0b10 	mov.w	fp, #16
  402d94:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402d96:	e006      	b.n	402da6 <_svfprintf_r+0xc46>
  402d98:	00407604 	.word	0x00407604
  402d9c:	3e10      	subs	r6, #16
  402d9e:	2e10      	cmp	r6, #16
  402da0:	f108 0808 	add.w	r8, r8, #8
  402da4:	dd15      	ble.n	402dd2 <_svfprintf_r+0xc72>
  402da6:	3701      	adds	r7, #1
  402da8:	3210      	adds	r2, #16
  402daa:	2f07      	cmp	r7, #7
  402dac:	9227      	str	r2, [sp, #156]	; 0x9c
  402dae:	9726      	str	r7, [sp, #152]	; 0x98
  402db0:	e888 0820 	stmia.w	r8, {r5, fp}
  402db4:	ddf2      	ble.n	402d9c <_svfprintf_r+0xc3c>
  402db6:	aa25      	add	r2, sp, #148	; 0x94
  402db8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dba:	4620      	mov	r0, r4
  402dbc:	f002 face 	bl	40535c <__ssprint_r>
  402dc0:	2800      	cmp	r0, #0
  402dc2:	f47f aa9f 	bne.w	402304 <_svfprintf_r+0x1a4>
  402dc6:	3e10      	subs	r6, #16
  402dc8:	2e10      	cmp	r6, #16
  402dca:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402dcc:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402dce:	46c8      	mov	r8, r9
  402dd0:	dce9      	bgt.n	402da6 <_svfprintf_r+0xc46>
  402dd2:	4614      	mov	r4, r2
  402dd4:	3701      	adds	r7, #1
  402dd6:	4434      	add	r4, r6
  402dd8:	2f07      	cmp	r7, #7
  402dda:	9427      	str	r4, [sp, #156]	; 0x9c
  402ddc:	9726      	str	r7, [sp, #152]	; 0x98
  402dde:	e888 0060 	stmia.w	r8, {r5, r6}
  402de2:	f77f aed9 	ble.w	402b98 <_svfprintf_r+0xa38>
  402de6:	aa25      	add	r2, sp, #148	; 0x94
  402de8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dea:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dec:	f002 fab6 	bl	40535c <__ssprint_r>
  402df0:	2800      	cmp	r0, #0
  402df2:	f47f aa87 	bne.w	402304 <_svfprintf_r+0x1a4>
  402df6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402df8:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402dfa:	46c8      	mov	r8, r9
  402dfc:	e6ce      	b.n	402b9c <_svfprintf_r+0xa3c>
  402dfe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402e00:	6814      	ldr	r4, [r2, #0]
  402e02:	4613      	mov	r3, r2
  402e04:	3304      	adds	r3, #4
  402e06:	17e5      	asrs	r5, r4, #31
  402e08:	930f      	str	r3, [sp, #60]	; 0x3c
  402e0a:	4622      	mov	r2, r4
  402e0c:	462b      	mov	r3, r5
  402e0e:	e4fa      	b.n	402806 <_svfprintf_r+0x6a6>
  402e10:	3204      	adds	r2, #4
  402e12:	681c      	ldr	r4, [r3, #0]
  402e14:	920f      	str	r2, [sp, #60]	; 0x3c
  402e16:	2301      	movs	r3, #1
  402e18:	2500      	movs	r5, #0
  402e1a:	f7ff ba94 	b.w	402346 <_svfprintf_r+0x1e6>
  402e1e:	681c      	ldr	r4, [r3, #0]
  402e20:	3304      	adds	r3, #4
  402e22:	930f      	str	r3, [sp, #60]	; 0x3c
  402e24:	2500      	movs	r5, #0
  402e26:	e421      	b.n	40266c <_svfprintf_r+0x50c>
  402e28:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402e2a:	460a      	mov	r2, r1
  402e2c:	3204      	adds	r2, #4
  402e2e:	680c      	ldr	r4, [r1, #0]
  402e30:	920f      	str	r2, [sp, #60]	; 0x3c
  402e32:	2500      	movs	r5, #0
  402e34:	f7ff ba87 	b.w	402346 <_svfprintf_r+0x1e6>
  402e38:	4614      	mov	r4, r2
  402e3a:	3301      	adds	r3, #1
  402e3c:	4434      	add	r4, r6
  402e3e:	2b07      	cmp	r3, #7
  402e40:	9427      	str	r4, [sp, #156]	; 0x9c
  402e42:	9326      	str	r3, [sp, #152]	; 0x98
  402e44:	e888 0060 	stmia.w	r8, {r5, r6}
  402e48:	f77f ab68 	ble.w	40251c <_svfprintf_r+0x3bc>
  402e4c:	e6b3      	b.n	402bb6 <_svfprintf_r+0xa56>
  402e4e:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402e52:	f8cd b01c 	str.w	fp, [sp, #28]
  402e56:	ae42      	add	r6, sp, #264	; 0x108
  402e58:	3430      	adds	r4, #48	; 0x30
  402e5a:	2301      	movs	r3, #1
  402e5c:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402e60:	930e      	str	r3, [sp, #56]	; 0x38
  402e62:	f7ff ba8d 	b.w	402380 <_svfprintf_r+0x220>
  402e66:	aa25      	add	r2, sp, #148	; 0x94
  402e68:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e6c:	f002 fa76 	bl	40535c <__ssprint_r>
  402e70:	2800      	cmp	r0, #0
  402e72:	f47f aa47 	bne.w	402304 <_svfprintf_r+0x1a4>
  402e76:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e78:	46c8      	mov	r8, r9
  402e7a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402e7c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e7e:	429a      	cmp	r2, r3
  402e80:	db44      	blt.n	402f0c <_svfprintf_r+0xdac>
  402e82:	9b07      	ldr	r3, [sp, #28]
  402e84:	07d9      	lsls	r1, r3, #31
  402e86:	d441      	bmi.n	402f0c <_svfprintf_r+0xdac>
  402e88:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e8a:	9812      	ldr	r0, [sp, #72]	; 0x48
  402e8c:	1a9a      	subs	r2, r3, r2
  402e8e:	1a1d      	subs	r5, r3, r0
  402e90:	4295      	cmp	r5, r2
  402e92:	bfa8      	it	ge
  402e94:	4615      	movge	r5, r2
  402e96:	2d00      	cmp	r5, #0
  402e98:	dd0e      	ble.n	402eb8 <_svfprintf_r+0xd58>
  402e9a:	9926      	ldr	r1, [sp, #152]	; 0x98
  402e9c:	f8c8 5004 	str.w	r5, [r8, #4]
  402ea0:	3101      	adds	r1, #1
  402ea2:	4406      	add	r6, r0
  402ea4:	442c      	add	r4, r5
  402ea6:	2907      	cmp	r1, #7
  402ea8:	f8c8 6000 	str.w	r6, [r8]
  402eac:	9427      	str	r4, [sp, #156]	; 0x9c
  402eae:	9126      	str	r1, [sp, #152]	; 0x98
  402eb0:	f300 823b 	bgt.w	40332a <_svfprintf_r+0x11ca>
  402eb4:	f108 0808 	add.w	r8, r8, #8
  402eb8:	2d00      	cmp	r5, #0
  402eba:	bfac      	ite	ge
  402ebc:	1b56      	subge	r6, r2, r5
  402ebe:	4616      	movlt	r6, r2
  402ec0:	2e00      	cmp	r6, #0
  402ec2:	f77f ab2d 	ble.w	402520 <_svfprintf_r+0x3c0>
  402ec6:	2e10      	cmp	r6, #16
  402ec8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402eca:	4db0      	ldr	r5, [pc, #704]	; (40318c <_svfprintf_r+0x102c>)
  402ecc:	ddb5      	ble.n	402e3a <_svfprintf_r+0xcda>
  402ece:	4622      	mov	r2, r4
  402ed0:	2710      	movs	r7, #16
  402ed2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ed6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402ed8:	e004      	b.n	402ee4 <_svfprintf_r+0xd84>
  402eda:	f108 0808 	add.w	r8, r8, #8
  402ede:	3e10      	subs	r6, #16
  402ee0:	2e10      	cmp	r6, #16
  402ee2:	dda9      	ble.n	402e38 <_svfprintf_r+0xcd8>
  402ee4:	3301      	adds	r3, #1
  402ee6:	3210      	adds	r2, #16
  402ee8:	2b07      	cmp	r3, #7
  402eea:	9227      	str	r2, [sp, #156]	; 0x9c
  402eec:	9326      	str	r3, [sp, #152]	; 0x98
  402eee:	e888 00a0 	stmia.w	r8, {r5, r7}
  402ef2:	ddf2      	ble.n	402eda <_svfprintf_r+0xd7a>
  402ef4:	aa25      	add	r2, sp, #148	; 0x94
  402ef6:	4621      	mov	r1, r4
  402ef8:	4658      	mov	r0, fp
  402efa:	f002 fa2f 	bl	40535c <__ssprint_r>
  402efe:	2800      	cmp	r0, #0
  402f00:	f47f aa00 	bne.w	402304 <_svfprintf_r+0x1a4>
  402f04:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402f06:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f08:	46c8      	mov	r8, r9
  402f0a:	e7e8      	b.n	402ede <_svfprintf_r+0xd7e>
  402f0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f0e:	9819      	ldr	r0, [sp, #100]	; 0x64
  402f10:	991a      	ldr	r1, [sp, #104]	; 0x68
  402f12:	f8c8 1000 	str.w	r1, [r8]
  402f16:	3301      	adds	r3, #1
  402f18:	4404      	add	r4, r0
  402f1a:	2b07      	cmp	r3, #7
  402f1c:	9427      	str	r4, [sp, #156]	; 0x9c
  402f1e:	f8c8 0004 	str.w	r0, [r8, #4]
  402f22:	9326      	str	r3, [sp, #152]	; 0x98
  402f24:	f300 81f5 	bgt.w	403312 <_svfprintf_r+0x11b2>
  402f28:	f108 0808 	add.w	r8, r8, #8
  402f2c:	e7ac      	b.n	402e88 <_svfprintf_r+0xd28>
  402f2e:	9b07      	ldr	r3, [sp, #28]
  402f30:	07da      	lsls	r2, r3, #31
  402f32:	f53f adfe 	bmi.w	402b32 <_svfprintf_r+0x9d2>
  402f36:	3701      	adds	r7, #1
  402f38:	3401      	adds	r4, #1
  402f3a:	2301      	movs	r3, #1
  402f3c:	2f07      	cmp	r7, #7
  402f3e:	9427      	str	r4, [sp, #156]	; 0x9c
  402f40:	9726      	str	r7, [sp, #152]	; 0x98
  402f42:	f8c8 6000 	str.w	r6, [r8]
  402f46:	f8c8 3004 	str.w	r3, [r8, #4]
  402f4a:	f77f ae25 	ble.w	402b98 <_svfprintf_r+0xa38>
  402f4e:	e74a      	b.n	402de6 <_svfprintf_r+0xc86>
  402f50:	aa25      	add	r2, sp, #148	; 0x94
  402f52:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f54:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f56:	f002 fa01 	bl	40535c <__ssprint_r>
  402f5a:	2800      	cmp	r0, #0
  402f5c:	f47f a9d2 	bne.w	402304 <_svfprintf_r+0x1a4>
  402f60:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f62:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402f64:	46c8      	mov	r8, r9
  402f66:	e5f2      	b.n	402b4e <_svfprintf_r+0x9ee>
  402f68:	aa25      	add	r2, sp, #148	; 0x94
  402f6a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f6c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f6e:	f002 f9f5 	bl	40535c <__ssprint_r>
  402f72:	2800      	cmp	r0, #0
  402f74:	f47f a9c6 	bne.w	402304 <_svfprintf_r+0x1a4>
  402f78:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f7a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402f7c:	46c8      	mov	r8, r9
  402f7e:	e5f5      	b.n	402b6c <_svfprintf_r+0xa0c>
  402f80:	464e      	mov	r6, r9
  402f82:	f7ff b9fd 	b.w	402380 <_svfprintf_r+0x220>
  402f86:	aa25      	add	r2, sp, #148	; 0x94
  402f88:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f8a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f8c:	f002 f9e6 	bl	40535c <__ssprint_r>
  402f90:	2800      	cmp	r0, #0
  402f92:	f47f a9b7 	bne.w	402304 <_svfprintf_r+0x1a4>
  402f96:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f98:	46c8      	mov	r8, r9
  402f9a:	f7ff ba72 	b.w	402482 <_svfprintf_r+0x322>
  402f9e:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402fa0:	4622      	mov	r2, r4
  402fa2:	4620      	mov	r0, r4
  402fa4:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402fa6:	4623      	mov	r3, r4
  402fa8:	4621      	mov	r1, r4
  402faa:	f003 fa9d 	bl	4064e8 <__aeabi_dcmpun>
  402fae:	2800      	cmp	r0, #0
  402fb0:	f040 8286 	bne.w	4034c0 <_svfprintf_r+0x1360>
  402fb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402fb6:	3301      	adds	r3, #1
  402fb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402fba:	f023 0320 	bic.w	r3, r3, #32
  402fbe:	930e      	str	r3, [sp, #56]	; 0x38
  402fc0:	f000 81e2 	beq.w	403388 <_svfprintf_r+0x1228>
  402fc4:	2b47      	cmp	r3, #71	; 0x47
  402fc6:	f000 811e 	beq.w	403206 <_svfprintf_r+0x10a6>
  402fca:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402fce:	9307      	str	r3, [sp, #28]
  402fd0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402fd2:	1e1f      	subs	r7, r3, #0
  402fd4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402fd6:	9308      	str	r3, [sp, #32]
  402fd8:	bfbb      	ittet	lt
  402fda:	463b      	movlt	r3, r7
  402fdc:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402fe0:	2300      	movge	r3, #0
  402fe2:	232d      	movlt	r3, #45	; 0x2d
  402fe4:	9310      	str	r3, [sp, #64]	; 0x40
  402fe6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402fe8:	2b66      	cmp	r3, #102	; 0x66
  402fea:	f000 81bb 	beq.w	403364 <_svfprintf_r+0x1204>
  402fee:	2b46      	cmp	r3, #70	; 0x46
  402ff0:	f000 80df 	beq.w	4031b2 <_svfprintf_r+0x1052>
  402ff4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402ff6:	9a08      	ldr	r2, [sp, #32]
  402ff8:	2b45      	cmp	r3, #69	; 0x45
  402ffa:	bf0c      	ite	eq
  402ffc:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402ffe:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403000:	a823      	add	r0, sp, #140	; 0x8c
  403002:	a920      	add	r1, sp, #128	; 0x80
  403004:	bf08      	it	eq
  403006:	1c5d      	addeq	r5, r3, #1
  403008:	9004      	str	r0, [sp, #16]
  40300a:	9103      	str	r1, [sp, #12]
  40300c:	a81f      	add	r0, sp, #124	; 0x7c
  40300e:	2102      	movs	r1, #2
  403010:	463b      	mov	r3, r7
  403012:	9002      	str	r0, [sp, #8]
  403014:	9501      	str	r5, [sp, #4]
  403016:	9100      	str	r1, [sp, #0]
  403018:	980c      	ldr	r0, [sp, #48]	; 0x30
  40301a:	f000 fb75 	bl	403708 <_dtoa_r>
  40301e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403020:	2b67      	cmp	r3, #103	; 0x67
  403022:	4606      	mov	r6, r0
  403024:	f040 81e0 	bne.w	4033e8 <_svfprintf_r+0x1288>
  403028:	f01b 0f01 	tst.w	fp, #1
  40302c:	f000 8246 	beq.w	4034bc <_svfprintf_r+0x135c>
  403030:	1974      	adds	r4, r6, r5
  403032:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403034:	9808      	ldr	r0, [sp, #32]
  403036:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403038:	4639      	mov	r1, r7
  40303a:	f003 fa23 	bl	406484 <__aeabi_dcmpeq>
  40303e:	2800      	cmp	r0, #0
  403040:	f040 8165 	bne.w	40330e <_svfprintf_r+0x11ae>
  403044:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403046:	42a3      	cmp	r3, r4
  403048:	d206      	bcs.n	403058 <_svfprintf_r+0xef8>
  40304a:	2130      	movs	r1, #48	; 0x30
  40304c:	1c5a      	adds	r2, r3, #1
  40304e:	9223      	str	r2, [sp, #140]	; 0x8c
  403050:	7019      	strb	r1, [r3, #0]
  403052:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403054:	429c      	cmp	r4, r3
  403056:	d8f9      	bhi.n	40304c <_svfprintf_r+0xeec>
  403058:	1b9b      	subs	r3, r3, r6
  40305a:	9313      	str	r3, [sp, #76]	; 0x4c
  40305c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40305e:	2b47      	cmp	r3, #71	; 0x47
  403060:	f000 80e9 	beq.w	403236 <_svfprintf_r+0x10d6>
  403064:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403066:	2b65      	cmp	r3, #101	; 0x65
  403068:	f340 81cd 	ble.w	403406 <_svfprintf_r+0x12a6>
  40306c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40306e:	2b66      	cmp	r3, #102	; 0x66
  403070:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403072:	9312      	str	r3, [sp, #72]	; 0x48
  403074:	f000 819e 	beq.w	4033b4 <_svfprintf_r+0x1254>
  403078:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40307a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40307c:	4619      	mov	r1, r3
  40307e:	4291      	cmp	r1, r2
  403080:	f300 818a 	bgt.w	403398 <_svfprintf_r+0x1238>
  403084:	f01b 0f01 	tst.w	fp, #1
  403088:	f040 8213 	bne.w	4034b2 <_svfprintf_r+0x1352>
  40308c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403090:	9308      	str	r3, [sp, #32]
  403092:	2367      	movs	r3, #103	; 0x67
  403094:	920e      	str	r2, [sp, #56]	; 0x38
  403096:	9311      	str	r3, [sp, #68]	; 0x44
  403098:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40309a:	2b00      	cmp	r3, #0
  40309c:	f040 80c4 	bne.w	403228 <_svfprintf_r+0x10c8>
  4030a0:	930a      	str	r3, [sp, #40]	; 0x28
  4030a2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4030a6:	f7ff b973 	b.w	402390 <_svfprintf_r+0x230>
  4030aa:	4635      	mov	r5, r6
  4030ac:	460c      	mov	r4, r1
  4030ae:	4646      	mov	r6, r8
  4030b0:	4690      	mov	r8, r2
  4030b2:	3301      	adds	r3, #1
  4030b4:	443c      	add	r4, r7
  4030b6:	2b07      	cmp	r3, #7
  4030b8:	9427      	str	r4, [sp, #156]	; 0x9c
  4030ba:	9326      	str	r3, [sp, #152]	; 0x98
  4030bc:	e888 00a0 	stmia.w	r8, {r5, r7}
  4030c0:	f73f aed1 	bgt.w	402e66 <_svfprintf_r+0xd06>
  4030c4:	f108 0808 	add.w	r8, r8, #8
  4030c8:	e6d7      	b.n	402e7a <_svfprintf_r+0xd1a>
  4030ca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4030cc:	6813      	ldr	r3, [r2, #0]
  4030ce:	3204      	adds	r2, #4
  4030d0:	920f      	str	r2, [sp, #60]	; 0x3c
  4030d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4030d4:	601a      	str	r2, [r3, #0]
  4030d6:	f7ff b86a 	b.w	4021ae <_svfprintf_r+0x4e>
  4030da:	aa25      	add	r2, sp, #148	; 0x94
  4030dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030de:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030e0:	f002 f93c 	bl	40535c <__ssprint_r>
  4030e4:	2800      	cmp	r0, #0
  4030e6:	f47f a90d 	bne.w	402304 <_svfprintf_r+0x1a4>
  4030ea:	46c8      	mov	r8, r9
  4030ec:	e48d      	b.n	402a0a <_svfprintf_r+0x8aa>
  4030ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030f0:	4a27      	ldr	r2, [pc, #156]	; (403190 <_svfprintf_r+0x1030>)
  4030f2:	f8c8 2000 	str.w	r2, [r8]
  4030f6:	3301      	adds	r3, #1
  4030f8:	3401      	adds	r4, #1
  4030fa:	2201      	movs	r2, #1
  4030fc:	2b07      	cmp	r3, #7
  4030fe:	9427      	str	r4, [sp, #156]	; 0x9c
  403100:	9326      	str	r3, [sp, #152]	; 0x98
  403102:	f8c8 2004 	str.w	r2, [r8, #4]
  403106:	dc72      	bgt.n	4031ee <_svfprintf_r+0x108e>
  403108:	f108 0808 	add.w	r8, r8, #8
  40310c:	b929      	cbnz	r1, 40311a <_svfprintf_r+0xfba>
  40310e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403110:	b91b      	cbnz	r3, 40311a <_svfprintf_r+0xfba>
  403112:	9b07      	ldr	r3, [sp, #28]
  403114:	07d8      	lsls	r0, r3, #31
  403116:	f57f aa03 	bpl.w	402520 <_svfprintf_r+0x3c0>
  40311a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40311c:	9819      	ldr	r0, [sp, #100]	; 0x64
  40311e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403120:	f8c8 2000 	str.w	r2, [r8]
  403124:	3301      	adds	r3, #1
  403126:	4602      	mov	r2, r0
  403128:	4422      	add	r2, r4
  40312a:	2b07      	cmp	r3, #7
  40312c:	9227      	str	r2, [sp, #156]	; 0x9c
  40312e:	f8c8 0004 	str.w	r0, [r8, #4]
  403132:	9326      	str	r3, [sp, #152]	; 0x98
  403134:	f300 818d 	bgt.w	403452 <_svfprintf_r+0x12f2>
  403138:	f108 0808 	add.w	r8, r8, #8
  40313c:	2900      	cmp	r1, #0
  40313e:	f2c0 8165 	blt.w	40340c <_svfprintf_r+0x12ac>
  403142:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403144:	f8c8 6000 	str.w	r6, [r8]
  403148:	3301      	adds	r3, #1
  40314a:	188c      	adds	r4, r1, r2
  40314c:	2b07      	cmp	r3, #7
  40314e:	9427      	str	r4, [sp, #156]	; 0x9c
  403150:	9326      	str	r3, [sp, #152]	; 0x98
  403152:	f8c8 1004 	str.w	r1, [r8, #4]
  403156:	f77f a9e1 	ble.w	40251c <_svfprintf_r+0x3bc>
  40315a:	e52c      	b.n	402bb6 <_svfprintf_r+0xa56>
  40315c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40315e:	9909      	ldr	r1, [sp, #36]	; 0x24
  403160:	6813      	ldr	r3, [r2, #0]
  403162:	17cd      	asrs	r5, r1, #31
  403164:	4608      	mov	r0, r1
  403166:	3204      	adds	r2, #4
  403168:	4629      	mov	r1, r5
  40316a:	920f      	str	r2, [sp, #60]	; 0x3c
  40316c:	e9c3 0100 	strd	r0, r1, [r3]
  403170:	f7ff b81d 	b.w	4021ae <_svfprintf_r+0x4e>
  403174:	aa25      	add	r2, sp, #148	; 0x94
  403176:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403178:	980c      	ldr	r0, [sp, #48]	; 0x30
  40317a:	f002 f8ef 	bl	40535c <__ssprint_r>
  40317e:	2800      	cmp	r0, #0
  403180:	f47f a8c0 	bne.w	402304 <_svfprintf_r+0x1a4>
  403184:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403186:	46c8      	mov	r8, r9
  403188:	e458      	b.n	402a3c <_svfprintf_r+0x8dc>
  40318a:	bf00      	nop
  40318c:	00407604 	.word	0x00407604
  403190:	004075f0 	.word	0x004075f0
  403194:	2140      	movs	r1, #64	; 0x40
  403196:	980c      	ldr	r0, [sp, #48]	; 0x30
  403198:	f001 fa0c 	bl	4045b4 <_malloc_r>
  40319c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40319e:	6010      	str	r0, [r2, #0]
  4031a0:	6110      	str	r0, [r2, #16]
  4031a2:	2800      	cmp	r0, #0
  4031a4:	f000 81f2 	beq.w	40358c <_svfprintf_r+0x142c>
  4031a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4031aa:	2340      	movs	r3, #64	; 0x40
  4031ac:	6153      	str	r3, [r2, #20]
  4031ae:	f7fe bfee 	b.w	40218e <_svfprintf_r+0x2e>
  4031b2:	a823      	add	r0, sp, #140	; 0x8c
  4031b4:	a920      	add	r1, sp, #128	; 0x80
  4031b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4031b8:	9004      	str	r0, [sp, #16]
  4031ba:	9103      	str	r1, [sp, #12]
  4031bc:	a81f      	add	r0, sp, #124	; 0x7c
  4031be:	2103      	movs	r1, #3
  4031c0:	9002      	str	r0, [sp, #8]
  4031c2:	9a08      	ldr	r2, [sp, #32]
  4031c4:	9401      	str	r4, [sp, #4]
  4031c6:	463b      	mov	r3, r7
  4031c8:	9100      	str	r1, [sp, #0]
  4031ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031cc:	f000 fa9c 	bl	403708 <_dtoa_r>
  4031d0:	4625      	mov	r5, r4
  4031d2:	4606      	mov	r6, r0
  4031d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4031d6:	2b46      	cmp	r3, #70	; 0x46
  4031d8:	eb06 0405 	add.w	r4, r6, r5
  4031dc:	f47f af29 	bne.w	403032 <_svfprintf_r+0xed2>
  4031e0:	7833      	ldrb	r3, [r6, #0]
  4031e2:	2b30      	cmp	r3, #48	; 0x30
  4031e4:	f000 8178 	beq.w	4034d8 <_svfprintf_r+0x1378>
  4031e8:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  4031ea:	442c      	add	r4, r5
  4031ec:	e721      	b.n	403032 <_svfprintf_r+0xed2>
  4031ee:	aa25      	add	r2, sp, #148	; 0x94
  4031f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031f2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031f4:	f002 f8b2 	bl	40535c <__ssprint_r>
  4031f8:	2800      	cmp	r0, #0
  4031fa:	f47f a883 	bne.w	402304 <_svfprintf_r+0x1a4>
  4031fe:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403200:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403202:	46c8      	mov	r8, r9
  403204:	e782      	b.n	40310c <_svfprintf_r+0xfac>
  403206:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403208:	2b00      	cmp	r3, #0
  40320a:	bf08      	it	eq
  40320c:	2301      	moveq	r3, #1
  40320e:	930a      	str	r3, [sp, #40]	; 0x28
  403210:	e6db      	b.n	402fca <_svfprintf_r+0xe6a>
  403212:	4630      	mov	r0, r6
  403214:	940a      	str	r4, [sp, #40]	; 0x28
  403216:	f002 f833 	bl	405280 <strlen>
  40321a:	950f      	str	r5, [sp, #60]	; 0x3c
  40321c:	900e      	str	r0, [sp, #56]	; 0x38
  40321e:	f8cd b01c 	str.w	fp, [sp, #28]
  403222:	4603      	mov	r3, r0
  403224:	f7ff b9f9 	b.w	40261a <_svfprintf_r+0x4ba>
  403228:	272d      	movs	r7, #45	; 0x2d
  40322a:	2300      	movs	r3, #0
  40322c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403230:	930a      	str	r3, [sp, #40]	; 0x28
  403232:	f7ff b8ae 	b.w	402392 <_svfprintf_r+0x232>
  403236:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403238:	9312      	str	r3, [sp, #72]	; 0x48
  40323a:	461a      	mov	r2, r3
  40323c:	3303      	adds	r3, #3
  40323e:	db04      	blt.n	40324a <_svfprintf_r+0x10ea>
  403240:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403242:	4619      	mov	r1, r3
  403244:	4291      	cmp	r1, r2
  403246:	f6bf af17 	bge.w	403078 <_svfprintf_r+0xf18>
  40324a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40324c:	3b02      	subs	r3, #2
  40324e:	9311      	str	r3, [sp, #68]	; 0x44
  403250:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403254:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403258:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40325a:	3b01      	subs	r3, #1
  40325c:	2b00      	cmp	r3, #0
  40325e:	931f      	str	r3, [sp, #124]	; 0x7c
  403260:	bfbd      	ittte	lt
  403262:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403264:	f1c3 0301 	rsblt	r3, r3, #1
  403268:	222d      	movlt	r2, #45	; 0x2d
  40326a:	222b      	movge	r2, #43	; 0x2b
  40326c:	2b09      	cmp	r3, #9
  40326e:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  403272:	f340 8116 	ble.w	4034a2 <_svfprintf_r+0x1342>
  403276:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  40327a:	4620      	mov	r0, r4
  40327c:	4dab      	ldr	r5, [pc, #684]	; (40352c <_svfprintf_r+0x13cc>)
  40327e:	e000      	b.n	403282 <_svfprintf_r+0x1122>
  403280:	4610      	mov	r0, r2
  403282:	fb85 1203 	smull	r1, r2, r5, r3
  403286:	17d9      	asrs	r1, r3, #31
  403288:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  40328c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403290:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403294:	3230      	adds	r2, #48	; 0x30
  403296:	2909      	cmp	r1, #9
  403298:	f800 2c01 	strb.w	r2, [r0, #-1]
  40329c:	460b      	mov	r3, r1
  40329e:	f100 32ff 	add.w	r2, r0, #4294967295
  4032a2:	dced      	bgt.n	403280 <_svfprintf_r+0x1120>
  4032a4:	3330      	adds	r3, #48	; 0x30
  4032a6:	3802      	subs	r0, #2
  4032a8:	b2d9      	uxtb	r1, r3
  4032aa:	4284      	cmp	r4, r0
  4032ac:	f802 1c01 	strb.w	r1, [r2, #-1]
  4032b0:	f240 8165 	bls.w	40357e <_svfprintf_r+0x141e>
  4032b4:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  4032b8:	4613      	mov	r3, r2
  4032ba:	e001      	b.n	4032c0 <_svfprintf_r+0x1160>
  4032bc:	f813 1b01 	ldrb.w	r1, [r3], #1
  4032c0:	f800 1b01 	strb.w	r1, [r0], #1
  4032c4:	42a3      	cmp	r3, r4
  4032c6:	d1f9      	bne.n	4032bc <_svfprintf_r+0x115c>
  4032c8:	3301      	adds	r3, #1
  4032ca:	1a9b      	subs	r3, r3, r2
  4032cc:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  4032d0:	4413      	add	r3, r2
  4032d2:	aa21      	add	r2, sp, #132	; 0x84
  4032d4:	1a9b      	subs	r3, r3, r2
  4032d6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4032d8:	931b      	str	r3, [sp, #108]	; 0x6c
  4032da:	2a01      	cmp	r2, #1
  4032dc:	4413      	add	r3, r2
  4032de:	930e      	str	r3, [sp, #56]	; 0x38
  4032e0:	f340 8119 	ble.w	403516 <_svfprintf_r+0x13b6>
  4032e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4032e6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4032e8:	4413      	add	r3, r2
  4032ea:	930e      	str	r3, [sp, #56]	; 0x38
  4032ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4032f0:	9308      	str	r3, [sp, #32]
  4032f2:	2300      	movs	r3, #0
  4032f4:	9312      	str	r3, [sp, #72]	; 0x48
  4032f6:	e6cf      	b.n	403098 <_svfprintf_r+0xf38>
  4032f8:	aa25      	add	r2, sp, #148	; 0x94
  4032fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032fc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032fe:	f002 f82d 	bl	40535c <__ssprint_r>
  403302:	2800      	cmp	r0, #0
  403304:	f47e affe 	bne.w	402304 <_svfprintf_r+0x1a4>
  403308:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40330a:	46c8      	mov	r8, r9
  40330c:	e4d7      	b.n	402cbe <_svfprintf_r+0xb5e>
  40330e:	4623      	mov	r3, r4
  403310:	e6a2      	b.n	403058 <_svfprintf_r+0xef8>
  403312:	aa25      	add	r2, sp, #148	; 0x94
  403314:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403316:	980c      	ldr	r0, [sp, #48]	; 0x30
  403318:	f002 f820 	bl	40535c <__ssprint_r>
  40331c:	2800      	cmp	r0, #0
  40331e:	f47e aff1 	bne.w	402304 <_svfprintf_r+0x1a4>
  403322:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403324:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403326:	46c8      	mov	r8, r9
  403328:	e5ae      	b.n	402e88 <_svfprintf_r+0xd28>
  40332a:	aa25      	add	r2, sp, #148	; 0x94
  40332c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40332e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403330:	f002 f814 	bl	40535c <__ssprint_r>
  403334:	2800      	cmp	r0, #0
  403336:	f47e afe5 	bne.w	402304 <_svfprintf_r+0x1a4>
  40333a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  40333c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40333e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403340:	1a9a      	subs	r2, r3, r2
  403342:	46c8      	mov	r8, r9
  403344:	e5b8      	b.n	402eb8 <_svfprintf_r+0xd58>
  403346:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403348:	9612      	str	r6, [sp, #72]	; 0x48
  40334a:	2b06      	cmp	r3, #6
  40334c:	bf28      	it	cs
  40334e:	2306      	movcs	r3, #6
  403350:	960a      	str	r6, [sp, #40]	; 0x28
  403352:	4637      	mov	r7, r6
  403354:	9308      	str	r3, [sp, #32]
  403356:	950f      	str	r5, [sp, #60]	; 0x3c
  403358:	f8cd b01c 	str.w	fp, [sp, #28]
  40335c:	930e      	str	r3, [sp, #56]	; 0x38
  40335e:	4e74      	ldr	r6, [pc, #464]	; (403530 <_svfprintf_r+0x13d0>)
  403360:	f7ff b816 	b.w	402390 <_svfprintf_r+0x230>
  403364:	a823      	add	r0, sp, #140	; 0x8c
  403366:	a920      	add	r1, sp, #128	; 0x80
  403368:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40336a:	9004      	str	r0, [sp, #16]
  40336c:	9103      	str	r1, [sp, #12]
  40336e:	a81f      	add	r0, sp, #124	; 0x7c
  403370:	2103      	movs	r1, #3
  403372:	9002      	str	r0, [sp, #8]
  403374:	9a08      	ldr	r2, [sp, #32]
  403376:	9501      	str	r5, [sp, #4]
  403378:	463b      	mov	r3, r7
  40337a:	9100      	str	r1, [sp, #0]
  40337c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40337e:	f000 f9c3 	bl	403708 <_dtoa_r>
  403382:	4606      	mov	r6, r0
  403384:	1944      	adds	r4, r0, r5
  403386:	e72b      	b.n	4031e0 <_svfprintf_r+0x1080>
  403388:	2306      	movs	r3, #6
  40338a:	930a      	str	r3, [sp, #40]	; 0x28
  40338c:	e61d      	b.n	402fca <_svfprintf_r+0xe6a>
  40338e:	272d      	movs	r7, #45	; 0x2d
  403390:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403394:	f7ff bacd 	b.w	402932 <_svfprintf_r+0x7d2>
  403398:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40339a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40339c:	4413      	add	r3, r2
  40339e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4033a0:	930e      	str	r3, [sp, #56]	; 0x38
  4033a2:	2a00      	cmp	r2, #0
  4033a4:	f340 80b0 	ble.w	403508 <_svfprintf_r+0x13a8>
  4033a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4033ac:	9308      	str	r3, [sp, #32]
  4033ae:	2367      	movs	r3, #103	; 0x67
  4033b0:	9311      	str	r3, [sp, #68]	; 0x44
  4033b2:	e671      	b.n	403098 <_svfprintf_r+0xf38>
  4033b4:	2b00      	cmp	r3, #0
  4033b6:	f340 80c3 	ble.w	403540 <_svfprintf_r+0x13e0>
  4033ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4033bc:	2a00      	cmp	r2, #0
  4033be:	f040 8099 	bne.w	4034f4 <_svfprintf_r+0x1394>
  4033c2:	f01b 0f01 	tst.w	fp, #1
  4033c6:	f040 8095 	bne.w	4034f4 <_svfprintf_r+0x1394>
  4033ca:	9308      	str	r3, [sp, #32]
  4033cc:	930e      	str	r3, [sp, #56]	; 0x38
  4033ce:	e663      	b.n	403098 <_svfprintf_r+0xf38>
  4033d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4033d2:	9308      	str	r3, [sp, #32]
  4033d4:	930e      	str	r3, [sp, #56]	; 0x38
  4033d6:	900a      	str	r0, [sp, #40]	; 0x28
  4033d8:	950f      	str	r5, [sp, #60]	; 0x3c
  4033da:	f8cd b01c 	str.w	fp, [sp, #28]
  4033de:	9012      	str	r0, [sp, #72]	; 0x48
  4033e0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4033e4:	f7fe bfd4 	b.w	402390 <_svfprintf_r+0x230>
  4033e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4033ea:	2b47      	cmp	r3, #71	; 0x47
  4033ec:	f47f ae20 	bne.w	403030 <_svfprintf_r+0xed0>
  4033f0:	f01b 0f01 	tst.w	fp, #1
  4033f4:	f47f aeee 	bne.w	4031d4 <_svfprintf_r+0x1074>
  4033f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4033fa:	1b9b      	subs	r3, r3, r6
  4033fc:	9313      	str	r3, [sp, #76]	; 0x4c
  4033fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403400:	2b47      	cmp	r3, #71	; 0x47
  403402:	f43f af18 	beq.w	403236 <_svfprintf_r+0x10d6>
  403406:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403408:	9312      	str	r3, [sp, #72]	; 0x48
  40340a:	e721      	b.n	403250 <_svfprintf_r+0x10f0>
  40340c:	424f      	negs	r7, r1
  40340e:	3110      	adds	r1, #16
  403410:	4d48      	ldr	r5, [pc, #288]	; (403534 <_svfprintf_r+0x13d4>)
  403412:	da2f      	bge.n	403474 <_svfprintf_r+0x1314>
  403414:	2410      	movs	r4, #16
  403416:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40341a:	e004      	b.n	403426 <_svfprintf_r+0x12c6>
  40341c:	f108 0808 	add.w	r8, r8, #8
  403420:	3f10      	subs	r7, #16
  403422:	2f10      	cmp	r7, #16
  403424:	dd26      	ble.n	403474 <_svfprintf_r+0x1314>
  403426:	3301      	adds	r3, #1
  403428:	3210      	adds	r2, #16
  40342a:	2b07      	cmp	r3, #7
  40342c:	9227      	str	r2, [sp, #156]	; 0x9c
  40342e:	9326      	str	r3, [sp, #152]	; 0x98
  403430:	f8c8 5000 	str.w	r5, [r8]
  403434:	f8c8 4004 	str.w	r4, [r8, #4]
  403438:	ddf0      	ble.n	40341c <_svfprintf_r+0x12bc>
  40343a:	aa25      	add	r2, sp, #148	; 0x94
  40343c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40343e:	4658      	mov	r0, fp
  403440:	f001 ff8c 	bl	40535c <__ssprint_r>
  403444:	2800      	cmp	r0, #0
  403446:	f47e af5d 	bne.w	402304 <_svfprintf_r+0x1a4>
  40344a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40344c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40344e:	46c8      	mov	r8, r9
  403450:	e7e6      	b.n	403420 <_svfprintf_r+0x12c0>
  403452:	aa25      	add	r2, sp, #148	; 0x94
  403454:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403456:	980c      	ldr	r0, [sp, #48]	; 0x30
  403458:	f001 ff80 	bl	40535c <__ssprint_r>
  40345c:	2800      	cmp	r0, #0
  40345e:	f47e af51 	bne.w	402304 <_svfprintf_r+0x1a4>
  403462:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403464:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403466:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403468:	46c8      	mov	r8, r9
  40346a:	e667      	b.n	40313c <_svfprintf_r+0xfdc>
  40346c:	2000      	movs	r0, #0
  40346e:	900a      	str	r0, [sp, #40]	; 0x28
  403470:	f7fe bed0 	b.w	402214 <_svfprintf_r+0xb4>
  403474:	3301      	adds	r3, #1
  403476:	443a      	add	r2, r7
  403478:	2b07      	cmp	r3, #7
  40347a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40347e:	9227      	str	r2, [sp, #156]	; 0x9c
  403480:	9326      	str	r3, [sp, #152]	; 0x98
  403482:	f108 0808 	add.w	r8, r8, #8
  403486:	f77f ae5c 	ble.w	403142 <_svfprintf_r+0xfe2>
  40348a:	aa25      	add	r2, sp, #148	; 0x94
  40348c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40348e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403490:	f001 ff64 	bl	40535c <__ssprint_r>
  403494:	2800      	cmp	r0, #0
  403496:	f47e af35 	bne.w	402304 <_svfprintf_r+0x1a4>
  40349a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40349c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40349e:	46c8      	mov	r8, r9
  4034a0:	e64f      	b.n	403142 <_svfprintf_r+0xfe2>
  4034a2:	3330      	adds	r3, #48	; 0x30
  4034a4:	2230      	movs	r2, #48	; 0x30
  4034a6:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4034aa:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4034ae:	ab22      	add	r3, sp, #136	; 0x88
  4034b0:	e70f      	b.n	4032d2 <_svfprintf_r+0x1172>
  4034b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4034b4:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4034b6:	4413      	add	r3, r2
  4034b8:	930e      	str	r3, [sp, #56]	; 0x38
  4034ba:	e775      	b.n	4033a8 <_svfprintf_r+0x1248>
  4034bc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4034be:	e5cb      	b.n	403058 <_svfprintf_r+0xef8>
  4034c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4034c2:	4e1d      	ldr	r6, [pc, #116]	; (403538 <_svfprintf_r+0x13d8>)
  4034c4:	2b00      	cmp	r3, #0
  4034c6:	bfb6      	itet	lt
  4034c8:	272d      	movlt	r7, #45	; 0x2d
  4034ca:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4034ce:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4034d2:	4b1a      	ldr	r3, [pc, #104]	; (40353c <_svfprintf_r+0x13dc>)
  4034d4:	f7ff ba2f 	b.w	402936 <_svfprintf_r+0x7d6>
  4034d8:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4034da:	9808      	ldr	r0, [sp, #32]
  4034dc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4034de:	4639      	mov	r1, r7
  4034e0:	f002 ffd0 	bl	406484 <__aeabi_dcmpeq>
  4034e4:	2800      	cmp	r0, #0
  4034e6:	f47f ae7f 	bne.w	4031e8 <_svfprintf_r+0x1088>
  4034ea:	f1c5 0501 	rsb	r5, r5, #1
  4034ee:	951f      	str	r5, [sp, #124]	; 0x7c
  4034f0:	442c      	add	r4, r5
  4034f2:	e59e      	b.n	403032 <_svfprintf_r+0xed2>
  4034f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4034f6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4034f8:	4413      	add	r3, r2
  4034fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4034fc:	441a      	add	r2, r3
  4034fe:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403502:	920e      	str	r2, [sp, #56]	; 0x38
  403504:	9308      	str	r3, [sp, #32]
  403506:	e5c7      	b.n	403098 <_svfprintf_r+0xf38>
  403508:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40350a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40350c:	f1c3 0301 	rsb	r3, r3, #1
  403510:	441a      	add	r2, r3
  403512:	4613      	mov	r3, r2
  403514:	e7d0      	b.n	4034b8 <_svfprintf_r+0x1358>
  403516:	f01b 0301 	ands.w	r3, fp, #1
  40351a:	9312      	str	r3, [sp, #72]	; 0x48
  40351c:	f47f aee2 	bne.w	4032e4 <_svfprintf_r+0x1184>
  403520:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403522:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403526:	9308      	str	r3, [sp, #32]
  403528:	e5b6      	b.n	403098 <_svfprintf_r+0xf38>
  40352a:	bf00      	nop
  40352c:	66666667 	.word	0x66666667
  403530:	004075e8 	.word	0x004075e8
  403534:	00407604 	.word	0x00407604
  403538:	004075bc 	.word	0x004075bc
  40353c:	004075b8 	.word	0x004075b8
  403540:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403542:	b913      	cbnz	r3, 40354a <_svfprintf_r+0x13ea>
  403544:	f01b 0f01 	tst.w	fp, #1
  403548:	d002      	beq.n	403550 <_svfprintf_r+0x13f0>
  40354a:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40354c:	3301      	adds	r3, #1
  40354e:	e7d4      	b.n	4034fa <_svfprintf_r+0x139a>
  403550:	2301      	movs	r3, #1
  403552:	e73a      	b.n	4033ca <_svfprintf_r+0x126a>
  403554:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403556:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40355a:	6828      	ldr	r0, [r5, #0]
  40355c:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403560:	900a      	str	r0, [sp, #40]	; 0x28
  403562:	4628      	mov	r0, r5
  403564:	3004      	adds	r0, #4
  403566:	46a2      	mov	sl, r4
  403568:	900f      	str	r0, [sp, #60]	; 0x3c
  40356a:	f7fe be51 	b.w	402210 <_svfprintf_r+0xb0>
  40356e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403572:	f7ff b867 	b.w	402644 <_svfprintf_r+0x4e4>
  403576:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40357a:	f7ff ba15 	b.w	4029a8 <_svfprintf_r+0x848>
  40357e:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  403582:	e6a6      	b.n	4032d2 <_svfprintf_r+0x1172>
  403584:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403588:	f7ff b8eb 	b.w	402762 <_svfprintf_r+0x602>
  40358c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40358e:	230c      	movs	r3, #12
  403590:	6013      	str	r3, [r2, #0]
  403592:	f04f 33ff 	mov.w	r3, #4294967295
  403596:	9309      	str	r3, [sp, #36]	; 0x24
  403598:	f7fe bebd 	b.w	402316 <_svfprintf_r+0x1b6>
  40359c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4035a0:	f7ff b99a 	b.w	4028d8 <_svfprintf_r+0x778>
  4035a4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4035a8:	f7ff b976 	b.w	402898 <_svfprintf_r+0x738>
  4035ac:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4035b0:	f7ff b959 	b.w	402866 <_svfprintf_r+0x706>
  4035b4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4035b8:	f7ff b912 	b.w	4027e0 <_svfprintf_r+0x680>

004035bc <register_fini>:
  4035bc:	4b02      	ldr	r3, [pc, #8]	; (4035c8 <register_fini+0xc>)
  4035be:	b113      	cbz	r3, 4035c6 <register_fini+0xa>
  4035c0:	4802      	ldr	r0, [pc, #8]	; (4035cc <register_fini+0x10>)
  4035c2:	f000 b805 	b.w	4035d0 <atexit>
  4035c6:	4770      	bx	lr
  4035c8:	00000000 	.word	0x00000000
  4035cc:	0040455d 	.word	0x0040455d

004035d0 <atexit>:
  4035d0:	2300      	movs	r3, #0
  4035d2:	4601      	mov	r1, r0
  4035d4:	461a      	mov	r2, r3
  4035d6:	4618      	mov	r0, r3
  4035d8:	f001 bf3e 	b.w	405458 <__register_exitproc>

004035dc <quorem>:
  4035dc:	6902      	ldr	r2, [r0, #16]
  4035de:	690b      	ldr	r3, [r1, #16]
  4035e0:	4293      	cmp	r3, r2
  4035e2:	f300 808d 	bgt.w	403700 <quorem+0x124>
  4035e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4035ea:	f103 38ff 	add.w	r8, r3, #4294967295
  4035ee:	f101 0714 	add.w	r7, r1, #20
  4035f2:	f100 0b14 	add.w	fp, r0, #20
  4035f6:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4035fa:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4035fe:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403602:	b083      	sub	sp, #12
  403604:	3201      	adds	r2, #1
  403606:	fbb3 f9f2 	udiv	r9, r3, r2
  40360a:	eb0b 0304 	add.w	r3, fp, r4
  40360e:	9400      	str	r4, [sp, #0]
  403610:	eb07 0a04 	add.w	sl, r7, r4
  403614:	9301      	str	r3, [sp, #4]
  403616:	f1b9 0f00 	cmp.w	r9, #0
  40361a:	d039      	beq.n	403690 <quorem+0xb4>
  40361c:	2500      	movs	r5, #0
  40361e:	462e      	mov	r6, r5
  403620:	46bc      	mov	ip, r7
  403622:	46de      	mov	lr, fp
  403624:	f85c 4b04 	ldr.w	r4, [ip], #4
  403628:	f8de 3000 	ldr.w	r3, [lr]
  40362c:	b2a2      	uxth	r2, r4
  40362e:	fb09 5502 	mla	r5, r9, r2, r5
  403632:	0c22      	lsrs	r2, r4, #16
  403634:	0c2c      	lsrs	r4, r5, #16
  403636:	fb09 4202 	mla	r2, r9, r2, r4
  40363a:	b2ad      	uxth	r5, r5
  40363c:	1b75      	subs	r5, r6, r5
  40363e:	b296      	uxth	r6, r2
  403640:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403644:	fa15 f383 	uxtah	r3, r5, r3
  403648:	eb06 4623 	add.w	r6, r6, r3, asr #16
  40364c:	b29b      	uxth	r3, r3
  40364e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403652:	45e2      	cmp	sl, ip
  403654:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403658:	f84e 3b04 	str.w	r3, [lr], #4
  40365c:	ea4f 4626 	mov.w	r6, r6, asr #16
  403660:	d2e0      	bcs.n	403624 <quorem+0x48>
  403662:	9b00      	ldr	r3, [sp, #0]
  403664:	f85b 3003 	ldr.w	r3, [fp, r3]
  403668:	b993      	cbnz	r3, 403690 <quorem+0xb4>
  40366a:	9c01      	ldr	r4, [sp, #4]
  40366c:	1f23      	subs	r3, r4, #4
  40366e:	459b      	cmp	fp, r3
  403670:	d20c      	bcs.n	40368c <quorem+0xb0>
  403672:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403676:	b94b      	cbnz	r3, 40368c <quorem+0xb0>
  403678:	f1a4 0308 	sub.w	r3, r4, #8
  40367c:	e002      	b.n	403684 <quorem+0xa8>
  40367e:	681a      	ldr	r2, [r3, #0]
  403680:	3b04      	subs	r3, #4
  403682:	b91a      	cbnz	r2, 40368c <quorem+0xb0>
  403684:	459b      	cmp	fp, r3
  403686:	f108 38ff 	add.w	r8, r8, #4294967295
  40368a:	d3f8      	bcc.n	40367e <quorem+0xa2>
  40368c:	f8c0 8010 	str.w	r8, [r0, #16]
  403690:	4604      	mov	r4, r0
  403692:	f001 fccf 	bl	405034 <__mcmp>
  403696:	2800      	cmp	r0, #0
  403698:	db2e      	blt.n	4036f8 <quorem+0x11c>
  40369a:	f109 0901 	add.w	r9, r9, #1
  40369e:	465d      	mov	r5, fp
  4036a0:	2300      	movs	r3, #0
  4036a2:	f857 1b04 	ldr.w	r1, [r7], #4
  4036a6:	6828      	ldr	r0, [r5, #0]
  4036a8:	b28a      	uxth	r2, r1
  4036aa:	1a9a      	subs	r2, r3, r2
  4036ac:	0c0b      	lsrs	r3, r1, #16
  4036ae:	fa12 f280 	uxtah	r2, r2, r0
  4036b2:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4036b6:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4036ba:	b292      	uxth	r2, r2
  4036bc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4036c0:	45ba      	cmp	sl, r7
  4036c2:	f845 2b04 	str.w	r2, [r5], #4
  4036c6:	ea4f 4323 	mov.w	r3, r3, asr #16
  4036ca:	d2ea      	bcs.n	4036a2 <quorem+0xc6>
  4036cc:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4036d0:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4036d4:	b982      	cbnz	r2, 4036f8 <quorem+0x11c>
  4036d6:	1f1a      	subs	r2, r3, #4
  4036d8:	4593      	cmp	fp, r2
  4036da:	d20b      	bcs.n	4036f4 <quorem+0x118>
  4036dc:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4036e0:	b942      	cbnz	r2, 4036f4 <quorem+0x118>
  4036e2:	3b08      	subs	r3, #8
  4036e4:	e002      	b.n	4036ec <quorem+0x110>
  4036e6:	681a      	ldr	r2, [r3, #0]
  4036e8:	3b04      	subs	r3, #4
  4036ea:	b91a      	cbnz	r2, 4036f4 <quorem+0x118>
  4036ec:	459b      	cmp	fp, r3
  4036ee:	f108 38ff 	add.w	r8, r8, #4294967295
  4036f2:	d3f8      	bcc.n	4036e6 <quorem+0x10a>
  4036f4:	f8c4 8010 	str.w	r8, [r4, #16]
  4036f8:	4648      	mov	r0, r9
  4036fa:	b003      	add	sp, #12
  4036fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403700:	2000      	movs	r0, #0
  403702:	4770      	bx	lr
  403704:	0000      	movs	r0, r0
	...

00403708 <_dtoa_r>:
  403708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40370c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40370e:	b09b      	sub	sp, #108	; 0x6c
  403710:	4604      	mov	r4, r0
  403712:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403714:	4692      	mov	sl, r2
  403716:	469b      	mov	fp, r3
  403718:	b141      	cbz	r1, 40372c <_dtoa_r+0x24>
  40371a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  40371c:	604a      	str	r2, [r1, #4]
  40371e:	2301      	movs	r3, #1
  403720:	4093      	lsls	r3, r2
  403722:	608b      	str	r3, [r1, #8]
  403724:	f001 faae 	bl	404c84 <_Bfree>
  403728:	2300      	movs	r3, #0
  40372a:	6423      	str	r3, [r4, #64]	; 0x40
  40372c:	f1bb 0f00 	cmp.w	fp, #0
  403730:	465d      	mov	r5, fp
  403732:	db35      	blt.n	4037a0 <_dtoa_r+0x98>
  403734:	2300      	movs	r3, #0
  403736:	6033      	str	r3, [r6, #0]
  403738:	4b9d      	ldr	r3, [pc, #628]	; (4039b0 <_dtoa_r+0x2a8>)
  40373a:	43ab      	bics	r3, r5
  40373c:	d015      	beq.n	40376a <_dtoa_r+0x62>
  40373e:	4650      	mov	r0, sl
  403740:	4659      	mov	r1, fp
  403742:	2200      	movs	r2, #0
  403744:	2300      	movs	r3, #0
  403746:	f002 fe9d 	bl	406484 <__aeabi_dcmpeq>
  40374a:	4680      	mov	r8, r0
  40374c:	2800      	cmp	r0, #0
  40374e:	d02d      	beq.n	4037ac <_dtoa_r+0xa4>
  403750:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403752:	2301      	movs	r3, #1
  403754:	6013      	str	r3, [r2, #0]
  403756:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403758:	2b00      	cmp	r3, #0
  40375a:	f000 80bd 	beq.w	4038d8 <_dtoa_r+0x1d0>
  40375e:	4895      	ldr	r0, [pc, #596]	; (4039b4 <_dtoa_r+0x2ac>)
  403760:	6018      	str	r0, [r3, #0]
  403762:	3801      	subs	r0, #1
  403764:	b01b      	add	sp, #108	; 0x6c
  403766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40376a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40376c:	f242 730f 	movw	r3, #9999	; 0x270f
  403770:	6013      	str	r3, [r2, #0]
  403772:	f1ba 0f00 	cmp.w	sl, #0
  403776:	d10d      	bne.n	403794 <_dtoa_r+0x8c>
  403778:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40377c:	b955      	cbnz	r5, 403794 <_dtoa_r+0x8c>
  40377e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403780:	488d      	ldr	r0, [pc, #564]	; (4039b8 <_dtoa_r+0x2b0>)
  403782:	2b00      	cmp	r3, #0
  403784:	d0ee      	beq.n	403764 <_dtoa_r+0x5c>
  403786:	f100 0308 	add.w	r3, r0, #8
  40378a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40378c:	6013      	str	r3, [r2, #0]
  40378e:	b01b      	add	sp, #108	; 0x6c
  403790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403794:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403796:	4889      	ldr	r0, [pc, #548]	; (4039bc <_dtoa_r+0x2b4>)
  403798:	2b00      	cmp	r3, #0
  40379a:	d0e3      	beq.n	403764 <_dtoa_r+0x5c>
  40379c:	1cc3      	adds	r3, r0, #3
  40379e:	e7f4      	b.n	40378a <_dtoa_r+0x82>
  4037a0:	2301      	movs	r3, #1
  4037a2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4037a6:	6033      	str	r3, [r6, #0]
  4037a8:	46ab      	mov	fp, r5
  4037aa:	e7c5      	b.n	403738 <_dtoa_r+0x30>
  4037ac:	aa18      	add	r2, sp, #96	; 0x60
  4037ae:	ab19      	add	r3, sp, #100	; 0x64
  4037b0:	9201      	str	r2, [sp, #4]
  4037b2:	9300      	str	r3, [sp, #0]
  4037b4:	4652      	mov	r2, sl
  4037b6:	465b      	mov	r3, fp
  4037b8:	4620      	mov	r0, r4
  4037ba:	f001 fcdb 	bl	405174 <__d2b>
  4037be:	0d2b      	lsrs	r3, r5, #20
  4037c0:	4681      	mov	r9, r0
  4037c2:	d071      	beq.n	4038a8 <_dtoa_r+0x1a0>
  4037c4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4037c8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4037cc:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4037ce:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4037d2:	4650      	mov	r0, sl
  4037d4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4037d8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4037dc:	2200      	movs	r2, #0
  4037de:	4b78      	ldr	r3, [pc, #480]	; (4039c0 <_dtoa_r+0x2b8>)
  4037e0:	f002 fa34 	bl	405c4c <__aeabi_dsub>
  4037e4:	a36c      	add	r3, pc, #432	; (adr r3, 403998 <_dtoa_r+0x290>)
  4037e6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4037ea:	f002 fbe3 	bl	405fb4 <__aeabi_dmul>
  4037ee:	a36c      	add	r3, pc, #432	; (adr r3, 4039a0 <_dtoa_r+0x298>)
  4037f0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4037f4:	f002 fa2c 	bl	405c50 <__adddf3>
  4037f8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4037fc:	4630      	mov	r0, r6
  4037fe:	f002 fb73 	bl	405ee8 <__aeabi_i2d>
  403802:	a369      	add	r3, pc, #420	; (adr r3, 4039a8 <_dtoa_r+0x2a0>)
  403804:	e9d3 2300 	ldrd	r2, r3, [r3]
  403808:	f002 fbd4 	bl	405fb4 <__aeabi_dmul>
  40380c:	4602      	mov	r2, r0
  40380e:	460b      	mov	r3, r1
  403810:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403814:	f002 fa1c 	bl	405c50 <__adddf3>
  403818:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40381c:	f002 fe7a 	bl	406514 <__aeabi_d2iz>
  403820:	2200      	movs	r2, #0
  403822:	9002      	str	r0, [sp, #8]
  403824:	2300      	movs	r3, #0
  403826:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40382a:	f002 fe35 	bl	406498 <__aeabi_dcmplt>
  40382e:	2800      	cmp	r0, #0
  403830:	f040 8173 	bne.w	403b1a <_dtoa_r+0x412>
  403834:	9d02      	ldr	r5, [sp, #8]
  403836:	2d16      	cmp	r5, #22
  403838:	f200 815d 	bhi.w	403af6 <_dtoa_r+0x3ee>
  40383c:	4b61      	ldr	r3, [pc, #388]	; (4039c4 <_dtoa_r+0x2bc>)
  40383e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403842:	e9d3 0100 	ldrd	r0, r1, [r3]
  403846:	4652      	mov	r2, sl
  403848:	465b      	mov	r3, fp
  40384a:	f002 fe43 	bl	4064d4 <__aeabi_dcmpgt>
  40384e:	2800      	cmp	r0, #0
  403850:	f000 81c5 	beq.w	403bde <_dtoa_r+0x4d6>
  403854:	1e6b      	subs	r3, r5, #1
  403856:	9302      	str	r3, [sp, #8]
  403858:	2300      	movs	r3, #0
  40385a:	930e      	str	r3, [sp, #56]	; 0x38
  40385c:	1bbf      	subs	r7, r7, r6
  40385e:	1e7b      	subs	r3, r7, #1
  403860:	9306      	str	r3, [sp, #24]
  403862:	f100 8154 	bmi.w	403b0e <_dtoa_r+0x406>
  403866:	2300      	movs	r3, #0
  403868:	9308      	str	r3, [sp, #32]
  40386a:	9b02      	ldr	r3, [sp, #8]
  40386c:	2b00      	cmp	r3, #0
  40386e:	f2c0 8145 	blt.w	403afc <_dtoa_r+0x3f4>
  403872:	9a06      	ldr	r2, [sp, #24]
  403874:	930d      	str	r3, [sp, #52]	; 0x34
  403876:	4611      	mov	r1, r2
  403878:	4419      	add	r1, r3
  40387a:	2300      	movs	r3, #0
  40387c:	9106      	str	r1, [sp, #24]
  40387e:	930c      	str	r3, [sp, #48]	; 0x30
  403880:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403882:	2b09      	cmp	r3, #9
  403884:	d82a      	bhi.n	4038dc <_dtoa_r+0x1d4>
  403886:	2b05      	cmp	r3, #5
  403888:	f340 865b 	ble.w	404542 <_dtoa_r+0xe3a>
  40388c:	3b04      	subs	r3, #4
  40388e:	9324      	str	r3, [sp, #144]	; 0x90
  403890:	2500      	movs	r5, #0
  403892:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403894:	3b02      	subs	r3, #2
  403896:	2b03      	cmp	r3, #3
  403898:	f200 8642 	bhi.w	404520 <_dtoa_r+0xe18>
  40389c:	e8df f013 	tbh	[pc, r3, lsl #1]
  4038a0:	02c903d4 	.word	0x02c903d4
  4038a4:	046103df 	.word	0x046103df
  4038a8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4038aa:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4038ac:	443e      	add	r6, r7
  4038ae:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4038b2:	2b20      	cmp	r3, #32
  4038b4:	f340 818e 	ble.w	403bd4 <_dtoa_r+0x4cc>
  4038b8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4038bc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4038c0:	409d      	lsls	r5, r3
  4038c2:	fa2a f000 	lsr.w	r0, sl, r0
  4038c6:	4328      	orrs	r0, r5
  4038c8:	f002 fafe 	bl	405ec8 <__aeabi_ui2d>
  4038cc:	2301      	movs	r3, #1
  4038ce:	3e01      	subs	r6, #1
  4038d0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4038d4:	9314      	str	r3, [sp, #80]	; 0x50
  4038d6:	e781      	b.n	4037dc <_dtoa_r+0xd4>
  4038d8:	483b      	ldr	r0, [pc, #236]	; (4039c8 <_dtoa_r+0x2c0>)
  4038da:	e743      	b.n	403764 <_dtoa_r+0x5c>
  4038dc:	2100      	movs	r1, #0
  4038de:	6461      	str	r1, [r4, #68]	; 0x44
  4038e0:	4620      	mov	r0, r4
  4038e2:	9125      	str	r1, [sp, #148]	; 0x94
  4038e4:	f001 f9a8 	bl	404c38 <_Balloc>
  4038e8:	f04f 33ff 	mov.w	r3, #4294967295
  4038ec:	930a      	str	r3, [sp, #40]	; 0x28
  4038ee:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4038f0:	930f      	str	r3, [sp, #60]	; 0x3c
  4038f2:	2301      	movs	r3, #1
  4038f4:	9004      	str	r0, [sp, #16]
  4038f6:	6420      	str	r0, [r4, #64]	; 0x40
  4038f8:	9224      	str	r2, [sp, #144]	; 0x90
  4038fa:	930b      	str	r3, [sp, #44]	; 0x2c
  4038fc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4038fe:	2b00      	cmp	r3, #0
  403900:	f2c0 80d9 	blt.w	403ab6 <_dtoa_r+0x3ae>
  403904:	9a02      	ldr	r2, [sp, #8]
  403906:	2a0e      	cmp	r2, #14
  403908:	f300 80d5 	bgt.w	403ab6 <_dtoa_r+0x3ae>
  40390c:	4b2d      	ldr	r3, [pc, #180]	; (4039c4 <_dtoa_r+0x2bc>)
  40390e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403912:	e9d3 2300 	ldrd	r2, r3, [r3]
  403916:	e9cd 2308 	strd	r2, r3, [sp, #32]
  40391a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40391c:	2b00      	cmp	r3, #0
  40391e:	f2c0 83ba 	blt.w	404096 <_dtoa_r+0x98e>
  403922:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403926:	4650      	mov	r0, sl
  403928:	462a      	mov	r2, r5
  40392a:	4633      	mov	r3, r6
  40392c:	4659      	mov	r1, fp
  40392e:	f002 fc6b 	bl	406208 <__aeabi_ddiv>
  403932:	f002 fdef 	bl	406514 <__aeabi_d2iz>
  403936:	4680      	mov	r8, r0
  403938:	f002 fad6 	bl	405ee8 <__aeabi_i2d>
  40393c:	462a      	mov	r2, r5
  40393e:	4633      	mov	r3, r6
  403940:	f002 fb38 	bl	405fb4 <__aeabi_dmul>
  403944:	460b      	mov	r3, r1
  403946:	4602      	mov	r2, r0
  403948:	4659      	mov	r1, fp
  40394a:	4650      	mov	r0, sl
  40394c:	f002 f97e 	bl	405c4c <__aeabi_dsub>
  403950:	9d04      	ldr	r5, [sp, #16]
  403952:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403956:	702b      	strb	r3, [r5, #0]
  403958:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40395a:	2b01      	cmp	r3, #1
  40395c:	4606      	mov	r6, r0
  40395e:	460f      	mov	r7, r1
  403960:	f105 0501 	add.w	r5, r5, #1
  403964:	d068      	beq.n	403a38 <_dtoa_r+0x330>
  403966:	2200      	movs	r2, #0
  403968:	4b18      	ldr	r3, [pc, #96]	; (4039cc <_dtoa_r+0x2c4>)
  40396a:	f002 fb23 	bl	405fb4 <__aeabi_dmul>
  40396e:	2200      	movs	r2, #0
  403970:	2300      	movs	r3, #0
  403972:	4606      	mov	r6, r0
  403974:	460f      	mov	r7, r1
  403976:	f002 fd85 	bl	406484 <__aeabi_dcmpeq>
  40397a:	2800      	cmp	r0, #0
  40397c:	f040 8088 	bne.w	403a90 <_dtoa_r+0x388>
  403980:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403984:	f04f 0a00 	mov.w	sl, #0
  403988:	f8df b040 	ldr.w	fp, [pc, #64]	; 4039cc <_dtoa_r+0x2c4>
  40398c:	940c      	str	r4, [sp, #48]	; 0x30
  40398e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403992:	e028      	b.n	4039e6 <_dtoa_r+0x2de>
  403994:	f3af 8000 	nop.w
  403998:	636f4361 	.word	0x636f4361
  40399c:	3fd287a7 	.word	0x3fd287a7
  4039a0:	8b60c8b3 	.word	0x8b60c8b3
  4039a4:	3fc68a28 	.word	0x3fc68a28
  4039a8:	509f79fb 	.word	0x509f79fb
  4039ac:	3fd34413 	.word	0x3fd34413
  4039b0:	7ff00000 	.word	0x7ff00000
  4039b4:	004075f1 	.word	0x004075f1
  4039b8:	00407614 	.word	0x00407614
  4039bc:	00407620 	.word	0x00407620
  4039c0:	3ff80000 	.word	0x3ff80000
  4039c4:	00407650 	.word	0x00407650
  4039c8:	004075f0 	.word	0x004075f0
  4039cc:	40240000 	.word	0x40240000
  4039d0:	f002 faf0 	bl	405fb4 <__aeabi_dmul>
  4039d4:	2200      	movs	r2, #0
  4039d6:	2300      	movs	r3, #0
  4039d8:	4606      	mov	r6, r0
  4039da:	460f      	mov	r7, r1
  4039dc:	f002 fd52 	bl	406484 <__aeabi_dcmpeq>
  4039e0:	2800      	cmp	r0, #0
  4039e2:	f040 83c1 	bne.w	404168 <_dtoa_r+0xa60>
  4039e6:	4642      	mov	r2, r8
  4039e8:	464b      	mov	r3, r9
  4039ea:	4630      	mov	r0, r6
  4039ec:	4639      	mov	r1, r7
  4039ee:	f002 fc0b 	bl	406208 <__aeabi_ddiv>
  4039f2:	f002 fd8f 	bl	406514 <__aeabi_d2iz>
  4039f6:	4604      	mov	r4, r0
  4039f8:	f002 fa76 	bl	405ee8 <__aeabi_i2d>
  4039fc:	4642      	mov	r2, r8
  4039fe:	464b      	mov	r3, r9
  403a00:	f002 fad8 	bl	405fb4 <__aeabi_dmul>
  403a04:	4602      	mov	r2, r0
  403a06:	460b      	mov	r3, r1
  403a08:	4630      	mov	r0, r6
  403a0a:	4639      	mov	r1, r7
  403a0c:	f002 f91e 	bl	405c4c <__aeabi_dsub>
  403a10:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403a14:	9e04      	ldr	r6, [sp, #16]
  403a16:	f805 eb01 	strb.w	lr, [r5], #1
  403a1a:	eba5 0e06 	sub.w	lr, r5, r6
  403a1e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403a20:	45b6      	cmp	lr, r6
  403a22:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403a26:	4652      	mov	r2, sl
  403a28:	465b      	mov	r3, fp
  403a2a:	d1d1      	bne.n	4039d0 <_dtoa_r+0x2c8>
  403a2c:	46a0      	mov	r8, r4
  403a2e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403a32:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403a34:	4606      	mov	r6, r0
  403a36:	460f      	mov	r7, r1
  403a38:	4632      	mov	r2, r6
  403a3a:	463b      	mov	r3, r7
  403a3c:	4630      	mov	r0, r6
  403a3e:	4639      	mov	r1, r7
  403a40:	f002 f906 	bl	405c50 <__adddf3>
  403a44:	4606      	mov	r6, r0
  403a46:	460f      	mov	r7, r1
  403a48:	4602      	mov	r2, r0
  403a4a:	460b      	mov	r3, r1
  403a4c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403a50:	f002 fd22 	bl	406498 <__aeabi_dcmplt>
  403a54:	b948      	cbnz	r0, 403a6a <_dtoa_r+0x362>
  403a56:	4632      	mov	r2, r6
  403a58:	463b      	mov	r3, r7
  403a5a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403a5e:	f002 fd11 	bl	406484 <__aeabi_dcmpeq>
  403a62:	b1a8      	cbz	r0, 403a90 <_dtoa_r+0x388>
  403a64:	f018 0f01 	tst.w	r8, #1
  403a68:	d012      	beq.n	403a90 <_dtoa_r+0x388>
  403a6a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403a6e:	9a04      	ldr	r2, [sp, #16]
  403a70:	1e6b      	subs	r3, r5, #1
  403a72:	e004      	b.n	403a7e <_dtoa_r+0x376>
  403a74:	429a      	cmp	r2, r3
  403a76:	f000 8401 	beq.w	40427c <_dtoa_r+0xb74>
  403a7a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403a7e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403a82:	f103 0501 	add.w	r5, r3, #1
  403a86:	d0f5      	beq.n	403a74 <_dtoa_r+0x36c>
  403a88:	f108 0801 	add.w	r8, r8, #1
  403a8c:	f883 8000 	strb.w	r8, [r3]
  403a90:	4649      	mov	r1, r9
  403a92:	4620      	mov	r0, r4
  403a94:	f001 f8f6 	bl	404c84 <_Bfree>
  403a98:	2200      	movs	r2, #0
  403a9a:	9b02      	ldr	r3, [sp, #8]
  403a9c:	702a      	strb	r2, [r5, #0]
  403a9e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403aa0:	3301      	adds	r3, #1
  403aa2:	6013      	str	r3, [r2, #0]
  403aa4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403aa6:	2b00      	cmp	r3, #0
  403aa8:	f000 839e 	beq.w	4041e8 <_dtoa_r+0xae0>
  403aac:	9804      	ldr	r0, [sp, #16]
  403aae:	601d      	str	r5, [r3, #0]
  403ab0:	b01b      	add	sp, #108	; 0x6c
  403ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403ab6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403ab8:	2a00      	cmp	r2, #0
  403aba:	d03e      	beq.n	403b3a <_dtoa_r+0x432>
  403abc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403abe:	2a01      	cmp	r2, #1
  403ac0:	f340 8311 	ble.w	4040e6 <_dtoa_r+0x9de>
  403ac4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ac6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403ac8:	1e5f      	subs	r7, r3, #1
  403aca:	42ba      	cmp	r2, r7
  403acc:	f2c0 838f 	blt.w	4041ee <_dtoa_r+0xae6>
  403ad0:	1bd7      	subs	r7, r2, r7
  403ad2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ad4:	2b00      	cmp	r3, #0
  403ad6:	f2c0 848b 	blt.w	4043f0 <_dtoa_r+0xce8>
  403ada:	9d08      	ldr	r5, [sp, #32]
  403adc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ade:	9a08      	ldr	r2, [sp, #32]
  403ae0:	441a      	add	r2, r3
  403ae2:	9208      	str	r2, [sp, #32]
  403ae4:	9a06      	ldr	r2, [sp, #24]
  403ae6:	2101      	movs	r1, #1
  403ae8:	441a      	add	r2, r3
  403aea:	4620      	mov	r0, r4
  403aec:	9206      	str	r2, [sp, #24]
  403aee:	f001 f963 	bl	404db8 <__i2b>
  403af2:	4606      	mov	r6, r0
  403af4:	e024      	b.n	403b40 <_dtoa_r+0x438>
  403af6:	2301      	movs	r3, #1
  403af8:	930e      	str	r3, [sp, #56]	; 0x38
  403afa:	e6af      	b.n	40385c <_dtoa_r+0x154>
  403afc:	9a08      	ldr	r2, [sp, #32]
  403afe:	9b02      	ldr	r3, [sp, #8]
  403b00:	1ad2      	subs	r2, r2, r3
  403b02:	425b      	negs	r3, r3
  403b04:	930c      	str	r3, [sp, #48]	; 0x30
  403b06:	2300      	movs	r3, #0
  403b08:	9208      	str	r2, [sp, #32]
  403b0a:	930d      	str	r3, [sp, #52]	; 0x34
  403b0c:	e6b8      	b.n	403880 <_dtoa_r+0x178>
  403b0e:	f1c7 0301 	rsb	r3, r7, #1
  403b12:	9308      	str	r3, [sp, #32]
  403b14:	2300      	movs	r3, #0
  403b16:	9306      	str	r3, [sp, #24]
  403b18:	e6a7      	b.n	40386a <_dtoa_r+0x162>
  403b1a:	9d02      	ldr	r5, [sp, #8]
  403b1c:	4628      	mov	r0, r5
  403b1e:	f002 f9e3 	bl	405ee8 <__aeabi_i2d>
  403b22:	4602      	mov	r2, r0
  403b24:	460b      	mov	r3, r1
  403b26:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403b2a:	f002 fcab 	bl	406484 <__aeabi_dcmpeq>
  403b2e:	2800      	cmp	r0, #0
  403b30:	f47f ae80 	bne.w	403834 <_dtoa_r+0x12c>
  403b34:	1e6b      	subs	r3, r5, #1
  403b36:	9302      	str	r3, [sp, #8]
  403b38:	e67c      	b.n	403834 <_dtoa_r+0x12c>
  403b3a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403b3c:	9d08      	ldr	r5, [sp, #32]
  403b3e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403b40:	2d00      	cmp	r5, #0
  403b42:	dd0c      	ble.n	403b5e <_dtoa_r+0x456>
  403b44:	9906      	ldr	r1, [sp, #24]
  403b46:	2900      	cmp	r1, #0
  403b48:	460b      	mov	r3, r1
  403b4a:	dd08      	ble.n	403b5e <_dtoa_r+0x456>
  403b4c:	42a9      	cmp	r1, r5
  403b4e:	9a08      	ldr	r2, [sp, #32]
  403b50:	bfa8      	it	ge
  403b52:	462b      	movge	r3, r5
  403b54:	1ad2      	subs	r2, r2, r3
  403b56:	1aed      	subs	r5, r5, r3
  403b58:	1acb      	subs	r3, r1, r3
  403b5a:	9208      	str	r2, [sp, #32]
  403b5c:	9306      	str	r3, [sp, #24]
  403b5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403b60:	b1d3      	cbz	r3, 403b98 <_dtoa_r+0x490>
  403b62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403b64:	2b00      	cmp	r3, #0
  403b66:	f000 82b7 	beq.w	4040d8 <_dtoa_r+0x9d0>
  403b6a:	2f00      	cmp	r7, #0
  403b6c:	dd10      	ble.n	403b90 <_dtoa_r+0x488>
  403b6e:	4631      	mov	r1, r6
  403b70:	463a      	mov	r2, r7
  403b72:	4620      	mov	r0, r4
  403b74:	f001 f9bc 	bl	404ef0 <__pow5mult>
  403b78:	464a      	mov	r2, r9
  403b7a:	4601      	mov	r1, r0
  403b7c:	4606      	mov	r6, r0
  403b7e:	4620      	mov	r0, r4
  403b80:	f001 f924 	bl	404dcc <__multiply>
  403b84:	4649      	mov	r1, r9
  403b86:	4680      	mov	r8, r0
  403b88:	4620      	mov	r0, r4
  403b8a:	f001 f87b 	bl	404c84 <_Bfree>
  403b8e:	46c1      	mov	r9, r8
  403b90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403b92:	1bda      	subs	r2, r3, r7
  403b94:	f040 82a1 	bne.w	4040da <_dtoa_r+0x9d2>
  403b98:	2101      	movs	r1, #1
  403b9a:	4620      	mov	r0, r4
  403b9c:	f001 f90c 	bl	404db8 <__i2b>
  403ba0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403ba2:	2b00      	cmp	r3, #0
  403ba4:	4680      	mov	r8, r0
  403ba6:	dd1c      	ble.n	403be2 <_dtoa_r+0x4da>
  403ba8:	4601      	mov	r1, r0
  403baa:	461a      	mov	r2, r3
  403bac:	4620      	mov	r0, r4
  403bae:	f001 f99f 	bl	404ef0 <__pow5mult>
  403bb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403bb4:	2b01      	cmp	r3, #1
  403bb6:	4680      	mov	r8, r0
  403bb8:	f340 8254 	ble.w	404064 <_dtoa_r+0x95c>
  403bbc:	2300      	movs	r3, #0
  403bbe:	930c      	str	r3, [sp, #48]	; 0x30
  403bc0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403bc4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403bc8:	6918      	ldr	r0, [r3, #16]
  403bca:	f001 f8a5 	bl	404d18 <__hi0bits>
  403bce:	f1c0 0020 	rsb	r0, r0, #32
  403bd2:	e010      	b.n	403bf6 <_dtoa_r+0x4ee>
  403bd4:	f1c3 0520 	rsb	r5, r3, #32
  403bd8:	fa0a f005 	lsl.w	r0, sl, r5
  403bdc:	e674      	b.n	4038c8 <_dtoa_r+0x1c0>
  403bde:	900e      	str	r0, [sp, #56]	; 0x38
  403be0:	e63c      	b.n	40385c <_dtoa_r+0x154>
  403be2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403be4:	2b01      	cmp	r3, #1
  403be6:	f340 8287 	ble.w	4040f8 <_dtoa_r+0x9f0>
  403bea:	2300      	movs	r3, #0
  403bec:	930c      	str	r3, [sp, #48]	; 0x30
  403bee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403bf0:	2001      	movs	r0, #1
  403bf2:	2b00      	cmp	r3, #0
  403bf4:	d1e4      	bne.n	403bc0 <_dtoa_r+0x4b8>
  403bf6:	9a06      	ldr	r2, [sp, #24]
  403bf8:	4410      	add	r0, r2
  403bfa:	f010 001f 	ands.w	r0, r0, #31
  403bfe:	f000 80a1 	beq.w	403d44 <_dtoa_r+0x63c>
  403c02:	f1c0 0320 	rsb	r3, r0, #32
  403c06:	2b04      	cmp	r3, #4
  403c08:	f340 849e 	ble.w	404548 <_dtoa_r+0xe40>
  403c0c:	9b08      	ldr	r3, [sp, #32]
  403c0e:	f1c0 001c 	rsb	r0, r0, #28
  403c12:	4403      	add	r3, r0
  403c14:	9308      	str	r3, [sp, #32]
  403c16:	4613      	mov	r3, r2
  403c18:	4403      	add	r3, r0
  403c1a:	4405      	add	r5, r0
  403c1c:	9306      	str	r3, [sp, #24]
  403c1e:	9b08      	ldr	r3, [sp, #32]
  403c20:	2b00      	cmp	r3, #0
  403c22:	dd05      	ble.n	403c30 <_dtoa_r+0x528>
  403c24:	4649      	mov	r1, r9
  403c26:	461a      	mov	r2, r3
  403c28:	4620      	mov	r0, r4
  403c2a:	f001 f9b1 	bl	404f90 <__lshift>
  403c2e:	4681      	mov	r9, r0
  403c30:	9b06      	ldr	r3, [sp, #24]
  403c32:	2b00      	cmp	r3, #0
  403c34:	dd05      	ble.n	403c42 <_dtoa_r+0x53a>
  403c36:	4641      	mov	r1, r8
  403c38:	461a      	mov	r2, r3
  403c3a:	4620      	mov	r0, r4
  403c3c:	f001 f9a8 	bl	404f90 <__lshift>
  403c40:	4680      	mov	r8, r0
  403c42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403c44:	2b00      	cmp	r3, #0
  403c46:	f040 8086 	bne.w	403d56 <_dtoa_r+0x64e>
  403c4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c4c:	2b00      	cmp	r3, #0
  403c4e:	f340 8266 	ble.w	40411e <_dtoa_r+0xa16>
  403c52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403c54:	2b00      	cmp	r3, #0
  403c56:	f000 8098 	beq.w	403d8a <_dtoa_r+0x682>
  403c5a:	2d00      	cmp	r5, #0
  403c5c:	dd05      	ble.n	403c6a <_dtoa_r+0x562>
  403c5e:	4631      	mov	r1, r6
  403c60:	462a      	mov	r2, r5
  403c62:	4620      	mov	r0, r4
  403c64:	f001 f994 	bl	404f90 <__lshift>
  403c68:	4606      	mov	r6, r0
  403c6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403c6c:	2b00      	cmp	r3, #0
  403c6e:	f040 8337 	bne.w	4042e0 <_dtoa_r+0xbd8>
  403c72:	9606      	str	r6, [sp, #24]
  403c74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c76:	9a04      	ldr	r2, [sp, #16]
  403c78:	f8dd b018 	ldr.w	fp, [sp, #24]
  403c7c:	3b01      	subs	r3, #1
  403c7e:	18d3      	adds	r3, r2, r3
  403c80:	930b      	str	r3, [sp, #44]	; 0x2c
  403c82:	f00a 0301 	and.w	r3, sl, #1
  403c86:	930c      	str	r3, [sp, #48]	; 0x30
  403c88:	4617      	mov	r7, r2
  403c8a:	46c2      	mov	sl, r8
  403c8c:	4651      	mov	r1, sl
  403c8e:	4648      	mov	r0, r9
  403c90:	f7ff fca4 	bl	4035dc <quorem>
  403c94:	4631      	mov	r1, r6
  403c96:	4605      	mov	r5, r0
  403c98:	4648      	mov	r0, r9
  403c9a:	f001 f9cb 	bl	405034 <__mcmp>
  403c9e:	465a      	mov	r2, fp
  403ca0:	900a      	str	r0, [sp, #40]	; 0x28
  403ca2:	4651      	mov	r1, sl
  403ca4:	4620      	mov	r0, r4
  403ca6:	f001 f9e1 	bl	40506c <__mdiff>
  403caa:	68c2      	ldr	r2, [r0, #12]
  403cac:	4680      	mov	r8, r0
  403cae:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403cb2:	2a00      	cmp	r2, #0
  403cb4:	f040 822b 	bne.w	40410e <_dtoa_r+0xa06>
  403cb8:	4601      	mov	r1, r0
  403cba:	4648      	mov	r0, r9
  403cbc:	9308      	str	r3, [sp, #32]
  403cbe:	f001 f9b9 	bl	405034 <__mcmp>
  403cc2:	4641      	mov	r1, r8
  403cc4:	9006      	str	r0, [sp, #24]
  403cc6:	4620      	mov	r0, r4
  403cc8:	f000 ffdc 	bl	404c84 <_Bfree>
  403ccc:	9a06      	ldr	r2, [sp, #24]
  403cce:	9b08      	ldr	r3, [sp, #32]
  403cd0:	b932      	cbnz	r2, 403ce0 <_dtoa_r+0x5d8>
  403cd2:	9924      	ldr	r1, [sp, #144]	; 0x90
  403cd4:	b921      	cbnz	r1, 403ce0 <_dtoa_r+0x5d8>
  403cd6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403cd8:	2a00      	cmp	r2, #0
  403cda:	f000 83ef 	beq.w	4044bc <_dtoa_r+0xdb4>
  403cde:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403ce0:	990a      	ldr	r1, [sp, #40]	; 0x28
  403ce2:	2900      	cmp	r1, #0
  403ce4:	f2c0 829f 	blt.w	404226 <_dtoa_r+0xb1e>
  403ce8:	d105      	bne.n	403cf6 <_dtoa_r+0x5ee>
  403cea:	9924      	ldr	r1, [sp, #144]	; 0x90
  403cec:	b919      	cbnz	r1, 403cf6 <_dtoa_r+0x5ee>
  403cee:	990c      	ldr	r1, [sp, #48]	; 0x30
  403cf0:	2900      	cmp	r1, #0
  403cf2:	f000 8298 	beq.w	404226 <_dtoa_r+0xb1e>
  403cf6:	2a00      	cmp	r2, #0
  403cf8:	f300 8306 	bgt.w	404308 <_dtoa_r+0xc00>
  403cfc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403cfe:	703b      	strb	r3, [r7, #0]
  403d00:	f107 0801 	add.w	r8, r7, #1
  403d04:	4297      	cmp	r7, r2
  403d06:	4645      	mov	r5, r8
  403d08:	f000 830c 	beq.w	404324 <_dtoa_r+0xc1c>
  403d0c:	4649      	mov	r1, r9
  403d0e:	2300      	movs	r3, #0
  403d10:	220a      	movs	r2, #10
  403d12:	4620      	mov	r0, r4
  403d14:	f000 ffc0 	bl	404c98 <__multadd>
  403d18:	455e      	cmp	r6, fp
  403d1a:	4681      	mov	r9, r0
  403d1c:	4631      	mov	r1, r6
  403d1e:	f04f 0300 	mov.w	r3, #0
  403d22:	f04f 020a 	mov.w	r2, #10
  403d26:	4620      	mov	r0, r4
  403d28:	f000 81eb 	beq.w	404102 <_dtoa_r+0x9fa>
  403d2c:	f000 ffb4 	bl	404c98 <__multadd>
  403d30:	4659      	mov	r1, fp
  403d32:	4606      	mov	r6, r0
  403d34:	2300      	movs	r3, #0
  403d36:	220a      	movs	r2, #10
  403d38:	4620      	mov	r0, r4
  403d3a:	f000 ffad 	bl	404c98 <__multadd>
  403d3e:	4647      	mov	r7, r8
  403d40:	4683      	mov	fp, r0
  403d42:	e7a3      	b.n	403c8c <_dtoa_r+0x584>
  403d44:	201c      	movs	r0, #28
  403d46:	9b08      	ldr	r3, [sp, #32]
  403d48:	4403      	add	r3, r0
  403d4a:	9308      	str	r3, [sp, #32]
  403d4c:	9b06      	ldr	r3, [sp, #24]
  403d4e:	4403      	add	r3, r0
  403d50:	4405      	add	r5, r0
  403d52:	9306      	str	r3, [sp, #24]
  403d54:	e763      	b.n	403c1e <_dtoa_r+0x516>
  403d56:	4641      	mov	r1, r8
  403d58:	4648      	mov	r0, r9
  403d5a:	f001 f96b 	bl	405034 <__mcmp>
  403d5e:	2800      	cmp	r0, #0
  403d60:	f6bf af73 	bge.w	403c4a <_dtoa_r+0x542>
  403d64:	9f02      	ldr	r7, [sp, #8]
  403d66:	4649      	mov	r1, r9
  403d68:	2300      	movs	r3, #0
  403d6a:	220a      	movs	r2, #10
  403d6c:	4620      	mov	r0, r4
  403d6e:	3f01      	subs	r7, #1
  403d70:	9702      	str	r7, [sp, #8]
  403d72:	f000 ff91 	bl	404c98 <__multadd>
  403d76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403d78:	4681      	mov	r9, r0
  403d7a:	2b00      	cmp	r3, #0
  403d7c:	f040 83b6 	bne.w	4044ec <_dtoa_r+0xde4>
  403d80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d82:	2b00      	cmp	r3, #0
  403d84:	f340 83bf 	ble.w	404506 <_dtoa_r+0xdfe>
  403d88:	930a      	str	r3, [sp, #40]	; 0x28
  403d8a:	f8dd b010 	ldr.w	fp, [sp, #16]
  403d8e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403d90:	465d      	mov	r5, fp
  403d92:	e002      	b.n	403d9a <_dtoa_r+0x692>
  403d94:	f000 ff80 	bl	404c98 <__multadd>
  403d98:	4681      	mov	r9, r0
  403d9a:	4641      	mov	r1, r8
  403d9c:	4648      	mov	r0, r9
  403d9e:	f7ff fc1d 	bl	4035dc <quorem>
  403da2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403da6:	f805 ab01 	strb.w	sl, [r5], #1
  403daa:	eba5 030b 	sub.w	r3, r5, fp
  403dae:	42bb      	cmp	r3, r7
  403db0:	f04f 020a 	mov.w	r2, #10
  403db4:	f04f 0300 	mov.w	r3, #0
  403db8:	4649      	mov	r1, r9
  403dba:	4620      	mov	r0, r4
  403dbc:	dbea      	blt.n	403d94 <_dtoa_r+0x68c>
  403dbe:	9b04      	ldr	r3, [sp, #16]
  403dc0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403dc2:	2a01      	cmp	r2, #1
  403dc4:	bfac      	ite	ge
  403dc6:	189b      	addge	r3, r3, r2
  403dc8:	3301      	addlt	r3, #1
  403dca:	461d      	mov	r5, r3
  403dcc:	f04f 0b00 	mov.w	fp, #0
  403dd0:	4649      	mov	r1, r9
  403dd2:	2201      	movs	r2, #1
  403dd4:	4620      	mov	r0, r4
  403dd6:	f001 f8db 	bl	404f90 <__lshift>
  403dda:	4641      	mov	r1, r8
  403ddc:	4681      	mov	r9, r0
  403dde:	f001 f929 	bl	405034 <__mcmp>
  403de2:	2800      	cmp	r0, #0
  403de4:	f340 823d 	ble.w	404262 <_dtoa_r+0xb5a>
  403de8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403dec:	9904      	ldr	r1, [sp, #16]
  403dee:	1e6b      	subs	r3, r5, #1
  403df0:	e004      	b.n	403dfc <_dtoa_r+0x6f4>
  403df2:	428b      	cmp	r3, r1
  403df4:	f000 81ae 	beq.w	404154 <_dtoa_r+0xa4c>
  403df8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403dfc:	2a39      	cmp	r2, #57	; 0x39
  403dfe:	f103 0501 	add.w	r5, r3, #1
  403e02:	d0f6      	beq.n	403df2 <_dtoa_r+0x6ea>
  403e04:	3201      	adds	r2, #1
  403e06:	701a      	strb	r2, [r3, #0]
  403e08:	4641      	mov	r1, r8
  403e0a:	4620      	mov	r0, r4
  403e0c:	f000 ff3a 	bl	404c84 <_Bfree>
  403e10:	2e00      	cmp	r6, #0
  403e12:	f43f ae3d 	beq.w	403a90 <_dtoa_r+0x388>
  403e16:	f1bb 0f00 	cmp.w	fp, #0
  403e1a:	d005      	beq.n	403e28 <_dtoa_r+0x720>
  403e1c:	45b3      	cmp	fp, r6
  403e1e:	d003      	beq.n	403e28 <_dtoa_r+0x720>
  403e20:	4659      	mov	r1, fp
  403e22:	4620      	mov	r0, r4
  403e24:	f000 ff2e 	bl	404c84 <_Bfree>
  403e28:	4631      	mov	r1, r6
  403e2a:	4620      	mov	r0, r4
  403e2c:	f000 ff2a 	bl	404c84 <_Bfree>
  403e30:	e62e      	b.n	403a90 <_dtoa_r+0x388>
  403e32:	2300      	movs	r3, #0
  403e34:	930b      	str	r3, [sp, #44]	; 0x2c
  403e36:	9b02      	ldr	r3, [sp, #8]
  403e38:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403e3a:	4413      	add	r3, r2
  403e3c:	930f      	str	r3, [sp, #60]	; 0x3c
  403e3e:	3301      	adds	r3, #1
  403e40:	2b01      	cmp	r3, #1
  403e42:	461f      	mov	r7, r3
  403e44:	461e      	mov	r6, r3
  403e46:	930a      	str	r3, [sp, #40]	; 0x28
  403e48:	bfb8      	it	lt
  403e4a:	2701      	movlt	r7, #1
  403e4c:	2100      	movs	r1, #0
  403e4e:	2f17      	cmp	r7, #23
  403e50:	6461      	str	r1, [r4, #68]	; 0x44
  403e52:	d90a      	bls.n	403e6a <_dtoa_r+0x762>
  403e54:	2201      	movs	r2, #1
  403e56:	2304      	movs	r3, #4
  403e58:	005b      	lsls	r3, r3, #1
  403e5a:	f103 0014 	add.w	r0, r3, #20
  403e5e:	4287      	cmp	r7, r0
  403e60:	4611      	mov	r1, r2
  403e62:	f102 0201 	add.w	r2, r2, #1
  403e66:	d2f7      	bcs.n	403e58 <_dtoa_r+0x750>
  403e68:	6461      	str	r1, [r4, #68]	; 0x44
  403e6a:	4620      	mov	r0, r4
  403e6c:	f000 fee4 	bl	404c38 <_Balloc>
  403e70:	2e0e      	cmp	r6, #14
  403e72:	9004      	str	r0, [sp, #16]
  403e74:	6420      	str	r0, [r4, #64]	; 0x40
  403e76:	f63f ad41 	bhi.w	4038fc <_dtoa_r+0x1f4>
  403e7a:	2d00      	cmp	r5, #0
  403e7c:	f43f ad3e 	beq.w	4038fc <_dtoa_r+0x1f4>
  403e80:	9902      	ldr	r1, [sp, #8]
  403e82:	2900      	cmp	r1, #0
  403e84:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403e88:	f340 8202 	ble.w	404290 <_dtoa_r+0xb88>
  403e8c:	4bb8      	ldr	r3, [pc, #736]	; (404170 <_dtoa_r+0xa68>)
  403e8e:	f001 020f 	and.w	r2, r1, #15
  403e92:	110d      	asrs	r5, r1, #4
  403e94:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403e98:	06e9      	lsls	r1, r5, #27
  403e9a:	e9d3 6700 	ldrd	r6, r7, [r3]
  403e9e:	f140 81ae 	bpl.w	4041fe <_dtoa_r+0xaf6>
  403ea2:	4bb4      	ldr	r3, [pc, #720]	; (404174 <_dtoa_r+0xa6c>)
  403ea4:	4650      	mov	r0, sl
  403ea6:	4659      	mov	r1, fp
  403ea8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403eac:	f002 f9ac 	bl	406208 <__aeabi_ddiv>
  403eb0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403eb4:	f005 050f 	and.w	r5, r5, #15
  403eb8:	f04f 0a03 	mov.w	sl, #3
  403ebc:	b18d      	cbz	r5, 403ee2 <_dtoa_r+0x7da>
  403ebe:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 404174 <_dtoa_r+0xa6c>
  403ec2:	07ea      	lsls	r2, r5, #31
  403ec4:	d509      	bpl.n	403eda <_dtoa_r+0x7d2>
  403ec6:	4630      	mov	r0, r6
  403ec8:	4639      	mov	r1, r7
  403eca:	e9d8 2300 	ldrd	r2, r3, [r8]
  403ece:	f002 f871 	bl	405fb4 <__aeabi_dmul>
  403ed2:	f10a 0a01 	add.w	sl, sl, #1
  403ed6:	4606      	mov	r6, r0
  403ed8:	460f      	mov	r7, r1
  403eda:	106d      	asrs	r5, r5, #1
  403edc:	f108 0808 	add.w	r8, r8, #8
  403ee0:	d1ef      	bne.n	403ec2 <_dtoa_r+0x7ba>
  403ee2:	463b      	mov	r3, r7
  403ee4:	4632      	mov	r2, r6
  403ee6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403eea:	f002 f98d 	bl	406208 <__aeabi_ddiv>
  403eee:	4607      	mov	r7, r0
  403ef0:	4688      	mov	r8, r1
  403ef2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403ef4:	b143      	cbz	r3, 403f08 <_dtoa_r+0x800>
  403ef6:	2200      	movs	r2, #0
  403ef8:	4b9f      	ldr	r3, [pc, #636]	; (404178 <_dtoa_r+0xa70>)
  403efa:	4638      	mov	r0, r7
  403efc:	4641      	mov	r1, r8
  403efe:	f002 facb 	bl	406498 <__aeabi_dcmplt>
  403f02:	2800      	cmp	r0, #0
  403f04:	f040 8286 	bne.w	404414 <_dtoa_r+0xd0c>
  403f08:	4650      	mov	r0, sl
  403f0a:	f001 ffed 	bl	405ee8 <__aeabi_i2d>
  403f0e:	463a      	mov	r2, r7
  403f10:	4643      	mov	r3, r8
  403f12:	f002 f84f 	bl	405fb4 <__aeabi_dmul>
  403f16:	4b99      	ldr	r3, [pc, #612]	; (40417c <_dtoa_r+0xa74>)
  403f18:	2200      	movs	r2, #0
  403f1a:	f001 fe99 	bl	405c50 <__adddf3>
  403f1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f20:	4605      	mov	r5, r0
  403f22:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403f26:	2b00      	cmp	r3, #0
  403f28:	f000 813e 	beq.w	4041a8 <_dtoa_r+0xaa0>
  403f2c:	9b02      	ldr	r3, [sp, #8]
  403f2e:	9315      	str	r3, [sp, #84]	; 0x54
  403f30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f32:	9312      	str	r3, [sp, #72]	; 0x48
  403f34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403f36:	2b00      	cmp	r3, #0
  403f38:	f000 81fa 	beq.w	404330 <_dtoa_r+0xc28>
  403f3c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403f3e:	4b8c      	ldr	r3, [pc, #560]	; (404170 <_dtoa_r+0xa68>)
  403f40:	498f      	ldr	r1, [pc, #572]	; (404180 <_dtoa_r+0xa78>)
  403f42:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403f46:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403f4a:	2000      	movs	r0, #0
  403f4c:	f002 f95c 	bl	406208 <__aeabi_ddiv>
  403f50:	462a      	mov	r2, r5
  403f52:	4633      	mov	r3, r6
  403f54:	f001 fe7a 	bl	405c4c <__aeabi_dsub>
  403f58:	4682      	mov	sl, r0
  403f5a:	468b      	mov	fp, r1
  403f5c:	4638      	mov	r0, r7
  403f5e:	4641      	mov	r1, r8
  403f60:	f002 fad8 	bl	406514 <__aeabi_d2iz>
  403f64:	4605      	mov	r5, r0
  403f66:	f001 ffbf 	bl	405ee8 <__aeabi_i2d>
  403f6a:	4602      	mov	r2, r0
  403f6c:	460b      	mov	r3, r1
  403f6e:	4638      	mov	r0, r7
  403f70:	4641      	mov	r1, r8
  403f72:	f001 fe6b 	bl	405c4c <__aeabi_dsub>
  403f76:	3530      	adds	r5, #48	; 0x30
  403f78:	fa5f f885 	uxtb.w	r8, r5
  403f7c:	9d04      	ldr	r5, [sp, #16]
  403f7e:	4606      	mov	r6, r0
  403f80:	460f      	mov	r7, r1
  403f82:	f885 8000 	strb.w	r8, [r5]
  403f86:	4602      	mov	r2, r0
  403f88:	460b      	mov	r3, r1
  403f8a:	4650      	mov	r0, sl
  403f8c:	4659      	mov	r1, fp
  403f8e:	3501      	adds	r5, #1
  403f90:	f002 faa0 	bl	4064d4 <__aeabi_dcmpgt>
  403f94:	2800      	cmp	r0, #0
  403f96:	d154      	bne.n	404042 <_dtoa_r+0x93a>
  403f98:	4632      	mov	r2, r6
  403f9a:	463b      	mov	r3, r7
  403f9c:	2000      	movs	r0, #0
  403f9e:	4976      	ldr	r1, [pc, #472]	; (404178 <_dtoa_r+0xa70>)
  403fa0:	f001 fe54 	bl	405c4c <__aeabi_dsub>
  403fa4:	4602      	mov	r2, r0
  403fa6:	460b      	mov	r3, r1
  403fa8:	4650      	mov	r0, sl
  403faa:	4659      	mov	r1, fp
  403fac:	f002 fa92 	bl	4064d4 <__aeabi_dcmpgt>
  403fb0:	2800      	cmp	r0, #0
  403fb2:	f040 8270 	bne.w	404496 <_dtoa_r+0xd8e>
  403fb6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403fb8:	2a01      	cmp	r2, #1
  403fba:	f000 8111 	beq.w	4041e0 <_dtoa_r+0xad8>
  403fbe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403fc0:	9a04      	ldr	r2, [sp, #16]
  403fc2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403fc6:	4413      	add	r3, r2
  403fc8:	4699      	mov	r9, r3
  403fca:	e00d      	b.n	403fe8 <_dtoa_r+0x8e0>
  403fcc:	2000      	movs	r0, #0
  403fce:	496a      	ldr	r1, [pc, #424]	; (404178 <_dtoa_r+0xa70>)
  403fd0:	f001 fe3c 	bl	405c4c <__aeabi_dsub>
  403fd4:	4652      	mov	r2, sl
  403fd6:	465b      	mov	r3, fp
  403fd8:	f002 fa5e 	bl	406498 <__aeabi_dcmplt>
  403fdc:	2800      	cmp	r0, #0
  403fde:	f040 8258 	bne.w	404492 <_dtoa_r+0xd8a>
  403fe2:	454d      	cmp	r5, r9
  403fe4:	f000 80fa 	beq.w	4041dc <_dtoa_r+0xad4>
  403fe8:	4650      	mov	r0, sl
  403fea:	4659      	mov	r1, fp
  403fec:	2200      	movs	r2, #0
  403fee:	4b65      	ldr	r3, [pc, #404]	; (404184 <_dtoa_r+0xa7c>)
  403ff0:	f001 ffe0 	bl	405fb4 <__aeabi_dmul>
  403ff4:	2200      	movs	r2, #0
  403ff6:	4b63      	ldr	r3, [pc, #396]	; (404184 <_dtoa_r+0xa7c>)
  403ff8:	4682      	mov	sl, r0
  403ffa:	468b      	mov	fp, r1
  403ffc:	4630      	mov	r0, r6
  403ffe:	4639      	mov	r1, r7
  404000:	f001 ffd8 	bl	405fb4 <__aeabi_dmul>
  404004:	460f      	mov	r7, r1
  404006:	4606      	mov	r6, r0
  404008:	f002 fa84 	bl	406514 <__aeabi_d2iz>
  40400c:	4680      	mov	r8, r0
  40400e:	f001 ff6b 	bl	405ee8 <__aeabi_i2d>
  404012:	4602      	mov	r2, r0
  404014:	460b      	mov	r3, r1
  404016:	4630      	mov	r0, r6
  404018:	4639      	mov	r1, r7
  40401a:	f001 fe17 	bl	405c4c <__aeabi_dsub>
  40401e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404022:	fa5f f888 	uxtb.w	r8, r8
  404026:	4652      	mov	r2, sl
  404028:	465b      	mov	r3, fp
  40402a:	f805 8b01 	strb.w	r8, [r5], #1
  40402e:	4606      	mov	r6, r0
  404030:	460f      	mov	r7, r1
  404032:	f002 fa31 	bl	406498 <__aeabi_dcmplt>
  404036:	4632      	mov	r2, r6
  404038:	463b      	mov	r3, r7
  40403a:	2800      	cmp	r0, #0
  40403c:	d0c6      	beq.n	403fcc <_dtoa_r+0x8c4>
  40403e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404042:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404044:	9302      	str	r3, [sp, #8]
  404046:	e523      	b.n	403a90 <_dtoa_r+0x388>
  404048:	2300      	movs	r3, #0
  40404a:	930b      	str	r3, [sp, #44]	; 0x2c
  40404c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40404e:	2b00      	cmp	r3, #0
  404050:	f340 80dc 	ble.w	40420c <_dtoa_r+0xb04>
  404054:	461f      	mov	r7, r3
  404056:	461e      	mov	r6, r3
  404058:	930f      	str	r3, [sp, #60]	; 0x3c
  40405a:	930a      	str	r3, [sp, #40]	; 0x28
  40405c:	e6f6      	b.n	403e4c <_dtoa_r+0x744>
  40405e:	2301      	movs	r3, #1
  404060:	930b      	str	r3, [sp, #44]	; 0x2c
  404062:	e7f3      	b.n	40404c <_dtoa_r+0x944>
  404064:	f1ba 0f00 	cmp.w	sl, #0
  404068:	f47f ada8 	bne.w	403bbc <_dtoa_r+0x4b4>
  40406c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404070:	2b00      	cmp	r3, #0
  404072:	f47f adba 	bne.w	403bea <_dtoa_r+0x4e2>
  404076:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  40407a:	0d3f      	lsrs	r7, r7, #20
  40407c:	053f      	lsls	r7, r7, #20
  40407e:	2f00      	cmp	r7, #0
  404080:	f000 820d 	beq.w	40449e <_dtoa_r+0xd96>
  404084:	9b08      	ldr	r3, [sp, #32]
  404086:	3301      	adds	r3, #1
  404088:	9308      	str	r3, [sp, #32]
  40408a:	9b06      	ldr	r3, [sp, #24]
  40408c:	3301      	adds	r3, #1
  40408e:	9306      	str	r3, [sp, #24]
  404090:	2301      	movs	r3, #1
  404092:	930c      	str	r3, [sp, #48]	; 0x30
  404094:	e5ab      	b.n	403bee <_dtoa_r+0x4e6>
  404096:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404098:	2b00      	cmp	r3, #0
  40409a:	f73f ac42 	bgt.w	403922 <_dtoa_r+0x21a>
  40409e:	f040 8221 	bne.w	4044e4 <_dtoa_r+0xddc>
  4040a2:	2200      	movs	r2, #0
  4040a4:	4b38      	ldr	r3, [pc, #224]	; (404188 <_dtoa_r+0xa80>)
  4040a6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4040aa:	f001 ff83 	bl	405fb4 <__aeabi_dmul>
  4040ae:	4652      	mov	r2, sl
  4040b0:	465b      	mov	r3, fp
  4040b2:	f002 fa05 	bl	4064c0 <__aeabi_dcmpge>
  4040b6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4040ba:	4646      	mov	r6, r8
  4040bc:	2800      	cmp	r0, #0
  4040be:	d041      	beq.n	404144 <_dtoa_r+0xa3c>
  4040c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4040c2:	9d04      	ldr	r5, [sp, #16]
  4040c4:	43db      	mvns	r3, r3
  4040c6:	9302      	str	r3, [sp, #8]
  4040c8:	4641      	mov	r1, r8
  4040ca:	4620      	mov	r0, r4
  4040cc:	f000 fdda 	bl	404c84 <_Bfree>
  4040d0:	2e00      	cmp	r6, #0
  4040d2:	f43f acdd 	beq.w	403a90 <_dtoa_r+0x388>
  4040d6:	e6a7      	b.n	403e28 <_dtoa_r+0x720>
  4040d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4040da:	4649      	mov	r1, r9
  4040dc:	4620      	mov	r0, r4
  4040de:	f000 ff07 	bl	404ef0 <__pow5mult>
  4040e2:	4681      	mov	r9, r0
  4040e4:	e558      	b.n	403b98 <_dtoa_r+0x490>
  4040e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4040e8:	2a00      	cmp	r2, #0
  4040ea:	f000 8187 	beq.w	4043fc <_dtoa_r+0xcf4>
  4040ee:	f203 4333 	addw	r3, r3, #1075	; 0x433
  4040f2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4040f4:	9d08      	ldr	r5, [sp, #32]
  4040f6:	e4f2      	b.n	403ade <_dtoa_r+0x3d6>
  4040f8:	f1ba 0f00 	cmp.w	sl, #0
  4040fc:	f47f ad75 	bne.w	403bea <_dtoa_r+0x4e2>
  404100:	e7b4      	b.n	40406c <_dtoa_r+0x964>
  404102:	f000 fdc9 	bl	404c98 <__multadd>
  404106:	4647      	mov	r7, r8
  404108:	4606      	mov	r6, r0
  40410a:	4683      	mov	fp, r0
  40410c:	e5be      	b.n	403c8c <_dtoa_r+0x584>
  40410e:	4601      	mov	r1, r0
  404110:	4620      	mov	r0, r4
  404112:	9306      	str	r3, [sp, #24]
  404114:	f000 fdb6 	bl	404c84 <_Bfree>
  404118:	2201      	movs	r2, #1
  40411a:	9b06      	ldr	r3, [sp, #24]
  40411c:	e5e0      	b.n	403ce0 <_dtoa_r+0x5d8>
  40411e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404120:	2b02      	cmp	r3, #2
  404122:	f77f ad96 	ble.w	403c52 <_dtoa_r+0x54a>
  404126:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404128:	2b00      	cmp	r3, #0
  40412a:	d1c9      	bne.n	4040c0 <_dtoa_r+0x9b8>
  40412c:	4641      	mov	r1, r8
  40412e:	2205      	movs	r2, #5
  404130:	4620      	mov	r0, r4
  404132:	f000 fdb1 	bl	404c98 <__multadd>
  404136:	4601      	mov	r1, r0
  404138:	4680      	mov	r8, r0
  40413a:	4648      	mov	r0, r9
  40413c:	f000 ff7a 	bl	405034 <__mcmp>
  404140:	2800      	cmp	r0, #0
  404142:	ddbd      	ble.n	4040c0 <_dtoa_r+0x9b8>
  404144:	9a02      	ldr	r2, [sp, #8]
  404146:	9904      	ldr	r1, [sp, #16]
  404148:	2331      	movs	r3, #49	; 0x31
  40414a:	3201      	adds	r2, #1
  40414c:	9202      	str	r2, [sp, #8]
  40414e:	700b      	strb	r3, [r1, #0]
  404150:	1c4d      	adds	r5, r1, #1
  404152:	e7b9      	b.n	4040c8 <_dtoa_r+0x9c0>
  404154:	9a02      	ldr	r2, [sp, #8]
  404156:	3201      	adds	r2, #1
  404158:	9202      	str	r2, [sp, #8]
  40415a:	9a04      	ldr	r2, [sp, #16]
  40415c:	2331      	movs	r3, #49	; 0x31
  40415e:	7013      	strb	r3, [r2, #0]
  404160:	e652      	b.n	403e08 <_dtoa_r+0x700>
  404162:	2301      	movs	r3, #1
  404164:	930b      	str	r3, [sp, #44]	; 0x2c
  404166:	e666      	b.n	403e36 <_dtoa_r+0x72e>
  404168:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40416c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40416e:	e48f      	b.n	403a90 <_dtoa_r+0x388>
  404170:	00407650 	.word	0x00407650
  404174:	00407628 	.word	0x00407628
  404178:	3ff00000 	.word	0x3ff00000
  40417c:	401c0000 	.word	0x401c0000
  404180:	3fe00000 	.word	0x3fe00000
  404184:	40240000 	.word	0x40240000
  404188:	40140000 	.word	0x40140000
  40418c:	4650      	mov	r0, sl
  40418e:	f001 feab 	bl	405ee8 <__aeabi_i2d>
  404192:	463a      	mov	r2, r7
  404194:	4643      	mov	r3, r8
  404196:	f001 ff0d 	bl	405fb4 <__aeabi_dmul>
  40419a:	2200      	movs	r2, #0
  40419c:	4bc1      	ldr	r3, [pc, #772]	; (4044a4 <_dtoa_r+0xd9c>)
  40419e:	f001 fd57 	bl	405c50 <__adddf3>
  4041a2:	4605      	mov	r5, r0
  4041a4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4041a8:	4641      	mov	r1, r8
  4041aa:	2200      	movs	r2, #0
  4041ac:	4bbe      	ldr	r3, [pc, #760]	; (4044a8 <_dtoa_r+0xda0>)
  4041ae:	4638      	mov	r0, r7
  4041b0:	f001 fd4c 	bl	405c4c <__aeabi_dsub>
  4041b4:	462a      	mov	r2, r5
  4041b6:	4633      	mov	r3, r6
  4041b8:	4682      	mov	sl, r0
  4041ba:	468b      	mov	fp, r1
  4041bc:	f002 f98a 	bl	4064d4 <__aeabi_dcmpgt>
  4041c0:	4680      	mov	r8, r0
  4041c2:	2800      	cmp	r0, #0
  4041c4:	f040 8110 	bne.w	4043e8 <_dtoa_r+0xce0>
  4041c8:	462a      	mov	r2, r5
  4041ca:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4041ce:	4650      	mov	r0, sl
  4041d0:	4659      	mov	r1, fp
  4041d2:	f002 f961 	bl	406498 <__aeabi_dcmplt>
  4041d6:	b118      	cbz	r0, 4041e0 <_dtoa_r+0xad8>
  4041d8:	4646      	mov	r6, r8
  4041da:	e771      	b.n	4040c0 <_dtoa_r+0x9b8>
  4041dc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4041e0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4041e4:	f7ff bb8a 	b.w	4038fc <_dtoa_r+0x1f4>
  4041e8:	9804      	ldr	r0, [sp, #16]
  4041ea:	f7ff babb 	b.w	403764 <_dtoa_r+0x5c>
  4041ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4041f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4041f2:	970c      	str	r7, [sp, #48]	; 0x30
  4041f4:	1afb      	subs	r3, r7, r3
  4041f6:	441a      	add	r2, r3
  4041f8:	920d      	str	r2, [sp, #52]	; 0x34
  4041fa:	2700      	movs	r7, #0
  4041fc:	e469      	b.n	403ad2 <_dtoa_r+0x3ca>
  4041fe:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404202:	f04f 0a02 	mov.w	sl, #2
  404206:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40420a:	e657      	b.n	403ebc <_dtoa_r+0x7b4>
  40420c:	2100      	movs	r1, #0
  40420e:	2301      	movs	r3, #1
  404210:	6461      	str	r1, [r4, #68]	; 0x44
  404212:	4620      	mov	r0, r4
  404214:	9325      	str	r3, [sp, #148]	; 0x94
  404216:	f000 fd0f 	bl	404c38 <_Balloc>
  40421a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40421c:	9004      	str	r0, [sp, #16]
  40421e:	6420      	str	r0, [r4, #64]	; 0x40
  404220:	930a      	str	r3, [sp, #40]	; 0x28
  404222:	930f      	str	r3, [sp, #60]	; 0x3c
  404224:	e629      	b.n	403e7a <_dtoa_r+0x772>
  404226:	2a00      	cmp	r2, #0
  404228:	46d0      	mov	r8, sl
  40422a:	f8cd b018 	str.w	fp, [sp, #24]
  40422e:	469a      	mov	sl, r3
  404230:	dd11      	ble.n	404256 <_dtoa_r+0xb4e>
  404232:	4649      	mov	r1, r9
  404234:	2201      	movs	r2, #1
  404236:	4620      	mov	r0, r4
  404238:	f000 feaa 	bl	404f90 <__lshift>
  40423c:	4641      	mov	r1, r8
  40423e:	4681      	mov	r9, r0
  404240:	f000 fef8 	bl	405034 <__mcmp>
  404244:	2800      	cmp	r0, #0
  404246:	f340 8146 	ble.w	4044d6 <_dtoa_r+0xdce>
  40424a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40424e:	f000 8106 	beq.w	40445e <_dtoa_r+0xd56>
  404252:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404256:	46b3      	mov	fp, r6
  404258:	f887 a000 	strb.w	sl, [r7]
  40425c:	1c7d      	adds	r5, r7, #1
  40425e:	9e06      	ldr	r6, [sp, #24]
  404260:	e5d2      	b.n	403e08 <_dtoa_r+0x700>
  404262:	d104      	bne.n	40426e <_dtoa_r+0xb66>
  404264:	f01a 0f01 	tst.w	sl, #1
  404268:	d001      	beq.n	40426e <_dtoa_r+0xb66>
  40426a:	e5bd      	b.n	403de8 <_dtoa_r+0x6e0>
  40426c:	4615      	mov	r5, r2
  40426e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404272:	2b30      	cmp	r3, #48	; 0x30
  404274:	f105 32ff 	add.w	r2, r5, #4294967295
  404278:	d0f8      	beq.n	40426c <_dtoa_r+0xb64>
  40427a:	e5c5      	b.n	403e08 <_dtoa_r+0x700>
  40427c:	9904      	ldr	r1, [sp, #16]
  40427e:	2230      	movs	r2, #48	; 0x30
  404280:	700a      	strb	r2, [r1, #0]
  404282:	9a02      	ldr	r2, [sp, #8]
  404284:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404288:	3201      	adds	r2, #1
  40428a:	9202      	str	r2, [sp, #8]
  40428c:	f7ff bbfc 	b.w	403a88 <_dtoa_r+0x380>
  404290:	f000 80bb 	beq.w	40440a <_dtoa_r+0xd02>
  404294:	9b02      	ldr	r3, [sp, #8]
  404296:	425d      	negs	r5, r3
  404298:	4b84      	ldr	r3, [pc, #528]	; (4044ac <_dtoa_r+0xda4>)
  40429a:	f005 020f 	and.w	r2, r5, #15
  40429e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4042a2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4042a6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4042aa:	f001 fe83 	bl	405fb4 <__aeabi_dmul>
  4042ae:	112d      	asrs	r5, r5, #4
  4042b0:	4607      	mov	r7, r0
  4042b2:	4688      	mov	r8, r1
  4042b4:	f000 812c 	beq.w	404510 <_dtoa_r+0xe08>
  4042b8:	4e7d      	ldr	r6, [pc, #500]	; (4044b0 <_dtoa_r+0xda8>)
  4042ba:	f04f 0a02 	mov.w	sl, #2
  4042be:	07eb      	lsls	r3, r5, #31
  4042c0:	d509      	bpl.n	4042d6 <_dtoa_r+0xbce>
  4042c2:	4638      	mov	r0, r7
  4042c4:	4641      	mov	r1, r8
  4042c6:	e9d6 2300 	ldrd	r2, r3, [r6]
  4042ca:	f001 fe73 	bl	405fb4 <__aeabi_dmul>
  4042ce:	f10a 0a01 	add.w	sl, sl, #1
  4042d2:	4607      	mov	r7, r0
  4042d4:	4688      	mov	r8, r1
  4042d6:	106d      	asrs	r5, r5, #1
  4042d8:	f106 0608 	add.w	r6, r6, #8
  4042dc:	d1ef      	bne.n	4042be <_dtoa_r+0xbb6>
  4042de:	e608      	b.n	403ef2 <_dtoa_r+0x7ea>
  4042e0:	6871      	ldr	r1, [r6, #4]
  4042e2:	4620      	mov	r0, r4
  4042e4:	f000 fca8 	bl	404c38 <_Balloc>
  4042e8:	6933      	ldr	r3, [r6, #16]
  4042ea:	3302      	adds	r3, #2
  4042ec:	009a      	lsls	r2, r3, #2
  4042ee:	4605      	mov	r5, r0
  4042f0:	f106 010c 	add.w	r1, r6, #12
  4042f4:	300c      	adds	r0, #12
  4042f6:	f7fd fb4d 	bl	401994 <memcpy>
  4042fa:	4629      	mov	r1, r5
  4042fc:	2201      	movs	r2, #1
  4042fe:	4620      	mov	r0, r4
  404300:	f000 fe46 	bl	404f90 <__lshift>
  404304:	9006      	str	r0, [sp, #24]
  404306:	e4b5      	b.n	403c74 <_dtoa_r+0x56c>
  404308:	2b39      	cmp	r3, #57	; 0x39
  40430a:	f8cd b018 	str.w	fp, [sp, #24]
  40430e:	46d0      	mov	r8, sl
  404310:	f000 80a5 	beq.w	40445e <_dtoa_r+0xd56>
  404314:	f103 0a01 	add.w	sl, r3, #1
  404318:	46b3      	mov	fp, r6
  40431a:	f887 a000 	strb.w	sl, [r7]
  40431e:	1c7d      	adds	r5, r7, #1
  404320:	9e06      	ldr	r6, [sp, #24]
  404322:	e571      	b.n	403e08 <_dtoa_r+0x700>
  404324:	465a      	mov	r2, fp
  404326:	46d0      	mov	r8, sl
  404328:	46b3      	mov	fp, r6
  40432a:	469a      	mov	sl, r3
  40432c:	4616      	mov	r6, r2
  40432e:	e54f      	b.n	403dd0 <_dtoa_r+0x6c8>
  404330:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404332:	495e      	ldr	r1, [pc, #376]	; (4044ac <_dtoa_r+0xda4>)
  404334:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404338:	462a      	mov	r2, r5
  40433a:	4633      	mov	r3, r6
  40433c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404340:	f001 fe38 	bl	405fb4 <__aeabi_dmul>
  404344:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404348:	4638      	mov	r0, r7
  40434a:	4641      	mov	r1, r8
  40434c:	f002 f8e2 	bl	406514 <__aeabi_d2iz>
  404350:	4605      	mov	r5, r0
  404352:	f001 fdc9 	bl	405ee8 <__aeabi_i2d>
  404356:	460b      	mov	r3, r1
  404358:	4602      	mov	r2, r0
  40435a:	4641      	mov	r1, r8
  40435c:	4638      	mov	r0, r7
  40435e:	f001 fc75 	bl	405c4c <__aeabi_dsub>
  404362:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404364:	460f      	mov	r7, r1
  404366:	9904      	ldr	r1, [sp, #16]
  404368:	3530      	adds	r5, #48	; 0x30
  40436a:	2b01      	cmp	r3, #1
  40436c:	700d      	strb	r5, [r1, #0]
  40436e:	4606      	mov	r6, r0
  404370:	f101 0501 	add.w	r5, r1, #1
  404374:	d026      	beq.n	4043c4 <_dtoa_r+0xcbc>
  404376:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404378:	9a04      	ldr	r2, [sp, #16]
  40437a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4044b8 <_dtoa_r+0xdb0>
  40437e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404382:	4413      	add	r3, r2
  404384:	f04f 0a00 	mov.w	sl, #0
  404388:	4699      	mov	r9, r3
  40438a:	4652      	mov	r2, sl
  40438c:	465b      	mov	r3, fp
  40438e:	4630      	mov	r0, r6
  404390:	4639      	mov	r1, r7
  404392:	f001 fe0f 	bl	405fb4 <__aeabi_dmul>
  404396:	460f      	mov	r7, r1
  404398:	4606      	mov	r6, r0
  40439a:	f002 f8bb 	bl	406514 <__aeabi_d2iz>
  40439e:	4680      	mov	r8, r0
  4043a0:	f001 fda2 	bl	405ee8 <__aeabi_i2d>
  4043a4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4043a8:	4602      	mov	r2, r0
  4043aa:	460b      	mov	r3, r1
  4043ac:	4630      	mov	r0, r6
  4043ae:	4639      	mov	r1, r7
  4043b0:	f001 fc4c 	bl	405c4c <__aeabi_dsub>
  4043b4:	f805 8b01 	strb.w	r8, [r5], #1
  4043b8:	454d      	cmp	r5, r9
  4043ba:	4606      	mov	r6, r0
  4043bc:	460f      	mov	r7, r1
  4043be:	d1e4      	bne.n	40438a <_dtoa_r+0xc82>
  4043c0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4043c4:	4b3b      	ldr	r3, [pc, #236]	; (4044b4 <_dtoa_r+0xdac>)
  4043c6:	2200      	movs	r2, #0
  4043c8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4043cc:	f001 fc40 	bl	405c50 <__adddf3>
  4043d0:	4632      	mov	r2, r6
  4043d2:	463b      	mov	r3, r7
  4043d4:	f002 f860 	bl	406498 <__aeabi_dcmplt>
  4043d8:	2800      	cmp	r0, #0
  4043da:	d046      	beq.n	40446a <_dtoa_r+0xd62>
  4043dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4043de:	9302      	str	r3, [sp, #8]
  4043e0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4043e4:	f7ff bb43 	b.w	403a6e <_dtoa_r+0x366>
  4043e8:	f04f 0800 	mov.w	r8, #0
  4043ec:	4646      	mov	r6, r8
  4043ee:	e6a9      	b.n	404144 <_dtoa_r+0xa3c>
  4043f0:	9b08      	ldr	r3, [sp, #32]
  4043f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4043f4:	1a9d      	subs	r5, r3, r2
  4043f6:	2300      	movs	r3, #0
  4043f8:	f7ff bb71 	b.w	403ade <_dtoa_r+0x3d6>
  4043fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4043fe:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404400:	9d08      	ldr	r5, [sp, #32]
  404402:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404406:	f7ff bb6a 	b.w	403ade <_dtoa_r+0x3d6>
  40440a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40440e:	f04f 0a02 	mov.w	sl, #2
  404412:	e56e      	b.n	403ef2 <_dtoa_r+0x7ea>
  404414:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404416:	2b00      	cmp	r3, #0
  404418:	f43f aeb8 	beq.w	40418c <_dtoa_r+0xa84>
  40441c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40441e:	2b00      	cmp	r3, #0
  404420:	f77f aede 	ble.w	4041e0 <_dtoa_r+0xad8>
  404424:	2200      	movs	r2, #0
  404426:	4b24      	ldr	r3, [pc, #144]	; (4044b8 <_dtoa_r+0xdb0>)
  404428:	4638      	mov	r0, r7
  40442a:	4641      	mov	r1, r8
  40442c:	f001 fdc2 	bl	405fb4 <__aeabi_dmul>
  404430:	4607      	mov	r7, r0
  404432:	4688      	mov	r8, r1
  404434:	f10a 0001 	add.w	r0, sl, #1
  404438:	f001 fd56 	bl	405ee8 <__aeabi_i2d>
  40443c:	463a      	mov	r2, r7
  40443e:	4643      	mov	r3, r8
  404440:	f001 fdb8 	bl	405fb4 <__aeabi_dmul>
  404444:	2200      	movs	r2, #0
  404446:	4b17      	ldr	r3, [pc, #92]	; (4044a4 <_dtoa_r+0xd9c>)
  404448:	f001 fc02 	bl	405c50 <__adddf3>
  40444c:	9a02      	ldr	r2, [sp, #8]
  40444e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404450:	9312      	str	r3, [sp, #72]	; 0x48
  404452:	3a01      	subs	r2, #1
  404454:	4605      	mov	r5, r0
  404456:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40445a:	9215      	str	r2, [sp, #84]	; 0x54
  40445c:	e56a      	b.n	403f34 <_dtoa_r+0x82c>
  40445e:	2239      	movs	r2, #57	; 0x39
  404460:	46b3      	mov	fp, r6
  404462:	703a      	strb	r2, [r7, #0]
  404464:	9e06      	ldr	r6, [sp, #24]
  404466:	1c7d      	adds	r5, r7, #1
  404468:	e4c0      	b.n	403dec <_dtoa_r+0x6e4>
  40446a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40446e:	2000      	movs	r0, #0
  404470:	4910      	ldr	r1, [pc, #64]	; (4044b4 <_dtoa_r+0xdac>)
  404472:	f001 fbeb 	bl	405c4c <__aeabi_dsub>
  404476:	4632      	mov	r2, r6
  404478:	463b      	mov	r3, r7
  40447a:	f002 f82b 	bl	4064d4 <__aeabi_dcmpgt>
  40447e:	b908      	cbnz	r0, 404484 <_dtoa_r+0xd7c>
  404480:	e6ae      	b.n	4041e0 <_dtoa_r+0xad8>
  404482:	4615      	mov	r5, r2
  404484:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404488:	2b30      	cmp	r3, #48	; 0x30
  40448a:	f105 32ff 	add.w	r2, r5, #4294967295
  40448e:	d0f8      	beq.n	404482 <_dtoa_r+0xd7a>
  404490:	e5d7      	b.n	404042 <_dtoa_r+0x93a>
  404492:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404496:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404498:	9302      	str	r3, [sp, #8]
  40449a:	f7ff bae8 	b.w	403a6e <_dtoa_r+0x366>
  40449e:	970c      	str	r7, [sp, #48]	; 0x30
  4044a0:	f7ff bba5 	b.w	403bee <_dtoa_r+0x4e6>
  4044a4:	401c0000 	.word	0x401c0000
  4044a8:	40140000 	.word	0x40140000
  4044ac:	00407650 	.word	0x00407650
  4044b0:	00407628 	.word	0x00407628
  4044b4:	3fe00000 	.word	0x3fe00000
  4044b8:	40240000 	.word	0x40240000
  4044bc:	2b39      	cmp	r3, #57	; 0x39
  4044be:	f8cd b018 	str.w	fp, [sp, #24]
  4044c2:	46d0      	mov	r8, sl
  4044c4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4044c8:	469a      	mov	sl, r3
  4044ca:	d0c8      	beq.n	40445e <_dtoa_r+0xd56>
  4044cc:	f1bb 0f00 	cmp.w	fp, #0
  4044d0:	f73f aebf 	bgt.w	404252 <_dtoa_r+0xb4a>
  4044d4:	e6bf      	b.n	404256 <_dtoa_r+0xb4e>
  4044d6:	f47f aebe 	bne.w	404256 <_dtoa_r+0xb4e>
  4044da:	f01a 0f01 	tst.w	sl, #1
  4044de:	f43f aeba 	beq.w	404256 <_dtoa_r+0xb4e>
  4044e2:	e6b2      	b.n	40424a <_dtoa_r+0xb42>
  4044e4:	f04f 0800 	mov.w	r8, #0
  4044e8:	4646      	mov	r6, r8
  4044ea:	e5e9      	b.n	4040c0 <_dtoa_r+0x9b8>
  4044ec:	4631      	mov	r1, r6
  4044ee:	2300      	movs	r3, #0
  4044f0:	220a      	movs	r2, #10
  4044f2:	4620      	mov	r0, r4
  4044f4:	f000 fbd0 	bl	404c98 <__multadd>
  4044f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4044fa:	2b00      	cmp	r3, #0
  4044fc:	4606      	mov	r6, r0
  4044fe:	dd0a      	ble.n	404516 <_dtoa_r+0xe0e>
  404500:	930a      	str	r3, [sp, #40]	; 0x28
  404502:	f7ff bbaa 	b.w	403c5a <_dtoa_r+0x552>
  404506:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404508:	2b02      	cmp	r3, #2
  40450a:	dc23      	bgt.n	404554 <_dtoa_r+0xe4c>
  40450c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40450e:	e43b      	b.n	403d88 <_dtoa_r+0x680>
  404510:	f04f 0a02 	mov.w	sl, #2
  404514:	e4ed      	b.n	403ef2 <_dtoa_r+0x7ea>
  404516:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404518:	2b02      	cmp	r3, #2
  40451a:	dc1b      	bgt.n	404554 <_dtoa_r+0xe4c>
  40451c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40451e:	e7ef      	b.n	404500 <_dtoa_r+0xdf8>
  404520:	2500      	movs	r5, #0
  404522:	6465      	str	r5, [r4, #68]	; 0x44
  404524:	4629      	mov	r1, r5
  404526:	4620      	mov	r0, r4
  404528:	f000 fb86 	bl	404c38 <_Balloc>
  40452c:	f04f 33ff 	mov.w	r3, #4294967295
  404530:	930a      	str	r3, [sp, #40]	; 0x28
  404532:	930f      	str	r3, [sp, #60]	; 0x3c
  404534:	2301      	movs	r3, #1
  404536:	9004      	str	r0, [sp, #16]
  404538:	9525      	str	r5, [sp, #148]	; 0x94
  40453a:	6420      	str	r0, [r4, #64]	; 0x40
  40453c:	930b      	str	r3, [sp, #44]	; 0x2c
  40453e:	f7ff b9dd 	b.w	4038fc <_dtoa_r+0x1f4>
  404542:	2501      	movs	r5, #1
  404544:	f7ff b9a5 	b.w	403892 <_dtoa_r+0x18a>
  404548:	f43f ab69 	beq.w	403c1e <_dtoa_r+0x516>
  40454c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404550:	f7ff bbf9 	b.w	403d46 <_dtoa_r+0x63e>
  404554:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404556:	930a      	str	r3, [sp, #40]	; 0x28
  404558:	e5e5      	b.n	404126 <_dtoa_r+0xa1e>
  40455a:	bf00      	nop

0040455c <__libc_fini_array>:
  40455c:	b538      	push	{r3, r4, r5, lr}
  40455e:	4c0a      	ldr	r4, [pc, #40]	; (404588 <__libc_fini_array+0x2c>)
  404560:	4d0a      	ldr	r5, [pc, #40]	; (40458c <__libc_fini_array+0x30>)
  404562:	1b64      	subs	r4, r4, r5
  404564:	10a4      	asrs	r4, r4, #2
  404566:	d00a      	beq.n	40457e <__libc_fini_array+0x22>
  404568:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40456c:	3b01      	subs	r3, #1
  40456e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404572:	3c01      	subs	r4, #1
  404574:	f855 3904 	ldr.w	r3, [r5], #-4
  404578:	4798      	blx	r3
  40457a:	2c00      	cmp	r4, #0
  40457c:	d1f9      	bne.n	404572 <__libc_fini_array+0x16>
  40457e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404582:	f003 b963 	b.w	40784c <_fini>
  404586:	bf00      	nop
  404588:	0040785c 	.word	0x0040785c
  40458c:	00407858 	.word	0x00407858

00404590 <_localeconv_r>:
  404590:	4a04      	ldr	r2, [pc, #16]	; (4045a4 <_localeconv_r+0x14>)
  404592:	4b05      	ldr	r3, [pc, #20]	; (4045a8 <_localeconv_r+0x18>)
  404594:	6812      	ldr	r2, [r2, #0]
  404596:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404598:	2800      	cmp	r0, #0
  40459a:	bf08      	it	eq
  40459c:	4618      	moveq	r0, r3
  40459e:	30f0      	adds	r0, #240	; 0xf0
  4045a0:	4770      	bx	lr
  4045a2:	bf00      	nop
  4045a4:	20000010 	.word	0x20000010
  4045a8:	20000854 	.word	0x20000854

004045ac <__retarget_lock_acquire_recursive>:
  4045ac:	4770      	bx	lr
  4045ae:	bf00      	nop

004045b0 <__retarget_lock_release_recursive>:
  4045b0:	4770      	bx	lr
  4045b2:	bf00      	nop

004045b4 <_malloc_r>:
  4045b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4045b8:	f101 060b 	add.w	r6, r1, #11
  4045bc:	2e16      	cmp	r6, #22
  4045be:	b083      	sub	sp, #12
  4045c0:	4605      	mov	r5, r0
  4045c2:	f240 809e 	bls.w	404702 <_malloc_r+0x14e>
  4045c6:	f036 0607 	bics.w	r6, r6, #7
  4045ca:	f100 80bd 	bmi.w	404748 <_malloc_r+0x194>
  4045ce:	42b1      	cmp	r1, r6
  4045d0:	f200 80ba 	bhi.w	404748 <_malloc_r+0x194>
  4045d4:	f000 fb24 	bl	404c20 <__malloc_lock>
  4045d8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4045dc:	f0c0 8293 	bcc.w	404b06 <_malloc_r+0x552>
  4045e0:	0a73      	lsrs	r3, r6, #9
  4045e2:	f000 80b8 	beq.w	404756 <_malloc_r+0x1a2>
  4045e6:	2b04      	cmp	r3, #4
  4045e8:	f200 8179 	bhi.w	4048de <_malloc_r+0x32a>
  4045ec:	09b3      	lsrs	r3, r6, #6
  4045ee:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4045f2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4045f6:	00c3      	lsls	r3, r0, #3
  4045f8:	4fbf      	ldr	r7, [pc, #764]	; (4048f8 <_malloc_r+0x344>)
  4045fa:	443b      	add	r3, r7
  4045fc:	f1a3 0108 	sub.w	r1, r3, #8
  404600:	685c      	ldr	r4, [r3, #4]
  404602:	42a1      	cmp	r1, r4
  404604:	d106      	bne.n	404614 <_malloc_r+0x60>
  404606:	e00c      	b.n	404622 <_malloc_r+0x6e>
  404608:	2a00      	cmp	r2, #0
  40460a:	f280 80aa 	bge.w	404762 <_malloc_r+0x1ae>
  40460e:	68e4      	ldr	r4, [r4, #12]
  404610:	42a1      	cmp	r1, r4
  404612:	d006      	beq.n	404622 <_malloc_r+0x6e>
  404614:	6863      	ldr	r3, [r4, #4]
  404616:	f023 0303 	bic.w	r3, r3, #3
  40461a:	1b9a      	subs	r2, r3, r6
  40461c:	2a0f      	cmp	r2, #15
  40461e:	ddf3      	ble.n	404608 <_malloc_r+0x54>
  404620:	4670      	mov	r0, lr
  404622:	693c      	ldr	r4, [r7, #16]
  404624:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 40490c <_malloc_r+0x358>
  404628:	4574      	cmp	r4, lr
  40462a:	f000 81ab 	beq.w	404984 <_malloc_r+0x3d0>
  40462e:	6863      	ldr	r3, [r4, #4]
  404630:	f023 0303 	bic.w	r3, r3, #3
  404634:	1b9a      	subs	r2, r3, r6
  404636:	2a0f      	cmp	r2, #15
  404638:	f300 8190 	bgt.w	40495c <_malloc_r+0x3a8>
  40463c:	2a00      	cmp	r2, #0
  40463e:	f8c7 e014 	str.w	lr, [r7, #20]
  404642:	f8c7 e010 	str.w	lr, [r7, #16]
  404646:	f280 809d 	bge.w	404784 <_malloc_r+0x1d0>
  40464a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40464e:	f080 8161 	bcs.w	404914 <_malloc_r+0x360>
  404652:	08db      	lsrs	r3, r3, #3
  404654:	f103 0c01 	add.w	ip, r3, #1
  404658:	1099      	asrs	r1, r3, #2
  40465a:	687a      	ldr	r2, [r7, #4]
  40465c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404660:	f8c4 8008 	str.w	r8, [r4, #8]
  404664:	2301      	movs	r3, #1
  404666:	408b      	lsls	r3, r1
  404668:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40466c:	4313      	orrs	r3, r2
  40466e:	3908      	subs	r1, #8
  404670:	60e1      	str	r1, [r4, #12]
  404672:	607b      	str	r3, [r7, #4]
  404674:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404678:	f8c8 400c 	str.w	r4, [r8, #12]
  40467c:	1082      	asrs	r2, r0, #2
  40467e:	2401      	movs	r4, #1
  404680:	4094      	lsls	r4, r2
  404682:	429c      	cmp	r4, r3
  404684:	f200 808b 	bhi.w	40479e <_malloc_r+0x1ea>
  404688:	421c      	tst	r4, r3
  40468a:	d106      	bne.n	40469a <_malloc_r+0xe6>
  40468c:	f020 0003 	bic.w	r0, r0, #3
  404690:	0064      	lsls	r4, r4, #1
  404692:	421c      	tst	r4, r3
  404694:	f100 0004 	add.w	r0, r0, #4
  404698:	d0fa      	beq.n	404690 <_malloc_r+0xdc>
  40469a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40469e:	46cc      	mov	ip, r9
  4046a0:	4680      	mov	r8, r0
  4046a2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4046a6:	459c      	cmp	ip, r3
  4046a8:	d107      	bne.n	4046ba <_malloc_r+0x106>
  4046aa:	e16d      	b.n	404988 <_malloc_r+0x3d4>
  4046ac:	2a00      	cmp	r2, #0
  4046ae:	f280 817b 	bge.w	4049a8 <_malloc_r+0x3f4>
  4046b2:	68db      	ldr	r3, [r3, #12]
  4046b4:	459c      	cmp	ip, r3
  4046b6:	f000 8167 	beq.w	404988 <_malloc_r+0x3d4>
  4046ba:	6859      	ldr	r1, [r3, #4]
  4046bc:	f021 0103 	bic.w	r1, r1, #3
  4046c0:	1b8a      	subs	r2, r1, r6
  4046c2:	2a0f      	cmp	r2, #15
  4046c4:	ddf2      	ble.n	4046ac <_malloc_r+0xf8>
  4046c6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4046ca:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4046ce:	9300      	str	r3, [sp, #0]
  4046d0:	199c      	adds	r4, r3, r6
  4046d2:	4628      	mov	r0, r5
  4046d4:	f046 0601 	orr.w	r6, r6, #1
  4046d8:	f042 0501 	orr.w	r5, r2, #1
  4046dc:	605e      	str	r6, [r3, #4]
  4046de:	f8c8 c00c 	str.w	ip, [r8, #12]
  4046e2:	f8cc 8008 	str.w	r8, [ip, #8]
  4046e6:	617c      	str	r4, [r7, #20]
  4046e8:	613c      	str	r4, [r7, #16]
  4046ea:	f8c4 e00c 	str.w	lr, [r4, #12]
  4046ee:	f8c4 e008 	str.w	lr, [r4, #8]
  4046f2:	6065      	str	r5, [r4, #4]
  4046f4:	505a      	str	r2, [r3, r1]
  4046f6:	f000 fa99 	bl	404c2c <__malloc_unlock>
  4046fa:	9b00      	ldr	r3, [sp, #0]
  4046fc:	f103 0408 	add.w	r4, r3, #8
  404700:	e01e      	b.n	404740 <_malloc_r+0x18c>
  404702:	2910      	cmp	r1, #16
  404704:	d820      	bhi.n	404748 <_malloc_r+0x194>
  404706:	f000 fa8b 	bl	404c20 <__malloc_lock>
  40470a:	2610      	movs	r6, #16
  40470c:	2318      	movs	r3, #24
  40470e:	2002      	movs	r0, #2
  404710:	4f79      	ldr	r7, [pc, #484]	; (4048f8 <_malloc_r+0x344>)
  404712:	443b      	add	r3, r7
  404714:	f1a3 0208 	sub.w	r2, r3, #8
  404718:	685c      	ldr	r4, [r3, #4]
  40471a:	4294      	cmp	r4, r2
  40471c:	f000 813d 	beq.w	40499a <_malloc_r+0x3e6>
  404720:	6863      	ldr	r3, [r4, #4]
  404722:	68e1      	ldr	r1, [r4, #12]
  404724:	68a6      	ldr	r6, [r4, #8]
  404726:	f023 0303 	bic.w	r3, r3, #3
  40472a:	4423      	add	r3, r4
  40472c:	4628      	mov	r0, r5
  40472e:	685a      	ldr	r2, [r3, #4]
  404730:	60f1      	str	r1, [r6, #12]
  404732:	f042 0201 	orr.w	r2, r2, #1
  404736:	608e      	str	r6, [r1, #8]
  404738:	605a      	str	r2, [r3, #4]
  40473a:	f000 fa77 	bl	404c2c <__malloc_unlock>
  40473e:	3408      	adds	r4, #8
  404740:	4620      	mov	r0, r4
  404742:	b003      	add	sp, #12
  404744:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404748:	2400      	movs	r4, #0
  40474a:	230c      	movs	r3, #12
  40474c:	4620      	mov	r0, r4
  40474e:	602b      	str	r3, [r5, #0]
  404750:	b003      	add	sp, #12
  404752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404756:	2040      	movs	r0, #64	; 0x40
  404758:	f44f 7300 	mov.w	r3, #512	; 0x200
  40475c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404760:	e74a      	b.n	4045f8 <_malloc_r+0x44>
  404762:	4423      	add	r3, r4
  404764:	68e1      	ldr	r1, [r4, #12]
  404766:	685a      	ldr	r2, [r3, #4]
  404768:	68a6      	ldr	r6, [r4, #8]
  40476a:	f042 0201 	orr.w	r2, r2, #1
  40476e:	60f1      	str	r1, [r6, #12]
  404770:	4628      	mov	r0, r5
  404772:	608e      	str	r6, [r1, #8]
  404774:	605a      	str	r2, [r3, #4]
  404776:	f000 fa59 	bl	404c2c <__malloc_unlock>
  40477a:	3408      	adds	r4, #8
  40477c:	4620      	mov	r0, r4
  40477e:	b003      	add	sp, #12
  404780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404784:	4423      	add	r3, r4
  404786:	4628      	mov	r0, r5
  404788:	685a      	ldr	r2, [r3, #4]
  40478a:	f042 0201 	orr.w	r2, r2, #1
  40478e:	605a      	str	r2, [r3, #4]
  404790:	f000 fa4c 	bl	404c2c <__malloc_unlock>
  404794:	3408      	adds	r4, #8
  404796:	4620      	mov	r0, r4
  404798:	b003      	add	sp, #12
  40479a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40479e:	68bc      	ldr	r4, [r7, #8]
  4047a0:	6863      	ldr	r3, [r4, #4]
  4047a2:	f023 0803 	bic.w	r8, r3, #3
  4047a6:	45b0      	cmp	r8, r6
  4047a8:	d304      	bcc.n	4047b4 <_malloc_r+0x200>
  4047aa:	eba8 0306 	sub.w	r3, r8, r6
  4047ae:	2b0f      	cmp	r3, #15
  4047b0:	f300 8085 	bgt.w	4048be <_malloc_r+0x30a>
  4047b4:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404910 <_malloc_r+0x35c>
  4047b8:	4b50      	ldr	r3, [pc, #320]	; (4048fc <_malloc_r+0x348>)
  4047ba:	f8d9 2000 	ldr.w	r2, [r9]
  4047be:	681b      	ldr	r3, [r3, #0]
  4047c0:	3201      	adds	r2, #1
  4047c2:	4433      	add	r3, r6
  4047c4:	eb04 0a08 	add.w	sl, r4, r8
  4047c8:	f000 8155 	beq.w	404a76 <_malloc_r+0x4c2>
  4047cc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4047d0:	330f      	adds	r3, #15
  4047d2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4047d6:	f02b 0b0f 	bic.w	fp, fp, #15
  4047da:	4659      	mov	r1, fp
  4047dc:	4628      	mov	r0, r5
  4047de:	f000 fd25 	bl	40522c <_sbrk_r>
  4047e2:	1c41      	adds	r1, r0, #1
  4047e4:	4602      	mov	r2, r0
  4047e6:	f000 80fc 	beq.w	4049e2 <_malloc_r+0x42e>
  4047ea:	4582      	cmp	sl, r0
  4047ec:	f200 80f7 	bhi.w	4049de <_malloc_r+0x42a>
  4047f0:	4b43      	ldr	r3, [pc, #268]	; (404900 <_malloc_r+0x34c>)
  4047f2:	6819      	ldr	r1, [r3, #0]
  4047f4:	4459      	add	r1, fp
  4047f6:	6019      	str	r1, [r3, #0]
  4047f8:	f000 814d 	beq.w	404a96 <_malloc_r+0x4e2>
  4047fc:	f8d9 0000 	ldr.w	r0, [r9]
  404800:	3001      	adds	r0, #1
  404802:	bf1b      	ittet	ne
  404804:	eba2 0a0a 	subne.w	sl, r2, sl
  404808:	4451      	addne	r1, sl
  40480a:	f8c9 2000 	streq.w	r2, [r9]
  40480e:	6019      	strne	r1, [r3, #0]
  404810:	f012 0107 	ands.w	r1, r2, #7
  404814:	f000 8115 	beq.w	404a42 <_malloc_r+0x48e>
  404818:	f1c1 0008 	rsb	r0, r1, #8
  40481c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404820:	4402      	add	r2, r0
  404822:	3108      	adds	r1, #8
  404824:	eb02 090b 	add.w	r9, r2, fp
  404828:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40482c:	eba1 0909 	sub.w	r9, r1, r9
  404830:	4649      	mov	r1, r9
  404832:	4628      	mov	r0, r5
  404834:	9301      	str	r3, [sp, #4]
  404836:	9200      	str	r2, [sp, #0]
  404838:	f000 fcf8 	bl	40522c <_sbrk_r>
  40483c:	1c43      	adds	r3, r0, #1
  40483e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404842:	f000 8143 	beq.w	404acc <_malloc_r+0x518>
  404846:	1a80      	subs	r0, r0, r2
  404848:	4448      	add	r0, r9
  40484a:	f040 0001 	orr.w	r0, r0, #1
  40484e:	6819      	ldr	r1, [r3, #0]
  404850:	60ba      	str	r2, [r7, #8]
  404852:	4449      	add	r1, r9
  404854:	42bc      	cmp	r4, r7
  404856:	6050      	str	r0, [r2, #4]
  404858:	6019      	str	r1, [r3, #0]
  40485a:	d017      	beq.n	40488c <_malloc_r+0x2d8>
  40485c:	f1b8 0f0f 	cmp.w	r8, #15
  404860:	f240 80fb 	bls.w	404a5a <_malloc_r+0x4a6>
  404864:	6860      	ldr	r0, [r4, #4]
  404866:	f1a8 020c 	sub.w	r2, r8, #12
  40486a:	f022 0207 	bic.w	r2, r2, #7
  40486e:	eb04 0e02 	add.w	lr, r4, r2
  404872:	f000 0001 	and.w	r0, r0, #1
  404876:	f04f 0c05 	mov.w	ip, #5
  40487a:	4310      	orrs	r0, r2
  40487c:	2a0f      	cmp	r2, #15
  40487e:	6060      	str	r0, [r4, #4]
  404880:	f8ce c004 	str.w	ip, [lr, #4]
  404884:	f8ce c008 	str.w	ip, [lr, #8]
  404888:	f200 8117 	bhi.w	404aba <_malloc_r+0x506>
  40488c:	4b1d      	ldr	r3, [pc, #116]	; (404904 <_malloc_r+0x350>)
  40488e:	68bc      	ldr	r4, [r7, #8]
  404890:	681a      	ldr	r2, [r3, #0]
  404892:	4291      	cmp	r1, r2
  404894:	bf88      	it	hi
  404896:	6019      	strhi	r1, [r3, #0]
  404898:	4b1b      	ldr	r3, [pc, #108]	; (404908 <_malloc_r+0x354>)
  40489a:	681a      	ldr	r2, [r3, #0]
  40489c:	4291      	cmp	r1, r2
  40489e:	6862      	ldr	r2, [r4, #4]
  4048a0:	bf88      	it	hi
  4048a2:	6019      	strhi	r1, [r3, #0]
  4048a4:	f022 0203 	bic.w	r2, r2, #3
  4048a8:	4296      	cmp	r6, r2
  4048aa:	eba2 0306 	sub.w	r3, r2, r6
  4048ae:	d801      	bhi.n	4048b4 <_malloc_r+0x300>
  4048b0:	2b0f      	cmp	r3, #15
  4048b2:	dc04      	bgt.n	4048be <_malloc_r+0x30a>
  4048b4:	4628      	mov	r0, r5
  4048b6:	f000 f9b9 	bl	404c2c <__malloc_unlock>
  4048ba:	2400      	movs	r4, #0
  4048bc:	e740      	b.n	404740 <_malloc_r+0x18c>
  4048be:	19a2      	adds	r2, r4, r6
  4048c0:	f043 0301 	orr.w	r3, r3, #1
  4048c4:	f046 0601 	orr.w	r6, r6, #1
  4048c8:	6066      	str	r6, [r4, #4]
  4048ca:	4628      	mov	r0, r5
  4048cc:	60ba      	str	r2, [r7, #8]
  4048ce:	6053      	str	r3, [r2, #4]
  4048d0:	f000 f9ac 	bl	404c2c <__malloc_unlock>
  4048d4:	3408      	adds	r4, #8
  4048d6:	4620      	mov	r0, r4
  4048d8:	b003      	add	sp, #12
  4048da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4048de:	2b14      	cmp	r3, #20
  4048e0:	d971      	bls.n	4049c6 <_malloc_r+0x412>
  4048e2:	2b54      	cmp	r3, #84	; 0x54
  4048e4:	f200 80a3 	bhi.w	404a2e <_malloc_r+0x47a>
  4048e8:	0b33      	lsrs	r3, r6, #12
  4048ea:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4048ee:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4048f2:	00c3      	lsls	r3, r0, #3
  4048f4:	e680      	b.n	4045f8 <_malloc_r+0x44>
  4048f6:	bf00      	nop
  4048f8:	20000444 	.word	0x20000444
  4048fc:	20000aac 	.word	0x20000aac
  404900:	20000a7c 	.word	0x20000a7c
  404904:	20000aa4 	.word	0x20000aa4
  404908:	20000aa8 	.word	0x20000aa8
  40490c:	2000044c 	.word	0x2000044c
  404910:	2000084c 	.word	0x2000084c
  404914:	0a5a      	lsrs	r2, r3, #9
  404916:	2a04      	cmp	r2, #4
  404918:	d95b      	bls.n	4049d2 <_malloc_r+0x41e>
  40491a:	2a14      	cmp	r2, #20
  40491c:	f200 80ae 	bhi.w	404a7c <_malloc_r+0x4c8>
  404920:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404924:	00c9      	lsls	r1, r1, #3
  404926:	325b      	adds	r2, #91	; 0x5b
  404928:	eb07 0c01 	add.w	ip, r7, r1
  40492c:	5879      	ldr	r1, [r7, r1]
  40492e:	f1ac 0c08 	sub.w	ip, ip, #8
  404932:	458c      	cmp	ip, r1
  404934:	f000 8088 	beq.w	404a48 <_malloc_r+0x494>
  404938:	684a      	ldr	r2, [r1, #4]
  40493a:	f022 0203 	bic.w	r2, r2, #3
  40493e:	4293      	cmp	r3, r2
  404940:	d273      	bcs.n	404a2a <_malloc_r+0x476>
  404942:	6889      	ldr	r1, [r1, #8]
  404944:	458c      	cmp	ip, r1
  404946:	d1f7      	bne.n	404938 <_malloc_r+0x384>
  404948:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40494c:	687b      	ldr	r3, [r7, #4]
  40494e:	60e2      	str	r2, [r4, #12]
  404950:	f8c4 c008 	str.w	ip, [r4, #8]
  404954:	6094      	str	r4, [r2, #8]
  404956:	f8cc 400c 	str.w	r4, [ip, #12]
  40495a:	e68f      	b.n	40467c <_malloc_r+0xc8>
  40495c:	19a1      	adds	r1, r4, r6
  40495e:	f046 0c01 	orr.w	ip, r6, #1
  404962:	f042 0601 	orr.w	r6, r2, #1
  404966:	f8c4 c004 	str.w	ip, [r4, #4]
  40496a:	4628      	mov	r0, r5
  40496c:	6179      	str	r1, [r7, #20]
  40496e:	6139      	str	r1, [r7, #16]
  404970:	f8c1 e00c 	str.w	lr, [r1, #12]
  404974:	f8c1 e008 	str.w	lr, [r1, #8]
  404978:	604e      	str	r6, [r1, #4]
  40497a:	50e2      	str	r2, [r4, r3]
  40497c:	f000 f956 	bl	404c2c <__malloc_unlock>
  404980:	3408      	adds	r4, #8
  404982:	e6dd      	b.n	404740 <_malloc_r+0x18c>
  404984:	687b      	ldr	r3, [r7, #4]
  404986:	e679      	b.n	40467c <_malloc_r+0xc8>
  404988:	f108 0801 	add.w	r8, r8, #1
  40498c:	f018 0f03 	tst.w	r8, #3
  404990:	f10c 0c08 	add.w	ip, ip, #8
  404994:	f47f ae85 	bne.w	4046a2 <_malloc_r+0xee>
  404998:	e02d      	b.n	4049f6 <_malloc_r+0x442>
  40499a:	68dc      	ldr	r4, [r3, #12]
  40499c:	42a3      	cmp	r3, r4
  40499e:	bf08      	it	eq
  4049a0:	3002      	addeq	r0, #2
  4049a2:	f43f ae3e 	beq.w	404622 <_malloc_r+0x6e>
  4049a6:	e6bb      	b.n	404720 <_malloc_r+0x16c>
  4049a8:	4419      	add	r1, r3
  4049aa:	461c      	mov	r4, r3
  4049ac:	684a      	ldr	r2, [r1, #4]
  4049ae:	68db      	ldr	r3, [r3, #12]
  4049b0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4049b4:	f042 0201 	orr.w	r2, r2, #1
  4049b8:	604a      	str	r2, [r1, #4]
  4049ba:	4628      	mov	r0, r5
  4049bc:	60f3      	str	r3, [r6, #12]
  4049be:	609e      	str	r6, [r3, #8]
  4049c0:	f000 f934 	bl	404c2c <__malloc_unlock>
  4049c4:	e6bc      	b.n	404740 <_malloc_r+0x18c>
  4049c6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4049ca:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4049ce:	00c3      	lsls	r3, r0, #3
  4049d0:	e612      	b.n	4045f8 <_malloc_r+0x44>
  4049d2:	099a      	lsrs	r2, r3, #6
  4049d4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4049d8:	00c9      	lsls	r1, r1, #3
  4049da:	3238      	adds	r2, #56	; 0x38
  4049dc:	e7a4      	b.n	404928 <_malloc_r+0x374>
  4049de:	42bc      	cmp	r4, r7
  4049e0:	d054      	beq.n	404a8c <_malloc_r+0x4d8>
  4049e2:	68bc      	ldr	r4, [r7, #8]
  4049e4:	6862      	ldr	r2, [r4, #4]
  4049e6:	f022 0203 	bic.w	r2, r2, #3
  4049ea:	e75d      	b.n	4048a8 <_malloc_r+0x2f4>
  4049ec:	f859 3908 	ldr.w	r3, [r9], #-8
  4049f0:	4599      	cmp	r9, r3
  4049f2:	f040 8086 	bne.w	404b02 <_malloc_r+0x54e>
  4049f6:	f010 0f03 	tst.w	r0, #3
  4049fa:	f100 30ff 	add.w	r0, r0, #4294967295
  4049fe:	d1f5      	bne.n	4049ec <_malloc_r+0x438>
  404a00:	687b      	ldr	r3, [r7, #4]
  404a02:	ea23 0304 	bic.w	r3, r3, r4
  404a06:	607b      	str	r3, [r7, #4]
  404a08:	0064      	lsls	r4, r4, #1
  404a0a:	429c      	cmp	r4, r3
  404a0c:	f63f aec7 	bhi.w	40479e <_malloc_r+0x1ea>
  404a10:	2c00      	cmp	r4, #0
  404a12:	f43f aec4 	beq.w	40479e <_malloc_r+0x1ea>
  404a16:	421c      	tst	r4, r3
  404a18:	4640      	mov	r0, r8
  404a1a:	f47f ae3e 	bne.w	40469a <_malloc_r+0xe6>
  404a1e:	0064      	lsls	r4, r4, #1
  404a20:	421c      	tst	r4, r3
  404a22:	f100 0004 	add.w	r0, r0, #4
  404a26:	d0fa      	beq.n	404a1e <_malloc_r+0x46a>
  404a28:	e637      	b.n	40469a <_malloc_r+0xe6>
  404a2a:	468c      	mov	ip, r1
  404a2c:	e78c      	b.n	404948 <_malloc_r+0x394>
  404a2e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404a32:	d815      	bhi.n	404a60 <_malloc_r+0x4ac>
  404a34:	0bf3      	lsrs	r3, r6, #15
  404a36:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404a3a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404a3e:	00c3      	lsls	r3, r0, #3
  404a40:	e5da      	b.n	4045f8 <_malloc_r+0x44>
  404a42:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404a46:	e6ed      	b.n	404824 <_malloc_r+0x270>
  404a48:	687b      	ldr	r3, [r7, #4]
  404a4a:	1092      	asrs	r2, r2, #2
  404a4c:	2101      	movs	r1, #1
  404a4e:	fa01 f202 	lsl.w	r2, r1, r2
  404a52:	4313      	orrs	r3, r2
  404a54:	607b      	str	r3, [r7, #4]
  404a56:	4662      	mov	r2, ip
  404a58:	e779      	b.n	40494e <_malloc_r+0x39a>
  404a5a:	2301      	movs	r3, #1
  404a5c:	6053      	str	r3, [r2, #4]
  404a5e:	e729      	b.n	4048b4 <_malloc_r+0x300>
  404a60:	f240 5254 	movw	r2, #1364	; 0x554
  404a64:	4293      	cmp	r3, r2
  404a66:	d822      	bhi.n	404aae <_malloc_r+0x4fa>
  404a68:	0cb3      	lsrs	r3, r6, #18
  404a6a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404a6e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404a72:	00c3      	lsls	r3, r0, #3
  404a74:	e5c0      	b.n	4045f8 <_malloc_r+0x44>
  404a76:	f103 0b10 	add.w	fp, r3, #16
  404a7a:	e6ae      	b.n	4047da <_malloc_r+0x226>
  404a7c:	2a54      	cmp	r2, #84	; 0x54
  404a7e:	d829      	bhi.n	404ad4 <_malloc_r+0x520>
  404a80:	0b1a      	lsrs	r2, r3, #12
  404a82:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404a86:	00c9      	lsls	r1, r1, #3
  404a88:	326e      	adds	r2, #110	; 0x6e
  404a8a:	e74d      	b.n	404928 <_malloc_r+0x374>
  404a8c:	4b20      	ldr	r3, [pc, #128]	; (404b10 <_malloc_r+0x55c>)
  404a8e:	6819      	ldr	r1, [r3, #0]
  404a90:	4459      	add	r1, fp
  404a92:	6019      	str	r1, [r3, #0]
  404a94:	e6b2      	b.n	4047fc <_malloc_r+0x248>
  404a96:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404a9a:	2800      	cmp	r0, #0
  404a9c:	f47f aeae 	bne.w	4047fc <_malloc_r+0x248>
  404aa0:	eb08 030b 	add.w	r3, r8, fp
  404aa4:	68ba      	ldr	r2, [r7, #8]
  404aa6:	f043 0301 	orr.w	r3, r3, #1
  404aaa:	6053      	str	r3, [r2, #4]
  404aac:	e6ee      	b.n	40488c <_malloc_r+0x2d8>
  404aae:	207f      	movs	r0, #127	; 0x7f
  404ab0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404ab4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404ab8:	e59e      	b.n	4045f8 <_malloc_r+0x44>
  404aba:	f104 0108 	add.w	r1, r4, #8
  404abe:	4628      	mov	r0, r5
  404ac0:	9300      	str	r3, [sp, #0]
  404ac2:	f000 fdab 	bl	40561c <_free_r>
  404ac6:	9b00      	ldr	r3, [sp, #0]
  404ac8:	6819      	ldr	r1, [r3, #0]
  404aca:	e6df      	b.n	40488c <_malloc_r+0x2d8>
  404acc:	2001      	movs	r0, #1
  404ace:	f04f 0900 	mov.w	r9, #0
  404ad2:	e6bc      	b.n	40484e <_malloc_r+0x29a>
  404ad4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404ad8:	d805      	bhi.n	404ae6 <_malloc_r+0x532>
  404ada:	0bda      	lsrs	r2, r3, #15
  404adc:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404ae0:	00c9      	lsls	r1, r1, #3
  404ae2:	3277      	adds	r2, #119	; 0x77
  404ae4:	e720      	b.n	404928 <_malloc_r+0x374>
  404ae6:	f240 5154 	movw	r1, #1364	; 0x554
  404aea:	428a      	cmp	r2, r1
  404aec:	d805      	bhi.n	404afa <_malloc_r+0x546>
  404aee:	0c9a      	lsrs	r2, r3, #18
  404af0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404af4:	00c9      	lsls	r1, r1, #3
  404af6:	327c      	adds	r2, #124	; 0x7c
  404af8:	e716      	b.n	404928 <_malloc_r+0x374>
  404afa:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404afe:	227e      	movs	r2, #126	; 0x7e
  404b00:	e712      	b.n	404928 <_malloc_r+0x374>
  404b02:	687b      	ldr	r3, [r7, #4]
  404b04:	e780      	b.n	404a08 <_malloc_r+0x454>
  404b06:	08f0      	lsrs	r0, r6, #3
  404b08:	f106 0308 	add.w	r3, r6, #8
  404b0c:	e600      	b.n	404710 <_malloc_r+0x15c>
  404b0e:	bf00      	nop
  404b10:	20000a7c 	.word	0x20000a7c
	...

00404b20 <memchr>:
  404b20:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404b24:	2a10      	cmp	r2, #16
  404b26:	db2b      	blt.n	404b80 <memchr+0x60>
  404b28:	f010 0f07 	tst.w	r0, #7
  404b2c:	d008      	beq.n	404b40 <memchr+0x20>
  404b2e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404b32:	3a01      	subs	r2, #1
  404b34:	428b      	cmp	r3, r1
  404b36:	d02d      	beq.n	404b94 <memchr+0x74>
  404b38:	f010 0f07 	tst.w	r0, #7
  404b3c:	b342      	cbz	r2, 404b90 <memchr+0x70>
  404b3e:	d1f6      	bne.n	404b2e <memchr+0xe>
  404b40:	b4f0      	push	{r4, r5, r6, r7}
  404b42:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404b46:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404b4a:	f022 0407 	bic.w	r4, r2, #7
  404b4e:	f07f 0700 	mvns.w	r7, #0
  404b52:	2300      	movs	r3, #0
  404b54:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404b58:	3c08      	subs	r4, #8
  404b5a:	ea85 0501 	eor.w	r5, r5, r1
  404b5e:	ea86 0601 	eor.w	r6, r6, r1
  404b62:	fa85 f547 	uadd8	r5, r5, r7
  404b66:	faa3 f587 	sel	r5, r3, r7
  404b6a:	fa86 f647 	uadd8	r6, r6, r7
  404b6e:	faa5 f687 	sel	r6, r5, r7
  404b72:	b98e      	cbnz	r6, 404b98 <memchr+0x78>
  404b74:	d1ee      	bne.n	404b54 <memchr+0x34>
  404b76:	bcf0      	pop	{r4, r5, r6, r7}
  404b78:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404b7c:	f002 0207 	and.w	r2, r2, #7
  404b80:	b132      	cbz	r2, 404b90 <memchr+0x70>
  404b82:	f810 3b01 	ldrb.w	r3, [r0], #1
  404b86:	3a01      	subs	r2, #1
  404b88:	ea83 0301 	eor.w	r3, r3, r1
  404b8c:	b113      	cbz	r3, 404b94 <memchr+0x74>
  404b8e:	d1f8      	bne.n	404b82 <memchr+0x62>
  404b90:	2000      	movs	r0, #0
  404b92:	4770      	bx	lr
  404b94:	3801      	subs	r0, #1
  404b96:	4770      	bx	lr
  404b98:	2d00      	cmp	r5, #0
  404b9a:	bf06      	itte	eq
  404b9c:	4635      	moveq	r5, r6
  404b9e:	3803      	subeq	r0, #3
  404ba0:	3807      	subne	r0, #7
  404ba2:	f015 0f01 	tst.w	r5, #1
  404ba6:	d107      	bne.n	404bb8 <memchr+0x98>
  404ba8:	3001      	adds	r0, #1
  404baa:	f415 7f80 	tst.w	r5, #256	; 0x100
  404bae:	bf02      	ittt	eq
  404bb0:	3001      	addeq	r0, #1
  404bb2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404bb6:	3001      	addeq	r0, #1
  404bb8:	bcf0      	pop	{r4, r5, r6, r7}
  404bba:	3801      	subs	r0, #1
  404bbc:	4770      	bx	lr
  404bbe:	bf00      	nop

00404bc0 <memcmp>:
  404bc0:	2a03      	cmp	r2, #3
  404bc2:	b470      	push	{r4, r5, r6}
  404bc4:	d922      	bls.n	404c0c <memcmp+0x4c>
  404bc6:	ea40 0301 	orr.w	r3, r0, r1
  404bca:	079b      	lsls	r3, r3, #30
  404bcc:	d011      	beq.n	404bf2 <memcmp+0x32>
  404bce:	7803      	ldrb	r3, [r0, #0]
  404bd0:	780c      	ldrb	r4, [r1, #0]
  404bd2:	42a3      	cmp	r3, r4
  404bd4:	d11d      	bne.n	404c12 <memcmp+0x52>
  404bd6:	440a      	add	r2, r1
  404bd8:	3101      	adds	r1, #1
  404bda:	e005      	b.n	404be8 <memcmp+0x28>
  404bdc:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  404be0:	f811 4b01 	ldrb.w	r4, [r1], #1
  404be4:	42a3      	cmp	r3, r4
  404be6:	d114      	bne.n	404c12 <memcmp+0x52>
  404be8:	4291      	cmp	r1, r2
  404bea:	d1f7      	bne.n	404bdc <memcmp+0x1c>
  404bec:	2000      	movs	r0, #0
  404bee:	bc70      	pop	{r4, r5, r6}
  404bf0:	4770      	bx	lr
  404bf2:	680d      	ldr	r5, [r1, #0]
  404bf4:	6806      	ldr	r6, [r0, #0]
  404bf6:	42ae      	cmp	r6, r5
  404bf8:	460c      	mov	r4, r1
  404bfa:	4603      	mov	r3, r0
  404bfc:	f101 0104 	add.w	r1, r1, #4
  404c00:	f100 0004 	add.w	r0, r0, #4
  404c04:	d108      	bne.n	404c18 <memcmp+0x58>
  404c06:	3a04      	subs	r2, #4
  404c08:	2a03      	cmp	r2, #3
  404c0a:	d8f2      	bhi.n	404bf2 <memcmp+0x32>
  404c0c:	2a00      	cmp	r2, #0
  404c0e:	d1de      	bne.n	404bce <memcmp+0xe>
  404c10:	e7ec      	b.n	404bec <memcmp+0x2c>
  404c12:	1b18      	subs	r0, r3, r4
  404c14:	bc70      	pop	{r4, r5, r6}
  404c16:	4770      	bx	lr
  404c18:	4621      	mov	r1, r4
  404c1a:	4618      	mov	r0, r3
  404c1c:	e7d7      	b.n	404bce <memcmp+0xe>
  404c1e:	bf00      	nop

00404c20 <__malloc_lock>:
  404c20:	4801      	ldr	r0, [pc, #4]	; (404c28 <__malloc_lock+0x8>)
  404c22:	f7ff bcc3 	b.w	4045ac <__retarget_lock_acquire_recursive>
  404c26:	bf00      	nop
  404c28:	20005ce0 	.word	0x20005ce0

00404c2c <__malloc_unlock>:
  404c2c:	4801      	ldr	r0, [pc, #4]	; (404c34 <__malloc_unlock+0x8>)
  404c2e:	f7ff bcbf 	b.w	4045b0 <__retarget_lock_release_recursive>
  404c32:	bf00      	nop
  404c34:	20005ce0 	.word	0x20005ce0

00404c38 <_Balloc>:
  404c38:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404c3a:	b570      	push	{r4, r5, r6, lr}
  404c3c:	4605      	mov	r5, r0
  404c3e:	460c      	mov	r4, r1
  404c40:	b14b      	cbz	r3, 404c56 <_Balloc+0x1e>
  404c42:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404c46:	b180      	cbz	r0, 404c6a <_Balloc+0x32>
  404c48:	6802      	ldr	r2, [r0, #0]
  404c4a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404c4e:	2300      	movs	r3, #0
  404c50:	6103      	str	r3, [r0, #16]
  404c52:	60c3      	str	r3, [r0, #12]
  404c54:	bd70      	pop	{r4, r5, r6, pc}
  404c56:	2221      	movs	r2, #33	; 0x21
  404c58:	2104      	movs	r1, #4
  404c5a:	f000 fc5f 	bl	40551c <_calloc_r>
  404c5e:	64e8      	str	r0, [r5, #76]	; 0x4c
  404c60:	4603      	mov	r3, r0
  404c62:	2800      	cmp	r0, #0
  404c64:	d1ed      	bne.n	404c42 <_Balloc+0xa>
  404c66:	2000      	movs	r0, #0
  404c68:	bd70      	pop	{r4, r5, r6, pc}
  404c6a:	2101      	movs	r1, #1
  404c6c:	fa01 f604 	lsl.w	r6, r1, r4
  404c70:	1d72      	adds	r2, r6, #5
  404c72:	4628      	mov	r0, r5
  404c74:	0092      	lsls	r2, r2, #2
  404c76:	f000 fc51 	bl	40551c <_calloc_r>
  404c7a:	2800      	cmp	r0, #0
  404c7c:	d0f3      	beq.n	404c66 <_Balloc+0x2e>
  404c7e:	6044      	str	r4, [r0, #4]
  404c80:	6086      	str	r6, [r0, #8]
  404c82:	e7e4      	b.n	404c4e <_Balloc+0x16>

00404c84 <_Bfree>:
  404c84:	b131      	cbz	r1, 404c94 <_Bfree+0x10>
  404c86:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404c88:	684a      	ldr	r2, [r1, #4]
  404c8a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404c8e:	6008      	str	r0, [r1, #0]
  404c90:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404c94:	4770      	bx	lr
  404c96:	bf00      	nop

00404c98 <__multadd>:
  404c98:	b5f0      	push	{r4, r5, r6, r7, lr}
  404c9a:	690c      	ldr	r4, [r1, #16]
  404c9c:	b083      	sub	sp, #12
  404c9e:	460d      	mov	r5, r1
  404ca0:	4606      	mov	r6, r0
  404ca2:	f101 0e14 	add.w	lr, r1, #20
  404ca6:	2700      	movs	r7, #0
  404ca8:	f8de 0000 	ldr.w	r0, [lr]
  404cac:	b281      	uxth	r1, r0
  404cae:	fb02 3301 	mla	r3, r2, r1, r3
  404cb2:	0c01      	lsrs	r1, r0, #16
  404cb4:	0c18      	lsrs	r0, r3, #16
  404cb6:	fb02 0101 	mla	r1, r2, r1, r0
  404cba:	b29b      	uxth	r3, r3
  404cbc:	3701      	adds	r7, #1
  404cbe:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404cc2:	42bc      	cmp	r4, r7
  404cc4:	f84e 3b04 	str.w	r3, [lr], #4
  404cc8:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404ccc:	dcec      	bgt.n	404ca8 <__multadd+0x10>
  404cce:	b13b      	cbz	r3, 404ce0 <__multadd+0x48>
  404cd0:	68aa      	ldr	r2, [r5, #8]
  404cd2:	4294      	cmp	r4, r2
  404cd4:	da07      	bge.n	404ce6 <__multadd+0x4e>
  404cd6:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404cda:	3401      	adds	r4, #1
  404cdc:	6153      	str	r3, [r2, #20]
  404cde:	612c      	str	r4, [r5, #16]
  404ce0:	4628      	mov	r0, r5
  404ce2:	b003      	add	sp, #12
  404ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404ce6:	6869      	ldr	r1, [r5, #4]
  404ce8:	9301      	str	r3, [sp, #4]
  404cea:	3101      	adds	r1, #1
  404cec:	4630      	mov	r0, r6
  404cee:	f7ff ffa3 	bl	404c38 <_Balloc>
  404cf2:	692a      	ldr	r2, [r5, #16]
  404cf4:	3202      	adds	r2, #2
  404cf6:	f105 010c 	add.w	r1, r5, #12
  404cfa:	4607      	mov	r7, r0
  404cfc:	0092      	lsls	r2, r2, #2
  404cfe:	300c      	adds	r0, #12
  404d00:	f7fc fe48 	bl	401994 <memcpy>
  404d04:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404d06:	6869      	ldr	r1, [r5, #4]
  404d08:	9b01      	ldr	r3, [sp, #4]
  404d0a:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404d0e:	6028      	str	r0, [r5, #0]
  404d10:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404d14:	463d      	mov	r5, r7
  404d16:	e7de      	b.n	404cd6 <__multadd+0x3e>

00404d18 <__hi0bits>:
  404d18:	0c02      	lsrs	r2, r0, #16
  404d1a:	0412      	lsls	r2, r2, #16
  404d1c:	4603      	mov	r3, r0
  404d1e:	b9b2      	cbnz	r2, 404d4e <__hi0bits+0x36>
  404d20:	0403      	lsls	r3, r0, #16
  404d22:	2010      	movs	r0, #16
  404d24:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404d28:	bf04      	itt	eq
  404d2a:	021b      	lsleq	r3, r3, #8
  404d2c:	3008      	addeq	r0, #8
  404d2e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404d32:	bf04      	itt	eq
  404d34:	011b      	lsleq	r3, r3, #4
  404d36:	3004      	addeq	r0, #4
  404d38:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404d3c:	bf04      	itt	eq
  404d3e:	009b      	lsleq	r3, r3, #2
  404d40:	3002      	addeq	r0, #2
  404d42:	2b00      	cmp	r3, #0
  404d44:	db02      	blt.n	404d4c <__hi0bits+0x34>
  404d46:	005b      	lsls	r3, r3, #1
  404d48:	d403      	bmi.n	404d52 <__hi0bits+0x3a>
  404d4a:	2020      	movs	r0, #32
  404d4c:	4770      	bx	lr
  404d4e:	2000      	movs	r0, #0
  404d50:	e7e8      	b.n	404d24 <__hi0bits+0xc>
  404d52:	3001      	adds	r0, #1
  404d54:	4770      	bx	lr
  404d56:	bf00      	nop

00404d58 <__lo0bits>:
  404d58:	6803      	ldr	r3, [r0, #0]
  404d5a:	f013 0207 	ands.w	r2, r3, #7
  404d5e:	4601      	mov	r1, r0
  404d60:	d007      	beq.n	404d72 <__lo0bits+0x1a>
  404d62:	07da      	lsls	r2, r3, #31
  404d64:	d421      	bmi.n	404daa <__lo0bits+0x52>
  404d66:	0798      	lsls	r0, r3, #30
  404d68:	d421      	bmi.n	404dae <__lo0bits+0x56>
  404d6a:	089b      	lsrs	r3, r3, #2
  404d6c:	600b      	str	r3, [r1, #0]
  404d6e:	2002      	movs	r0, #2
  404d70:	4770      	bx	lr
  404d72:	b298      	uxth	r0, r3
  404d74:	b198      	cbz	r0, 404d9e <__lo0bits+0x46>
  404d76:	4610      	mov	r0, r2
  404d78:	f013 0fff 	tst.w	r3, #255	; 0xff
  404d7c:	bf04      	itt	eq
  404d7e:	0a1b      	lsreq	r3, r3, #8
  404d80:	3008      	addeq	r0, #8
  404d82:	071a      	lsls	r2, r3, #28
  404d84:	bf04      	itt	eq
  404d86:	091b      	lsreq	r3, r3, #4
  404d88:	3004      	addeq	r0, #4
  404d8a:	079a      	lsls	r2, r3, #30
  404d8c:	bf04      	itt	eq
  404d8e:	089b      	lsreq	r3, r3, #2
  404d90:	3002      	addeq	r0, #2
  404d92:	07da      	lsls	r2, r3, #31
  404d94:	d407      	bmi.n	404da6 <__lo0bits+0x4e>
  404d96:	085b      	lsrs	r3, r3, #1
  404d98:	d104      	bne.n	404da4 <__lo0bits+0x4c>
  404d9a:	2020      	movs	r0, #32
  404d9c:	4770      	bx	lr
  404d9e:	0c1b      	lsrs	r3, r3, #16
  404da0:	2010      	movs	r0, #16
  404da2:	e7e9      	b.n	404d78 <__lo0bits+0x20>
  404da4:	3001      	adds	r0, #1
  404da6:	600b      	str	r3, [r1, #0]
  404da8:	4770      	bx	lr
  404daa:	2000      	movs	r0, #0
  404dac:	4770      	bx	lr
  404dae:	085b      	lsrs	r3, r3, #1
  404db0:	600b      	str	r3, [r1, #0]
  404db2:	2001      	movs	r0, #1
  404db4:	4770      	bx	lr
  404db6:	bf00      	nop

00404db8 <__i2b>:
  404db8:	b510      	push	{r4, lr}
  404dba:	460c      	mov	r4, r1
  404dbc:	2101      	movs	r1, #1
  404dbe:	f7ff ff3b 	bl	404c38 <_Balloc>
  404dc2:	2201      	movs	r2, #1
  404dc4:	6144      	str	r4, [r0, #20]
  404dc6:	6102      	str	r2, [r0, #16]
  404dc8:	bd10      	pop	{r4, pc}
  404dca:	bf00      	nop

00404dcc <__multiply>:
  404dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404dd0:	690c      	ldr	r4, [r1, #16]
  404dd2:	6915      	ldr	r5, [r2, #16]
  404dd4:	42ac      	cmp	r4, r5
  404dd6:	b083      	sub	sp, #12
  404dd8:	468b      	mov	fp, r1
  404dda:	4616      	mov	r6, r2
  404ddc:	da04      	bge.n	404de8 <__multiply+0x1c>
  404dde:	4622      	mov	r2, r4
  404de0:	46b3      	mov	fp, r6
  404de2:	462c      	mov	r4, r5
  404de4:	460e      	mov	r6, r1
  404de6:	4615      	mov	r5, r2
  404de8:	f8db 3008 	ldr.w	r3, [fp, #8]
  404dec:	f8db 1004 	ldr.w	r1, [fp, #4]
  404df0:	eb04 0805 	add.w	r8, r4, r5
  404df4:	4598      	cmp	r8, r3
  404df6:	bfc8      	it	gt
  404df8:	3101      	addgt	r1, #1
  404dfa:	f7ff ff1d 	bl	404c38 <_Balloc>
  404dfe:	f100 0914 	add.w	r9, r0, #20
  404e02:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404e06:	45d1      	cmp	r9, sl
  404e08:	9000      	str	r0, [sp, #0]
  404e0a:	d205      	bcs.n	404e18 <__multiply+0x4c>
  404e0c:	464b      	mov	r3, r9
  404e0e:	2100      	movs	r1, #0
  404e10:	f843 1b04 	str.w	r1, [r3], #4
  404e14:	459a      	cmp	sl, r3
  404e16:	d8fb      	bhi.n	404e10 <__multiply+0x44>
  404e18:	f106 0c14 	add.w	ip, r6, #20
  404e1c:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404e20:	f10b 0b14 	add.w	fp, fp, #20
  404e24:	459c      	cmp	ip, r3
  404e26:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404e2a:	d24c      	bcs.n	404ec6 <__multiply+0xfa>
  404e2c:	f8cd a004 	str.w	sl, [sp, #4]
  404e30:	469a      	mov	sl, r3
  404e32:	f8dc 5000 	ldr.w	r5, [ip]
  404e36:	b2af      	uxth	r7, r5
  404e38:	b1ef      	cbz	r7, 404e76 <__multiply+0xaa>
  404e3a:	2100      	movs	r1, #0
  404e3c:	464d      	mov	r5, r9
  404e3e:	465e      	mov	r6, fp
  404e40:	460c      	mov	r4, r1
  404e42:	f856 2b04 	ldr.w	r2, [r6], #4
  404e46:	6828      	ldr	r0, [r5, #0]
  404e48:	b293      	uxth	r3, r2
  404e4a:	b281      	uxth	r1, r0
  404e4c:	fb07 1303 	mla	r3, r7, r3, r1
  404e50:	0c12      	lsrs	r2, r2, #16
  404e52:	0c01      	lsrs	r1, r0, #16
  404e54:	4423      	add	r3, r4
  404e56:	fb07 1102 	mla	r1, r7, r2, r1
  404e5a:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404e5e:	b29b      	uxth	r3, r3
  404e60:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404e64:	45b6      	cmp	lr, r6
  404e66:	f845 3b04 	str.w	r3, [r5], #4
  404e6a:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404e6e:	d8e8      	bhi.n	404e42 <__multiply+0x76>
  404e70:	602c      	str	r4, [r5, #0]
  404e72:	f8dc 5000 	ldr.w	r5, [ip]
  404e76:	0c2d      	lsrs	r5, r5, #16
  404e78:	d01d      	beq.n	404eb6 <__multiply+0xea>
  404e7a:	f8d9 3000 	ldr.w	r3, [r9]
  404e7e:	4648      	mov	r0, r9
  404e80:	461c      	mov	r4, r3
  404e82:	4659      	mov	r1, fp
  404e84:	2200      	movs	r2, #0
  404e86:	880e      	ldrh	r6, [r1, #0]
  404e88:	0c24      	lsrs	r4, r4, #16
  404e8a:	fb05 4406 	mla	r4, r5, r6, r4
  404e8e:	4422      	add	r2, r4
  404e90:	b29b      	uxth	r3, r3
  404e92:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404e96:	f840 3b04 	str.w	r3, [r0], #4
  404e9a:	f851 3b04 	ldr.w	r3, [r1], #4
  404e9e:	6804      	ldr	r4, [r0, #0]
  404ea0:	0c1b      	lsrs	r3, r3, #16
  404ea2:	b2a6      	uxth	r6, r4
  404ea4:	fb05 6303 	mla	r3, r5, r3, r6
  404ea8:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404eac:	458e      	cmp	lr, r1
  404eae:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404eb2:	d8e8      	bhi.n	404e86 <__multiply+0xba>
  404eb4:	6003      	str	r3, [r0, #0]
  404eb6:	f10c 0c04 	add.w	ip, ip, #4
  404eba:	45e2      	cmp	sl, ip
  404ebc:	f109 0904 	add.w	r9, r9, #4
  404ec0:	d8b7      	bhi.n	404e32 <__multiply+0x66>
  404ec2:	f8dd a004 	ldr.w	sl, [sp, #4]
  404ec6:	f1b8 0f00 	cmp.w	r8, #0
  404eca:	dd0b      	ble.n	404ee4 <__multiply+0x118>
  404ecc:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404ed0:	f1aa 0a04 	sub.w	sl, sl, #4
  404ed4:	b11b      	cbz	r3, 404ede <__multiply+0x112>
  404ed6:	e005      	b.n	404ee4 <__multiply+0x118>
  404ed8:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404edc:	b913      	cbnz	r3, 404ee4 <__multiply+0x118>
  404ede:	f1b8 0801 	subs.w	r8, r8, #1
  404ee2:	d1f9      	bne.n	404ed8 <__multiply+0x10c>
  404ee4:	9800      	ldr	r0, [sp, #0]
  404ee6:	f8c0 8010 	str.w	r8, [r0, #16]
  404eea:	b003      	add	sp, #12
  404eec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404ef0 <__pow5mult>:
  404ef0:	f012 0303 	ands.w	r3, r2, #3
  404ef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404ef8:	4614      	mov	r4, r2
  404efa:	4607      	mov	r7, r0
  404efc:	d12e      	bne.n	404f5c <__pow5mult+0x6c>
  404efe:	460d      	mov	r5, r1
  404f00:	10a4      	asrs	r4, r4, #2
  404f02:	d01c      	beq.n	404f3e <__pow5mult+0x4e>
  404f04:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404f06:	b396      	cbz	r6, 404f6e <__pow5mult+0x7e>
  404f08:	07e3      	lsls	r3, r4, #31
  404f0a:	f04f 0800 	mov.w	r8, #0
  404f0e:	d406      	bmi.n	404f1e <__pow5mult+0x2e>
  404f10:	1064      	asrs	r4, r4, #1
  404f12:	d014      	beq.n	404f3e <__pow5mult+0x4e>
  404f14:	6830      	ldr	r0, [r6, #0]
  404f16:	b1a8      	cbz	r0, 404f44 <__pow5mult+0x54>
  404f18:	4606      	mov	r6, r0
  404f1a:	07e3      	lsls	r3, r4, #31
  404f1c:	d5f8      	bpl.n	404f10 <__pow5mult+0x20>
  404f1e:	4632      	mov	r2, r6
  404f20:	4629      	mov	r1, r5
  404f22:	4638      	mov	r0, r7
  404f24:	f7ff ff52 	bl	404dcc <__multiply>
  404f28:	b1b5      	cbz	r5, 404f58 <__pow5mult+0x68>
  404f2a:	686a      	ldr	r2, [r5, #4]
  404f2c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404f2e:	1064      	asrs	r4, r4, #1
  404f30:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404f34:	6029      	str	r1, [r5, #0]
  404f36:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404f3a:	4605      	mov	r5, r0
  404f3c:	d1ea      	bne.n	404f14 <__pow5mult+0x24>
  404f3e:	4628      	mov	r0, r5
  404f40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f44:	4632      	mov	r2, r6
  404f46:	4631      	mov	r1, r6
  404f48:	4638      	mov	r0, r7
  404f4a:	f7ff ff3f 	bl	404dcc <__multiply>
  404f4e:	6030      	str	r0, [r6, #0]
  404f50:	f8c0 8000 	str.w	r8, [r0]
  404f54:	4606      	mov	r6, r0
  404f56:	e7e0      	b.n	404f1a <__pow5mult+0x2a>
  404f58:	4605      	mov	r5, r0
  404f5a:	e7d9      	b.n	404f10 <__pow5mult+0x20>
  404f5c:	1e5a      	subs	r2, r3, #1
  404f5e:	4d0b      	ldr	r5, [pc, #44]	; (404f8c <__pow5mult+0x9c>)
  404f60:	2300      	movs	r3, #0
  404f62:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404f66:	f7ff fe97 	bl	404c98 <__multadd>
  404f6a:	4605      	mov	r5, r0
  404f6c:	e7c8      	b.n	404f00 <__pow5mult+0x10>
  404f6e:	2101      	movs	r1, #1
  404f70:	4638      	mov	r0, r7
  404f72:	f7ff fe61 	bl	404c38 <_Balloc>
  404f76:	f240 2171 	movw	r1, #625	; 0x271
  404f7a:	2201      	movs	r2, #1
  404f7c:	2300      	movs	r3, #0
  404f7e:	6141      	str	r1, [r0, #20]
  404f80:	6102      	str	r2, [r0, #16]
  404f82:	4606      	mov	r6, r0
  404f84:	64b8      	str	r0, [r7, #72]	; 0x48
  404f86:	6003      	str	r3, [r0, #0]
  404f88:	e7be      	b.n	404f08 <__pow5mult+0x18>
  404f8a:	bf00      	nop
  404f8c:	00407718 	.word	0x00407718

00404f90 <__lshift>:
  404f90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404f94:	4691      	mov	r9, r2
  404f96:	690a      	ldr	r2, [r1, #16]
  404f98:	688b      	ldr	r3, [r1, #8]
  404f9a:	ea4f 1469 	mov.w	r4, r9, asr #5
  404f9e:	eb04 0802 	add.w	r8, r4, r2
  404fa2:	f108 0501 	add.w	r5, r8, #1
  404fa6:	429d      	cmp	r5, r3
  404fa8:	460e      	mov	r6, r1
  404faa:	4607      	mov	r7, r0
  404fac:	6849      	ldr	r1, [r1, #4]
  404fae:	dd04      	ble.n	404fba <__lshift+0x2a>
  404fb0:	005b      	lsls	r3, r3, #1
  404fb2:	429d      	cmp	r5, r3
  404fb4:	f101 0101 	add.w	r1, r1, #1
  404fb8:	dcfa      	bgt.n	404fb0 <__lshift+0x20>
  404fba:	4638      	mov	r0, r7
  404fbc:	f7ff fe3c 	bl	404c38 <_Balloc>
  404fc0:	2c00      	cmp	r4, #0
  404fc2:	f100 0314 	add.w	r3, r0, #20
  404fc6:	dd06      	ble.n	404fd6 <__lshift+0x46>
  404fc8:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404fcc:	2100      	movs	r1, #0
  404fce:	f843 1b04 	str.w	r1, [r3], #4
  404fd2:	429a      	cmp	r2, r3
  404fd4:	d1fb      	bne.n	404fce <__lshift+0x3e>
  404fd6:	6934      	ldr	r4, [r6, #16]
  404fd8:	f106 0114 	add.w	r1, r6, #20
  404fdc:	f019 091f 	ands.w	r9, r9, #31
  404fe0:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404fe4:	d01d      	beq.n	405022 <__lshift+0x92>
  404fe6:	f1c9 0c20 	rsb	ip, r9, #32
  404fea:	2200      	movs	r2, #0
  404fec:	680c      	ldr	r4, [r1, #0]
  404fee:	fa04 f409 	lsl.w	r4, r4, r9
  404ff2:	4314      	orrs	r4, r2
  404ff4:	f843 4b04 	str.w	r4, [r3], #4
  404ff8:	f851 2b04 	ldr.w	r2, [r1], #4
  404ffc:	458e      	cmp	lr, r1
  404ffe:	fa22 f20c 	lsr.w	r2, r2, ip
  405002:	d8f3      	bhi.n	404fec <__lshift+0x5c>
  405004:	601a      	str	r2, [r3, #0]
  405006:	b10a      	cbz	r2, 40500c <__lshift+0x7c>
  405008:	f108 0502 	add.w	r5, r8, #2
  40500c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40500e:	6872      	ldr	r2, [r6, #4]
  405010:	3d01      	subs	r5, #1
  405012:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405016:	6105      	str	r5, [r0, #16]
  405018:	6031      	str	r1, [r6, #0]
  40501a:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  40501e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405022:	3b04      	subs	r3, #4
  405024:	f851 2b04 	ldr.w	r2, [r1], #4
  405028:	f843 2f04 	str.w	r2, [r3, #4]!
  40502c:	458e      	cmp	lr, r1
  40502e:	d8f9      	bhi.n	405024 <__lshift+0x94>
  405030:	e7ec      	b.n	40500c <__lshift+0x7c>
  405032:	bf00      	nop

00405034 <__mcmp>:
  405034:	b430      	push	{r4, r5}
  405036:	690b      	ldr	r3, [r1, #16]
  405038:	4605      	mov	r5, r0
  40503a:	6900      	ldr	r0, [r0, #16]
  40503c:	1ac0      	subs	r0, r0, r3
  40503e:	d10f      	bne.n	405060 <__mcmp+0x2c>
  405040:	009b      	lsls	r3, r3, #2
  405042:	3514      	adds	r5, #20
  405044:	3114      	adds	r1, #20
  405046:	4419      	add	r1, r3
  405048:	442b      	add	r3, r5
  40504a:	e001      	b.n	405050 <__mcmp+0x1c>
  40504c:	429d      	cmp	r5, r3
  40504e:	d207      	bcs.n	405060 <__mcmp+0x2c>
  405050:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405054:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  405058:	4294      	cmp	r4, r2
  40505a:	d0f7      	beq.n	40504c <__mcmp+0x18>
  40505c:	d302      	bcc.n	405064 <__mcmp+0x30>
  40505e:	2001      	movs	r0, #1
  405060:	bc30      	pop	{r4, r5}
  405062:	4770      	bx	lr
  405064:	f04f 30ff 	mov.w	r0, #4294967295
  405068:	e7fa      	b.n	405060 <__mcmp+0x2c>
  40506a:	bf00      	nop

0040506c <__mdiff>:
  40506c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405070:	690f      	ldr	r7, [r1, #16]
  405072:	460e      	mov	r6, r1
  405074:	6911      	ldr	r1, [r2, #16]
  405076:	1a7f      	subs	r7, r7, r1
  405078:	2f00      	cmp	r7, #0
  40507a:	4690      	mov	r8, r2
  40507c:	d117      	bne.n	4050ae <__mdiff+0x42>
  40507e:	0089      	lsls	r1, r1, #2
  405080:	f106 0514 	add.w	r5, r6, #20
  405084:	f102 0e14 	add.w	lr, r2, #20
  405088:	186b      	adds	r3, r5, r1
  40508a:	4471      	add	r1, lr
  40508c:	e001      	b.n	405092 <__mdiff+0x26>
  40508e:	429d      	cmp	r5, r3
  405090:	d25c      	bcs.n	40514c <__mdiff+0xe0>
  405092:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  405096:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40509a:	42a2      	cmp	r2, r4
  40509c:	d0f7      	beq.n	40508e <__mdiff+0x22>
  40509e:	d25e      	bcs.n	40515e <__mdiff+0xf2>
  4050a0:	4633      	mov	r3, r6
  4050a2:	462c      	mov	r4, r5
  4050a4:	4646      	mov	r6, r8
  4050a6:	4675      	mov	r5, lr
  4050a8:	4698      	mov	r8, r3
  4050aa:	2701      	movs	r7, #1
  4050ac:	e005      	b.n	4050ba <__mdiff+0x4e>
  4050ae:	db58      	blt.n	405162 <__mdiff+0xf6>
  4050b0:	f106 0514 	add.w	r5, r6, #20
  4050b4:	f108 0414 	add.w	r4, r8, #20
  4050b8:	2700      	movs	r7, #0
  4050ba:	6871      	ldr	r1, [r6, #4]
  4050bc:	f7ff fdbc 	bl	404c38 <_Balloc>
  4050c0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4050c4:	6936      	ldr	r6, [r6, #16]
  4050c6:	60c7      	str	r7, [r0, #12]
  4050c8:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4050cc:	46a6      	mov	lr, r4
  4050ce:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4050d2:	f100 0414 	add.w	r4, r0, #20
  4050d6:	2300      	movs	r3, #0
  4050d8:	f85e 1b04 	ldr.w	r1, [lr], #4
  4050dc:	f855 8b04 	ldr.w	r8, [r5], #4
  4050e0:	b28a      	uxth	r2, r1
  4050e2:	fa13 f388 	uxtah	r3, r3, r8
  4050e6:	0c09      	lsrs	r1, r1, #16
  4050e8:	1a9a      	subs	r2, r3, r2
  4050ea:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4050ee:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4050f2:	b292      	uxth	r2, r2
  4050f4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4050f8:	45f4      	cmp	ip, lr
  4050fa:	f844 2b04 	str.w	r2, [r4], #4
  4050fe:	ea4f 4323 	mov.w	r3, r3, asr #16
  405102:	d8e9      	bhi.n	4050d8 <__mdiff+0x6c>
  405104:	42af      	cmp	r7, r5
  405106:	d917      	bls.n	405138 <__mdiff+0xcc>
  405108:	46a4      	mov	ip, r4
  40510a:	46ae      	mov	lr, r5
  40510c:	f85e 2b04 	ldr.w	r2, [lr], #4
  405110:	fa13 f382 	uxtah	r3, r3, r2
  405114:	1419      	asrs	r1, r3, #16
  405116:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40511a:	b29b      	uxth	r3, r3
  40511c:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405120:	4577      	cmp	r7, lr
  405122:	f84c 2b04 	str.w	r2, [ip], #4
  405126:	ea4f 4321 	mov.w	r3, r1, asr #16
  40512a:	d8ef      	bhi.n	40510c <__mdiff+0xa0>
  40512c:	43ed      	mvns	r5, r5
  40512e:	442f      	add	r7, r5
  405130:	f027 0703 	bic.w	r7, r7, #3
  405134:	3704      	adds	r7, #4
  405136:	443c      	add	r4, r7
  405138:	3c04      	subs	r4, #4
  40513a:	b922      	cbnz	r2, 405146 <__mdiff+0xda>
  40513c:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405140:	3e01      	subs	r6, #1
  405142:	2b00      	cmp	r3, #0
  405144:	d0fa      	beq.n	40513c <__mdiff+0xd0>
  405146:	6106      	str	r6, [r0, #16]
  405148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40514c:	2100      	movs	r1, #0
  40514e:	f7ff fd73 	bl	404c38 <_Balloc>
  405152:	2201      	movs	r2, #1
  405154:	2300      	movs	r3, #0
  405156:	6102      	str	r2, [r0, #16]
  405158:	6143      	str	r3, [r0, #20]
  40515a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40515e:	4674      	mov	r4, lr
  405160:	e7ab      	b.n	4050ba <__mdiff+0x4e>
  405162:	4633      	mov	r3, r6
  405164:	f106 0414 	add.w	r4, r6, #20
  405168:	f102 0514 	add.w	r5, r2, #20
  40516c:	4616      	mov	r6, r2
  40516e:	2701      	movs	r7, #1
  405170:	4698      	mov	r8, r3
  405172:	e7a2      	b.n	4050ba <__mdiff+0x4e>

00405174 <__d2b>:
  405174:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405178:	b082      	sub	sp, #8
  40517a:	2101      	movs	r1, #1
  40517c:	461c      	mov	r4, r3
  40517e:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405182:	4615      	mov	r5, r2
  405184:	9e08      	ldr	r6, [sp, #32]
  405186:	f7ff fd57 	bl	404c38 <_Balloc>
  40518a:	f3c4 0413 	ubfx	r4, r4, #0, #20
  40518e:	4680      	mov	r8, r0
  405190:	b10f      	cbz	r7, 405196 <__d2b+0x22>
  405192:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  405196:	9401      	str	r4, [sp, #4]
  405198:	b31d      	cbz	r5, 4051e2 <__d2b+0x6e>
  40519a:	a802      	add	r0, sp, #8
  40519c:	f840 5d08 	str.w	r5, [r0, #-8]!
  4051a0:	f7ff fdda 	bl	404d58 <__lo0bits>
  4051a4:	2800      	cmp	r0, #0
  4051a6:	d134      	bne.n	405212 <__d2b+0x9e>
  4051a8:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4051ac:	f8c8 2014 	str.w	r2, [r8, #20]
  4051b0:	2b00      	cmp	r3, #0
  4051b2:	bf0c      	ite	eq
  4051b4:	2101      	moveq	r1, #1
  4051b6:	2102      	movne	r1, #2
  4051b8:	f8c8 3018 	str.w	r3, [r8, #24]
  4051bc:	f8c8 1010 	str.w	r1, [r8, #16]
  4051c0:	b9df      	cbnz	r7, 4051fa <__d2b+0x86>
  4051c2:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  4051c6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4051ca:	6030      	str	r0, [r6, #0]
  4051cc:	6918      	ldr	r0, [r3, #16]
  4051ce:	f7ff fda3 	bl	404d18 <__hi0bits>
  4051d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4051d4:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4051d8:	6018      	str	r0, [r3, #0]
  4051da:	4640      	mov	r0, r8
  4051dc:	b002      	add	sp, #8
  4051de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051e2:	a801      	add	r0, sp, #4
  4051e4:	f7ff fdb8 	bl	404d58 <__lo0bits>
  4051e8:	9b01      	ldr	r3, [sp, #4]
  4051ea:	f8c8 3014 	str.w	r3, [r8, #20]
  4051ee:	2101      	movs	r1, #1
  4051f0:	3020      	adds	r0, #32
  4051f2:	f8c8 1010 	str.w	r1, [r8, #16]
  4051f6:	2f00      	cmp	r7, #0
  4051f8:	d0e3      	beq.n	4051c2 <__d2b+0x4e>
  4051fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4051fc:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405200:	4407      	add	r7, r0
  405202:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  405206:	6037      	str	r7, [r6, #0]
  405208:	6018      	str	r0, [r3, #0]
  40520a:	4640      	mov	r0, r8
  40520c:	b002      	add	sp, #8
  40520e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405212:	e89d 000a 	ldmia.w	sp, {r1, r3}
  405216:	f1c0 0220 	rsb	r2, r0, #32
  40521a:	fa03 f202 	lsl.w	r2, r3, r2
  40521e:	430a      	orrs	r2, r1
  405220:	40c3      	lsrs	r3, r0
  405222:	9301      	str	r3, [sp, #4]
  405224:	f8c8 2014 	str.w	r2, [r8, #20]
  405228:	e7c2      	b.n	4051b0 <__d2b+0x3c>
  40522a:	bf00      	nop

0040522c <_sbrk_r>:
  40522c:	b538      	push	{r3, r4, r5, lr}
  40522e:	4c07      	ldr	r4, [pc, #28]	; (40524c <_sbrk_r+0x20>)
  405230:	2300      	movs	r3, #0
  405232:	4605      	mov	r5, r0
  405234:	4608      	mov	r0, r1
  405236:	6023      	str	r3, [r4, #0]
  405238:	f7fc fab2 	bl	4017a0 <_sbrk>
  40523c:	1c43      	adds	r3, r0, #1
  40523e:	d000      	beq.n	405242 <_sbrk_r+0x16>
  405240:	bd38      	pop	{r3, r4, r5, pc}
  405242:	6823      	ldr	r3, [r4, #0]
  405244:	2b00      	cmp	r3, #0
  405246:	d0fb      	beq.n	405240 <_sbrk_r+0x14>
  405248:	602b      	str	r3, [r5, #0]
  40524a:	bd38      	pop	{r3, r4, r5, pc}
  40524c:	20005cf4 	.word	0x20005cf4
	...

00405280 <strlen>:
  405280:	f890 f000 	pld	[r0]
  405284:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405288:	f020 0107 	bic.w	r1, r0, #7
  40528c:	f06f 0c00 	mvn.w	ip, #0
  405290:	f010 0407 	ands.w	r4, r0, #7
  405294:	f891 f020 	pld	[r1, #32]
  405298:	f040 8049 	bne.w	40532e <strlen+0xae>
  40529c:	f04f 0400 	mov.w	r4, #0
  4052a0:	f06f 0007 	mvn.w	r0, #7
  4052a4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4052a8:	f891 f040 	pld	[r1, #64]	; 0x40
  4052ac:	f100 0008 	add.w	r0, r0, #8
  4052b0:	fa82 f24c 	uadd8	r2, r2, ip
  4052b4:	faa4 f28c 	sel	r2, r4, ip
  4052b8:	fa83 f34c 	uadd8	r3, r3, ip
  4052bc:	faa2 f38c 	sel	r3, r2, ip
  4052c0:	bb4b      	cbnz	r3, 405316 <strlen+0x96>
  4052c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  4052c6:	fa82 f24c 	uadd8	r2, r2, ip
  4052ca:	f100 0008 	add.w	r0, r0, #8
  4052ce:	faa4 f28c 	sel	r2, r4, ip
  4052d2:	fa83 f34c 	uadd8	r3, r3, ip
  4052d6:	faa2 f38c 	sel	r3, r2, ip
  4052da:	b9e3      	cbnz	r3, 405316 <strlen+0x96>
  4052dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4052e0:	fa82 f24c 	uadd8	r2, r2, ip
  4052e4:	f100 0008 	add.w	r0, r0, #8
  4052e8:	faa4 f28c 	sel	r2, r4, ip
  4052ec:	fa83 f34c 	uadd8	r3, r3, ip
  4052f0:	faa2 f38c 	sel	r3, r2, ip
  4052f4:	b97b      	cbnz	r3, 405316 <strlen+0x96>
  4052f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4052fa:	f101 0120 	add.w	r1, r1, #32
  4052fe:	fa82 f24c 	uadd8	r2, r2, ip
  405302:	f100 0008 	add.w	r0, r0, #8
  405306:	faa4 f28c 	sel	r2, r4, ip
  40530a:	fa83 f34c 	uadd8	r3, r3, ip
  40530e:	faa2 f38c 	sel	r3, r2, ip
  405312:	2b00      	cmp	r3, #0
  405314:	d0c6      	beq.n	4052a4 <strlen+0x24>
  405316:	2a00      	cmp	r2, #0
  405318:	bf04      	itt	eq
  40531a:	3004      	addeq	r0, #4
  40531c:	461a      	moveq	r2, r3
  40531e:	ba12      	rev	r2, r2
  405320:	fab2 f282 	clz	r2, r2
  405324:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405328:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40532c:	4770      	bx	lr
  40532e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405332:	f004 0503 	and.w	r5, r4, #3
  405336:	f1c4 0000 	rsb	r0, r4, #0
  40533a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40533e:	f014 0f04 	tst.w	r4, #4
  405342:	f891 f040 	pld	[r1, #64]	; 0x40
  405346:	fa0c f505 	lsl.w	r5, ip, r5
  40534a:	ea62 0205 	orn	r2, r2, r5
  40534e:	bf1c      	itt	ne
  405350:	ea63 0305 	ornne	r3, r3, r5
  405354:	4662      	movne	r2, ip
  405356:	f04f 0400 	mov.w	r4, #0
  40535a:	e7a9      	b.n	4052b0 <strlen+0x30>

0040535c <__ssprint_r>:
  40535c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405360:	6893      	ldr	r3, [r2, #8]
  405362:	b083      	sub	sp, #12
  405364:	4690      	mov	r8, r2
  405366:	2b00      	cmp	r3, #0
  405368:	d070      	beq.n	40544c <__ssprint_r+0xf0>
  40536a:	4682      	mov	sl, r0
  40536c:	460c      	mov	r4, r1
  40536e:	6817      	ldr	r7, [r2, #0]
  405370:	688d      	ldr	r5, [r1, #8]
  405372:	6808      	ldr	r0, [r1, #0]
  405374:	e042      	b.n	4053fc <__ssprint_r+0xa0>
  405376:	89a3      	ldrh	r3, [r4, #12]
  405378:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40537c:	d02e      	beq.n	4053dc <__ssprint_r+0x80>
  40537e:	6965      	ldr	r5, [r4, #20]
  405380:	6921      	ldr	r1, [r4, #16]
  405382:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405386:	eba0 0b01 	sub.w	fp, r0, r1
  40538a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40538e:	f10b 0001 	add.w	r0, fp, #1
  405392:	106d      	asrs	r5, r5, #1
  405394:	4430      	add	r0, r6
  405396:	42a8      	cmp	r0, r5
  405398:	462a      	mov	r2, r5
  40539a:	bf84      	itt	hi
  40539c:	4605      	movhi	r5, r0
  40539e:	462a      	movhi	r2, r5
  4053a0:	055b      	lsls	r3, r3, #21
  4053a2:	d538      	bpl.n	405416 <__ssprint_r+0xba>
  4053a4:	4611      	mov	r1, r2
  4053a6:	4650      	mov	r0, sl
  4053a8:	f7ff f904 	bl	4045b4 <_malloc_r>
  4053ac:	2800      	cmp	r0, #0
  4053ae:	d03c      	beq.n	40542a <__ssprint_r+0xce>
  4053b0:	465a      	mov	r2, fp
  4053b2:	6921      	ldr	r1, [r4, #16]
  4053b4:	9001      	str	r0, [sp, #4]
  4053b6:	f7fc faed 	bl	401994 <memcpy>
  4053ba:	89a2      	ldrh	r2, [r4, #12]
  4053bc:	9b01      	ldr	r3, [sp, #4]
  4053be:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4053c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4053c6:	81a2      	strh	r2, [r4, #12]
  4053c8:	eba5 020b 	sub.w	r2, r5, fp
  4053cc:	eb03 000b 	add.w	r0, r3, fp
  4053d0:	6165      	str	r5, [r4, #20]
  4053d2:	6123      	str	r3, [r4, #16]
  4053d4:	6020      	str	r0, [r4, #0]
  4053d6:	60a2      	str	r2, [r4, #8]
  4053d8:	4635      	mov	r5, r6
  4053da:	46b3      	mov	fp, r6
  4053dc:	465a      	mov	r2, fp
  4053de:	4649      	mov	r1, r9
  4053e0:	f000 fa18 	bl	405814 <memmove>
  4053e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4053e8:	68a2      	ldr	r2, [r4, #8]
  4053ea:	6820      	ldr	r0, [r4, #0]
  4053ec:	1b55      	subs	r5, r2, r5
  4053ee:	4458      	add	r0, fp
  4053f0:	1b9e      	subs	r6, r3, r6
  4053f2:	60a5      	str	r5, [r4, #8]
  4053f4:	6020      	str	r0, [r4, #0]
  4053f6:	f8c8 6008 	str.w	r6, [r8, #8]
  4053fa:	b33e      	cbz	r6, 40544c <__ssprint_r+0xf0>
  4053fc:	687e      	ldr	r6, [r7, #4]
  4053fe:	463b      	mov	r3, r7
  405400:	3708      	adds	r7, #8
  405402:	2e00      	cmp	r6, #0
  405404:	d0fa      	beq.n	4053fc <__ssprint_r+0xa0>
  405406:	42ae      	cmp	r6, r5
  405408:	f8d3 9000 	ldr.w	r9, [r3]
  40540c:	46ab      	mov	fp, r5
  40540e:	d2b2      	bcs.n	405376 <__ssprint_r+0x1a>
  405410:	4635      	mov	r5, r6
  405412:	46b3      	mov	fp, r6
  405414:	e7e2      	b.n	4053dc <__ssprint_r+0x80>
  405416:	4650      	mov	r0, sl
  405418:	f000 fa60 	bl	4058dc <_realloc_r>
  40541c:	4603      	mov	r3, r0
  40541e:	2800      	cmp	r0, #0
  405420:	d1d2      	bne.n	4053c8 <__ssprint_r+0x6c>
  405422:	6921      	ldr	r1, [r4, #16]
  405424:	4650      	mov	r0, sl
  405426:	f000 f8f9 	bl	40561c <_free_r>
  40542a:	230c      	movs	r3, #12
  40542c:	f8ca 3000 	str.w	r3, [sl]
  405430:	89a3      	ldrh	r3, [r4, #12]
  405432:	2200      	movs	r2, #0
  405434:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405438:	f04f 30ff 	mov.w	r0, #4294967295
  40543c:	81a3      	strh	r3, [r4, #12]
  40543e:	f8c8 2008 	str.w	r2, [r8, #8]
  405442:	f8c8 2004 	str.w	r2, [r8, #4]
  405446:	b003      	add	sp, #12
  405448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40544c:	2000      	movs	r0, #0
  40544e:	f8c8 0004 	str.w	r0, [r8, #4]
  405452:	b003      	add	sp, #12
  405454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405458 <__register_exitproc>:
  405458:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40545c:	4d2c      	ldr	r5, [pc, #176]	; (405510 <__register_exitproc+0xb8>)
  40545e:	4606      	mov	r6, r0
  405460:	6828      	ldr	r0, [r5, #0]
  405462:	4698      	mov	r8, r3
  405464:	460f      	mov	r7, r1
  405466:	4691      	mov	r9, r2
  405468:	f7ff f8a0 	bl	4045ac <__retarget_lock_acquire_recursive>
  40546c:	4b29      	ldr	r3, [pc, #164]	; (405514 <__register_exitproc+0xbc>)
  40546e:	681c      	ldr	r4, [r3, #0]
  405470:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405474:	2b00      	cmp	r3, #0
  405476:	d03e      	beq.n	4054f6 <__register_exitproc+0x9e>
  405478:	685a      	ldr	r2, [r3, #4]
  40547a:	2a1f      	cmp	r2, #31
  40547c:	dc1c      	bgt.n	4054b8 <__register_exitproc+0x60>
  40547e:	f102 0e01 	add.w	lr, r2, #1
  405482:	b176      	cbz	r6, 4054a2 <__register_exitproc+0x4a>
  405484:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405488:	2401      	movs	r4, #1
  40548a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40548e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405492:	4094      	lsls	r4, r2
  405494:	4320      	orrs	r0, r4
  405496:	2e02      	cmp	r6, #2
  405498:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40549c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4054a0:	d023      	beq.n	4054ea <__register_exitproc+0x92>
  4054a2:	3202      	adds	r2, #2
  4054a4:	f8c3 e004 	str.w	lr, [r3, #4]
  4054a8:	6828      	ldr	r0, [r5, #0]
  4054aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4054ae:	f7ff f87f 	bl	4045b0 <__retarget_lock_release_recursive>
  4054b2:	2000      	movs	r0, #0
  4054b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4054b8:	4b17      	ldr	r3, [pc, #92]	; (405518 <__register_exitproc+0xc0>)
  4054ba:	b30b      	cbz	r3, 405500 <__register_exitproc+0xa8>
  4054bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4054c0:	f3af 8000 	nop.w
  4054c4:	4603      	mov	r3, r0
  4054c6:	b1d8      	cbz	r0, 405500 <__register_exitproc+0xa8>
  4054c8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4054cc:	6002      	str	r2, [r0, #0]
  4054ce:	2100      	movs	r1, #0
  4054d0:	6041      	str	r1, [r0, #4]
  4054d2:	460a      	mov	r2, r1
  4054d4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4054d8:	f04f 0e01 	mov.w	lr, #1
  4054dc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4054e0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4054e4:	2e00      	cmp	r6, #0
  4054e6:	d0dc      	beq.n	4054a2 <__register_exitproc+0x4a>
  4054e8:	e7cc      	b.n	405484 <__register_exitproc+0x2c>
  4054ea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4054ee:	430c      	orrs	r4, r1
  4054f0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4054f4:	e7d5      	b.n	4054a2 <__register_exitproc+0x4a>
  4054f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4054fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4054fe:	e7bb      	b.n	405478 <__register_exitproc+0x20>
  405500:	6828      	ldr	r0, [r5, #0]
  405502:	f7ff f855 	bl	4045b0 <__retarget_lock_release_recursive>
  405506:	f04f 30ff 	mov.w	r0, #4294967295
  40550a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40550e:	bf00      	nop
  405510:	20000440 	.word	0x20000440
  405514:	004075ac 	.word	0x004075ac
  405518:	00000000 	.word	0x00000000

0040551c <_calloc_r>:
  40551c:	b510      	push	{r4, lr}
  40551e:	fb02 f101 	mul.w	r1, r2, r1
  405522:	f7ff f847 	bl	4045b4 <_malloc_r>
  405526:	4604      	mov	r4, r0
  405528:	b1d8      	cbz	r0, 405562 <_calloc_r+0x46>
  40552a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40552e:	f022 0203 	bic.w	r2, r2, #3
  405532:	3a04      	subs	r2, #4
  405534:	2a24      	cmp	r2, #36	; 0x24
  405536:	d818      	bhi.n	40556a <_calloc_r+0x4e>
  405538:	2a13      	cmp	r2, #19
  40553a:	d914      	bls.n	405566 <_calloc_r+0x4a>
  40553c:	2300      	movs	r3, #0
  40553e:	2a1b      	cmp	r2, #27
  405540:	6003      	str	r3, [r0, #0]
  405542:	6043      	str	r3, [r0, #4]
  405544:	d916      	bls.n	405574 <_calloc_r+0x58>
  405546:	2a24      	cmp	r2, #36	; 0x24
  405548:	6083      	str	r3, [r0, #8]
  40554a:	60c3      	str	r3, [r0, #12]
  40554c:	bf11      	iteee	ne
  40554e:	f100 0210 	addne.w	r2, r0, #16
  405552:	6103      	streq	r3, [r0, #16]
  405554:	6143      	streq	r3, [r0, #20]
  405556:	f100 0218 	addeq.w	r2, r0, #24
  40555a:	2300      	movs	r3, #0
  40555c:	6013      	str	r3, [r2, #0]
  40555e:	6053      	str	r3, [r2, #4]
  405560:	6093      	str	r3, [r2, #8]
  405562:	4620      	mov	r0, r4
  405564:	bd10      	pop	{r4, pc}
  405566:	4602      	mov	r2, r0
  405568:	e7f7      	b.n	40555a <_calloc_r+0x3e>
  40556a:	2100      	movs	r1, #0
  40556c:	f7fc faac 	bl	401ac8 <memset>
  405570:	4620      	mov	r0, r4
  405572:	bd10      	pop	{r4, pc}
  405574:	f100 0208 	add.w	r2, r0, #8
  405578:	e7ef      	b.n	40555a <_calloc_r+0x3e>
  40557a:	bf00      	nop

0040557c <_malloc_trim_r>:
  40557c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40557e:	4f24      	ldr	r7, [pc, #144]	; (405610 <_malloc_trim_r+0x94>)
  405580:	460c      	mov	r4, r1
  405582:	4606      	mov	r6, r0
  405584:	f7ff fb4c 	bl	404c20 <__malloc_lock>
  405588:	68bb      	ldr	r3, [r7, #8]
  40558a:	685d      	ldr	r5, [r3, #4]
  40558c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405590:	310f      	adds	r1, #15
  405592:	f025 0503 	bic.w	r5, r5, #3
  405596:	4429      	add	r1, r5
  405598:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40559c:	f021 010f 	bic.w	r1, r1, #15
  4055a0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4055a4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4055a8:	db07      	blt.n	4055ba <_malloc_trim_r+0x3e>
  4055aa:	2100      	movs	r1, #0
  4055ac:	4630      	mov	r0, r6
  4055ae:	f7ff fe3d 	bl	40522c <_sbrk_r>
  4055b2:	68bb      	ldr	r3, [r7, #8]
  4055b4:	442b      	add	r3, r5
  4055b6:	4298      	cmp	r0, r3
  4055b8:	d004      	beq.n	4055c4 <_malloc_trim_r+0x48>
  4055ba:	4630      	mov	r0, r6
  4055bc:	f7ff fb36 	bl	404c2c <__malloc_unlock>
  4055c0:	2000      	movs	r0, #0
  4055c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055c4:	4261      	negs	r1, r4
  4055c6:	4630      	mov	r0, r6
  4055c8:	f7ff fe30 	bl	40522c <_sbrk_r>
  4055cc:	3001      	adds	r0, #1
  4055ce:	d00d      	beq.n	4055ec <_malloc_trim_r+0x70>
  4055d0:	4b10      	ldr	r3, [pc, #64]	; (405614 <_malloc_trim_r+0x98>)
  4055d2:	68ba      	ldr	r2, [r7, #8]
  4055d4:	6819      	ldr	r1, [r3, #0]
  4055d6:	1b2d      	subs	r5, r5, r4
  4055d8:	f045 0501 	orr.w	r5, r5, #1
  4055dc:	4630      	mov	r0, r6
  4055de:	1b09      	subs	r1, r1, r4
  4055e0:	6055      	str	r5, [r2, #4]
  4055e2:	6019      	str	r1, [r3, #0]
  4055e4:	f7ff fb22 	bl	404c2c <__malloc_unlock>
  4055e8:	2001      	movs	r0, #1
  4055ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4055ec:	2100      	movs	r1, #0
  4055ee:	4630      	mov	r0, r6
  4055f0:	f7ff fe1c 	bl	40522c <_sbrk_r>
  4055f4:	68ba      	ldr	r2, [r7, #8]
  4055f6:	1a83      	subs	r3, r0, r2
  4055f8:	2b0f      	cmp	r3, #15
  4055fa:	ddde      	ble.n	4055ba <_malloc_trim_r+0x3e>
  4055fc:	4c06      	ldr	r4, [pc, #24]	; (405618 <_malloc_trim_r+0x9c>)
  4055fe:	4905      	ldr	r1, [pc, #20]	; (405614 <_malloc_trim_r+0x98>)
  405600:	6824      	ldr	r4, [r4, #0]
  405602:	f043 0301 	orr.w	r3, r3, #1
  405606:	1b00      	subs	r0, r0, r4
  405608:	6053      	str	r3, [r2, #4]
  40560a:	6008      	str	r0, [r1, #0]
  40560c:	e7d5      	b.n	4055ba <_malloc_trim_r+0x3e>
  40560e:	bf00      	nop
  405610:	20000444 	.word	0x20000444
  405614:	20000a7c 	.word	0x20000a7c
  405618:	2000084c 	.word	0x2000084c

0040561c <_free_r>:
  40561c:	2900      	cmp	r1, #0
  40561e:	d044      	beq.n	4056aa <_free_r+0x8e>
  405620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405624:	460d      	mov	r5, r1
  405626:	4680      	mov	r8, r0
  405628:	f7ff fafa 	bl	404c20 <__malloc_lock>
  40562c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405630:	4969      	ldr	r1, [pc, #420]	; (4057d8 <_free_r+0x1bc>)
  405632:	f027 0301 	bic.w	r3, r7, #1
  405636:	f1a5 0408 	sub.w	r4, r5, #8
  40563a:	18e2      	adds	r2, r4, r3
  40563c:	688e      	ldr	r6, [r1, #8]
  40563e:	6850      	ldr	r0, [r2, #4]
  405640:	42b2      	cmp	r2, r6
  405642:	f020 0003 	bic.w	r0, r0, #3
  405646:	d05e      	beq.n	405706 <_free_r+0xea>
  405648:	07fe      	lsls	r6, r7, #31
  40564a:	6050      	str	r0, [r2, #4]
  40564c:	d40b      	bmi.n	405666 <_free_r+0x4a>
  40564e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405652:	1be4      	subs	r4, r4, r7
  405654:	f101 0e08 	add.w	lr, r1, #8
  405658:	68a5      	ldr	r5, [r4, #8]
  40565a:	4575      	cmp	r5, lr
  40565c:	443b      	add	r3, r7
  40565e:	d06d      	beq.n	40573c <_free_r+0x120>
  405660:	68e7      	ldr	r7, [r4, #12]
  405662:	60ef      	str	r7, [r5, #12]
  405664:	60bd      	str	r5, [r7, #8]
  405666:	1815      	adds	r5, r2, r0
  405668:	686d      	ldr	r5, [r5, #4]
  40566a:	07ed      	lsls	r5, r5, #31
  40566c:	d53e      	bpl.n	4056ec <_free_r+0xd0>
  40566e:	f043 0201 	orr.w	r2, r3, #1
  405672:	6062      	str	r2, [r4, #4]
  405674:	50e3      	str	r3, [r4, r3]
  405676:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40567a:	d217      	bcs.n	4056ac <_free_r+0x90>
  40567c:	08db      	lsrs	r3, r3, #3
  40567e:	1c58      	adds	r0, r3, #1
  405680:	109a      	asrs	r2, r3, #2
  405682:	684d      	ldr	r5, [r1, #4]
  405684:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405688:	60a7      	str	r7, [r4, #8]
  40568a:	2301      	movs	r3, #1
  40568c:	4093      	lsls	r3, r2
  40568e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405692:	432b      	orrs	r3, r5
  405694:	3a08      	subs	r2, #8
  405696:	60e2      	str	r2, [r4, #12]
  405698:	604b      	str	r3, [r1, #4]
  40569a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40569e:	60fc      	str	r4, [r7, #12]
  4056a0:	4640      	mov	r0, r8
  4056a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4056a6:	f7ff bac1 	b.w	404c2c <__malloc_unlock>
  4056aa:	4770      	bx	lr
  4056ac:	0a5a      	lsrs	r2, r3, #9
  4056ae:	2a04      	cmp	r2, #4
  4056b0:	d852      	bhi.n	405758 <_free_r+0x13c>
  4056b2:	099a      	lsrs	r2, r3, #6
  4056b4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4056b8:	00ff      	lsls	r7, r7, #3
  4056ba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4056be:	19c8      	adds	r0, r1, r7
  4056c0:	59ca      	ldr	r2, [r1, r7]
  4056c2:	3808      	subs	r0, #8
  4056c4:	4290      	cmp	r0, r2
  4056c6:	d04f      	beq.n	405768 <_free_r+0x14c>
  4056c8:	6851      	ldr	r1, [r2, #4]
  4056ca:	f021 0103 	bic.w	r1, r1, #3
  4056ce:	428b      	cmp	r3, r1
  4056d0:	d232      	bcs.n	405738 <_free_r+0x11c>
  4056d2:	6892      	ldr	r2, [r2, #8]
  4056d4:	4290      	cmp	r0, r2
  4056d6:	d1f7      	bne.n	4056c8 <_free_r+0xac>
  4056d8:	68c3      	ldr	r3, [r0, #12]
  4056da:	60a0      	str	r0, [r4, #8]
  4056dc:	60e3      	str	r3, [r4, #12]
  4056de:	609c      	str	r4, [r3, #8]
  4056e0:	60c4      	str	r4, [r0, #12]
  4056e2:	4640      	mov	r0, r8
  4056e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4056e8:	f7ff baa0 	b.w	404c2c <__malloc_unlock>
  4056ec:	6895      	ldr	r5, [r2, #8]
  4056ee:	4f3b      	ldr	r7, [pc, #236]	; (4057dc <_free_r+0x1c0>)
  4056f0:	42bd      	cmp	r5, r7
  4056f2:	4403      	add	r3, r0
  4056f4:	d040      	beq.n	405778 <_free_r+0x15c>
  4056f6:	68d0      	ldr	r0, [r2, #12]
  4056f8:	60e8      	str	r0, [r5, #12]
  4056fa:	f043 0201 	orr.w	r2, r3, #1
  4056fe:	6085      	str	r5, [r0, #8]
  405700:	6062      	str	r2, [r4, #4]
  405702:	50e3      	str	r3, [r4, r3]
  405704:	e7b7      	b.n	405676 <_free_r+0x5a>
  405706:	07ff      	lsls	r7, r7, #31
  405708:	4403      	add	r3, r0
  40570a:	d407      	bmi.n	40571c <_free_r+0x100>
  40570c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405710:	1aa4      	subs	r4, r4, r2
  405712:	4413      	add	r3, r2
  405714:	68a0      	ldr	r0, [r4, #8]
  405716:	68e2      	ldr	r2, [r4, #12]
  405718:	60c2      	str	r2, [r0, #12]
  40571a:	6090      	str	r0, [r2, #8]
  40571c:	4a30      	ldr	r2, [pc, #192]	; (4057e0 <_free_r+0x1c4>)
  40571e:	6812      	ldr	r2, [r2, #0]
  405720:	f043 0001 	orr.w	r0, r3, #1
  405724:	4293      	cmp	r3, r2
  405726:	6060      	str	r0, [r4, #4]
  405728:	608c      	str	r4, [r1, #8]
  40572a:	d3b9      	bcc.n	4056a0 <_free_r+0x84>
  40572c:	4b2d      	ldr	r3, [pc, #180]	; (4057e4 <_free_r+0x1c8>)
  40572e:	4640      	mov	r0, r8
  405730:	6819      	ldr	r1, [r3, #0]
  405732:	f7ff ff23 	bl	40557c <_malloc_trim_r>
  405736:	e7b3      	b.n	4056a0 <_free_r+0x84>
  405738:	4610      	mov	r0, r2
  40573a:	e7cd      	b.n	4056d8 <_free_r+0xbc>
  40573c:	1811      	adds	r1, r2, r0
  40573e:	6849      	ldr	r1, [r1, #4]
  405740:	07c9      	lsls	r1, r1, #31
  405742:	d444      	bmi.n	4057ce <_free_r+0x1b2>
  405744:	6891      	ldr	r1, [r2, #8]
  405746:	68d2      	ldr	r2, [r2, #12]
  405748:	60ca      	str	r2, [r1, #12]
  40574a:	4403      	add	r3, r0
  40574c:	f043 0001 	orr.w	r0, r3, #1
  405750:	6091      	str	r1, [r2, #8]
  405752:	6060      	str	r0, [r4, #4]
  405754:	50e3      	str	r3, [r4, r3]
  405756:	e7a3      	b.n	4056a0 <_free_r+0x84>
  405758:	2a14      	cmp	r2, #20
  40575a:	d816      	bhi.n	40578a <_free_r+0x16e>
  40575c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405760:	00ff      	lsls	r7, r7, #3
  405762:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405766:	e7aa      	b.n	4056be <_free_r+0xa2>
  405768:	10aa      	asrs	r2, r5, #2
  40576a:	2301      	movs	r3, #1
  40576c:	684d      	ldr	r5, [r1, #4]
  40576e:	4093      	lsls	r3, r2
  405770:	432b      	orrs	r3, r5
  405772:	604b      	str	r3, [r1, #4]
  405774:	4603      	mov	r3, r0
  405776:	e7b0      	b.n	4056da <_free_r+0xbe>
  405778:	f043 0201 	orr.w	r2, r3, #1
  40577c:	614c      	str	r4, [r1, #20]
  40577e:	610c      	str	r4, [r1, #16]
  405780:	60e5      	str	r5, [r4, #12]
  405782:	60a5      	str	r5, [r4, #8]
  405784:	6062      	str	r2, [r4, #4]
  405786:	50e3      	str	r3, [r4, r3]
  405788:	e78a      	b.n	4056a0 <_free_r+0x84>
  40578a:	2a54      	cmp	r2, #84	; 0x54
  40578c:	d806      	bhi.n	40579c <_free_r+0x180>
  40578e:	0b1a      	lsrs	r2, r3, #12
  405790:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405794:	00ff      	lsls	r7, r7, #3
  405796:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40579a:	e790      	b.n	4056be <_free_r+0xa2>
  40579c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4057a0:	d806      	bhi.n	4057b0 <_free_r+0x194>
  4057a2:	0bda      	lsrs	r2, r3, #15
  4057a4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4057a8:	00ff      	lsls	r7, r7, #3
  4057aa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4057ae:	e786      	b.n	4056be <_free_r+0xa2>
  4057b0:	f240 5054 	movw	r0, #1364	; 0x554
  4057b4:	4282      	cmp	r2, r0
  4057b6:	d806      	bhi.n	4057c6 <_free_r+0x1aa>
  4057b8:	0c9a      	lsrs	r2, r3, #18
  4057ba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4057be:	00ff      	lsls	r7, r7, #3
  4057c0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4057c4:	e77b      	b.n	4056be <_free_r+0xa2>
  4057c6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4057ca:	257e      	movs	r5, #126	; 0x7e
  4057cc:	e777      	b.n	4056be <_free_r+0xa2>
  4057ce:	f043 0101 	orr.w	r1, r3, #1
  4057d2:	6061      	str	r1, [r4, #4]
  4057d4:	6013      	str	r3, [r2, #0]
  4057d6:	e763      	b.n	4056a0 <_free_r+0x84>
  4057d8:	20000444 	.word	0x20000444
  4057dc:	2000044c 	.word	0x2000044c
  4057e0:	20000850 	.word	0x20000850
  4057e4:	20000aac 	.word	0x20000aac

004057e8 <__ascii_mbtowc>:
  4057e8:	b082      	sub	sp, #8
  4057ea:	b149      	cbz	r1, 405800 <__ascii_mbtowc+0x18>
  4057ec:	b15a      	cbz	r2, 405806 <__ascii_mbtowc+0x1e>
  4057ee:	b16b      	cbz	r3, 40580c <__ascii_mbtowc+0x24>
  4057f0:	7813      	ldrb	r3, [r2, #0]
  4057f2:	600b      	str	r3, [r1, #0]
  4057f4:	7812      	ldrb	r2, [r2, #0]
  4057f6:	1c10      	adds	r0, r2, #0
  4057f8:	bf18      	it	ne
  4057fa:	2001      	movne	r0, #1
  4057fc:	b002      	add	sp, #8
  4057fe:	4770      	bx	lr
  405800:	a901      	add	r1, sp, #4
  405802:	2a00      	cmp	r2, #0
  405804:	d1f3      	bne.n	4057ee <__ascii_mbtowc+0x6>
  405806:	4610      	mov	r0, r2
  405808:	b002      	add	sp, #8
  40580a:	4770      	bx	lr
  40580c:	f06f 0001 	mvn.w	r0, #1
  405810:	e7f4      	b.n	4057fc <__ascii_mbtowc+0x14>
  405812:	bf00      	nop

00405814 <memmove>:
  405814:	4288      	cmp	r0, r1
  405816:	b5f0      	push	{r4, r5, r6, r7, lr}
  405818:	d90d      	bls.n	405836 <memmove+0x22>
  40581a:	188b      	adds	r3, r1, r2
  40581c:	4298      	cmp	r0, r3
  40581e:	d20a      	bcs.n	405836 <memmove+0x22>
  405820:	1884      	adds	r4, r0, r2
  405822:	2a00      	cmp	r2, #0
  405824:	d051      	beq.n	4058ca <memmove+0xb6>
  405826:	4622      	mov	r2, r4
  405828:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40582c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405830:	4299      	cmp	r1, r3
  405832:	d1f9      	bne.n	405828 <memmove+0x14>
  405834:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405836:	2a0f      	cmp	r2, #15
  405838:	d948      	bls.n	4058cc <memmove+0xb8>
  40583a:	ea41 0300 	orr.w	r3, r1, r0
  40583e:	079b      	lsls	r3, r3, #30
  405840:	d146      	bne.n	4058d0 <memmove+0xbc>
  405842:	f100 0410 	add.w	r4, r0, #16
  405846:	f101 0310 	add.w	r3, r1, #16
  40584a:	4615      	mov	r5, r2
  40584c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405850:	f844 6c10 	str.w	r6, [r4, #-16]
  405854:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405858:	f844 6c0c 	str.w	r6, [r4, #-12]
  40585c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405860:	f844 6c08 	str.w	r6, [r4, #-8]
  405864:	3d10      	subs	r5, #16
  405866:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40586a:	f844 6c04 	str.w	r6, [r4, #-4]
  40586e:	2d0f      	cmp	r5, #15
  405870:	f103 0310 	add.w	r3, r3, #16
  405874:	f104 0410 	add.w	r4, r4, #16
  405878:	d8e8      	bhi.n	40584c <memmove+0x38>
  40587a:	f1a2 0310 	sub.w	r3, r2, #16
  40587e:	f023 030f 	bic.w	r3, r3, #15
  405882:	f002 0e0f 	and.w	lr, r2, #15
  405886:	3310      	adds	r3, #16
  405888:	f1be 0f03 	cmp.w	lr, #3
  40588c:	4419      	add	r1, r3
  40588e:	4403      	add	r3, r0
  405890:	d921      	bls.n	4058d6 <memmove+0xc2>
  405892:	1f1e      	subs	r6, r3, #4
  405894:	460d      	mov	r5, r1
  405896:	4674      	mov	r4, lr
  405898:	3c04      	subs	r4, #4
  40589a:	f855 7b04 	ldr.w	r7, [r5], #4
  40589e:	f846 7f04 	str.w	r7, [r6, #4]!
  4058a2:	2c03      	cmp	r4, #3
  4058a4:	d8f8      	bhi.n	405898 <memmove+0x84>
  4058a6:	f1ae 0404 	sub.w	r4, lr, #4
  4058aa:	f024 0403 	bic.w	r4, r4, #3
  4058ae:	3404      	adds	r4, #4
  4058b0:	4421      	add	r1, r4
  4058b2:	4423      	add	r3, r4
  4058b4:	f002 0203 	and.w	r2, r2, #3
  4058b8:	b162      	cbz	r2, 4058d4 <memmove+0xc0>
  4058ba:	3b01      	subs	r3, #1
  4058bc:	440a      	add	r2, r1
  4058be:	f811 4b01 	ldrb.w	r4, [r1], #1
  4058c2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4058c6:	428a      	cmp	r2, r1
  4058c8:	d1f9      	bne.n	4058be <memmove+0xaa>
  4058ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4058cc:	4603      	mov	r3, r0
  4058ce:	e7f3      	b.n	4058b8 <memmove+0xa4>
  4058d0:	4603      	mov	r3, r0
  4058d2:	e7f2      	b.n	4058ba <memmove+0xa6>
  4058d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4058d6:	4672      	mov	r2, lr
  4058d8:	e7ee      	b.n	4058b8 <memmove+0xa4>
  4058da:	bf00      	nop

004058dc <_realloc_r>:
  4058dc:	2900      	cmp	r1, #0
  4058de:	f000 8095 	beq.w	405a0c <_realloc_r+0x130>
  4058e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4058e6:	460d      	mov	r5, r1
  4058e8:	4616      	mov	r6, r2
  4058ea:	b083      	sub	sp, #12
  4058ec:	4680      	mov	r8, r0
  4058ee:	f106 070b 	add.w	r7, r6, #11
  4058f2:	f7ff f995 	bl	404c20 <__malloc_lock>
  4058f6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4058fa:	2f16      	cmp	r7, #22
  4058fc:	f02e 0403 	bic.w	r4, lr, #3
  405900:	f1a5 0908 	sub.w	r9, r5, #8
  405904:	d83c      	bhi.n	405980 <_realloc_r+0xa4>
  405906:	2210      	movs	r2, #16
  405908:	4617      	mov	r7, r2
  40590a:	42be      	cmp	r6, r7
  40590c:	d83d      	bhi.n	40598a <_realloc_r+0xae>
  40590e:	4294      	cmp	r4, r2
  405910:	da43      	bge.n	40599a <_realloc_r+0xbe>
  405912:	4bc4      	ldr	r3, [pc, #784]	; (405c24 <_realloc_r+0x348>)
  405914:	6899      	ldr	r1, [r3, #8]
  405916:	eb09 0004 	add.w	r0, r9, r4
  40591a:	4288      	cmp	r0, r1
  40591c:	f000 80b4 	beq.w	405a88 <_realloc_r+0x1ac>
  405920:	6843      	ldr	r3, [r0, #4]
  405922:	f023 0101 	bic.w	r1, r3, #1
  405926:	4401      	add	r1, r0
  405928:	6849      	ldr	r1, [r1, #4]
  40592a:	07c9      	lsls	r1, r1, #31
  40592c:	d54c      	bpl.n	4059c8 <_realloc_r+0xec>
  40592e:	f01e 0f01 	tst.w	lr, #1
  405932:	f000 809b 	beq.w	405a6c <_realloc_r+0x190>
  405936:	4631      	mov	r1, r6
  405938:	4640      	mov	r0, r8
  40593a:	f7fe fe3b 	bl	4045b4 <_malloc_r>
  40593e:	4606      	mov	r6, r0
  405940:	2800      	cmp	r0, #0
  405942:	d03a      	beq.n	4059ba <_realloc_r+0xde>
  405944:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405948:	f023 0301 	bic.w	r3, r3, #1
  40594c:	444b      	add	r3, r9
  40594e:	f1a0 0208 	sub.w	r2, r0, #8
  405952:	429a      	cmp	r2, r3
  405954:	f000 8121 	beq.w	405b9a <_realloc_r+0x2be>
  405958:	1f22      	subs	r2, r4, #4
  40595a:	2a24      	cmp	r2, #36	; 0x24
  40595c:	f200 8107 	bhi.w	405b6e <_realloc_r+0x292>
  405960:	2a13      	cmp	r2, #19
  405962:	f200 80db 	bhi.w	405b1c <_realloc_r+0x240>
  405966:	4603      	mov	r3, r0
  405968:	462a      	mov	r2, r5
  40596a:	6811      	ldr	r1, [r2, #0]
  40596c:	6019      	str	r1, [r3, #0]
  40596e:	6851      	ldr	r1, [r2, #4]
  405970:	6059      	str	r1, [r3, #4]
  405972:	6892      	ldr	r2, [r2, #8]
  405974:	609a      	str	r2, [r3, #8]
  405976:	4629      	mov	r1, r5
  405978:	4640      	mov	r0, r8
  40597a:	f7ff fe4f 	bl	40561c <_free_r>
  40597e:	e01c      	b.n	4059ba <_realloc_r+0xde>
  405980:	f027 0707 	bic.w	r7, r7, #7
  405984:	2f00      	cmp	r7, #0
  405986:	463a      	mov	r2, r7
  405988:	dabf      	bge.n	40590a <_realloc_r+0x2e>
  40598a:	2600      	movs	r6, #0
  40598c:	230c      	movs	r3, #12
  40598e:	4630      	mov	r0, r6
  405990:	f8c8 3000 	str.w	r3, [r8]
  405994:	b003      	add	sp, #12
  405996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40599a:	462e      	mov	r6, r5
  40599c:	1be3      	subs	r3, r4, r7
  40599e:	2b0f      	cmp	r3, #15
  4059a0:	d81e      	bhi.n	4059e0 <_realloc_r+0x104>
  4059a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4059a6:	f003 0301 	and.w	r3, r3, #1
  4059aa:	4323      	orrs	r3, r4
  4059ac:	444c      	add	r4, r9
  4059ae:	f8c9 3004 	str.w	r3, [r9, #4]
  4059b2:	6863      	ldr	r3, [r4, #4]
  4059b4:	f043 0301 	orr.w	r3, r3, #1
  4059b8:	6063      	str	r3, [r4, #4]
  4059ba:	4640      	mov	r0, r8
  4059bc:	f7ff f936 	bl	404c2c <__malloc_unlock>
  4059c0:	4630      	mov	r0, r6
  4059c2:	b003      	add	sp, #12
  4059c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4059c8:	f023 0303 	bic.w	r3, r3, #3
  4059cc:	18e1      	adds	r1, r4, r3
  4059ce:	4291      	cmp	r1, r2
  4059d0:	db1f      	blt.n	405a12 <_realloc_r+0x136>
  4059d2:	68c3      	ldr	r3, [r0, #12]
  4059d4:	6882      	ldr	r2, [r0, #8]
  4059d6:	462e      	mov	r6, r5
  4059d8:	60d3      	str	r3, [r2, #12]
  4059da:	460c      	mov	r4, r1
  4059dc:	609a      	str	r2, [r3, #8]
  4059de:	e7dd      	b.n	40599c <_realloc_r+0xc0>
  4059e0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4059e4:	eb09 0107 	add.w	r1, r9, r7
  4059e8:	f002 0201 	and.w	r2, r2, #1
  4059ec:	444c      	add	r4, r9
  4059ee:	f043 0301 	orr.w	r3, r3, #1
  4059f2:	4317      	orrs	r7, r2
  4059f4:	f8c9 7004 	str.w	r7, [r9, #4]
  4059f8:	604b      	str	r3, [r1, #4]
  4059fa:	6863      	ldr	r3, [r4, #4]
  4059fc:	f043 0301 	orr.w	r3, r3, #1
  405a00:	3108      	adds	r1, #8
  405a02:	6063      	str	r3, [r4, #4]
  405a04:	4640      	mov	r0, r8
  405a06:	f7ff fe09 	bl	40561c <_free_r>
  405a0a:	e7d6      	b.n	4059ba <_realloc_r+0xde>
  405a0c:	4611      	mov	r1, r2
  405a0e:	f7fe bdd1 	b.w	4045b4 <_malloc_r>
  405a12:	f01e 0f01 	tst.w	lr, #1
  405a16:	d18e      	bne.n	405936 <_realloc_r+0x5a>
  405a18:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405a1c:	eba9 0a01 	sub.w	sl, r9, r1
  405a20:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a24:	f021 0103 	bic.w	r1, r1, #3
  405a28:	440b      	add	r3, r1
  405a2a:	4423      	add	r3, r4
  405a2c:	4293      	cmp	r3, r2
  405a2e:	db25      	blt.n	405a7c <_realloc_r+0x1a0>
  405a30:	68c2      	ldr	r2, [r0, #12]
  405a32:	6881      	ldr	r1, [r0, #8]
  405a34:	4656      	mov	r6, sl
  405a36:	60ca      	str	r2, [r1, #12]
  405a38:	6091      	str	r1, [r2, #8]
  405a3a:	f8da 100c 	ldr.w	r1, [sl, #12]
  405a3e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405a42:	1f22      	subs	r2, r4, #4
  405a44:	2a24      	cmp	r2, #36	; 0x24
  405a46:	60c1      	str	r1, [r0, #12]
  405a48:	6088      	str	r0, [r1, #8]
  405a4a:	f200 8094 	bhi.w	405b76 <_realloc_r+0x29a>
  405a4e:	2a13      	cmp	r2, #19
  405a50:	d96f      	bls.n	405b32 <_realloc_r+0x256>
  405a52:	6829      	ldr	r1, [r5, #0]
  405a54:	f8ca 1008 	str.w	r1, [sl, #8]
  405a58:	6869      	ldr	r1, [r5, #4]
  405a5a:	f8ca 100c 	str.w	r1, [sl, #12]
  405a5e:	2a1b      	cmp	r2, #27
  405a60:	f200 80a2 	bhi.w	405ba8 <_realloc_r+0x2cc>
  405a64:	3508      	adds	r5, #8
  405a66:	f10a 0210 	add.w	r2, sl, #16
  405a6a:	e063      	b.n	405b34 <_realloc_r+0x258>
  405a6c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405a70:	eba9 0a03 	sub.w	sl, r9, r3
  405a74:	f8da 1004 	ldr.w	r1, [sl, #4]
  405a78:	f021 0103 	bic.w	r1, r1, #3
  405a7c:	1863      	adds	r3, r4, r1
  405a7e:	4293      	cmp	r3, r2
  405a80:	f6ff af59 	blt.w	405936 <_realloc_r+0x5a>
  405a84:	4656      	mov	r6, sl
  405a86:	e7d8      	b.n	405a3a <_realloc_r+0x15e>
  405a88:	6841      	ldr	r1, [r0, #4]
  405a8a:	f021 0b03 	bic.w	fp, r1, #3
  405a8e:	44a3      	add	fp, r4
  405a90:	f107 0010 	add.w	r0, r7, #16
  405a94:	4583      	cmp	fp, r0
  405a96:	da56      	bge.n	405b46 <_realloc_r+0x26a>
  405a98:	f01e 0f01 	tst.w	lr, #1
  405a9c:	f47f af4b 	bne.w	405936 <_realloc_r+0x5a>
  405aa0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405aa4:	eba9 0a01 	sub.w	sl, r9, r1
  405aa8:	f8da 1004 	ldr.w	r1, [sl, #4]
  405aac:	f021 0103 	bic.w	r1, r1, #3
  405ab0:	448b      	add	fp, r1
  405ab2:	4558      	cmp	r0, fp
  405ab4:	dce2      	bgt.n	405a7c <_realloc_r+0x1a0>
  405ab6:	4656      	mov	r6, sl
  405ab8:	f8da 100c 	ldr.w	r1, [sl, #12]
  405abc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405ac0:	1f22      	subs	r2, r4, #4
  405ac2:	2a24      	cmp	r2, #36	; 0x24
  405ac4:	60c1      	str	r1, [r0, #12]
  405ac6:	6088      	str	r0, [r1, #8]
  405ac8:	f200 808f 	bhi.w	405bea <_realloc_r+0x30e>
  405acc:	2a13      	cmp	r2, #19
  405ace:	f240 808a 	bls.w	405be6 <_realloc_r+0x30a>
  405ad2:	6829      	ldr	r1, [r5, #0]
  405ad4:	f8ca 1008 	str.w	r1, [sl, #8]
  405ad8:	6869      	ldr	r1, [r5, #4]
  405ada:	f8ca 100c 	str.w	r1, [sl, #12]
  405ade:	2a1b      	cmp	r2, #27
  405ae0:	f200 808a 	bhi.w	405bf8 <_realloc_r+0x31c>
  405ae4:	3508      	adds	r5, #8
  405ae6:	f10a 0210 	add.w	r2, sl, #16
  405aea:	6829      	ldr	r1, [r5, #0]
  405aec:	6011      	str	r1, [r2, #0]
  405aee:	6869      	ldr	r1, [r5, #4]
  405af0:	6051      	str	r1, [r2, #4]
  405af2:	68a9      	ldr	r1, [r5, #8]
  405af4:	6091      	str	r1, [r2, #8]
  405af6:	eb0a 0107 	add.w	r1, sl, r7
  405afa:	ebab 0207 	sub.w	r2, fp, r7
  405afe:	f042 0201 	orr.w	r2, r2, #1
  405b02:	6099      	str	r1, [r3, #8]
  405b04:	604a      	str	r2, [r1, #4]
  405b06:	f8da 3004 	ldr.w	r3, [sl, #4]
  405b0a:	f003 0301 	and.w	r3, r3, #1
  405b0e:	431f      	orrs	r7, r3
  405b10:	4640      	mov	r0, r8
  405b12:	f8ca 7004 	str.w	r7, [sl, #4]
  405b16:	f7ff f889 	bl	404c2c <__malloc_unlock>
  405b1a:	e751      	b.n	4059c0 <_realloc_r+0xe4>
  405b1c:	682b      	ldr	r3, [r5, #0]
  405b1e:	6003      	str	r3, [r0, #0]
  405b20:	686b      	ldr	r3, [r5, #4]
  405b22:	6043      	str	r3, [r0, #4]
  405b24:	2a1b      	cmp	r2, #27
  405b26:	d82d      	bhi.n	405b84 <_realloc_r+0x2a8>
  405b28:	f100 0308 	add.w	r3, r0, #8
  405b2c:	f105 0208 	add.w	r2, r5, #8
  405b30:	e71b      	b.n	40596a <_realloc_r+0x8e>
  405b32:	4632      	mov	r2, r6
  405b34:	6829      	ldr	r1, [r5, #0]
  405b36:	6011      	str	r1, [r2, #0]
  405b38:	6869      	ldr	r1, [r5, #4]
  405b3a:	6051      	str	r1, [r2, #4]
  405b3c:	68a9      	ldr	r1, [r5, #8]
  405b3e:	6091      	str	r1, [r2, #8]
  405b40:	461c      	mov	r4, r3
  405b42:	46d1      	mov	r9, sl
  405b44:	e72a      	b.n	40599c <_realloc_r+0xc0>
  405b46:	eb09 0107 	add.w	r1, r9, r7
  405b4a:	ebab 0b07 	sub.w	fp, fp, r7
  405b4e:	f04b 0201 	orr.w	r2, fp, #1
  405b52:	6099      	str	r1, [r3, #8]
  405b54:	604a      	str	r2, [r1, #4]
  405b56:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405b5a:	f003 0301 	and.w	r3, r3, #1
  405b5e:	431f      	orrs	r7, r3
  405b60:	4640      	mov	r0, r8
  405b62:	f845 7c04 	str.w	r7, [r5, #-4]
  405b66:	f7ff f861 	bl	404c2c <__malloc_unlock>
  405b6a:	462e      	mov	r6, r5
  405b6c:	e728      	b.n	4059c0 <_realloc_r+0xe4>
  405b6e:	4629      	mov	r1, r5
  405b70:	f7ff fe50 	bl	405814 <memmove>
  405b74:	e6ff      	b.n	405976 <_realloc_r+0x9a>
  405b76:	4629      	mov	r1, r5
  405b78:	4630      	mov	r0, r6
  405b7a:	461c      	mov	r4, r3
  405b7c:	46d1      	mov	r9, sl
  405b7e:	f7ff fe49 	bl	405814 <memmove>
  405b82:	e70b      	b.n	40599c <_realloc_r+0xc0>
  405b84:	68ab      	ldr	r3, [r5, #8]
  405b86:	6083      	str	r3, [r0, #8]
  405b88:	68eb      	ldr	r3, [r5, #12]
  405b8a:	60c3      	str	r3, [r0, #12]
  405b8c:	2a24      	cmp	r2, #36	; 0x24
  405b8e:	d017      	beq.n	405bc0 <_realloc_r+0x2e4>
  405b90:	f100 0310 	add.w	r3, r0, #16
  405b94:	f105 0210 	add.w	r2, r5, #16
  405b98:	e6e7      	b.n	40596a <_realloc_r+0x8e>
  405b9a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405b9e:	f023 0303 	bic.w	r3, r3, #3
  405ba2:	441c      	add	r4, r3
  405ba4:	462e      	mov	r6, r5
  405ba6:	e6f9      	b.n	40599c <_realloc_r+0xc0>
  405ba8:	68a9      	ldr	r1, [r5, #8]
  405baa:	f8ca 1010 	str.w	r1, [sl, #16]
  405bae:	68e9      	ldr	r1, [r5, #12]
  405bb0:	f8ca 1014 	str.w	r1, [sl, #20]
  405bb4:	2a24      	cmp	r2, #36	; 0x24
  405bb6:	d00c      	beq.n	405bd2 <_realloc_r+0x2f6>
  405bb8:	3510      	adds	r5, #16
  405bba:	f10a 0218 	add.w	r2, sl, #24
  405bbe:	e7b9      	b.n	405b34 <_realloc_r+0x258>
  405bc0:	692b      	ldr	r3, [r5, #16]
  405bc2:	6103      	str	r3, [r0, #16]
  405bc4:	696b      	ldr	r3, [r5, #20]
  405bc6:	6143      	str	r3, [r0, #20]
  405bc8:	f105 0218 	add.w	r2, r5, #24
  405bcc:	f100 0318 	add.w	r3, r0, #24
  405bd0:	e6cb      	b.n	40596a <_realloc_r+0x8e>
  405bd2:	692a      	ldr	r2, [r5, #16]
  405bd4:	f8ca 2018 	str.w	r2, [sl, #24]
  405bd8:	696a      	ldr	r2, [r5, #20]
  405bda:	f8ca 201c 	str.w	r2, [sl, #28]
  405bde:	3518      	adds	r5, #24
  405be0:	f10a 0220 	add.w	r2, sl, #32
  405be4:	e7a6      	b.n	405b34 <_realloc_r+0x258>
  405be6:	4632      	mov	r2, r6
  405be8:	e77f      	b.n	405aea <_realloc_r+0x20e>
  405bea:	4629      	mov	r1, r5
  405bec:	4630      	mov	r0, r6
  405bee:	9301      	str	r3, [sp, #4]
  405bf0:	f7ff fe10 	bl	405814 <memmove>
  405bf4:	9b01      	ldr	r3, [sp, #4]
  405bf6:	e77e      	b.n	405af6 <_realloc_r+0x21a>
  405bf8:	68a9      	ldr	r1, [r5, #8]
  405bfa:	f8ca 1010 	str.w	r1, [sl, #16]
  405bfe:	68e9      	ldr	r1, [r5, #12]
  405c00:	f8ca 1014 	str.w	r1, [sl, #20]
  405c04:	2a24      	cmp	r2, #36	; 0x24
  405c06:	d003      	beq.n	405c10 <_realloc_r+0x334>
  405c08:	3510      	adds	r5, #16
  405c0a:	f10a 0218 	add.w	r2, sl, #24
  405c0e:	e76c      	b.n	405aea <_realloc_r+0x20e>
  405c10:	692a      	ldr	r2, [r5, #16]
  405c12:	f8ca 2018 	str.w	r2, [sl, #24]
  405c16:	696a      	ldr	r2, [r5, #20]
  405c18:	f8ca 201c 	str.w	r2, [sl, #28]
  405c1c:	3518      	adds	r5, #24
  405c1e:	f10a 0220 	add.w	r2, sl, #32
  405c22:	e762      	b.n	405aea <_realloc_r+0x20e>
  405c24:	20000444 	.word	0x20000444

00405c28 <__ascii_wctomb>:
  405c28:	b121      	cbz	r1, 405c34 <__ascii_wctomb+0xc>
  405c2a:	2aff      	cmp	r2, #255	; 0xff
  405c2c:	d804      	bhi.n	405c38 <__ascii_wctomb+0x10>
  405c2e:	700a      	strb	r2, [r1, #0]
  405c30:	2001      	movs	r0, #1
  405c32:	4770      	bx	lr
  405c34:	4608      	mov	r0, r1
  405c36:	4770      	bx	lr
  405c38:	238a      	movs	r3, #138	; 0x8a
  405c3a:	6003      	str	r3, [r0, #0]
  405c3c:	f04f 30ff 	mov.w	r0, #4294967295
  405c40:	4770      	bx	lr
  405c42:	bf00      	nop

00405c44 <__aeabi_drsub>:
  405c44:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405c48:	e002      	b.n	405c50 <__adddf3>
  405c4a:	bf00      	nop

00405c4c <__aeabi_dsub>:
  405c4c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405c50 <__adddf3>:
  405c50:	b530      	push	{r4, r5, lr}
  405c52:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405c56:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405c5a:	ea94 0f05 	teq	r4, r5
  405c5e:	bf08      	it	eq
  405c60:	ea90 0f02 	teqeq	r0, r2
  405c64:	bf1f      	itttt	ne
  405c66:	ea54 0c00 	orrsne.w	ip, r4, r0
  405c6a:	ea55 0c02 	orrsne.w	ip, r5, r2
  405c6e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405c72:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405c76:	f000 80e2 	beq.w	405e3e <__adddf3+0x1ee>
  405c7a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405c7e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405c82:	bfb8      	it	lt
  405c84:	426d      	neglt	r5, r5
  405c86:	dd0c      	ble.n	405ca2 <__adddf3+0x52>
  405c88:	442c      	add	r4, r5
  405c8a:	ea80 0202 	eor.w	r2, r0, r2
  405c8e:	ea81 0303 	eor.w	r3, r1, r3
  405c92:	ea82 0000 	eor.w	r0, r2, r0
  405c96:	ea83 0101 	eor.w	r1, r3, r1
  405c9a:	ea80 0202 	eor.w	r2, r0, r2
  405c9e:	ea81 0303 	eor.w	r3, r1, r3
  405ca2:	2d36      	cmp	r5, #54	; 0x36
  405ca4:	bf88      	it	hi
  405ca6:	bd30      	pophi	{r4, r5, pc}
  405ca8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405cac:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405cb0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405cb4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405cb8:	d002      	beq.n	405cc0 <__adddf3+0x70>
  405cba:	4240      	negs	r0, r0
  405cbc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405cc0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405cc4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405cc8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405ccc:	d002      	beq.n	405cd4 <__adddf3+0x84>
  405cce:	4252      	negs	r2, r2
  405cd0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405cd4:	ea94 0f05 	teq	r4, r5
  405cd8:	f000 80a7 	beq.w	405e2a <__adddf3+0x1da>
  405cdc:	f1a4 0401 	sub.w	r4, r4, #1
  405ce0:	f1d5 0e20 	rsbs	lr, r5, #32
  405ce4:	db0d      	blt.n	405d02 <__adddf3+0xb2>
  405ce6:	fa02 fc0e 	lsl.w	ip, r2, lr
  405cea:	fa22 f205 	lsr.w	r2, r2, r5
  405cee:	1880      	adds	r0, r0, r2
  405cf0:	f141 0100 	adc.w	r1, r1, #0
  405cf4:	fa03 f20e 	lsl.w	r2, r3, lr
  405cf8:	1880      	adds	r0, r0, r2
  405cfa:	fa43 f305 	asr.w	r3, r3, r5
  405cfe:	4159      	adcs	r1, r3
  405d00:	e00e      	b.n	405d20 <__adddf3+0xd0>
  405d02:	f1a5 0520 	sub.w	r5, r5, #32
  405d06:	f10e 0e20 	add.w	lr, lr, #32
  405d0a:	2a01      	cmp	r2, #1
  405d0c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405d10:	bf28      	it	cs
  405d12:	f04c 0c02 	orrcs.w	ip, ip, #2
  405d16:	fa43 f305 	asr.w	r3, r3, r5
  405d1a:	18c0      	adds	r0, r0, r3
  405d1c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405d20:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405d24:	d507      	bpl.n	405d36 <__adddf3+0xe6>
  405d26:	f04f 0e00 	mov.w	lr, #0
  405d2a:	f1dc 0c00 	rsbs	ip, ip, #0
  405d2e:	eb7e 0000 	sbcs.w	r0, lr, r0
  405d32:	eb6e 0101 	sbc.w	r1, lr, r1
  405d36:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405d3a:	d31b      	bcc.n	405d74 <__adddf3+0x124>
  405d3c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405d40:	d30c      	bcc.n	405d5c <__adddf3+0x10c>
  405d42:	0849      	lsrs	r1, r1, #1
  405d44:	ea5f 0030 	movs.w	r0, r0, rrx
  405d48:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405d4c:	f104 0401 	add.w	r4, r4, #1
  405d50:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405d54:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405d58:	f080 809a 	bcs.w	405e90 <__adddf3+0x240>
  405d5c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405d60:	bf08      	it	eq
  405d62:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405d66:	f150 0000 	adcs.w	r0, r0, #0
  405d6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405d6e:	ea41 0105 	orr.w	r1, r1, r5
  405d72:	bd30      	pop	{r4, r5, pc}
  405d74:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405d78:	4140      	adcs	r0, r0
  405d7a:	eb41 0101 	adc.w	r1, r1, r1
  405d7e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405d82:	f1a4 0401 	sub.w	r4, r4, #1
  405d86:	d1e9      	bne.n	405d5c <__adddf3+0x10c>
  405d88:	f091 0f00 	teq	r1, #0
  405d8c:	bf04      	itt	eq
  405d8e:	4601      	moveq	r1, r0
  405d90:	2000      	moveq	r0, #0
  405d92:	fab1 f381 	clz	r3, r1
  405d96:	bf08      	it	eq
  405d98:	3320      	addeq	r3, #32
  405d9a:	f1a3 030b 	sub.w	r3, r3, #11
  405d9e:	f1b3 0220 	subs.w	r2, r3, #32
  405da2:	da0c      	bge.n	405dbe <__adddf3+0x16e>
  405da4:	320c      	adds	r2, #12
  405da6:	dd08      	ble.n	405dba <__adddf3+0x16a>
  405da8:	f102 0c14 	add.w	ip, r2, #20
  405dac:	f1c2 020c 	rsb	r2, r2, #12
  405db0:	fa01 f00c 	lsl.w	r0, r1, ip
  405db4:	fa21 f102 	lsr.w	r1, r1, r2
  405db8:	e00c      	b.n	405dd4 <__adddf3+0x184>
  405dba:	f102 0214 	add.w	r2, r2, #20
  405dbe:	bfd8      	it	le
  405dc0:	f1c2 0c20 	rsble	ip, r2, #32
  405dc4:	fa01 f102 	lsl.w	r1, r1, r2
  405dc8:	fa20 fc0c 	lsr.w	ip, r0, ip
  405dcc:	bfdc      	itt	le
  405dce:	ea41 010c 	orrle.w	r1, r1, ip
  405dd2:	4090      	lslle	r0, r2
  405dd4:	1ae4      	subs	r4, r4, r3
  405dd6:	bfa2      	ittt	ge
  405dd8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405ddc:	4329      	orrge	r1, r5
  405dde:	bd30      	popge	{r4, r5, pc}
  405de0:	ea6f 0404 	mvn.w	r4, r4
  405de4:	3c1f      	subs	r4, #31
  405de6:	da1c      	bge.n	405e22 <__adddf3+0x1d2>
  405de8:	340c      	adds	r4, #12
  405dea:	dc0e      	bgt.n	405e0a <__adddf3+0x1ba>
  405dec:	f104 0414 	add.w	r4, r4, #20
  405df0:	f1c4 0220 	rsb	r2, r4, #32
  405df4:	fa20 f004 	lsr.w	r0, r0, r4
  405df8:	fa01 f302 	lsl.w	r3, r1, r2
  405dfc:	ea40 0003 	orr.w	r0, r0, r3
  405e00:	fa21 f304 	lsr.w	r3, r1, r4
  405e04:	ea45 0103 	orr.w	r1, r5, r3
  405e08:	bd30      	pop	{r4, r5, pc}
  405e0a:	f1c4 040c 	rsb	r4, r4, #12
  405e0e:	f1c4 0220 	rsb	r2, r4, #32
  405e12:	fa20 f002 	lsr.w	r0, r0, r2
  405e16:	fa01 f304 	lsl.w	r3, r1, r4
  405e1a:	ea40 0003 	orr.w	r0, r0, r3
  405e1e:	4629      	mov	r1, r5
  405e20:	bd30      	pop	{r4, r5, pc}
  405e22:	fa21 f004 	lsr.w	r0, r1, r4
  405e26:	4629      	mov	r1, r5
  405e28:	bd30      	pop	{r4, r5, pc}
  405e2a:	f094 0f00 	teq	r4, #0
  405e2e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405e32:	bf06      	itte	eq
  405e34:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405e38:	3401      	addeq	r4, #1
  405e3a:	3d01      	subne	r5, #1
  405e3c:	e74e      	b.n	405cdc <__adddf3+0x8c>
  405e3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405e42:	bf18      	it	ne
  405e44:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405e48:	d029      	beq.n	405e9e <__adddf3+0x24e>
  405e4a:	ea94 0f05 	teq	r4, r5
  405e4e:	bf08      	it	eq
  405e50:	ea90 0f02 	teqeq	r0, r2
  405e54:	d005      	beq.n	405e62 <__adddf3+0x212>
  405e56:	ea54 0c00 	orrs.w	ip, r4, r0
  405e5a:	bf04      	itt	eq
  405e5c:	4619      	moveq	r1, r3
  405e5e:	4610      	moveq	r0, r2
  405e60:	bd30      	pop	{r4, r5, pc}
  405e62:	ea91 0f03 	teq	r1, r3
  405e66:	bf1e      	ittt	ne
  405e68:	2100      	movne	r1, #0
  405e6a:	2000      	movne	r0, #0
  405e6c:	bd30      	popne	{r4, r5, pc}
  405e6e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405e72:	d105      	bne.n	405e80 <__adddf3+0x230>
  405e74:	0040      	lsls	r0, r0, #1
  405e76:	4149      	adcs	r1, r1
  405e78:	bf28      	it	cs
  405e7a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405e7e:	bd30      	pop	{r4, r5, pc}
  405e80:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405e84:	bf3c      	itt	cc
  405e86:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405e8a:	bd30      	popcc	{r4, r5, pc}
  405e8c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405e90:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405e94:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405e98:	f04f 0000 	mov.w	r0, #0
  405e9c:	bd30      	pop	{r4, r5, pc}
  405e9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405ea2:	bf1a      	itte	ne
  405ea4:	4619      	movne	r1, r3
  405ea6:	4610      	movne	r0, r2
  405ea8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405eac:	bf1c      	itt	ne
  405eae:	460b      	movne	r3, r1
  405eb0:	4602      	movne	r2, r0
  405eb2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405eb6:	bf06      	itte	eq
  405eb8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405ebc:	ea91 0f03 	teqeq	r1, r3
  405ec0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405ec4:	bd30      	pop	{r4, r5, pc}
  405ec6:	bf00      	nop

00405ec8 <__aeabi_ui2d>:
  405ec8:	f090 0f00 	teq	r0, #0
  405ecc:	bf04      	itt	eq
  405ece:	2100      	moveq	r1, #0
  405ed0:	4770      	bxeq	lr
  405ed2:	b530      	push	{r4, r5, lr}
  405ed4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405ed8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405edc:	f04f 0500 	mov.w	r5, #0
  405ee0:	f04f 0100 	mov.w	r1, #0
  405ee4:	e750      	b.n	405d88 <__adddf3+0x138>
  405ee6:	bf00      	nop

00405ee8 <__aeabi_i2d>:
  405ee8:	f090 0f00 	teq	r0, #0
  405eec:	bf04      	itt	eq
  405eee:	2100      	moveq	r1, #0
  405ef0:	4770      	bxeq	lr
  405ef2:	b530      	push	{r4, r5, lr}
  405ef4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405ef8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405efc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405f00:	bf48      	it	mi
  405f02:	4240      	negmi	r0, r0
  405f04:	f04f 0100 	mov.w	r1, #0
  405f08:	e73e      	b.n	405d88 <__adddf3+0x138>
  405f0a:	bf00      	nop

00405f0c <__aeabi_f2d>:
  405f0c:	0042      	lsls	r2, r0, #1
  405f0e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405f12:	ea4f 0131 	mov.w	r1, r1, rrx
  405f16:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405f1a:	bf1f      	itttt	ne
  405f1c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405f20:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405f24:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405f28:	4770      	bxne	lr
  405f2a:	f092 0f00 	teq	r2, #0
  405f2e:	bf14      	ite	ne
  405f30:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405f34:	4770      	bxeq	lr
  405f36:	b530      	push	{r4, r5, lr}
  405f38:	f44f 7460 	mov.w	r4, #896	; 0x380
  405f3c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405f40:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405f44:	e720      	b.n	405d88 <__adddf3+0x138>
  405f46:	bf00      	nop

00405f48 <__aeabi_ul2d>:
  405f48:	ea50 0201 	orrs.w	r2, r0, r1
  405f4c:	bf08      	it	eq
  405f4e:	4770      	bxeq	lr
  405f50:	b530      	push	{r4, r5, lr}
  405f52:	f04f 0500 	mov.w	r5, #0
  405f56:	e00a      	b.n	405f6e <__aeabi_l2d+0x16>

00405f58 <__aeabi_l2d>:
  405f58:	ea50 0201 	orrs.w	r2, r0, r1
  405f5c:	bf08      	it	eq
  405f5e:	4770      	bxeq	lr
  405f60:	b530      	push	{r4, r5, lr}
  405f62:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405f66:	d502      	bpl.n	405f6e <__aeabi_l2d+0x16>
  405f68:	4240      	negs	r0, r0
  405f6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405f6e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405f72:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405f76:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405f7a:	f43f aedc 	beq.w	405d36 <__adddf3+0xe6>
  405f7e:	f04f 0203 	mov.w	r2, #3
  405f82:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405f86:	bf18      	it	ne
  405f88:	3203      	addne	r2, #3
  405f8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405f8e:	bf18      	it	ne
  405f90:	3203      	addne	r2, #3
  405f92:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405f96:	f1c2 0320 	rsb	r3, r2, #32
  405f9a:	fa00 fc03 	lsl.w	ip, r0, r3
  405f9e:	fa20 f002 	lsr.w	r0, r0, r2
  405fa2:	fa01 fe03 	lsl.w	lr, r1, r3
  405fa6:	ea40 000e 	orr.w	r0, r0, lr
  405faa:	fa21 f102 	lsr.w	r1, r1, r2
  405fae:	4414      	add	r4, r2
  405fb0:	e6c1      	b.n	405d36 <__adddf3+0xe6>
  405fb2:	bf00      	nop

00405fb4 <__aeabi_dmul>:
  405fb4:	b570      	push	{r4, r5, r6, lr}
  405fb6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405fba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405fbe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405fc2:	bf1d      	ittte	ne
  405fc4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405fc8:	ea94 0f0c 	teqne	r4, ip
  405fcc:	ea95 0f0c 	teqne	r5, ip
  405fd0:	f000 f8de 	bleq	406190 <__aeabi_dmul+0x1dc>
  405fd4:	442c      	add	r4, r5
  405fd6:	ea81 0603 	eor.w	r6, r1, r3
  405fda:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405fde:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405fe2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405fe6:	bf18      	it	ne
  405fe8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405fec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405ff0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405ff4:	d038      	beq.n	406068 <__aeabi_dmul+0xb4>
  405ff6:	fba0 ce02 	umull	ip, lr, r0, r2
  405ffa:	f04f 0500 	mov.w	r5, #0
  405ffe:	fbe1 e502 	umlal	lr, r5, r1, r2
  406002:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  406006:	fbe0 e503 	umlal	lr, r5, r0, r3
  40600a:	f04f 0600 	mov.w	r6, #0
  40600e:	fbe1 5603 	umlal	r5, r6, r1, r3
  406012:	f09c 0f00 	teq	ip, #0
  406016:	bf18      	it	ne
  406018:	f04e 0e01 	orrne.w	lr, lr, #1
  40601c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  406020:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  406024:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  406028:	d204      	bcs.n	406034 <__aeabi_dmul+0x80>
  40602a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  40602e:	416d      	adcs	r5, r5
  406030:	eb46 0606 	adc.w	r6, r6, r6
  406034:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  406038:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  40603c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  406040:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  406044:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  406048:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40604c:	bf88      	it	hi
  40604e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  406052:	d81e      	bhi.n	406092 <__aeabi_dmul+0xde>
  406054:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  406058:	bf08      	it	eq
  40605a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40605e:	f150 0000 	adcs.w	r0, r0, #0
  406062:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  406066:	bd70      	pop	{r4, r5, r6, pc}
  406068:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40606c:	ea46 0101 	orr.w	r1, r6, r1
  406070:	ea40 0002 	orr.w	r0, r0, r2
  406074:	ea81 0103 	eor.w	r1, r1, r3
  406078:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40607c:	bfc2      	ittt	gt
  40607e:	ebd4 050c 	rsbsgt	r5, r4, ip
  406082:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406086:	bd70      	popgt	{r4, r5, r6, pc}
  406088:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40608c:	f04f 0e00 	mov.w	lr, #0
  406090:	3c01      	subs	r4, #1
  406092:	f300 80ab 	bgt.w	4061ec <__aeabi_dmul+0x238>
  406096:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40609a:	bfde      	ittt	le
  40609c:	2000      	movle	r0, #0
  40609e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  4060a2:	bd70      	pople	{r4, r5, r6, pc}
  4060a4:	f1c4 0400 	rsb	r4, r4, #0
  4060a8:	3c20      	subs	r4, #32
  4060aa:	da35      	bge.n	406118 <__aeabi_dmul+0x164>
  4060ac:	340c      	adds	r4, #12
  4060ae:	dc1b      	bgt.n	4060e8 <__aeabi_dmul+0x134>
  4060b0:	f104 0414 	add.w	r4, r4, #20
  4060b4:	f1c4 0520 	rsb	r5, r4, #32
  4060b8:	fa00 f305 	lsl.w	r3, r0, r5
  4060bc:	fa20 f004 	lsr.w	r0, r0, r4
  4060c0:	fa01 f205 	lsl.w	r2, r1, r5
  4060c4:	ea40 0002 	orr.w	r0, r0, r2
  4060c8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  4060cc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4060d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4060d4:	fa21 f604 	lsr.w	r6, r1, r4
  4060d8:	eb42 0106 	adc.w	r1, r2, r6
  4060dc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4060e0:	bf08      	it	eq
  4060e2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4060e6:	bd70      	pop	{r4, r5, r6, pc}
  4060e8:	f1c4 040c 	rsb	r4, r4, #12
  4060ec:	f1c4 0520 	rsb	r5, r4, #32
  4060f0:	fa00 f304 	lsl.w	r3, r0, r4
  4060f4:	fa20 f005 	lsr.w	r0, r0, r5
  4060f8:	fa01 f204 	lsl.w	r2, r1, r4
  4060fc:	ea40 0002 	orr.w	r0, r0, r2
  406100:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406104:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  406108:	f141 0100 	adc.w	r1, r1, #0
  40610c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406110:	bf08      	it	eq
  406112:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  406116:	bd70      	pop	{r4, r5, r6, pc}
  406118:	f1c4 0520 	rsb	r5, r4, #32
  40611c:	fa00 f205 	lsl.w	r2, r0, r5
  406120:	ea4e 0e02 	orr.w	lr, lr, r2
  406124:	fa20 f304 	lsr.w	r3, r0, r4
  406128:	fa01 f205 	lsl.w	r2, r1, r5
  40612c:	ea43 0302 	orr.w	r3, r3, r2
  406130:	fa21 f004 	lsr.w	r0, r1, r4
  406134:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406138:	fa21 f204 	lsr.w	r2, r1, r4
  40613c:	ea20 0002 	bic.w	r0, r0, r2
  406140:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  406144:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406148:	bf08      	it	eq
  40614a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40614e:	bd70      	pop	{r4, r5, r6, pc}
  406150:	f094 0f00 	teq	r4, #0
  406154:	d10f      	bne.n	406176 <__aeabi_dmul+0x1c2>
  406156:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  40615a:	0040      	lsls	r0, r0, #1
  40615c:	eb41 0101 	adc.w	r1, r1, r1
  406160:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406164:	bf08      	it	eq
  406166:	3c01      	subeq	r4, #1
  406168:	d0f7      	beq.n	40615a <__aeabi_dmul+0x1a6>
  40616a:	ea41 0106 	orr.w	r1, r1, r6
  40616e:	f095 0f00 	teq	r5, #0
  406172:	bf18      	it	ne
  406174:	4770      	bxne	lr
  406176:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40617a:	0052      	lsls	r2, r2, #1
  40617c:	eb43 0303 	adc.w	r3, r3, r3
  406180:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  406184:	bf08      	it	eq
  406186:	3d01      	subeq	r5, #1
  406188:	d0f7      	beq.n	40617a <__aeabi_dmul+0x1c6>
  40618a:	ea43 0306 	orr.w	r3, r3, r6
  40618e:	4770      	bx	lr
  406190:	ea94 0f0c 	teq	r4, ip
  406194:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  406198:	bf18      	it	ne
  40619a:	ea95 0f0c 	teqne	r5, ip
  40619e:	d00c      	beq.n	4061ba <__aeabi_dmul+0x206>
  4061a0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4061a4:	bf18      	it	ne
  4061a6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4061aa:	d1d1      	bne.n	406150 <__aeabi_dmul+0x19c>
  4061ac:	ea81 0103 	eor.w	r1, r1, r3
  4061b0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4061b4:	f04f 0000 	mov.w	r0, #0
  4061b8:	bd70      	pop	{r4, r5, r6, pc}
  4061ba:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4061be:	bf06      	itte	eq
  4061c0:	4610      	moveq	r0, r2
  4061c2:	4619      	moveq	r1, r3
  4061c4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4061c8:	d019      	beq.n	4061fe <__aeabi_dmul+0x24a>
  4061ca:	ea94 0f0c 	teq	r4, ip
  4061ce:	d102      	bne.n	4061d6 <__aeabi_dmul+0x222>
  4061d0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  4061d4:	d113      	bne.n	4061fe <__aeabi_dmul+0x24a>
  4061d6:	ea95 0f0c 	teq	r5, ip
  4061da:	d105      	bne.n	4061e8 <__aeabi_dmul+0x234>
  4061dc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  4061e0:	bf1c      	itt	ne
  4061e2:	4610      	movne	r0, r2
  4061e4:	4619      	movne	r1, r3
  4061e6:	d10a      	bne.n	4061fe <__aeabi_dmul+0x24a>
  4061e8:	ea81 0103 	eor.w	r1, r1, r3
  4061ec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4061f0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4061f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4061f8:	f04f 0000 	mov.w	r0, #0
  4061fc:	bd70      	pop	{r4, r5, r6, pc}
  4061fe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406202:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  406206:	bd70      	pop	{r4, r5, r6, pc}

00406208 <__aeabi_ddiv>:
  406208:	b570      	push	{r4, r5, r6, lr}
  40620a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40620e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  406212:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406216:	bf1d      	ittte	ne
  406218:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40621c:	ea94 0f0c 	teqne	r4, ip
  406220:	ea95 0f0c 	teqne	r5, ip
  406224:	f000 f8a7 	bleq	406376 <__aeabi_ddiv+0x16e>
  406228:	eba4 0405 	sub.w	r4, r4, r5
  40622c:	ea81 0e03 	eor.w	lr, r1, r3
  406230:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  406234:	ea4f 3101 	mov.w	r1, r1, lsl #12
  406238:	f000 8088 	beq.w	40634c <__aeabi_ddiv+0x144>
  40623c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  406240:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  406244:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  406248:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40624c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  406250:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  406254:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  406258:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40625c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  406260:	429d      	cmp	r5, r3
  406262:	bf08      	it	eq
  406264:	4296      	cmpeq	r6, r2
  406266:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40626a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40626e:	d202      	bcs.n	406276 <__aeabi_ddiv+0x6e>
  406270:	085b      	lsrs	r3, r3, #1
  406272:	ea4f 0232 	mov.w	r2, r2, rrx
  406276:	1ab6      	subs	r6, r6, r2
  406278:	eb65 0503 	sbc.w	r5, r5, r3
  40627c:	085b      	lsrs	r3, r3, #1
  40627e:	ea4f 0232 	mov.w	r2, r2, rrx
  406282:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  406286:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40628a:	ebb6 0e02 	subs.w	lr, r6, r2
  40628e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406292:	bf22      	ittt	cs
  406294:	1ab6      	subcs	r6, r6, r2
  406296:	4675      	movcs	r5, lr
  406298:	ea40 000c 	orrcs.w	r0, r0, ip
  40629c:	085b      	lsrs	r3, r3, #1
  40629e:	ea4f 0232 	mov.w	r2, r2, rrx
  4062a2:	ebb6 0e02 	subs.w	lr, r6, r2
  4062a6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4062aa:	bf22      	ittt	cs
  4062ac:	1ab6      	subcs	r6, r6, r2
  4062ae:	4675      	movcs	r5, lr
  4062b0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4062b4:	085b      	lsrs	r3, r3, #1
  4062b6:	ea4f 0232 	mov.w	r2, r2, rrx
  4062ba:	ebb6 0e02 	subs.w	lr, r6, r2
  4062be:	eb75 0e03 	sbcs.w	lr, r5, r3
  4062c2:	bf22      	ittt	cs
  4062c4:	1ab6      	subcs	r6, r6, r2
  4062c6:	4675      	movcs	r5, lr
  4062c8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4062cc:	085b      	lsrs	r3, r3, #1
  4062ce:	ea4f 0232 	mov.w	r2, r2, rrx
  4062d2:	ebb6 0e02 	subs.w	lr, r6, r2
  4062d6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4062da:	bf22      	ittt	cs
  4062dc:	1ab6      	subcs	r6, r6, r2
  4062de:	4675      	movcs	r5, lr
  4062e0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4062e4:	ea55 0e06 	orrs.w	lr, r5, r6
  4062e8:	d018      	beq.n	40631c <__aeabi_ddiv+0x114>
  4062ea:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4062ee:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4062f2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4062f6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4062fa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4062fe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  406302:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  406306:	d1c0      	bne.n	40628a <__aeabi_ddiv+0x82>
  406308:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40630c:	d10b      	bne.n	406326 <__aeabi_ddiv+0x11e>
  40630e:	ea41 0100 	orr.w	r1, r1, r0
  406312:	f04f 0000 	mov.w	r0, #0
  406316:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40631a:	e7b6      	b.n	40628a <__aeabi_ddiv+0x82>
  40631c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406320:	bf04      	itt	eq
  406322:	4301      	orreq	r1, r0
  406324:	2000      	moveq	r0, #0
  406326:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40632a:	bf88      	it	hi
  40632c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  406330:	f63f aeaf 	bhi.w	406092 <__aeabi_dmul+0xde>
  406334:	ebb5 0c03 	subs.w	ip, r5, r3
  406338:	bf04      	itt	eq
  40633a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40633e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  406342:	f150 0000 	adcs.w	r0, r0, #0
  406346:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40634a:	bd70      	pop	{r4, r5, r6, pc}
  40634c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  406350:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  406354:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  406358:	bfc2      	ittt	gt
  40635a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40635e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406362:	bd70      	popgt	{r4, r5, r6, pc}
  406364:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  406368:	f04f 0e00 	mov.w	lr, #0
  40636c:	3c01      	subs	r4, #1
  40636e:	e690      	b.n	406092 <__aeabi_dmul+0xde>
  406370:	ea45 0e06 	orr.w	lr, r5, r6
  406374:	e68d      	b.n	406092 <__aeabi_dmul+0xde>
  406376:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40637a:	ea94 0f0c 	teq	r4, ip
  40637e:	bf08      	it	eq
  406380:	ea95 0f0c 	teqeq	r5, ip
  406384:	f43f af3b 	beq.w	4061fe <__aeabi_dmul+0x24a>
  406388:	ea94 0f0c 	teq	r4, ip
  40638c:	d10a      	bne.n	4063a4 <__aeabi_ddiv+0x19c>
  40638e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406392:	f47f af34 	bne.w	4061fe <__aeabi_dmul+0x24a>
  406396:	ea95 0f0c 	teq	r5, ip
  40639a:	f47f af25 	bne.w	4061e8 <__aeabi_dmul+0x234>
  40639e:	4610      	mov	r0, r2
  4063a0:	4619      	mov	r1, r3
  4063a2:	e72c      	b.n	4061fe <__aeabi_dmul+0x24a>
  4063a4:	ea95 0f0c 	teq	r5, ip
  4063a8:	d106      	bne.n	4063b8 <__aeabi_ddiv+0x1b0>
  4063aa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4063ae:	f43f aefd 	beq.w	4061ac <__aeabi_dmul+0x1f8>
  4063b2:	4610      	mov	r0, r2
  4063b4:	4619      	mov	r1, r3
  4063b6:	e722      	b.n	4061fe <__aeabi_dmul+0x24a>
  4063b8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4063bc:	bf18      	it	ne
  4063be:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4063c2:	f47f aec5 	bne.w	406150 <__aeabi_dmul+0x19c>
  4063c6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4063ca:	f47f af0d 	bne.w	4061e8 <__aeabi_dmul+0x234>
  4063ce:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4063d2:	f47f aeeb 	bne.w	4061ac <__aeabi_dmul+0x1f8>
  4063d6:	e712      	b.n	4061fe <__aeabi_dmul+0x24a>

004063d8 <__gedf2>:
  4063d8:	f04f 3cff 	mov.w	ip, #4294967295
  4063dc:	e006      	b.n	4063ec <__cmpdf2+0x4>
  4063de:	bf00      	nop

004063e0 <__ledf2>:
  4063e0:	f04f 0c01 	mov.w	ip, #1
  4063e4:	e002      	b.n	4063ec <__cmpdf2+0x4>
  4063e6:	bf00      	nop

004063e8 <__cmpdf2>:
  4063e8:	f04f 0c01 	mov.w	ip, #1
  4063ec:	f84d cd04 	str.w	ip, [sp, #-4]!
  4063f0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4063f4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4063f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4063fc:	bf18      	it	ne
  4063fe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406402:	d01b      	beq.n	40643c <__cmpdf2+0x54>
  406404:	b001      	add	sp, #4
  406406:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40640a:	bf0c      	ite	eq
  40640c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406410:	ea91 0f03 	teqne	r1, r3
  406414:	bf02      	ittt	eq
  406416:	ea90 0f02 	teqeq	r0, r2
  40641a:	2000      	moveq	r0, #0
  40641c:	4770      	bxeq	lr
  40641e:	f110 0f00 	cmn.w	r0, #0
  406422:	ea91 0f03 	teq	r1, r3
  406426:	bf58      	it	pl
  406428:	4299      	cmppl	r1, r3
  40642a:	bf08      	it	eq
  40642c:	4290      	cmpeq	r0, r2
  40642e:	bf2c      	ite	cs
  406430:	17d8      	asrcs	r0, r3, #31
  406432:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406436:	f040 0001 	orr.w	r0, r0, #1
  40643a:	4770      	bx	lr
  40643c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406440:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406444:	d102      	bne.n	40644c <__cmpdf2+0x64>
  406446:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40644a:	d107      	bne.n	40645c <__cmpdf2+0x74>
  40644c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406450:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406454:	d1d6      	bne.n	406404 <__cmpdf2+0x1c>
  406456:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40645a:	d0d3      	beq.n	406404 <__cmpdf2+0x1c>
  40645c:	f85d 0b04 	ldr.w	r0, [sp], #4
  406460:	4770      	bx	lr
  406462:	bf00      	nop

00406464 <__aeabi_cdrcmple>:
  406464:	4684      	mov	ip, r0
  406466:	4610      	mov	r0, r2
  406468:	4662      	mov	r2, ip
  40646a:	468c      	mov	ip, r1
  40646c:	4619      	mov	r1, r3
  40646e:	4663      	mov	r3, ip
  406470:	e000      	b.n	406474 <__aeabi_cdcmpeq>
  406472:	bf00      	nop

00406474 <__aeabi_cdcmpeq>:
  406474:	b501      	push	{r0, lr}
  406476:	f7ff ffb7 	bl	4063e8 <__cmpdf2>
  40647a:	2800      	cmp	r0, #0
  40647c:	bf48      	it	mi
  40647e:	f110 0f00 	cmnmi.w	r0, #0
  406482:	bd01      	pop	{r0, pc}

00406484 <__aeabi_dcmpeq>:
  406484:	f84d ed08 	str.w	lr, [sp, #-8]!
  406488:	f7ff fff4 	bl	406474 <__aeabi_cdcmpeq>
  40648c:	bf0c      	ite	eq
  40648e:	2001      	moveq	r0, #1
  406490:	2000      	movne	r0, #0
  406492:	f85d fb08 	ldr.w	pc, [sp], #8
  406496:	bf00      	nop

00406498 <__aeabi_dcmplt>:
  406498:	f84d ed08 	str.w	lr, [sp, #-8]!
  40649c:	f7ff ffea 	bl	406474 <__aeabi_cdcmpeq>
  4064a0:	bf34      	ite	cc
  4064a2:	2001      	movcc	r0, #1
  4064a4:	2000      	movcs	r0, #0
  4064a6:	f85d fb08 	ldr.w	pc, [sp], #8
  4064aa:	bf00      	nop

004064ac <__aeabi_dcmple>:
  4064ac:	f84d ed08 	str.w	lr, [sp, #-8]!
  4064b0:	f7ff ffe0 	bl	406474 <__aeabi_cdcmpeq>
  4064b4:	bf94      	ite	ls
  4064b6:	2001      	movls	r0, #1
  4064b8:	2000      	movhi	r0, #0
  4064ba:	f85d fb08 	ldr.w	pc, [sp], #8
  4064be:	bf00      	nop

004064c0 <__aeabi_dcmpge>:
  4064c0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4064c4:	f7ff ffce 	bl	406464 <__aeabi_cdrcmple>
  4064c8:	bf94      	ite	ls
  4064ca:	2001      	movls	r0, #1
  4064cc:	2000      	movhi	r0, #0
  4064ce:	f85d fb08 	ldr.w	pc, [sp], #8
  4064d2:	bf00      	nop

004064d4 <__aeabi_dcmpgt>:
  4064d4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4064d8:	f7ff ffc4 	bl	406464 <__aeabi_cdrcmple>
  4064dc:	bf34      	ite	cc
  4064de:	2001      	movcc	r0, #1
  4064e0:	2000      	movcs	r0, #0
  4064e2:	f85d fb08 	ldr.w	pc, [sp], #8
  4064e6:	bf00      	nop

004064e8 <__aeabi_dcmpun>:
  4064e8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4064ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4064f0:	d102      	bne.n	4064f8 <__aeabi_dcmpun+0x10>
  4064f2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4064f6:	d10a      	bne.n	40650e <__aeabi_dcmpun+0x26>
  4064f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4064fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406500:	d102      	bne.n	406508 <__aeabi_dcmpun+0x20>
  406502:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406506:	d102      	bne.n	40650e <__aeabi_dcmpun+0x26>
  406508:	f04f 0000 	mov.w	r0, #0
  40650c:	4770      	bx	lr
  40650e:	f04f 0001 	mov.w	r0, #1
  406512:	4770      	bx	lr

00406514 <__aeabi_d2iz>:
  406514:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406518:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40651c:	d215      	bcs.n	40654a <__aeabi_d2iz+0x36>
  40651e:	d511      	bpl.n	406544 <__aeabi_d2iz+0x30>
  406520:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406524:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406528:	d912      	bls.n	406550 <__aeabi_d2iz+0x3c>
  40652a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40652e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406532:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406536:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40653a:	fa23 f002 	lsr.w	r0, r3, r2
  40653e:	bf18      	it	ne
  406540:	4240      	negne	r0, r0
  406542:	4770      	bx	lr
  406544:	f04f 0000 	mov.w	r0, #0
  406548:	4770      	bx	lr
  40654a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40654e:	d105      	bne.n	40655c <__aeabi_d2iz+0x48>
  406550:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406554:	bf08      	it	eq
  406556:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40655a:	4770      	bx	lr
  40655c:	f04f 0000 	mov.w	r0, #0
  406560:	4770      	bx	lr
  406562:	bf00      	nop

00406564 <__aeabi_uldivmod>:
  406564:	b953      	cbnz	r3, 40657c <__aeabi_uldivmod+0x18>
  406566:	b94a      	cbnz	r2, 40657c <__aeabi_uldivmod+0x18>
  406568:	2900      	cmp	r1, #0
  40656a:	bf08      	it	eq
  40656c:	2800      	cmpeq	r0, #0
  40656e:	bf1c      	itt	ne
  406570:	f04f 31ff 	movne.w	r1, #4294967295
  406574:	f04f 30ff 	movne.w	r0, #4294967295
  406578:	f000 b97a 	b.w	406870 <__aeabi_idiv0>
  40657c:	f1ad 0c08 	sub.w	ip, sp, #8
  406580:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406584:	f000 f806 	bl	406594 <__udivmoddi4>
  406588:	f8dd e004 	ldr.w	lr, [sp, #4]
  40658c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406590:	b004      	add	sp, #16
  406592:	4770      	bx	lr

00406594 <__udivmoddi4>:
  406594:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406598:	468c      	mov	ip, r1
  40659a:	460d      	mov	r5, r1
  40659c:	4604      	mov	r4, r0
  40659e:	9e08      	ldr	r6, [sp, #32]
  4065a0:	2b00      	cmp	r3, #0
  4065a2:	d151      	bne.n	406648 <__udivmoddi4+0xb4>
  4065a4:	428a      	cmp	r2, r1
  4065a6:	4617      	mov	r7, r2
  4065a8:	d96d      	bls.n	406686 <__udivmoddi4+0xf2>
  4065aa:	fab2 fe82 	clz	lr, r2
  4065ae:	f1be 0f00 	cmp.w	lr, #0
  4065b2:	d00b      	beq.n	4065cc <__udivmoddi4+0x38>
  4065b4:	f1ce 0c20 	rsb	ip, lr, #32
  4065b8:	fa01 f50e 	lsl.w	r5, r1, lr
  4065bc:	fa20 fc0c 	lsr.w	ip, r0, ip
  4065c0:	fa02 f70e 	lsl.w	r7, r2, lr
  4065c4:	ea4c 0c05 	orr.w	ip, ip, r5
  4065c8:	fa00 f40e 	lsl.w	r4, r0, lr
  4065cc:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  4065d0:	0c25      	lsrs	r5, r4, #16
  4065d2:	fbbc f8fa 	udiv	r8, ip, sl
  4065d6:	fa1f f987 	uxth.w	r9, r7
  4065da:	fb0a cc18 	mls	ip, sl, r8, ip
  4065de:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4065e2:	fb08 f309 	mul.w	r3, r8, r9
  4065e6:	42ab      	cmp	r3, r5
  4065e8:	d90a      	bls.n	406600 <__udivmoddi4+0x6c>
  4065ea:	19ed      	adds	r5, r5, r7
  4065ec:	f108 32ff 	add.w	r2, r8, #4294967295
  4065f0:	f080 8123 	bcs.w	40683a <__udivmoddi4+0x2a6>
  4065f4:	42ab      	cmp	r3, r5
  4065f6:	f240 8120 	bls.w	40683a <__udivmoddi4+0x2a6>
  4065fa:	f1a8 0802 	sub.w	r8, r8, #2
  4065fe:	443d      	add	r5, r7
  406600:	1aed      	subs	r5, r5, r3
  406602:	b2a4      	uxth	r4, r4
  406604:	fbb5 f0fa 	udiv	r0, r5, sl
  406608:	fb0a 5510 	mls	r5, sl, r0, r5
  40660c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406610:	fb00 f909 	mul.w	r9, r0, r9
  406614:	45a1      	cmp	r9, r4
  406616:	d909      	bls.n	40662c <__udivmoddi4+0x98>
  406618:	19e4      	adds	r4, r4, r7
  40661a:	f100 33ff 	add.w	r3, r0, #4294967295
  40661e:	f080 810a 	bcs.w	406836 <__udivmoddi4+0x2a2>
  406622:	45a1      	cmp	r9, r4
  406624:	f240 8107 	bls.w	406836 <__udivmoddi4+0x2a2>
  406628:	3802      	subs	r0, #2
  40662a:	443c      	add	r4, r7
  40662c:	eba4 0409 	sub.w	r4, r4, r9
  406630:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406634:	2100      	movs	r1, #0
  406636:	2e00      	cmp	r6, #0
  406638:	d061      	beq.n	4066fe <__udivmoddi4+0x16a>
  40663a:	fa24 f40e 	lsr.w	r4, r4, lr
  40663e:	2300      	movs	r3, #0
  406640:	6034      	str	r4, [r6, #0]
  406642:	6073      	str	r3, [r6, #4]
  406644:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406648:	428b      	cmp	r3, r1
  40664a:	d907      	bls.n	40665c <__udivmoddi4+0xc8>
  40664c:	2e00      	cmp	r6, #0
  40664e:	d054      	beq.n	4066fa <__udivmoddi4+0x166>
  406650:	2100      	movs	r1, #0
  406652:	e886 0021 	stmia.w	r6, {r0, r5}
  406656:	4608      	mov	r0, r1
  406658:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40665c:	fab3 f183 	clz	r1, r3
  406660:	2900      	cmp	r1, #0
  406662:	f040 808e 	bne.w	406782 <__udivmoddi4+0x1ee>
  406666:	42ab      	cmp	r3, r5
  406668:	d302      	bcc.n	406670 <__udivmoddi4+0xdc>
  40666a:	4282      	cmp	r2, r0
  40666c:	f200 80fa 	bhi.w	406864 <__udivmoddi4+0x2d0>
  406670:	1a84      	subs	r4, r0, r2
  406672:	eb65 0503 	sbc.w	r5, r5, r3
  406676:	2001      	movs	r0, #1
  406678:	46ac      	mov	ip, r5
  40667a:	2e00      	cmp	r6, #0
  40667c:	d03f      	beq.n	4066fe <__udivmoddi4+0x16a>
  40667e:	e886 1010 	stmia.w	r6, {r4, ip}
  406682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406686:	b912      	cbnz	r2, 40668e <__udivmoddi4+0xfa>
  406688:	2701      	movs	r7, #1
  40668a:	fbb7 f7f2 	udiv	r7, r7, r2
  40668e:	fab7 fe87 	clz	lr, r7
  406692:	f1be 0f00 	cmp.w	lr, #0
  406696:	d134      	bne.n	406702 <__udivmoddi4+0x16e>
  406698:	1beb      	subs	r3, r5, r7
  40669a:	0c3a      	lsrs	r2, r7, #16
  40669c:	fa1f fc87 	uxth.w	ip, r7
  4066a0:	2101      	movs	r1, #1
  4066a2:	fbb3 f8f2 	udiv	r8, r3, r2
  4066a6:	0c25      	lsrs	r5, r4, #16
  4066a8:	fb02 3318 	mls	r3, r2, r8, r3
  4066ac:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4066b0:	fb0c f308 	mul.w	r3, ip, r8
  4066b4:	42ab      	cmp	r3, r5
  4066b6:	d907      	bls.n	4066c8 <__udivmoddi4+0x134>
  4066b8:	19ed      	adds	r5, r5, r7
  4066ba:	f108 30ff 	add.w	r0, r8, #4294967295
  4066be:	d202      	bcs.n	4066c6 <__udivmoddi4+0x132>
  4066c0:	42ab      	cmp	r3, r5
  4066c2:	f200 80d1 	bhi.w	406868 <__udivmoddi4+0x2d4>
  4066c6:	4680      	mov	r8, r0
  4066c8:	1aed      	subs	r5, r5, r3
  4066ca:	b2a3      	uxth	r3, r4
  4066cc:	fbb5 f0f2 	udiv	r0, r5, r2
  4066d0:	fb02 5510 	mls	r5, r2, r0, r5
  4066d4:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4066d8:	fb0c fc00 	mul.w	ip, ip, r0
  4066dc:	45a4      	cmp	ip, r4
  4066de:	d907      	bls.n	4066f0 <__udivmoddi4+0x15c>
  4066e0:	19e4      	adds	r4, r4, r7
  4066e2:	f100 33ff 	add.w	r3, r0, #4294967295
  4066e6:	d202      	bcs.n	4066ee <__udivmoddi4+0x15a>
  4066e8:	45a4      	cmp	ip, r4
  4066ea:	f200 80b8 	bhi.w	40685e <__udivmoddi4+0x2ca>
  4066ee:	4618      	mov	r0, r3
  4066f0:	eba4 040c 	sub.w	r4, r4, ip
  4066f4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4066f8:	e79d      	b.n	406636 <__udivmoddi4+0xa2>
  4066fa:	4631      	mov	r1, r6
  4066fc:	4630      	mov	r0, r6
  4066fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406702:	f1ce 0420 	rsb	r4, lr, #32
  406706:	fa05 f30e 	lsl.w	r3, r5, lr
  40670a:	fa07 f70e 	lsl.w	r7, r7, lr
  40670e:	fa20 f804 	lsr.w	r8, r0, r4
  406712:	0c3a      	lsrs	r2, r7, #16
  406714:	fa25 f404 	lsr.w	r4, r5, r4
  406718:	ea48 0803 	orr.w	r8, r8, r3
  40671c:	fbb4 f1f2 	udiv	r1, r4, r2
  406720:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406724:	fb02 4411 	mls	r4, r2, r1, r4
  406728:	fa1f fc87 	uxth.w	ip, r7
  40672c:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406730:	fb01 f30c 	mul.w	r3, r1, ip
  406734:	42ab      	cmp	r3, r5
  406736:	fa00 f40e 	lsl.w	r4, r0, lr
  40673a:	d909      	bls.n	406750 <__udivmoddi4+0x1bc>
  40673c:	19ed      	adds	r5, r5, r7
  40673e:	f101 30ff 	add.w	r0, r1, #4294967295
  406742:	f080 808a 	bcs.w	40685a <__udivmoddi4+0x2c6>
  406746:	42ab      	cmp	r3, r5
  406748:	f240 8087 	bls.w	40685a <__udivmoddi4+0x2c6>
  40674c:	3902      	subs	r1, #2
  40674e:	443d      	add	r5, r7
  406750:	1aeb      	subs	r3, r5, r3
  406752:	fa1f f588 	uxth.w	r5, r8
  406756:	fbb3 f0f2 	udiv	r0, r3, r2
  40675a:	fb02 3310 	mls	r3, r2, r0, r3
  40675e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406762:	fb00 f30c 	mul.w	r3, r0, ip
  406766:	42ab      	cmp	r3, r5
  406768:	d907      	bls.n	40677a <__udivmoddi4+0x1e6>
  40676a:	19ed      	adds	r5, r5, r7
  40676c:	f100 38ff 	add.w	r8, r0, #4294967295
  406770:	d26f      	bcs.n	406852 <__udivmoddi4+0x2be>
  406772:	42ab      	cmp	r3, r5
  406774:	d96d      	bls.n	406852 <__udivmoddi4+0x2be>
  406776:	3802      	subs	r0, #2
  406778:	443d      	add	r5, r7
  40677a:	1aeb      	subs	r3, r5, r3
  40677c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406780:	e78f      	b.n	4066a2 <__udivmoddi4+0x10e>
  406782:	f1c1 0720 	rsb	r7, r1, #32
  406786:	fa22 f807 	lsr.w	r8, r2, r7
  40678a:	408b      	lsls	r3, r1
  40678c:	fa05 f401 	lsl.w	r4, r5, r1
  406790:	ea48 0303 	orr.w	r3, r8, r3
  406794:	fa20 fe07 	lsr.w	lr, r0, r7
  406798:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40679c:	40fd      	lsrs	r5, r7
  40679e:	ea4e 0e04 	orr.w	lr, lr, r4
  4067a2:	fbb5 f9fc 	udiv	r9, r5, ip
  4067a6:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4067aa:	fb0c 5519 	mls	r5, ip, r9, r5
  4067ae:	fa1f f883 	uxth.w	r8, r3
  4067b2:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4067b6:	fb09 f408 	mul.w	r4, r9, r8
  4067ba:	42ac      	cmp	r4, r5
  4067bc:	fa02 f201 	lsl.w	r2, r2, r1
  4067c0:	fa00 fa01 	lsl.w	sl, r0, r1
  4067c4:	d908      	bls.n	4067d8 <__udivmoddi4+0x244>
  4067c6:	18ed      	adds	r5, r5, r3
  4067c8:	f109 30ff 	add.w	r0, r9, #4294967295
  4067cc:	d243      	bcs.n	406856 <__udivmoddi4+0x2c2>
  4067ce:	42ac      	cmp	r4, r5
  4067d0:	d941      	bls.n	406856 <__udivmoddi4+0x2c2>
  4067d2:	f1a9 0902 	sub.w	r9, r9, #2
  4067d6:	441d      	add	r5, r3
  4067d8:	1b2d      	subs	r5, r5, r4
  4067da:	fa1f fe8e 	uxth.w	lr, lr
  4067de:	fbb5 f0fc 	udiv	r0, r5, ip
  4067e2:	fb0c 5510 	mls	r5, ip, r0, r5
  4067e6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4067ea:	fb00 f808 	mul.w	r8, r0, r8
  4067ee:	45a0      	cmp	r8, r4
  4067f0:	d907      	bls.n	406802 <__udivmoddi4+0x26e>
  4067f2:	18e4      	adds	r4, r4, r3
  4067f4:	f100 35ff 	add.w	r5, r0, #4294967295
  4067f8:	d229      	bcs.n	40684e <__udivmoddi4+0x2ba>
  4067fa:	45a0      	cmp	r8, r4
  4067fc:	d927      	bls.n	40684e <__udivmoddi4+0x2ba>
  4067fe:	3802      	subs	r0, #2
  406800:	441c      	add	r4, r3
  406802:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406806:	eba4 0408 	sub.w	r4, r4, r8
  40680a:	fba0 8902 	umull	r8, r9, r0, r2
  40680e:	454c      	cmp	r4, r9
  406810:	46c6      	mov	lr, r8
  406812:	464d      	mov	r5, r9
  406814:	d315      	bcc.n	406842 <__udivmoddi4+0x2ae>
  406816:	d012      	beq.n	40683e <__udivmoddi4+0x2aa>
  406818:	b156      	cbz	r6, 406830 <__udivmoddi4+0x29c>
  40681a:	ebba 030e 	subs.w	r3, sl, lr
  40681e:	eb64 0405 	sbc.w	r4, r4, r5
  406822:	fa04 f707 	lsl.w	r7, r4, r7
  406826:	40cb      	lsrs	r3, r1
  406828:	431f      	orrs	r7, r3
  40682a:	40cc      	lsrs	r4, r1
  40682c:	6037      	str	r7, [r6, #0]
  40682e:	6074      	str	r4, [r6, #4]
  406830:	2100      	movs	r1, #0
  406832:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406836:	4618      	mov	r0, r3
  406838:	e6f8      	b.n	40662c <__udivmoddi4+0x98>
  40683a:	4690      	mov	r8, r2
  40683c:	e6e0      	b.n	406600 <__udivmoddi4+0x6c>
  40683e:	45c2      	cmp	sl, r8
  406840:	d2ea      	bcs.n	406818 <__udivmoddi4+0x284>
  406842:	ebb8 0e02 	subs.w	lr, r8, r2
  406846:	eb69 0503 	sbc.w	r5, r9, r3
  40684a:	3801      	subs	r0, #1
  40684c:	e7e4      	b.n	406818 <__udivmoddi4+0x284>
  40684e:	4628      	mov	r0, r5
  406850:	e7d7      	b.n	406802 <__udivmoddi4+0x26e>
  406852:	4640      	mov	r0, r8
  406854:	e791      	b.n	40677a <__udivmoddi4+0x1e6>
  406856:	4681      	mov	r9, r0
  406858:	e7be      	b.n	4067d8 <__udivmoddi4+0x244>
  40685a:	4601      	mov	r1, r0
  40685c:	e778      	b.n	406750 <__udivmoddi4+0x1bc>
  40685e:	3802      	subs	r0, #2
  406860:	443c      	add	r4, r7
  406862:	e745      	b.n	4066f0 <__udivmoddi4+0x15c>
  406864:	4608      	mov	r0, r1
  406866:	e708      	b.n	40667a <__udivmoddi4+0xe6>
  406868:	f1a8 0802 	sub.w	r8, r8, #2
  40686c:	443d      	add	r5, r7
  40686e:	e72b      	b.n	4066c8 <__udivmoddi4+0x134>

00406870 <__aeabi_idiv0>:
  406870:	4770      	bx	lr
  406872:	bf00      	nop

00406874 <CSWTCH.27>:
  406874:	6ac0 0040 74c0 0040 68bc 0040 69c8 0040     .j@..t@..h@..i@.
  406884:	6a18 0040 6a6c 0040 68d0 0040 6920 0040     .j@.lj@..h@. i@.
  406894:	6974 0040 6f1c 0040 700c 0040 70fc 0040     ti@..o@..p@..p@.
  4068a4:	71ec 0040 6e28 0040 6d34 0040 6c40 0040     .q@.(n@.4m@.@l@.
  4068b4:	72dc 0040 73d0 0040                         .r@..s@.

004068bc <OV2640_JPEG>:
  4068bc:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  4068cc:	ffff 0000                                   ....

004068d0 <OV2640_JPEG_1024x768>:
  4068d0:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4068e0:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4068f0:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406900:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406910:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

00406920 <OV2640_JPEG_1280x1024>:
  406920:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406930:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406940:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406950:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406960:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  406970:	ffff 0000                                   ....

00406974 <OV2640_JPEG_1600x1200>:
  406974:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406984:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406994:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4069a4:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4069b4:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  4069c4:	ffff 0000                                   ....

004069c8 <OV2640_JPEG_320x240>:
  4069c8:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  4069d8:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  4069e8:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  4069f8:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  406a08:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

00406a18 <OV2640_JPEG_640x480>:
  406a18:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406a28:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406a38:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406a48:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  406a58:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  406a68:	ffff 0000                                   ....

00406a6c <OV2640_JPEG_800x600>:
  406a6c:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406a7c:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406a8c:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406a9c:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  406aac:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  406abc:	ffff 0000                                   ....

00406ac0 <OV2640_JPEG_INIT>:
  406ac0:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  406ad0:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  406ae0:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  406af0:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  406b00:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  406b10:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  406b20:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  406b30:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  406b40:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  406b50:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  406b60:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  406b70:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  406b80:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  406b90:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  406ba0:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  406bb0:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  406bc0:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  406bd0:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  406be0:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  406bf0:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  406c00:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  406c10:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  406c20:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  406c30:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

00406c40 <OV2640_QQVGA_RGB888>:
  406c40:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406c50:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406c60:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406c70:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406c80:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406c90:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406ca0:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406cb0:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406cc0:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406cd0:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406ce0:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406cf0:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406d00:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406d10:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  406d20:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406d30:	0228 ffff                                   (...

00406d34 <OV2640_QQVGA_YUV422>:
  406d34:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  406d44:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  406d54:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  406d64:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  406d74:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  406d84:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  406d94:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  406da4:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  406db4:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  406dc4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406dd4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406de4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406df4:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406e04:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  406e14:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  406e24:	00d9 ffff                                   ....

00406e28 <OV2640_QVGA_RGB888>:
  406e28:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406e38:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406e48:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406e58:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406e68:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406e78:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406e88:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406e98:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406ea8:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406eb8:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406ec8:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406ed8:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406ee8:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406ef8:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  406f08:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406f18:	0228 ffff                                   (...

00406f1c <OV2640_QVGA_YUV422_10FPS>:
  406f1c:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  406f2c:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406f3c:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406f4c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406f5c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406f6c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406f7c:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406f8c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406f9c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406fac:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406fbc:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406fcc:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406fdc:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406fec:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406ffc:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

0040700c <OV2640_QVGA_YUV422_15FPS>:
  40700c:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  40701c:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  40702c:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  40703c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  40704c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  40705c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  40706c:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  40707c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  40708c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  40709c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4070ac:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4070bc:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4070cc:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4070dc:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  4070ec:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004070fc <OV2640_QVGA_YUV422_20FPS>:
  4070fc:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  40710c:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  40711c:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  40712c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  40713c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  40714c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  40715c:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  40716c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  40717c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  40718c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  40719c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4071ac:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4071bc:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4071cc:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  4071dc:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004071ec <OV2640_QVGA_YUV422_30FPS>:
  4071ec:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  4071fc:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  40720c:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  40721c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  40722c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  40723c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  40724c:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  40725c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  40726c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  40727c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  40728c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  40729c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4072ac:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4072bc:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  4072cc:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004072dc <OV2640_TEST_PATTERN>:
  4072dc:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  4072ec:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4072fc:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  40730c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  40731c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  40732c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  40733c:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  40734c:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  40735c:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  40736c:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  40737c:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  40738c:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  40739c:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  4073ac:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  4073bc:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  4073cc:	0228 ffff                                   (...

004073d0 <OV2640_VGA_YUV422_20FPS>:
  4073d0:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  4073e0:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4073f0:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407400:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407410:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407420:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407430:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  407440:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  407450:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407460:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407470:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407480:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  407490:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4074a0:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  4074b0:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004074c0 <OV2640_YUV422>:
  4074c0:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  4074d0:	0000 ffff 0900 003d 00c0 0000 0800 0000     ......=.........
	...
  4074ec:	7453 7261 2074 7274 6e61 6673 7265 0000     Start transfer..
  4074fc:	6f4e 656e 0000 0000 6c43 6569 746e 6e20     None....Client n
  40750c:	746f 6320 6e6f 656e 7463 6465 0000 0000     ot connected....
  40751c:	6557 7362 636f 656b 2074 6f63 6e6e 6365     Websocket connec
  40752c:	6574 0064 6557 7362 636f 656b 2074 6964     ted.Websocket di
  40753c:	6373 6e6f 656e 7463 6465 0000 6d69 6761     sconnected..imag
  40754c:	5f65 7274 6e61 6673 7265 2520 0d64 000a     e_transfer %d...
  40755c:	6573 7574 2070 6577 0d62 000a 6573 2074     setup web...set 
  40756c:	7973 6320 7020 6f20 6666 0a0d 0000 0000     sy c p off......
  40757c:	6573 2074 7973 6320 6520 6f20 6666 0a0d     set sy c e off..
  40758c:	0000 0000 6567 2074 6c77 6e20 7320 0a0d     ....get wl n s..
  40759c:	0000 0000 6f70 6c6c 6120 6c6c 0a0d 0000     ....poll all....

004075ac <_global_impure_ptr>:
  4075ac:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  4075bc:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  4075cc:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  4075dc:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  4075ec:	296c 0000 0030 0000                         l)..0...

004075f4 <blanks.7223>:
  4075f4:	2020 2020 2020 2020 2020 2020 2020 2020                     

00407604 <zeroes.7224>:
  407604:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  407614:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  407624:	0000 0000                                   ....

00407628 <__mprec_bigtens>:
  407628:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  407638:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  407648:	bf3c 7f73 4fdd 7515                         <.s..O.u

00407650 <__mprec_tens>:
  407650:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  407660:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  407670:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  407680:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  407690:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  4076a0:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  4076b0:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  4076c0:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  4076d0:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  4076e0:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  4076f0:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407700:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407710:	9db4 79d9 7843 44ea                         ...yCx.D

00407718 <p05.6055>:
  407718:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  407728:	4f50 4953 0058 0000 002e 0000               POSIX.......

00407734 <_ctype_>:
  407734:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  407744:	2020 2020 2020 2020 2020 2020 2020 2020                     
  407754:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  407764:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  407774:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  407784:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  407794:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  4077a4:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  4077b4:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407838 <_init>:
  407838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40783a:	bf00      	nop
  40783c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40783e:	bc08      	pop	{r3}
  407840:	469e      	mov	lr, r3
  407842:	4770      	bx	lr

00407844 <__init_array_start>:
  407844:	004035bd 	.word	0x004035bd

00407848 <__frame_dummy_init_array_entry>:
  407848:	004000f1                                ..@.

0040784c <_fini>:
  40784c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40784e:	bf00      	nop
  407850:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407852:	bc08      	pop	{r3}
  407854:	469e      	mov	lr, r3
  407856:	4770      	bx	lr

00407858 <__fini_array_start>:
  407858:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__atexit_recursive_mutex>:
20000440:	5cd0 2000                                   .\. 

20000444 <__malloc_av_>:
	...
2000044c:	0444 2000 0444 2000 044c 2000 044c 2000     D.. D.. L.. L.. 
2000045c:	0454 2000 0454 2000 045c 2000 045c 2000     T.. T.. \.. \.. 
2000046c:	0464 2000 0464 2000 046c 2000 046c 2000     d.. d.. l.. l.. 
2000047c:	0474 2000 0474 2000 047c 2000 047c 2000     t.. t.. |.. |.. 
2000048c:	0484 2000 0484 2000 048c 2000 048c 2000     ... ... ... ... 
2000049c:	0494 2000 0494 2000 049c 2000 049c 2000     ... ... ... ... 
200004ac:	04a4 2000 04a4 2000 04ac 2000 04ac 2000     ... ... ... ... 
200004bc:	04b4 2000 04b4 2000 04bc 2000 04bc 2000     ... ... ... ... 
200004cc:	04c4 2000 04c4 2000 04cc 2000 04cc 2000     ... ... ... ... 
200004dc:	04d4 2000 04d4 2000 04dc 2000 04dc 2000     ... ... ... ... 
200004ec:	04e4 2000 04e4 2000 04ec 2000 04ec 2000     ... ... ... ... 
200004fc:	04f4 2000 04f4 2000 04fc 2000 04fc 2000     ... ... ... ... 
2000050c:	0504 2000 0504 2000 050c 2000 050c 2000     ... ... ... ... 
2000051c:	0514 2000 0514 2000 051c 2000 051c 2000     ... ... ... ... 
2000052c:	0524 2000 0524 2000 052c 2000 052c 2000     $.. $.. ,.. ,.. 
2000053c:	0534 2000 0534 2000 053c 2000 053c 2000     4.. 4.. <.. <.. 
2000054c:	0544 2000 0544 2000 054c 2000 054c 2000     D.. D.. L.. L.. 
2000055c:	0554 2000 0554 2000 055c 2000 055c 2000     T.. T.. \.. \.. 
2000056c:	0564 2000 0564 2000 056c 2000 056c 2000     d.. d.. l.. l.. 
2000057c:	0574 2000 0574 2000 057c 2000 057c 2000     t.. t.. |.. |.. 
2000058c:	0584 2000 0584 2000 058c 2000 058c 2000     ... ... ... ... 
2000059c:	0594 2000 0594 2000 059c 2000 059c 2000     ... ... ... ... 
200005ac:	05a4 2000 05a4 2000 05ac 2000 05ac 2000     ... ... ... ... 
200005bc:	05b4 2000 05b4 2000 05bc 2000 05bc 2000     ... ... ... ... 
200005cc:	05c4 2000 05c4 2000 05cc 2000 05cc 2000     ... ... ... ... 
200005dc:	05d4 2000 05d4 2000 05dc 2000 05dc 2000     ... ... ... ... 
200005ec:	05e4 2000 05e4 2000 05ec 2000 05ec 2000     ... ... ... ... 
200005fc:	05f4 2000 05f4 2000 05fc 2000 05fc 2000     ... ... ... ... 
2000060c:	0604 2000 0604 2000 060c 2000 060c 2000     ... ... ... ... 
2000061c:	0614 2000 0614 2000 061c 2000 061c 2000     ... ... ... ... 
2000062c:	0624 2000 0624 2000 062c 2000 062c 2000     $.. $.. ,.. ,.. 
2000063c:	0634 2000 0634 2000 063c 2000 063c 2000     4.. 4.. <.. <.. 
2000064c:	0644 2000 0644 2000 064c 2000 064c 2000     D.. D.. L.. L.. 
2000065c:	0654 2000 0654 2000 065c 2000 065c 2000     T.. T.. \.. \.. 
2000066c:	0664 2000 0664 2000 066c 2000 066c 2000     d.. d.. l.. l.. 
2000067c:	0674 2000 0674 2000 067c 2000 067c 2000     t.. t.. |.. |.. 
2000068c:	0684 2000 0684 2000 068c 2000 068c 2000     ... ... ... ... 
2000069c:	0694 2000 0694 2000 069c 2000 069c 2000     ... ... ... ... 
200006ac:	06a4 2000 06a4 2000 06ac 2000 06ac 2000     ... ... ... ... 
200006bc:	06b4 2000 06b4 2000 06bc 2000 06bc 2000     ... ... ... ... 
200006cc:	06c4 2000 06c4 2000 06cc 2000 06cc 2000     ... ... ... ... 
200006dc:	06d4 2000 06d4 2000 06dc 2000 06dc 2000     ... ... ... ... 
200006ec:	06e4 2000 06e4 2000 06ec 2000 06ec 2000     ... ... ... ... 
200006fc:	06f4 2000 06f4 2000 06fc 2000 06fc 2000     ... ... ... ... 
2000070c:	0704 2000 0704 2000 070c 2000 070c 2000     ... ... ... ... 
2000071c:	0714 2000 0714 2000 071c 2000 071c 2000     ... ... ... ... 
2000072c:	0724 2000 0724 2000 072c 2000 072c 2000     $.. $.. ,.. ,.. 
2000073c:	0734 2000 0734 2000 073c 2000 073c 2000     4.. 4.. <.. <.. 
2000074c:	0744 2000 0744 2000 074c 2000 074c 2000     D.. D.. L.. L.. 
2000075c:	0754 2000 0754 2000 075c 2000 075c 2000     T.. T.. \.. \.. 
2000076c:	0764 2000 0764 2000 076c 2000 076c 2000     d.. d.. l.. l.. 
2000077c:	0774 2000 0774 2000 077c 2000 077c 2000     t.. t.. |.. |.. 
2000078c:	0784 2000 0784 2000 078c 2000 078c 2000     ... ... ... ... 
2000079c:	0794 2000 0794 2000 079c 2000 079c 2000     ... ... ... ... 
200007ac:	07a4 2000 07a4 2000 07ac 2000 07ac 2000     ... ... ... ... 
200007bc:	07b4 2000 07b4 2000 07bc 2000 07bc 2000     ... ... ... ... 
200007cc:	07c4 2000 07c4 2000 07cc 2000 07cc 2000     ... ... ... ... 
200007dc:	07d4 2000 07d4 2000 07dc 2000 07dc 2000     ... ... ... ... 
200007ec:	07e4 2000 07e4 2000 07ec 2000 07ec 2000     ... ... ... ... 
200007fc:	07f4 2000 07f4 2000 07fc 2000 07fc 2000     ... ... ... ... 
2000080c:	0804 2000 0804 2000 080c 2000 080c 2000     ... ... ... ... 
2000081c:	0814 2000 0814 2000 081c 2000 081c 2000     ... ... ... ... 
2000082c:	0824 2000 0824 2000 082c 2000 082c 2000     $.. $.. ,.. ,.. 
2000083c:	0834 2000 0834 2000 083c 2000 083c 2000     4.. 4.. <.. <.. 

2000084c <__malloc_sbrk_base>:
2000084c:	ffff ffff                                   ....

20000850 <__malloc_trim_threshold>:
20000850:	0000 0002                                   ....

20000854 <__global_locale>:
20000854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000934:	5c29 0040 57e9 0040 0000 0000 7734 0040     )\@..W@.....4w@.
20000944:	7730 0040 758c 0040 758c 0040 758c 0040     0w@..u@..u@..u@.
20000954:	758c 0040 758c 0040 758c 0040 758c 0040     .u@..u@..u@..u@.
20000964:	758c 0040 758c 0040 ffff ffff ffff ffff     .u@..u@.........
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2000099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
